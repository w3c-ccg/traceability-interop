{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e06f165d-ce23-4998-bcd1-9f5efb7aad00",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d2311e17-791a-499a-a42f-32d9d59c27c9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc76a738-8080-4a53-9828-375734e5c254",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d8040988-9f2c-48b4-9f8c-91272ea95719"
                }
              }
            ]
          },
          {
            "id": "944ca5a5-f995-4ad8-af0d-3f4df53d44bc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c998dc59-54ea-4abd-befc-2f81a6b0183d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "79506fc2-0b99-447c-8408-9d071558c586"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "177931c3-feb0-443e-907e-e340eb7bce57",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8fa98f37-c5e4-4ad5-b457-595778e6241b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e54bb678-ac86-477f-8744-966bf8cce973",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8a7415c-82c5-43da-82af-b3ffa1b79167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8aa3687d-6e93-49c2-bc33-1322f93eba2a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b17363bf-bb62-4ae3-bdbe-c6cd1bcda87b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "77eb8f41-d382-4310-812a-6d0e359f6d35"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ed4047d1-d140-4cfe-8ee3-11a35bfaa649",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e6f375a2-d00c-45e4-8cad-d4019f497058"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c02b45-4026-41bd-be3e-96a7c52e8e58",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5140e9fc-806b-489e-9f9f-c8634995cfdd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a12b61ad-1641-4e7d-8030-b114a14b7a3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3daf4a0c-d54e-4a6f-a1dd-63d6f3967868"
            }
          }
        ]
      },
      {
        "id": "5f844d27-f132-4dd3-a93d-172ffd74855e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "63b79efd-8d26-4c00-a0d2-bb2223ba6d9b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fcbea94f-11dd-4439-902a-499b8f6b4550",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1da77eaf-a262-47d3-bf4b-31cc73f032a5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a992efea-037f-4d1d-ab39-dee8ad735074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e135fb0-e240-4c5a-9e49-14097f92a0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fcda8d-dd47-40dd-b1ca-d0cdd4adb6be",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37e9f98-c8ad-4bfb-b36b-4968fec43adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37184467-98d7-44fc-8bfc-6ef0d8622d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f315d57a-d8ea-4607-a7c5-b90ed87bbaa8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb76f781-0d4f-40ab-874e-505fa30a5582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44ac1770-6f3e-4229-8185-e92f5b2b8cd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e16987c0-a974-4367-b3b4-b3ada53050cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccf0a396-c421-4807-a07b-78d55b9c24a8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc3bb2d-e65b-477c-b192-02c1d42656fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29ccd2fc-f25a-4ce6-b433-c54cc0824017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19954b30-d038-4e78-b093-4a09be5c98f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7f79eae-3e22-45f2-aaa9-79f844c0f70d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f2949983-7122-476f-958f-750dd183ff23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3db55d7f-925a-4f3c-9d14-1dafe3c8aca9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4b8e903-c3b4-46e4-818c-162da3622ce8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ffe0c16c-8cc9-4ac7-9144-6548ba230332"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "097e7c2e-e019-4c29-8f8b-fd49a5d7cd15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "aa06ffc1-efe9-438e-92d5-13a77f6d032f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fdf97641-c7f4-4d11-88ea-24a79b687bec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "107ad0fe-9dee-4045-96e0-c5ef8576558f"
            }
          }
        ]
      },
      {
        "id": "4b4ca775-ef47-4dd5-94e4-b47b795acd58",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "06b0187c-0df2-47bd-ae23-36cd63c243f2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a8168ca-2879-4d19-8a82-ac05bf22e605",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "219fb1e2-fd2b-45fd-ae83-04378606ab44",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c387bfd-10d4-4ff7-bddd-c82ed3a714b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f6ac02-befd-4a1c-9221-d193707026cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a370485e-9761-4a48-bbbd-184d76037026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "48de1de8-e5c0-4cde-bc19-a947d3309e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20792c6-a9ef-4773-a047-eea46b00b190",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6980f52d-ec15-494a-83c1-1a4de8ac4d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f09371-bee1-4ff9-8ef8-27e390afd391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501d27cc-0275-449c-b8a0-e20772a4fcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23c4718c-cb64-4aa6-a349-d7fc873bdef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ff72d5-c4ba-4b79-8bd1-beac6d96ba90",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f91eb6-8dc7-406a-bf4d-3fbe57630d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "133b04ca-62b2-4389-8de0-eac6ff862600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18b4ec8-b148-4476-b5b7-452078c7289a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a66bd3a-1a32-4ab0-af32-4542b1e5d2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ac86e3-1d1e-4e2a-9dd2-c3c8826c61be",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97b0464f-4d18-4fc1-b7be-1126a291714a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3181e367-1324-4c00-b7e9-59f2058a9833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "871442d0-595f-447d-85ae-27f7a178e889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3804b8bc-cf2d-4255-8262-0d1704d18038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da36230-8a4c-4815-879c-917ffba60351",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb91197-e50a-4199-abc6-1fe1599182ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349af6e7-de81-4e86-b578-1358c652f4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cb8e2b3-6ab3-499a-aa78-0ddb2fe0b7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "919c7e1f-0890-4a12-a460-c3042dc13943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fadbb5b-f6ff-436e-b341-37b370026ec0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b812930e-0414-4b59-8550-c74e778da723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c2e2a2-d1d5-4d5b-b67f-d621a1cb6aa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ef064e-fa9d-4633-9f7d-cd8cf4652a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "334fe50e-45cf-410d-9b55-0b2b6fa1ff8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454bd343-14bc-4ca8-9a3e-f84fdd29d26d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ce7d61-229a-4693-80ec-a0480fec9f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db332de-41b7-4d8c-a9af-310c7929f0cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd6c667-bc3c-4cf7-ae10-28f9c17e13cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4593779d-1721-4fd0-b738-6c96c9c8f98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e61484-ee19-427d-9dc9-c46b0464afd2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc35613-1d1a-4680-882c-c85442d17921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb1d4b5-ea31-466a-a44c-9ccd7b4ca264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccfac01-4d3f-4d44-b16c-d6de67890bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a25234d7-cad9-478a-b1c9-2bc9b2ae814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cafbe9-3527-4d2d-a760-a713aba89e66",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571710aa-ef1e-44af-9c50-44aaaa95390b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07629934-f798-4722-a455-65b5889280a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606ab731-2928-4884-8177-249f2c4be718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71ac47a3-e05b-4196-aecf-da07997dc497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2892ca-7b63-4ee0-a03d-a726a785ffd8",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37a82cc-d36b-40c1-8a93-f24255697324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8d6e2f7-4b18-418a-8de4-e42e672cec95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40da1d3-b2fb-40b6-b94a-8e93afe9193c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0126da30-d1c6-42ed-9f02-b9a4244b2033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6d3a97-942e-4c5d-8466-ec23d5edfc16",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad37e411-c48d-4229-8708-bb65c677c665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fcf31bf-507f-41a4-bfbb-8e185e20bb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192c6215-2168-40c5-8fa7-cd80939feb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3b44711-4dc1-4830-b14f-87e7ae8f8c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b4214b-ed9f-4fb9-ad35-533bb4c70ea0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0485d68-4d01-42d5-924e-17800e2bf0ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c6eb84-a3ad-433f-96ef-987f246a3904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0c22b3-8d5a-410c-8344-f20d72842ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2822a653-20e3-44d5-b0e6-30cb6e3425cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab460c0-9551-424f-9b2b-cb5e59669e39",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa94c3c-6002-46cf-b2aa-2890f2bc0067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc484472-f975-4d49-81ed-cfa755466d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca516f1b-2dab-4156-8447-09633bc053ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fa0fd91-cf91-4e99-aaae-a121c3eb4221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d9decd-fae7-41c8-afd1-893482bef1fd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885f4a7b-3a63-4247-bb7a-8fd9dfd3ff4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a673e935-69d4-41e6-a0b1-3f292ee10efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ac8b0d-ad66-4c30-8d6b-80ad9c97dc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a08a1262-cdec-44ce-b541-14b504146977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b683eb0d-54a7-45e7-9af1-c54bc0d73568",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453f4dd6-d5e0-4e8f-92fb-fd5f011f47bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec1fd8e-68dc-482a-98a8-67772c95768c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a7a2f9-158d-495f-9cea-ff11486e0d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05a4fac5-3f08-46c6-a41a-3e50f6c1ed97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba79702-f013-4e0b-aa06-922d888a67bc",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf9b1ce-aaf1-48fa-867e-3ce9137aa990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755d934a-b279-4f6c-9821-d0e5c21645ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78824c9-aa1d-4b78-85a2-771edafb178e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d0a2a4a-3f8d-463e-b40c-35daf2dd920b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f238da8-04e8-44b1-9c10-6664e3ecfb5d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fbfccc4-cdf3-4e7e-9ae4-356b2a1b6d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f49010c-c888-412b-8f79-28775a69b5f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f31f34-c333-47c1-9cee-b5471f995de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7601fa5a-0225-4da1-9ccb-91dbb2984c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571e826d-794d-477c-aaf1-7d8a3c428895",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983e52b4-795e-409c-aedb-b59c184eabc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb34ed2a-f161-4306-b399-ecbb8bf9c896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33446f9c-cc1e-4f40-97b6-a2697c8cd6c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "41ceece2-e9b5-4fe7-b139-65acda27b427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77efb6de-4df2-42ca-b4cf-024c78bf6097",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e40f2b4-df6a-4109-8e03-8e4d047248a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ef457f-0f9b-40ab-9333-4bb4e319d107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fca3b68-4b8b-4b94-97b2-3719ae1b02ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa65a432-7628-46b4-8f05-f405d8207814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9ee9c1-02c4-4b72-8828-62f12095f706",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60b0dd1-782c-42ac-83dc-4a9a14b24694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9294bb-d88f-4f3d-a4d6-ffc6af1fc6f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9750817c-a25a-488b-b4c0-e4642239c8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23d49659-dd02-43f4-8d8f-02f65eeb87f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc87333d-6d1a-41c7-937f-9a3acdb69416",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13743666-936c-4bfa-af6d-dc1691a319a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab9d4e6-e3e0-474e-addc-89903a23008f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3874273-6480-467d-b06a-378b0858695f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6614252f-958c-4231-a06e-0d21f89d7c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a020642-6824-4868-bfc3-215fbce4a53a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48dbad7-f0d2-4585-90b6-00fc86bdacb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71af656f-3526-4c1b-8232-c37edaec5c2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883b400b-b750-43ab-bd63-df19b1b65a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "61cf3f94-d981-42c3-85b0-70a5026f8726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba63e50-45ea-46c1-8e27-6b07770af35e",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9732455-03d3-4059-ad25-3a566f4c871a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b0d010-fcf9-4e9b-acdb-349580ad1735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edc5823-860a-4949-8bf0-4cb345c91267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "630f3084-d981-40af-bdc7-601a7e996be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9274408-ad65-4985-b6bc-7f7fa29bb45f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edda0841-00b1-4b73-9189-3eaaf8614543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc062a7-d1b5-4ad4-b0a8-b2b6c86b80a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c870f5-d764-44c1-a66a-f95407c9c105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "249d5ad5-8270-4f09-8630-74d8d2095937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d601e0e-bc24-4596-87df-b3bcc0c87348",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "518cc556-c266-4c34-8b14-0188a5c28adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7acebdc3-d152-447c-acad-b75693f0d765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fce50a0-15b1-4f38-919e-9ad9511b85bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c8a030a-ccef-46fe-8fd4-29de3acca148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb04494-b916-4f32-85de-ebd9cad2c4d8",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6160002d-4ffe-4355-a189-05eb16b48a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9d5a0f-c8ef-4629-81e9-85524950fe9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0686e8e-f128-40ab-90ab-8eec77b8402a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d697fa5-4590-4e23-8706-67edfca263e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd57069-6246-4cf7-adb8-5be4381d4ef6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da784c61-642c-4c42-b260-684b2bfad695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2fa21f-d97b-4626-91ae-b0b6d9caf082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cccbae-5d9c-49a3-9aa0-cdd236ca9fa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c09662a-57f9-4492-a367-491019de4434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cc350a-6e31-41c2-b7d9-bde6ceb261e4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13969f25-0b16-43a9-94b8-bc76be716c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66257af5-38e6-444c-b6be-91edbf1e98e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "746f29ce-a2e2-44b7-ae4d-66edfc4a4619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4771616-c875-402f-84ea-759744cb5dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9729aab8-5a4e-4c01-9042-e026477fb8d9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47246586-4fca-4b7a-9a16-3715bf748473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c48f925-3246-48a2-ae13-b8682e1444d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4d658a-6b46-444c-9a04-f2617365d4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2870b3-7892-411e-8829-53953d701ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b15aaa9-61bf-4e04-9758-a68a8e5f4ec7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "109075c7-aecd-461e-b363-6dfba4a2e320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2126ebf7-98c4-40fe-b84a-42fe15e25441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491f2497-eb45-419d-8a60-0335728b5c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5bd7348-1866-43f0-b766-db73e044dc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aefe6739-d512-42a1-81d8-209b1edef782",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0e0a39-d6dc-43d5-8b84-0e44b7ead5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4e5f9f-7b05-4248-83dd-be0ed5141627"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "616e3bd8-4f29-4848-b463-524d3e73ed88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "229f6d0b-6169-43ca-bc93-a81afdb8db16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f049238b-80f1-4d09-bc17-fdba8c166a17",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c31d84-218d-4661-8207-487d4464f25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be74ecd-0d25-47d7-8b03-ea6386ec8cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5198a82-122d-4f11-a5a4-2150c04ec224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47e95a2b-caab-4aeb-83c8-f715438e9107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a17c67d-ab66-4ed0-ab15-3bfa4a1780ae",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cc490e-5fce-4c70-b3e1-6b5040533fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60fa820-57e0-49c3-9514-af71983e6f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de39041f-c541-45b6-bbb2-bbd17a96c23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7be93f54-30de-4835-bcd3-61e00935f398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6b2c4e-c931-4784-a316-2cfc3cc1f5d5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3522da05-5f72-4f1f-9fcb-7cacbe0f1d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d828ac-c888-4cce-94c1-6bb02f74442c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b743e17-7da7-44dd-937a-31216951f2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8134e5e2-8367-4662-8198-9af14425ccab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb62874-d888-46de-8256-5ba28c4531f2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b673f1a0-0933-478f-93e1-86c4ce94da1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db211982-9968-4ee6-a05d-d0c41bfb1359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463c47b8-efd6-4d2f-92fe-e2ff4a431a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "5382c462-625f-4639-ab95-e02ff2959f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191e29c5-ce1c-444f-99fc-d92631655ee0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8295b428-2777-4670-8745-4e5f0ba31fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53034329-7655-40e1-9885-ebc15c55104c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fd22e4-8830-476a-81ca-09195bee6668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "082b5f9f-fe29-4256-9650-81dcecb7e004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ad2314-abf1-4836-99b4-c948b8cd3b13",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe361be7-95b6-44fa-aceb-e902baaff600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1194829b-ca4b-494b-b101-92dea1756c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f09847-2511-40c9-b264-eb3c901f98c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38123fd2-8e03-4df6-a7c9-da12146ebd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147d2dd3-0c74-4fdf-8421-05360b3fcac0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee5db65-5584-49dc-b027-130dbda13399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "759b64b5-36a3-43c8-82a4-fb8d8ea3a7fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3001cec6-adeb-45c2-a13a-c8808093a507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "454bd590-dbf4-425f-844f-fae70775ff86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dac125-365c-444b-b17b-bb97561a39d5",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd808c5-f3a6-472d-abe5-53433ab2c005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e7fc93-207c-4666-a268-ef949c0e067f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3ccdf0-da38-4337-95ee-9be45a7d6d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f3ca29d-524b-46fb-ab14-b9299d6fd2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2659094b-a715-4599-9cf7-91673be1088f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1cd658-2ad1-4476-a3e0-5e18002a7646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffcb463-bde3-4b3d-a09e-fa409fc710ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3138aed-f572-4f21-827c-c396b1642953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b88b7c06-6b8e-4222-b2a7-2c9a351c0bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d32dc19-ec45-4ab5-bd4b-920fad422208",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac74447-7b43-446a-a967-e6ce33ab7d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4eca2a9-1714-4e16-9a69-ff4151357b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641bd17d-9843-4adf-a86b-7e461f77b69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4feddaf0-9eb7-43ce-943a-8adef87f694a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606d7c4f-cc32-4b9b-baeb-9618b9028ebd",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09009e00-99a0-477d-9e62-04669709cead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fb6837d-9e03-4858-9e9d-10eb2e314fa7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44d734e-4a72-4472-935c-a3ea907964eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "32e2adf2-edfc-4ee3-adc3-e02cbd216249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0d406f-ddf7-45b9-85d8-749a41bbf24a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a16ed16-d7da-4cff-9e50-16af0abbda48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdc9c976-a59d-4e71-b461-9a77333abad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015fda63-0548-4815-9dbd-ec3ae6bd82f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "488b627d-b2b6-4893-98ce-20e89d7d7c2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3e4425-6b1f-4dfe-8129-436dac056bff",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f03dbb-961d-44cb-844d-c621cdf8f238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcb82b51-ea34-4455-8428-39cf12907cc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a204ef11-fe92-41a1-8901-814612f9c57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "22193892-26d9-4172-95ba-6acf3df729cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f979023e-2988-4e9d-bc76-4f801a592a8f",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b662fc0e-4cb9-4092-b534-47b37e22041b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c763ef4-8b67-4368-b85d-a931c25da60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0719b07a-9ff3-4f35-805f-a14a07e05cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b98ba28e-a60d-4ee4-a325-e2625a0a86ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5de289-6779-4fee-ad40-7010df6d67de",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d374a193-deb9-403f-b484-7a191a988e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eef72e-3f14-44d6-82b9-fb370edd0cc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aec81ed-be92-4a8a-b4bf-4dac73fa7cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b1d86f-46d8-4e54-bc2a-0710da2229f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0a3ece-f60c-46ff-8021-6e5c21b96df2",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f1cea8-0cc1-4b72-98fb-34eba293340c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f3cde5-b5f6-4164-b430-6f610bf981c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581d4b71-d108-4749-8386-86f54a8aca5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39be98c1-c76a-444c-b8e1-a6ff653ff5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cda27d2-2f48-43ab-a522-503c72679e92",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f508e572-3da3-4f02-a387-b50cc2733b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0feb7d-0be1-4e91-87dd-0745e533a265"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe10444-2e5f-448d-afcf-1fdf46ca7469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e008d5d-b719-43e5-9566-48585b1f279a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd563f9-be6d-4aa3-b49c-a5811f813720",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b1dfc1-7e1f-48ae-bafd-15309a1cad8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48095ec2-175e-4f1c-b7bb-6845388dfa8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b55cbc-60d7-43a1-ba34-04a7a7c16a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b89402bd-6fce-417f-8ce6-7f7f2ca7f698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056c460e-3fba-488c-a264-617ab3c4bce0",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be734d3c-17c2-4d39-a2dd-a967841ddf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34d067e9-4f88-4d1f-97ae-ad68910f05a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69dad762-9e37-4f57-b3a0-9f71d659fb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02111b78-26ec-44db-90b1-80d7cfc2b56c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07acb437-07c5-4ef2-b93f-5060f52b8a0c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad2b83b-dd01-403c-9681-c731c23bf4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5f1670-4f72-41c3-a722-177977bbf988"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2118e0cf-c038-4911-a1fe-06d476daf092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "155c1eb4-214d-4042-8e93-ead023bf4236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d576a47-0166-4163-a3d1-fea2147deca9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c88f6-b1e3-4d6d-a699-dc7bd636b748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf4ead9-9c58-4c44-951a-cf32dc969174"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53ffc3f-aec7-451a-870a-bc2d62023970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50955d63-4757-459c-ae19-5e85b0bcf703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2b2cd7-da5c-47a4-b0f7-f24258ff6778",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fa8f1b-15b3-4d02-ba85-effec4061015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2576bf2a-cfa2-4ed1-a6ec-652c4e9dc9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054f99f7-0fac-44b2-b3c2-2b98b67b5bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc3cf95-37a7-46e5-8239-67c5a34b4fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de6346b-40f4-46d5-a0ee-1b26e6f7e052",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e142e16c-300a-4295-81ab-113aafd07eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d90042-2909-4a74-8ac7-fdbcaeff81eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b767b4a-b52c-4bbd-8724-2af9af849053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44df1132-be94-4da5-80d2-261b246a09a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56f1d09-3055-48e6-ae0b-51315ae0c183",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e69a3ee-28dd-43cf-96eb-9ca7cec8334d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd09a02-4f8f-4316-accf-6c8a84c8ebb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c3969a8-ce8e-46c2-9f40-4b03bd1e96c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1b5c51-6150-41a7-962b-033d85460530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cfd62f3-cf0b-4aa7-84e9-01f431584355",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8effa43c-f34b-4310-83d2-4d9ea48a7a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02aa5ea5-0932-4be0-bb69-fc88137919f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70519b3c-a3b1-490b-8cd6-18d76fafa554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce365f71-73a5-4683-8880-ee858d853eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b548a687-21e7-4705-b145-f7ab241f6048",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9691de-9883-48cf-ac6c-f43ba7f4660d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae5edd55-57d6-45f8-99d9-ab7701f18c62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c543d4-6e2d-4af6-893e-36163cf57897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b85b2fa4-8492-4ac6-a7eb-5895937529b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2802788c-295f-4f5c-9e86-0a536eed3f12",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8d2cf8-8ff0-4560-9a13-118ef92680b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa571bb-0b1a-4f33-9f1c-88ab0fd9ac59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f3c7d8-c2e7-41bc-865d-1871b06319d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ba6c8cf-9177-4c40-9ff1-fbc608b97268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3f2868-257d-44dd-ab9d-0ba02fcde1ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dceb65d-8136-4ab0-8baf-1176dda04dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd271c4-94da-4f6b-84f7-43a778fe1511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b86778d-21e4-4669-949e-eb9c1328dc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae6611a-9610-49b7-a711-18f2a584aba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c9942c-7f74-48ad-92f3-6968fce035ea",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fc7680-be62-40db-a98e-a7ce5acb03e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ff13bf2-e724-4b0d-b87c-b76d60669a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99453a3-61b3-4fc6-acdb-84d7bb8c9bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5edba1c6-2ebd-4033-a283-e3d6a6bd8f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc2dbe6-eb66-4653-90a1-9bf45d27c8cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ec264c-db68-4306-a78d-97e5c85a7362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b7c4bf1-ab53-412a-960c-9c6c5e20dd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68721594-6038-4143-995c-522eb57fedfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12900397-add1-45b8-9360-1f29d120842c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db257da5-41ad-4033-a487-8bb742ad73a5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6112dc-e401-4604-83cc-2a004c922fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5376fd80-15fb-4998-8ec8-e002dc2008e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfd8021-6df7-41c9-b97b-0a424f0da014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "51c3a686-8cfe-4122-ba84-aaa5cd835b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f82cff1-3e1d-404a-bb0e-73766a726f54",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "756304a7-83ca-4cee-ad11-ed1636d9980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ee079b-06ab-4a2b-863c-b5a7ce06d27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa304fa-f804-45d4-bb14-1be077199658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d38e2d3-b53c-4095-bf19-6e17710aa2d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9645dd-25d9-4b2f-8f2a-3d07370310bb",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb85857f-dfdb-4525-8198-f239bc1c57e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b51aae1-1b25-4f40-a124-f910606c2a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef199d1-08c9-447e-9b30-3d756147a691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd82907-830e-4ef2-adb0-931f04026b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49724530-7fd7-44f2-aab4-d7240a9b4a85",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de47f902-67e3-4ad9-9f5f-df6b33ae5676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db57dd39-1255-497b-8ba5-421bbd0af28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb92c86-fe04-4ef0-bfd9-c086cba5d986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6405e2a7-68cc-41ff-9d87-49ee0c12c212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a0aaa3b-362b-4d7c-adc2-0bb481dab9bf",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7aed64-9a76-4ba5-839c-d448eea48db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d61a7c-118f-439f-94fd-4c7c0e65aff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1e24fc-f42b-45f0-aa0d-b78dc58cb7eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e1bb712-22c1-4f6e-883b-7d849ecd64f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3056d01b-4a00-4755-8875-5ba28ee2a68f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ea0346-35f0-40a5-8f8b-e43256a7fa03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975f072e-f906-43e8-9259-e719e74587fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7556156-882d-4c4a-9a86-fe1b2696bef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "64f52043-1462-4aba-975c-d638edb1095a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b603cf4e-7b9e-4390-b836-d88b65e1494d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ad8489-d66c-42a8-ba9f-605c283d3c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "407b1b45-4cb9-4166-ae13-3174044d5110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a59603-95cd-4e56-add7-ca28a80da60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1daa0ddb-ff25-435a-98d0-79e81132292c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1609e0f-201a-4470-a157-98618bd2dfaf",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24cae8a-d5e7-43a4-8c38-9874e4357e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a2bac7-87e1-4e91-807c-5a6eae45817e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ecc7f1-f18c-45be-868d-1e9f9d64ec98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "64cc6791-b143-44cd-a241-f938825459f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e72cf8c-9737-4529-b7f6-ec8274eb36c8",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e54ab3-5bf9-433e-ad9e-9fa2a2a3920f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc91c089-a395-43b9-a623-a0f49f7c8c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a616e1d5-5c63-4c11-b01a-0565473d22b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "876cca87-88c5-4115-b571-de6b7c0744b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac4b8c4-6dfa-4fc0-add2-152526d0f623",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c468c25b-f428-4030-921e-bd8f6053dd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524440cf-15a6-42bb-b5fc-612f8531031f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57ccc6d-bc80-495b-96a4-63f6afc14ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42c7de4f-cc1d-4f5c-af5e-e88435d56f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66c9db7-ec01-4398-b974-f495722aade2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d76b306-a40d-4760-9cbf-b3e368f4f4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7f6fec4-ad77-4f1d-ae3b-ec85dbe976d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a7baf6-fd14-4048-b681-fe43ed4be39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "678b6c09-08a6-4257-8f3a-ca17508f4edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d178a4a6-81c2-4483-9205-4ce2330de9e3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981ca082-cd89-4a06-a227-9596507c4a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd19153-9fd4-4c62-b07e-f4f4da211cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58955cc9-1fd3-434f-a816-62963a62f88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f23a4958-9bb7-4ab5-bb3a-9f588ac22e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3cc58a0-261b-41e4-9fb5-f68eb8203688",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9e973b-c347-407f-9932-2c3d8aa6c43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef9c0e81-c4be-48e9-9d1d-88f56273177e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b054dfd5-87ef-4bc9-ac5b-a29816aa3a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e50dba0-f31c-4b45-af74-86f01256ad49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b41850b-9063-40ba-b2b3-2fedf80a6bf1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7060c4-337e-46a3-b5fa-7091b96a13a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c5d881-7a38-42e0-a112-6649efacfe7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b502f808-6b82-421b-bb47-5aa278ebc8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e16f4f90-c64d-4ba7-af0c-d65fe065d62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a876d50-480c-4f78-a5b7-e6f8cc96d5eb",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda3189b-b0ed-44d5-a2e6-ce1839a8aa88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d77086-2ec4-401a-88f2-0108846e45d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a642886-c235-4a48-9c8c-57e2e77a4353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec52a0bf-8404-4479-8870-527479ba00f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b41796-05c6-4134-b83d-ee6869624d7f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0ab71a-2ccd-4eed-8d08-59cf03a9f964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45bb069-6f89-4610-8964-452c2dc0ebc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056b167b-1895-4070-a843-2034fcf9bf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "75260d90-6dd5-4ccc-91d0-7f8159fb2bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa43a302-9318-4d19-b6bd-f0cb7ce0ed52",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee5b1873-a27e-4811-aefe-44e23fe8b9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f980df9-de0b-4a90-b944-98d6c0940c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513754f5-3562-4ffa-8aa5-2d7c60db786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05cb6595-de4b-4747-bbb0-37f98f03d3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53de244-f762-46c0-97b6-1e778c8a32c9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fdad89-b97f-4dda-94ee-bba6c6c3fbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f585b8-6027-41a9-988d-2aae025c1fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9070e42a-e421-40f5-b34d-90fd87d793e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c912709f-b639-4ab6-a824-623a30ef4705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d7d2eb-88dd-4731-a13e-93e72bce78cb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28402dd3-5ec6-401e-800d-b36dae00487f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c08dd40-92cd-4663-a050-99dae701de0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec564648-05c8-4776-bcfb-0ded8492f67a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb47e34b-7db8-4f38-80ae-cee94886ed70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8270c2c6-3739-4477-9eb0-a459a0797aeb",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17ad3cf7-8951-40d5-b8d2-be66d729eb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cae072-a612-4344-972b-3a1058c890c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d412fab6-3bb6-4baf-906f-06e8d5731063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6aa85d4-0710-4080-af54-c59c6b13e23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dd4d00-f1f3-44a5-9192-b0c1580a6189",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd67035-efab-45d5-a51b-61e7f4aa15ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127656f1-7488-41a9-b4e0-d840795f762d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1023b11b-8869-40fe-af05-ff4b434ad8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5907f675-d4eb-4755-82f7-f3f2878a3102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50676dc9-b3fb-42c0-a15f-5f40d28123a4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28d8538-57d9-4f8b-b888-079d0460dad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe33fae-9fac-4d88-abd9-75efa394f46c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e7760e-3ef4-422e-9715-963586482e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f00dbab0-39d0-49df-bbdc-a034afe2c7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f877823a-07f4-4f15-9bf8-3c891a9f4a84",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20c463f-6119-4e78-9359-0c17ef80e759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c929b6-9365-4740-b04a-901ebbcb3b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2052f2-46a4-4bdd-97fb-1ee5561f79f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a4b816-6de9-4cf2-9457-9cdbdb6318d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0837d4-9dbd-4a70-9101-cd5c7c69ce49",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2170367-6a13-40c2-a0c2-23bd6cfe34f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89120979-41c2-4da5-896f-0a0e7eb71dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb397d4-a84e-4287-8119-f0fe71f0b031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ef825d-77b4-437b-9dd2-8177224da899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e99363-a54f-4a6a-9641-518abdebae18",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b805c7-9a57-41f6-84e3-3bec6812f783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "029906f2-59a3-44e2-b1df-2eeb40218f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fb2023-1467-43c7-8598-6e9ec4866bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27d47863-5978-4eb4-865a-2ab08e82e5fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e960ead-049c-4f5b-9fe3-9393c62e694d",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a558531-75e3-4aea-aeef-5a511da84ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1d13cc-2c9e-43d8-8bc7-0258be51b878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dec5a9f-0668-482d-8aec-d08737fd9924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b1d674-9dc1-4730-b6ad-be5b71286104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7828e994-e68a-45d7-a4c2-bdcc0a95d07e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce55ee6f-b5f8-4847-a68b-df322e5edd24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "192b5637-815d-49f2-8ff6-c45d5f8da441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26101bf4-084b-4fe9-9e6e-dc3bda1ac63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "41a80d30-a8e6-4471-a4bc-1fbb4946e7ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317cb2d8-a3a1-49ad-be87-36a0e68da713",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ab5d70-121a-4bdb-a878-4e5f227b9842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe15d003-8a8a-4e5c-bd89-4ce4a7532828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80b3b8c-29a0-4397-932a-4819a8e0dfe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "95444bbf-1dc0-461f-9555-615a48320deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae2dd61-b6e4-4268-be88-b6a5f5b8241e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3a30d9-df03-418c-859e-9906a42e46c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbd5c7ed-49e9-4efe-ae2b-96332c6f7ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69bf0304-cc61-43d7-aeb2-d2958c38379b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae548f94-5b5c-4d87-9879-f04c60448bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e84ee6-1e3d-4009-b597-0f3716bca668",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06382360-17e1-419d-883e-94f269332989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aded49d-d990-468f-8fa4-30dca972abfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d698ea-daa4-403c-a10e-6a95fcf2857a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7709590b-d8bf-414c-b19d-dc6387d9b2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8782608-6b2b-4659-ba39-c577a1f89e4c",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ce94fe-2c91-4244-8b40-a0c8ca079df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6ff9689f-0a70-430b-b8ba-fda8feb2a698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c6e71c-8222-47bb-b91a-cd6b5b3548cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5c749f-8809-45b8-8d0c-2de9624d7a05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a65ffa85-53d4-4b59-8db4-77d018d7f545",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef00a4d0-4e82-4eb2-a0d5-5a5f8334a0ea",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2e8989-474e-4db8-b916-27019e0bf23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74e21399-26eb-49b7-ae1c-39bfcbde8413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d85180-1ab2-4648-8982-a07bcd5dac50",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d7e69e4-3d3b-4007-95ec-9b780afb16db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd90ff1c-73df-451a-ae77-dae9db7536b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b455869-c954-4c43-957a-4e17615c2f50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aafaf412-b1cc-4b91-97e5-9bcc8b4c4c92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "982fdd93-f380-4554-b89f-b93d731d2959"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe27a799-bcab-46af-b729-66120bce1b6a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aebc9e85-83e2-4e40-8aec-1b5ab4f80fea"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e4cc0fe5-29cb-4a59-9e35-ec0507bfd51e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e4b2cbf-fb9d-423b-ae90-82b7d4af1e3d"
                }
              }
            ]
          },
          {
            "id": "690007b1-b3c5-4fc5-af51-e9f09455f95e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "562f0555-271e-4abd-badd-9a2099cdb2bc",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6ba12635-fafd-4c89-82e9-655d0f780bbc",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d1f400-e76f-4e65-9cbf-9bf239fb9bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3dea6103-d527-4e8f-8d58-35383b490484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9d81b9-696e-47ae-b4c9-504a26c7bb58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723dacf6-ad93-421f-bf4a-a60c4aa8464b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e0e2a260-f622-4e5a-83f8-422cd6a8d8aa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e3ddc02-bbdf-4c6e-a85b-1d593da5016f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e59ff704-f6df-45c8-843a-11e62b78050c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4cf34fa-ab9d-4b2e-b770-4d4ded560694",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "49d5eb1f-dac5-4850-90fa-97474837c1d4"
                    }
                  }
                ]
              },
              {
                "id": "0fa2ac90-4195-4448-9ff6-c03bc46d6073",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e1b8acf-090b-44bf-a47c-aa6d31525f56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ef34bad7-04d1-4ee6-9bcb-455269b67428"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5bf1074-9f8a-40d2-971b-d2405e33552e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6f006ec5-2edf-44b2-bd13-8946554c242e"
                    }
                  }
                ]
              },
              {
                "id": "d26a3df0-af34-45fd-bc2a-e27dc4414114",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2545d808-f8d4-46bd-b976-ae996513afe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "194a48ca-82ea-453d-af90-f4a302f776b1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32b07d03-70c1-4009-aaaa-d328274736aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f1758e5-c525-46a9-b257-c262858ea129"
                    }
                  }
                ]
              },
              {
                "id": "dc2cb590-e555-4c88-9229-fc41fa24b599",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02ea4829-976b-4495-8e49-0fa50aa72c52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "052b9eb1-1044-4b03-8dab-fa1a65819819"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2cf6cc3-fa7d-4185-b323-e6bcb5d36168",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e2f5aa6d-e8d6-40dc-8dc2-6a8b0779c196"
                    }
                  }
                ]
              },
              {
                "id": "eb3e51a4-c59c-4b78-a839-2fdff6f8a640",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0ef6114-28d8-470c-8dc4-c35bf8a7d9cc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "61ec3eca-5805-4ad2-a85d-57aa04697550"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22b94ab6-8acf-4eda-b1d3-d94896d37e13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3d6442f1-e5d2-46a5-ae0b-a3c32233174a"
                    }
                  }
                ]
              },
              {
                "id": "c0a6d28e-6674-4c30-83a2-350283b9b459",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed9b7dcb-4cd9-47f1-ab4c-c55b6bdc08b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4e0443c-3153-4ecc-98f4-80c009676cbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54fb29b8-e8d8-421d-937a-1a855f7fd7dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64b74713-f5fa-4dc6-9222-36af1fce36ca"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2df8bc2-68df-4f6b-b703-f5c36ed35778",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "434b396b-8345-4335-9631-19d559b7066d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b8174062-ac14-4b58-8743-a6948bf74614",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1b8d7696-2a60-4ce9-9854-730726fe7ac8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bae7a6d-8993-45f4-b896-f6c5dc3aa4f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f5c9d98a-5ffa-42fd-8b88-3865de819981"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f607cef-09d0-4ac1-9aad-d1da18473d97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c1ef3c99-11c6-4002-bdf2-719dd04e13dd"
            }
          }
        ]
      },
      {
        "id": "f97b248e-a1d2-4bc7-a224-615043395ba3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a6c03084-567c-473e-b159-b463565d9b87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "668f102b-7c23-4fcc-bf9c-c33b01f6268f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1b59b919-0463-4297-9561-210549fcebb5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e9345-e7be-45e8-a275-8c54376563c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b870a1-4354-44fb-a0b5-1c800cf63b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6af951-43da-4563-8698-5b20e5c5c3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "057950f2-9b5a-4c22-a33b-3a99abb632dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d812e60-a434-4bbb-8016-a6dd4c7eaf75",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6b3001-0302-4014-a566-a28e1a9de981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f7f627c-8d39-4f60-b120-4d2b99314788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5b1d2a7-1225-4de8-8108-c18ff56d1ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a78a31-a21e-4cba-bc91-29fa902a8b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dada5a2d-85b6-45f5-b0fc-5c7cd6e81b4f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b2004f-9b07-411c-b0ba-e958262e4023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df758419-ed57-403f-97f0-ff8601fe71ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d1f3c9-26a0-44ee-96e8-bf967d769f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8b9f408-4df2-4ebb-8beb-33f380d05794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d886e88c-1bba-4e1b-9451-b96d7d485e99",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dba0a0d-5cb5-4f27-bbf9-edddba8c8335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a39bb04-3fea-472f-a2d9-8b939b959a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31440ee6-e087-49a5-a0ad-2841827c7828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61015008-fb1f-4ba7-970c-f74b4722b505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6a35617-8cc1-4f29-b68b-7512af8687ac",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab51756-a2c3-4e42-836b-ab0ddbf61e54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66691a42-ef60-4d1a-8c98-cab17ca7f04b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9416e1d8-6a76-482e-b75a-4354bcb98ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "897f98ad-9b33-4b72-ab48-fab12c58f240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5b427b-bb29-48f3-9ea2-be2f89e6bd39",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06f5edc-7a50-4b88-83d7-856c16098955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcec4c9-141e-42ee-9f86-8357ee4386ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe59b0e-c8e5-48f6-b30c-ddfd488098a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13c15856-0704-4c02-8949-85b8dfd8d17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814cc12d-eaa4-4f2d-a6b6-9c76cb5cd60e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab14aa1-8db1-41cb-872e-4839e76eeb94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c40da3b-78c5-4444-bf05-83039f3fcc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1917eb3-5c83-477b-8017-cd937751f680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e40b9589-a814-4043-af24-a7070320f5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378e5568-1649-4fe3-a3c1-6d2cc66c2499",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a589362-9c74-4f40-ae6d-ac7cfd82a06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc6d2e8-0284-419d-9884-fb73f2340046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "219a29df-cb11-4c74-9a48-a370fd041ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b8ee88-2a57-487d-b931-8389c719e6cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf59059-1fc5-4195-9af8-142c7cba068d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6a16cd-3a48-413e-862d-221653d3239c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528b1e0e-db31-484d-b6f8-bb54a521d8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6443fe0-4fa6-4daf-9319-4145d12e2c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "025c6ae1-7f91-473d-9ee1-6708cdd740aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362b6462-b006-403b-bf49-87f54e59b6ab",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288fc350-3999-44be-b6f2-9972773b9bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56f1cdd-7449-413a-b326-8a8898e685b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3324026d-badc-4098-856c-ab88cd85e0f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c198abd4-03e3-4c3b-80da-b8b3d402a2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e861c163-1dc0-47b9-b2dc-f9c6f3a44106",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a382bf1-b0b8-40fd-9fe1-e7b1c11c979f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d47951c-1b04-4c3a-8995-a690f0aadd6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f66b563-b47c-4fc8-b8c8-895e7a727280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5a2cf1d6-6a80-4725-908f-6c07018d316e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76efc733-7827-4867-b05a-0ec51f4a1c21",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495840cc-4170-44fd-a18f-fa35140ab3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1dc1de-7a53-4779-818d-ffacc4647683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e2d6da-20ad-4958-b177-924a023f6b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc940ac-4bf1-40a5-89d8-efbb8e0d7e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5b2850-9251-40e9-8b25-5e525fad4b4c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e160126-0c2a-4945-a978-35cbfc3e23c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa57210-5910-4ff1-91d5-64dd3de978c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7b1eb6-cf71-4e75-addc-dd231eeaa81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f369c929-d084-4dd5-aecb-bbe740ff0ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc2daad-75b5-4818-82f9-a1d6691d51bd",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1861e72d-e02f-46ea-b61a-2310fb6331b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03accc1-3bca-4ed2-99c3-283e4fafcbdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335191e8-d893-4d35-a65b-595d96644bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4bc22d-67b0-4d51-a3bb-6944acf42d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b70897-af04-4e9b-8307-32403c8de8b1",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da402949-fd86-452c-a3f5-8f7976c4428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b051e7-b128-40eb-aeef-01fb38b09a30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75671652-733c-4e20-88ce-7c477c59d3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7258e977-4e0b-453c-bee0-72f8dd74fcb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4656f8c-00f8-4e44-af55-29cd09dd5bea",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5126619a-1a7b-4cd9-a32c-00cdce6f987e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b4d00d-5a23-43a3-ab89-44f8c9fb91eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8331c4a8-ba68-473c-988b-506bdd41343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "13c3a493-f29a-478f-a9d8-e25195b97fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21c5c58-b6ae-4b12-98c2-288c0bad92ec",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9c61f5-b050-4467-b729-078ef32daf3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304e7c65-302f-4ead-b85a-ddf28dbdbed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb6ca794-b9da-4170-91a7-7d497fd303a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c738ea37-d1c0-4c81-ae5a-55be601a05d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dade87ae-983d-4cb4-bf21-36d1c1dfaa69",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf29208-5cf0-4024-8fc0-251c3a52f583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442bacdc-e2a2-40f1-8e8e-d30b31735385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057f927e-5917-4fa1-938f-41399a247d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "14fa6fc5-5367-4b05-af70-c20a0e0b9522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2292cd02-326b-4a58-9a8e-5c34289aea53",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7c4663-85c8-4996-97a9-c376774930a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb369820-cef6-43bb-b81b-0682aa393d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2a624b4-5ce5-448e-b661-dd067055596c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "693f162a-bd14-4162-852f-a37968fdd02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdff6859-d49e-4bda-a97d-76c5650cd80b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f963cd4-fe0c-4910-8094-7504a26288cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2e3033-f493-4115-a735-0fff09c7648b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7413a8a-3389-4c5b-809c-9cb263b49d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6f9e6a-346f-4f1c-bc8a-dc9e8f99757a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edb92cb-539f-48de-9db7-6a5a7e0415de",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1df6ee-d9e6-40ab-9103-3ebb46f3a605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf452b5e-4f57-48ec-a48f-8743118402cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f0d3fd-8f17-4e39-825c-63f7c899cb1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9a040b-ffbc-41d7-a7ed-d7b0b5ae18e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cbbe25-4130-4f26-9871-9cc976d8b669",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4a6444-ea11-4507-88c7-0e40af2af13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9b11379-82d6-4da3-9ce0-beb868e4ddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c5ed72-a67a-4cb0-8521-403faf4ee502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f8bf83-1b2d-4c81-847c-42f7dcf259be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98068d5e-348b-41db-92f8-8a84680a09ba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2ea900-b5a9-4a98-accf-0cab20e35fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e77611f0-8147-4d2d-a98d-f09e6a9ff34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150dbc8e-f6d5-4419-af5c-8b2a513e1d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe199a55-bb02-482b-b683-7b30431faff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64dbe84-49ed-4ce7-b130-d26e76ac0922",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925a6616-b158-42ad-b99a-f671ded268eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30c2b16e-5fd3-49c2-8b18-4a8b588ac4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5723c7b6-ea52-487e-ae5e-29fffdab6bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12d7d0c9-9b5d-4e80-99bb-08ac090d85d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f68496-9b20-4799-95ac-fc3119fd27f1",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3626e9c3-2d5d-49eb-8529-0c5c8517e37b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd517a8-3338-4935-9045-ed2898145547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac01273-ba0e-4e30-80a0-10772b2ffe13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01c94545-7772-4ea4-8046-a8154d97db0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac4a741-1c72-4af1-8c95-8d24ffda2182",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7e3596-75c0-419a-8d61-65b4179441dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "524c8bc0-84e4-4da0-ab54-52689dbec3bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13a76d4-c6f7-4537-baa7-da71c9ccdc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c453c496-01b2-4231-81ba-445b33b97d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef6a548-2311-4892-830f-e2ada333b322",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43072278-e4f5-4d4d-adc2-1d3599200f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ded2ca-ddfa-4a2c-acb9-b93a908a80ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a171a71-8cf6-450c-82c4-978d6d2b333c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a63ee17e-bf80-4fd2-b33c-f44601b16304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe23f98-a666-4ba6-9b83-06ad08cfb673",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9cc084b-39e7-49b6-b40f-763acb9523be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814242e4-b53b-446a-821d-b79ed48818d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd11707-a7aa-4d0a-a6a9-1e95cf2a9800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b34d0a-dfc9-44a6-8938-73e4e9a93284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0866aec6-100a-4ee5-aad1-12725b1b5bc1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d678f6cf-91ba-4f14-bbd2-8bc7ca38a13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92eca574-5fea-4dc6-8334-228212b744c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd149c1c-d915-4ab8-a8dd-826b79510ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "180be89f-027a-4ac4-a29e-693082f2b406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd981e9-c1c8-4bdf-97d1-3362d72ada71",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04b5fac-7262-414f-a2c5-e8a79b595caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "699bb0e4-f4a6-4feb-8289-46929f06066d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dbe039-584c-4d76-9d47-0345421af033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60555905-fa2f-41a8-8693-3f0da04b3675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359c5c8f-57ee-4f1e-b5b8-894e83956369",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d449f75f-88e5-411c-934c-f7f511423755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4465289-7f90-4f75-a0b7-6f4163266a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134e34b8-a1bb-47ff-81b8-2f88f143c106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "120885f1-00a9-4d7e-990c-6c6436f0e20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59262bf8-d106-4c3f-9103-ecf247be690f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a95cf76-b573-4d48-a8f1-fd5d0dc6ce13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c9d16d2-e051-44db-b876-69f9cd33c319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae39b2c-f52e-4bd1-9837-032269b2e8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b73237b8-e32b-4a55-995e-87b7b68c50bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca55d8bf-eb56-47a8-b112-43d19217a783",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f069e9-f29a-4daa-a81a-a6de146b9f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50226466-1622-40d9-9a81-494ddca2ce66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4361db9e-6c08-4781-bf5b-ff6031162a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "481eb65d-d7d9-4230-aa25-40527e03d468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79b4804-72f6-46ef-8b16-6a9e8a80b0ed",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b65ef9c-00de-4171-b0ca-6872ba3dbdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027b8c59-0ec8-44b3-81b4-eb15e77af22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac08fb54-3a2e-4dc9-92ae-18059dbd636e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00e80ea9-dac7-4bb2-99a9-50ce4782146f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af08711-f63d-41aa-950d-d48294b42096",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ef6197-7524-4caa-9bbe-0400a990d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664b3ab4-9d1b-4bc8-bf2e-3eab2eba5605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183242f6-a95f-443d-95af-cdfea8b4cad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a482c50-3e5b-451e-be11-0f6d9b23c294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30187d76-4e02-4304-a8ed-420a52c74690",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6019a22-b647-4b69-a27c-1fc67b5fb42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edcb89f-5bcc-47b8-84a8-b57583bac198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22376107-8592-43dc-a6ca-d280a1b92f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "784a377f-cd67-4c95-b966-2daaf8c1d1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc6d39b-cb0a-4d0a-a19d-8d8718bfd222",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2f6017-329f-4a14-b07e-ea602b7b79bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9736114f-8571-4c1b-839b-e7e08655bd12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed89a590-3ea6-4cc2-ba01-8a41fe3d24d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06165040-243b-4129-8661-fdcc04723e1b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1eebea0e-486c-42dd-98d6-dcd0217d397e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f2b4acd-f52d-448b-b6f2-dd9f70d7e477",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3448ac59-fd83-4ee4-b53b-3e8715603a68",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "808b0be4-47a1-48e0-9190-ddbc95238c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ea6166-4829-436a-9af3-75d2eee44b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f0d941f-ae0c-4df0-bc2d-bebacf4459bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6120f91-d2e3-4f6b-97b0-2a8401a8f49a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8c44e4b-bc6d-4db5-adfc-8cd142744bf9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8371d0db-c966-4d5b-bc62-f4b184b685a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7e502d3-8745-4cfd-b7e6-8b5bfdebab52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "13bb0cca-76cc-41ef-85e4-1e7a7628ced3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5ddb8c7c-1f3f-4e90-ad67-0fbf150f723c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d39e6376-c838-48a5-961d-170ae6ee6c15",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4df3463b-402c-46d1-8b0a-adf7f4b26123"
            }
          }
        ]
      },
      {
        "id": "06b40bee-1b5d-434e-9ac1-adb45542e081",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "370f3c5d-8163-40ae-85d6-944333ac8848",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d6cb746-b573-4e9c-9a84-618b9f8b75fa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "996e01fc-1a1f-45a4-811b-d8acf923c3bd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04794ebd-835a-4100-8b22-5a41d400cd05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52bdba1-11be-4352-a7ab-87ff2a5ad439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8185e7-3927-4abd-98e3-3dccd6ab045f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae39bd2-958e-4a4a-bf02-f62233089130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa72260-c8fd-4a50-aff1-f135c70466cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcb952d-0bcb-49e9-87b7-3178f6aa8ed9",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a583011-6964-4b63-95f9-5afb81e9937c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3be15ca9-1228-4533-aa76-00f11b41eaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11bfbef-e407-4d59-a2bf-28f6519b8b32",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2f4e51-df25-4aa8-a96f-6c6efce1ada9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c6d620f-e7fb-4338-a444-060124128285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9747d7-2669-4298-8e8a-fb755ff7257c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94a2446-30f4-4352-837b-506a77605e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc81a627-dbe9-47f1-a79e-8a38ecdeb891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6898ceb7-7bac-44b6-a038-b1a6cd3ce702",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a0eb51-a5ca-40b8-a971-4c1830954d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1343dd26-8563-4b43-a244-c9d72ab2f937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23f07ca-bca9-4e65-8eee-08f8bfbd8fa5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9a04c9c-7d36-4b8c-8357-d48e86da2cc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7833631-26ae-4f7e-b880-7fa1e4740a1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a04c99-2834-438c-8d9d-ab37d2720d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25dbd9c4-07a9-4c5f-a3a0-469c82d5a11f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61c4bf3-3c0b-47a2-a9d9-7bc87eab3a25",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f2ca4a-428b-4be1-9e30-d7917ead29f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee7b4b60-dd9c-449d-824b-116e305edfe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194bba76-22ba-461d-b850-425993068478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbcb255-bb19-4538-ba2e-1442b165c424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6b2768-b59d-4763-8b68-9471ecdfcb80",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3009a97e-05e5-4412-b883-80af04670550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756583c3-a060-4e28-bcca-e429b49493d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bbc25c-6019-4ea3-9211-809039f5c9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d49275-b31e-425c-9a2b-e1168f7095ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95bbe18-8d16-4845-881d-b7490ce71254",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e101a5-e2a1-4c8c-92d3-7a76697d4404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "112b2097-ce41-47c7-bd1f-d4ad063afc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "370a6b67-ffa9-43b8-86db-f90f8bf3837a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42d5672b-658d-47b5-8765-dd396b45219a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d96de4a-118b-42a4-b532-581484a90fb4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a936e86-b588-49ba-9641-1dc3077b4346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d958757a-a75d-48d4-8bda-3d011e03a457"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd78b64c-2c2b-4f16-8229-e13446350341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05458b05-4b71-4064-99ea-129b687f0221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ac75f1-fddf-4258-98fd-9386e7c03183",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de478aa-53b3-459c-8a0b-e2eb1511f2ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9793b7ef-8304-43dc-8c93-b467dd48eecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09fb6e4e-6388-4f4b-9737-296b02814331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0822b55-9261-4c8c-b017-83a7452d2b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2848bbb9-96da-4e0f-92fd-bad8f0997b00",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32508d67-7355-4ae6-9079-79b95d74e0d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57a4bda7-faeb-46f0-b4b9-e82b2ef7b0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1785ea95-5ebd-4012-9c8a-0fe0741dbb8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eccf8cf9-2dba-4461-bc54-3de9502b5b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdc0964-cfed-4b58-b697-f76f6d114b8d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671b4edd-83c4-42db-b5d7-c880184159a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb31f7b-6d58-481e-8117-a779099f001f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6a3c64-8cb1-457a-a7fb-f2e06ac8afc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd99fc78-e9c1-4dd1-8594-8cdb1d350a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aed6448-3f02-42b1-bf81-48e42abfe421",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c280a5f7-ea1d-4fc6-936e-bd87c66bd142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "103c218f-16fb-4097-a8fe-04c5bdc8d50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d39301-0467-4ea7-be66-1b36e3304ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42a901d-37e8-41ac-aa93-efa9d3bc68b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee2516ff-9af8-4536-ac1a-e5055781de41",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90034b8-f0a9-43c3-a043-6454a950c3fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b47d4b9-3719-41d6-a73d-56504808121d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e2aef3-69e1-40f3-aabd-512b5120b931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe3f915-b04c-4828-8290-aa0f4cc06e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170edc86-5cfe-4c74-ab7c-dc882bd53a02",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d340729-233a-4d4e-b3b1-1123c69269c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4034124-a2a6-4a45-9b41-617a3bc04d0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59110310-0723-4072-a86f-1fa921ee312f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1536e184-6581-46e3-bfaa-3dc173781b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c6e1492-eaaf-4747-aff4-eb21a609133c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb602299-66ac-4208-bac1-4e24e3c19736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77fd5374-28da-4714-a9ae-a393725ef0dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ac946b-0d46-41b3-8406-3ea2e6a81b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac810d94-ac7c-4bd7-9d25-77438bc126ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557c5f80-fc62-409a-840d-78d46f86e43f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fc1de4f-e12c-4116-9b8b-4c2b8cfb9fa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70aab0ed-8aad-4560-a443-18c81d38c1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab4484e-fd9a-414a-9113-7e3787b217db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0916323f-6777-457f-a540-c13bc4eb1eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b16d11-dd00-4f58-aafe-fd80b5ad8549",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6d9455-89de-4590-b9fb-c1340b7b3c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41bfa955-17d8-49cc-988e-f946d45753c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d9230b-d8a7-4953-b093-7e31546d543a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383df087-8087-421a-b3ee-92ee5912f64d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e933de9-c607-48aa-bb9a-3008f0cfea7f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8923f0-8e0d-4134-8955-69a76176b776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d72d60fd-37b9-445f-8582-538cd84814f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1b343c-5f3d-4167-a97a-de68b590905e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bff52035-5cdf-4f19-a989-f3eee91fd4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e786d189-c26e-4122-bb1d-66dbe7f7f77c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9173446b-78cb-40fb-8b75-ad44d8135fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fe7dd3-0760-4dce-acba-9057576b7dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b11997-161c-40fa-936f-a811e626b614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c54246b-6727-46f5-9132-cf25c1ddf799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6a8d99b-fee1-4ffe-99be-823e6abb9bae",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6702747-d3d2-4f0c-a1a4-d8fd4fd4b7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de31503-f403-4f8e-8393-e1c3cd1f031e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f366843-1f37-4b16-8525-250ba9f19bf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a9f7bd3-7c24-4231-9229-4d5988e8eb61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd29b895-9f10-4a43-8b65-0391bf9ee887",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46799399-032c-4197-8aa6-3d6951aa786a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13acc494-69bc-426f-a571-38bc126c331e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11bd9db-3b60-4171-bbf0-e4cf2862b04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4418c9-dca4-4a00-ab70-ea363f8003c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c77a6404-31f4-42e6-9669-e8f94bf038a5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4290aaa-9ea6-4e24-9b23-3a08d9987505",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c02d54-0211-4978-9fac-34dd920d88e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da54399f-39b6-489e-a8de-7480211db71d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ca37db-4e5d-49c1-b542-7ae335fd7c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89009ef7-e064-44a3-ac32-51c76587d6e7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a610dd9a-3f32-4043-ad81-a0678ada006a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "014e8803-f305-44ff-a1aa-a4e289b0240a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4744d3e-b2d1-4d3b-a9c9-4222d6eceec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716903b8-689a-43c0-9c7a-56d631475a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8ac7e2-aff6-4f73-9f90-134b264c5a3b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231d4584-bc39-4386-b7f8-e25a3cade50b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c6d9170-4ea0-4cb3-ae49-3e234fe90a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c52f02-130b-49ca-9a00-ec8f78289174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58084d24-853d-4cf7-a3d0-9ee03a69d359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54ee122-369d-42fb-9478-b89caef0728f",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7f6663-cd52-4702-a4c5-98c1b4de45f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6390393a-ccf3-42a9-b8ab-0ade6d6335e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdd3267-109b-4252-b983-684b06f2d24f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fd86df-80fb-4d38-898f-4f76845769e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e37bc0-942b-4f3a-806d-f1a89504657b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52814c47-719d-42de-a863-7de039c7b940",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1465f2-e250-437a-9358-045c089dbd0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d0c98a-4f89-474d-ba36-c7a2845f5884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b07cff-2c45-4f8e-9a81-f2c4c01d33b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3eb3d78-69a4-4a1f-9af4-7604452f2a3c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e688483-bf1c-4385-ace0-12676c8587f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03595a9a-3472-4aaa-b38c-985a9703a2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "427b5072-2244-44c5-a598-9e9678dc4ffc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6754b829-d1b8-4935-8c83-ef0e7379b45a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bedd6c55-5011-4fa0-a842-b3462162de62",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27e0508-b6b8-4458-a219-ccb38917237e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fde1d5ff-9b0d-4c28-8e1f-4281b71087bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bcdc3d3-d3ac-4ca1-b4c8-e4d0e0d3a6e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3eb2b1-4a57-4b97-993b-109eb51e881a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ad7669-f67c-4a4d-b58a-b336d75d774a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e59db5-b61d-4907-95d9-be48590ed82d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1481e0c-09c8-4bd5-9e9b-0ec051aea9ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1afce65-cfdf-4dba-bd2b-18b8bb52beab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d4e9b6-fb8b-4fd8-9f0a-4719be649518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c0c36d-d1d0-41d4-b807-f817570544ad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ddf254-c1d4-452b-b8b7-59bbd49508e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "037605bf-041f-4b8f-8890-7f1b4f6427ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e8dd82-d4ca-4668-8137-a19dc5a0f5fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc474f3f-5d29-451b-b0fe-397ccfa69b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb996818-cc09-4821-aaf2-f5d7248fca5b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da65f95-f72e-4bee-9208-4e02993d254a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a23276ae-3b53-4ca7-871a-e788ccd2f9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9fa8d2-9005-42bf-8528-0ed9b18298ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df529c4-35fe-4910-b7e4-e662c0de993a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89a1a28-fd24-4cbe-bc44-f6bb572ed411",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60057c9a-f1dd-43ad-8a0b-38bdf6f9f922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b18346-04ed-48f0-8cae-a2c47b929a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb0d251-b144-4dd5-be5f-6bdd77824fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4579dc08-8229-4017-bf17-7ea1d71c3174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54268692-ab3c-4540-801c-1adb9c3ebe95",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310631e0-8a34-4b1a-aa47-795f1b375c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e11d5d-4745-40f7-b71c-70bcab58c1a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c226a22e-d332-42c0-bce3-cab07bc78212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55a8c043-a359-44ad-92fd-04057ab7fee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a12d217-5b53-4769-9f04-53023e39c91f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4f4f6d-6f24-4b40-b51e-8e523b8e06c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca55a7de-5f97-42d2-87c3-b739443442ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe3e609-ec70-4958-ba25-53591416df83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "113e1560-c1b3-4a6a-b6f3-9d5ccf6c4c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dec32ff-f774-4247-bf50-c0cafa07df82",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d42a6c-7c09-428f-806c-625a72bf65a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ceb6a45-dc2f-436e-b101-e69738ddaa2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93178aed-532c-41bf-b3e1-5e8419e731de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b5a92c-e052-4a8b-a3dd-2535fcf31747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d151362-c2e4-4276-9981-271458e033a5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b45009-d895-47ae-bfe4-06bb903e92f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f159061-d9b0-45ea-99ab-1f436b3ea170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93769f02-2762-4c67-a0ab-3c5ab2432496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b6254d-37e2-4c18-9285-62a850566172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150706f7-3afd-4787-ba4f-e06c3b45124c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d3a9fa-c407-4223-8368-3a39bc3c744d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8adc5b75-7e97-4a05-8f49-9b9ecd51212f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab6fb408-16f3-453f-a34d-f6f2caf2775c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c785f59-fdcb-4f5e-838a-52db7d485103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d51d7351-f6bc-4779-8997-073fb2d89acf",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b22f2a1-0dbc-42b3-bd6f-3ae99279bce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51510258-97bd-43ec-8931-f805494a0401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7134243d-4926-4ea0-9828-e5c071fc9f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7160152d-5db1-492b-b5ff-cc8355a58e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6cf48f-d211-4dad-a74a-2471cba13c49",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8828970-8934-4ddf-8c0d-c4068b5c9e2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5aa16e0-bffa-401a-bcb0-49e5715c4de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59975361-73bd-4a88-9ef9-455283f6c6b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93f0294c-9b30-4fcd-bd4d-475d36fe5b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de112ef6-0aea-4be1-97bd-78769b8a3ad3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c41cd8e-da1c-4b9c-8d32-e6cb3e0cd261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27dc2a4-7144-461c-844a-60b33dd635fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aecf6e2-4070-45fb-9e8b-580726af2c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "691165c3-826e-418e-950b-84f4e1f95d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b2fca3-a3f9-42d6-ab02-10beb1fc45c9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f0258c8-d5f6-4a56-ac92-ddbfeddc34a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79391749-6c75-4281-ac28-d493ae29ccd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175ab129-daeb-44f8-8235-3a4fa93f9fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdb2b1b-c1ec-4fc5-8233-4f3001e293be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a456e41d-c7e2-488f-9671-b591d2d8037c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfddd28c-c707-44b9-b339-540922295148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0914c358-206e-4932-9b0c-08e29fe3572e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7183d4f9-9e5f-4069-ba1e-68a9fdfa1113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65042f6-3ac6-4a8f-8af0-952365153c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81462ff-1569-47a7-9e75-74f2cd308d2b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe7bf6f-12cf-46e1-bb8b-8dd54814ef62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78bf8c17-ac6d-4c06-b083-b3cd194fa9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f939e3-e42d-4b22-8c7a-5761ec1acb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212ff497-2f62-43d2-8fa2-35fd84abd8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212a0b4b-063e-4754-a557-33d40782b64f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd70938-badc-45fc-8b82-51c6554d21dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b4f96d7-af3e-4fe3-b1af-02cfd9cd2436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8381bfa1-9750-4fda-bddb-b193d0268a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09aea4da-95f9-4a88-9832-9831f8f02212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6d0bda-0a90-439a-915d-808bdca0f674",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bfd845-9150-458f-8b8b-1602b9e5c6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a36ab6b5-ce46-4ec2-9293-06459598f2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0cfc93-306e-4279-a1ec-12931a0dce89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3642d729-cc09-4117-875d-27102831d97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30acc456-5207-4845-b0bd-f423de96738f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5f85ac-11a9-439b-9982-3cdee3f8741a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e7ce748-ce97-4917-a52d-62ef501255bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36db844e-47e3-4dd1-a804-1c928ee594f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9163eed-fe36-41ba-a153-da848a040f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d20bde-95ca-4c52-ba0b-a1b8ae9261c0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e87d6c-84ed-458f-9365-16de51cdf6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d3d5ac6-dd7c-4310-8368-f0fbe9a446a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84db07b7-e265-4874-8912-515cc5bbedfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab04551-46b6-4243-a4f9-b63afd795612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc3ebf8-2846-4c31-b7b8-f4eab4ed0758",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8d9c4c-f087-4b84-b5d5-cbda97d86a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a74ff61-fe17-4d93-8f0b-97beef1ebc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f72c8e-67c1-4ff8-abce-b95e9d73aed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4e8a290-c305-4200-8d3e-0914094c4216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86816f7e-8f84-4429-850d-d314ad5b6ece",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a802d706-ba0a-4659-ae27-c940adafb8d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9746a159-72fe-4ff6-b7a2-6f2a96a52ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da59fcdb-774f-4dfe-acbd-2ace654ce917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b03762-2853-4de1-a246-9978fb1c872f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110be63a-e0f0-4fc4-a366-bca111b83991",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c8adce-f62b-499d-aede-8a18edad84f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82251330-2e85-4840-8e01-8080e69d955f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ea40b28-a26a-478c-a2bb-679d912ce5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3adc8a9f-a235-4a33-a968-0e08914ce761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea88b94b-082d-477d-8bc5-3ec70ac4b19a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "196c7e01-3a69-4e50-8802-f21a9da3477d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b33aaa3-0be1-40c6-beb8-5e8ffa618c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71998ef-6039-4cdf-99eb-a4e09d348028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b9b8f9-0dc7-499e-b94a-586525731c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06a772a-662b-4319-a700-bce3b25ba126",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a79a2a-2a55-4675-a677-e85f45b0aeb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b52ad84-c33d-4296-b8ca-f2e564dcbb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d564cdde-e0af-4786-a843-ead2920e0794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39e2253-33b0-450e-916c-fc198fe12223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4770c15a-0eaf-4be8-bfd7-6e659b655546",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7ecd9bb-4429-40bb-89c2-d2e4e24329dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b43dbb9-87a6-499f-831a-c4d8bcb98be3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa5c1c7-2a0c-4ef4-a0ac-349e473a5e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5015a7cd-6aa6-4e5b-8c99-58e2fda2098c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd47b4b0-2f81-4017-9bb6-6a7590762745",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c525ee-0cbb-48f2-8e09-b41629863463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5809d2ce-35de-4e08-97c7-cd98e54ecd7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0581d062-96b5-4288-bc8b-d9eaa43996dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d767681c-6904-4a4b-ac6e-77c29e1fbad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "011eca2b-0017-4e0f-bf9b-b6bbe6ca754b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699c7c59-b01c-4333-a2a5-8e1b47d7d096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254eee04-a614-4cf1-a69c-1f8d7759ae31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7400a216-05af-4704-8135-16a769fbb8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33444bba-21e3-4787-b312-9afbebd7a659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd5a3e1-30b0-453f-8584-fb4bca4d06d7",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cab0c7-8a7f-4c01-828c-7085adc3fad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b55f2f7-5b0a-4aa0-827f-6fdf5b6fcb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef15e411-52a4-45f5-91a5-490f94fa4866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d476ef1-a5c3-4a43-936c-59faf304af3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdc9a25-d40d-4be3-a8b6-f16db1fa5ede",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff9f9c0-dff0-4110-886b-c36e8ce9392f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb887c5-5206-4aaf-ac4d-f0513f6073f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee666be-63cf-45f4-96b3-98d658e2dd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f3a538b-bc74-4745-a783-396d1fbd2923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d0d7157-daab-43d9-82b4-e7bc2f070f5d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1c594c-c709-413b-b547-cc6fba38e920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fc38c9-fbd9-4b11-9b3e-dadd6fd400bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8bb64b-e0bf-47b5-97aa-3f5fe51ea6b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b019f51-9b41-4e4f-bfbb-91cef4bb9439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3cbc12-349f-43c9-946b-1f8f76027409",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2abab92c-b2fb-44a2-b38b-7a9fb46dc7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c06a9fd-3972-441b-bb52-6a493215a7be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5b6653-ea4d-43e6-bd84-d3c042273baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb889a1-b520-4481-8013-a87af0328719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d613e1de-6e7a-42fe-8209-4a80a335ac55",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398b3b03-a93e-4671-8c06-8d21f6da2d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9118417-0391-41af-a1fa-dc20463ca797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c191c390-fc07-4530-833d-ee911ca5ab47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff15299-2515-4121-8e65-a6f426f74d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade5a74d-08e8-4802-81aa-89b6a0a1ade0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6973598-55ea-4bfb-ae87-fcccf89788d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "742ecbc1-f3f4-4988-b41c-bc348bdc91f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc8e882-a060-4d6b-a905-85286a934a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805a7dea-1f18-4d3c-997c-2bffcf3be83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c81c7fc-4ca1-46d0-b30a-20eb870aba74",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c30a212-8bcb-4576-b16c-4cb670de62ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b8433f-1464-4ce1-8324-f993a014fd55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e2b8de-0267-4f70-b4dd-ce6206c4a699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809689b0-56bb-48b3-99c4-ad950ba01982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cad7656-9add-4fb9-82e6-a1a7abbefc4d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e46c71-6214-424d-ab95-7c705e844244",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5021b1b9-0d3a-4127-ba89-ec0e8fdce038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dd29b9-22ef-42ce-85b6-29eb16d3db44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4ae687-3bbb-4579-9069-2a9f96fc215f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff912e8d-2250-40ed-98e1-54788f54cbfb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c997cc7-2ad3-46cc-a7d2-698c887a0296",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d77924ce-7eb9-4cdb-9dd9-3bfabf0f4118"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea106e5-40a9-45cb-a179-299f47d2765b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7708d8a-9b0b-48af-8bf0-a2381ff462e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06621d7-ca86-4af0-90d0-aed6dd4f182c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c6d492-06f4-4602-84aa-f26462c0a27a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af15756b-a23d-4e4f-b845-3ac3338b6974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a66ba70-7b8e-4b96-8ae4-f0c919f81b34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea4bb9cc-385a-4eaf-ac9c-207a72fbff89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b058602-dccd-48cd-af5c-fa29769ae233",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c4acd1-140d-4274-a765-1f334556229a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38c7e4bf-57d3-42d1-b59f-ae59587dc689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1debbd6-75ba-4199-ab81-6551f4860e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7d6021-9360-48ed-ac46-05da4d378967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26858519-76ab-4bab-b934-d0ac0a99ec84",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86854914-14bc-4ca2-81d9-418c22da9f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f12befb-1289-4899-bbd3-086e79cab797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8a40f1-ff9e-4cc2-b65a-412b5bbb513e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2232605e-9fec-4f82-acd3-520215c0630d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270c84b4-62a6-4db0-aafe-62a21be6cd96",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0503455-c7f7-47b4-b84d-ad16e05933af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4d8a63-c0c7-4cf2-baf8-e5c72392df8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3c1b37-97d6-4169-913b-9e711168e683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a886334-f3f4-43a8-8862-6c3809f7c62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f30d2b-e61f-46f4-b84f-6746b996e268",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d998a2-c7dd-405f-920b-e22d8779e19d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20fdec19-7973-4fb9-91f0-3fb3c69f103f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39ff294-9999-437f-9b3c-64feb94c9c19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "290ce3e2-0c1b-4807-9193-69a31584c557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbcf9307-1cf5-4c30-b131-f8e696d67d43",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d81237-a98b-4f12-b084-9f5c0a82a690",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160dcb52-fe52-457e-8ed0-4d04f0f1cce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c144f081-69a5-447b-99cc-87c9aa842129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6648c57-54a6-4708-b5b0-ed38b206c761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ec6b20-20ff-446f-a9ff-261cca05c49d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfd8a79-a341-43f5-9627-fb45af25546f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6fc69900-17f6-484e-ae0e-85244e223e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63162ec1-fee1-4e71-8ef9-4f7ef140631b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb6d07e-beb7-47dc-8a83-5d1ed62613e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f0fab23-25c6-4efa-b4e9-66368e79c40f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a59b8d-3798-4771-bde2-c1c1531e5011",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ca0034-2fca-4ac8-9fcf-891381401c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6678af2-cace-4985-a43c-1996a275dc88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd54d89-b089-47a3-8327-f1780c585feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e648fc83-93ca-4e95-a351-5a2059304cfa",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b803ef93-fab9-42bc-aa4d-263360cf65f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed0b463d-dccc-4885-a580-93bd239bb115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfa9be3-7f1e-42c6-a78d-64110acbae08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0952acf7-f60e-4837-83c7-a82735ae94e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d826754a-b28e-445c-aec0-a6d7036a3523",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4949cd67-9c42-4fca-a9a0-aa7af916ce4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a126144a-64b1-4097-b39f-70ea9d1f6e58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bab8042-8fc5-45d6-ba6a-0166328ef228",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ec5e9ee-ec40-4c48-b09d-487e35acaa20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca4dfa9-1f3a-43ff-9f0f-21da67ad31ca",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bab9c4-f9c7-4f3c-b797-43fc76d291ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8969b523-07ab-43ae-a6a4-100cc7c29b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e326443-0815-4af0-af25-d7f82ef72f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71c70d5-d0f3-4fbe-ba9f-7d71503d6972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bbf629-84ea-4d6d-9fbf-02d483cadf58",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54cd9f8-22b5-4ea4-bda2-dd46f7001c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91ed2f78-b75a-4d53-a3f2-f242dca6341a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e165d493-e8ef-49cd-b049-95476600f429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee61bfd8-aaa4-42bd-b979-47b0f2ccad71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc76dea3-3b2a-4536-9573-7b3a990e87e9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29392ebe-43f7-4358-b4a6-8fd03fa8af6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d3f576-5dfd-4e7f-b5cf-0411045f9041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fb721e8-3e3d-438c-9a1f-86a5bcc2116d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d44ee78-aefc-45b2-99b8-677da6767a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b24af61-0e41-4470-a238-4946e617a389",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9806e1-5e17-419d-969a-5762616f1456",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45af4948-3acd-48ae-8966-7a654823321c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fea2748-82e2-4d0f-b031-116b0a943060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d08336-d46d-4e88-93d6-085bbf3cbe84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af4e8ba5-7f2a-4cdd-b4cb-256871ddc102",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c64f2d-0dd6-4f58-afd0-04118145d629",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9311da7c-9584-4f0d-a6d6-43b7853cf1a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33297785-81fa-41a8-b703-d5a7bfbbf983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19d34d16-e04e-48fa-b9d9-9a9e147f8645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f578e8d6-fb8a-474f-857f-36a254c1a058",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbef421-9b75-498d-8c6c-ab6435b4e847",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "033f6bd5-4ae9-4acf-8b9e-294bbc164152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f4d8a7-2a99-4365-95aa-dd77a5f3930e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc239e55-665d-40b2-aba8-9b8bf0e69c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1755b7d4-db59-4e3e-8872-8a64c7471710",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82d490b-8904-4c77-a6dc-c0b2611c09b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8da285bc-8287-4a8c-9b6c-9e6120c1b6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0759af-1d20-4bc8-9440-d7b2134c7618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea4a6ae-7391-4f44-b5ee-f101411258c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9153e1cf-bc82-45da-9b23-a0f14e1cbcf2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d92377-2d65-4387-891d-d69116cf2e22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d07ba7af-a15f-45ee-9687-89c60ae32fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc65835c-f539-4e2d-ba23-a785ade18970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5ebfd4-f209-481c-88cc-929844dc9a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3771df-583d-4b29-92c1-08ee5b3da9aa",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b680d0-511a-4553-876e-c21ee4ba28ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62ce477-f9fd-4bf6-9218-925c1061f462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7ec131-9f67-486b-8a0d-95d8101e468f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c04a22a-7f6e-4aa7-bb0e-c6a7cddd8019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c25f49-b001-428d-b65f-056beab84c3f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22401203-2c12-4761-ae33-6bea4757da8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4c27514-251d-4444-ac12-d0cc1822bd8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "065a56ce-491c-4577-a59e-e33cdf1e8974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56bc219-c50e-49c5-bff5-539603d1844e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf68a634-843c-4e79-afcb-4e7e210026e3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4bb56a-4f28-481a-b878-a74796207a0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a0b1e23-19b9-48e2-a5ae-43305c5cfabc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce07b0fe-59bb-4e8d-b4ec-4c5395b49067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a77539-d6a2-4a62-94d5-54208d2241fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d15c51b-21f8-42fe-9420-6d11cf198f84",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1187d4-c6c1-41aa-8253-b03ac3aa0f0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0032cd00-a653-4d32-abe0-7b8361abd608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8780759d-dfd9-482a-b893-5054bec19e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7170a79-bc8b-41f3-b36c-82a4de916697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb044c46-16f4-46bc-a4b5-6f12720d9292",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97ee194-cdde-4837-9889-4bab88fd6372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b12c1b-c81d-448b-b5c9-105d9d004e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3e01f0-135c-4b73-8f93-270496246a81",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76afc15f-5e3e-413e-a5a2-1b95b2df02f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaad163-3ed2-4f30-afbb-a1ebff05b5c7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dfffb7-3aab-4a22-b1c2-21d0622c1de6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e15b8cc9-1419-43f5-8de6-d34ecc49626f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6525fbf9-1ce9-48c1-b778-70949806cdc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d964be-946c-484b-adae-a825f9d41282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ca7de0-dcec-45f8-b9f6-11450b31a37e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbec89c2-bfe0-497c-8c28-c4520366e830",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2c955ab-9a60-4bdc-b1d9-f21c3a84c932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd18db64-fede-4069-91b0-314a91009b43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "133e23a7-9c82-4087-8ab4-139bc4028db4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39a942f-1557-4451-94b8-5e707bab3841",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6aab221-5e95-4f52-bd37-d7291d880138",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e0ddeb-c92e-45bf-ad08-b33bac7485a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b955c4-26a5-48ce-ac91-953481748677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "048c5bf8-f5bf-4944-bc38-a4247df1b2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e31102a-ba14-402e-92e9-671a205783b9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d3d9e9-aeac-4e4b-be7e-aba8d069c467",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f408f69-c2f3-490a-b8a3-7ecc1e437c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62359f7-1074-4ef6-9f02-3d9dc7a58bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6da67ed-d23e-4ee5-b54c-fb1c4e220abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad2a4ad-830f-4d3e-8626-64208193231b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb9cb03-c39d-4793-a62f-9e3cf4bad757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "404929ae-66d2-4c2f-ae91-907f919cd6af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ecfa69-d266-40fc-b85a-94716bb68c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57535972-9d48-43c2-bc24-6917b46e7521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a2043d7-7980-4d8a-a41a-a05174a8d28b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a639e568-2759-4878-8a88-7a1b5eded06f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9c0052a-241f-49ef-b356-017e779de0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6fba3e1-70bc-4181-80e6-76044e1cf5b9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7c354a-d92e-472d-a3a9-9cd59a2e5d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995489f3-ccba-4167-8444-c058c5311b26",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c216aa-06f0-4b2a-96ab-39dc46338bf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93680349-9ba8-411a-aca0-111f18f0eeda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec48d1a9-7781-413a-a402-08d4518eabc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df5c813-2607-4df3-a15b-21d545f47322"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfdc5e3a-7fa6-4c21-89fb-b8a72234e074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ea099bc-d451-4aad-b5c6-4b192a8a53f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "de1df4b5-4017-4a96-bc3b-526db287e9fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b2f538e-56bc-4672-97ff-0c1816ea069a"
                    }
                  }
                ]
              },
              {
                "id": "7d346335-818f-47d9-89de-bb72824e5223",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "847e3dc3-0635-4709-b3ec-4c8a2b4ebe24",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74c8cdc-1af6-4f85-9c4f-d2c55073b650",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "82ec9384-40f9-4488-9dd2-b8e857669a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a77ccfc-8ae8-483a-9685-ee85bede89c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e86dd98-b570-49f7-9305-b0f2bca39993"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72f50f60-a1d2-4d21-914d-843c09225c2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68eb93e4-cbe3-41dc-b6f2-6cab4317f697"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "66045839-754c-4618-94e6-db5d0c2d41f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7472ed46-a436-4c6e-a1c0-cdb81bb6ef04"
                    }
                  }
                ]
              },
              {
                "id": "cf2134e5-8e6d-4532-bd10-60b6d76d870f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b9903c5b-7e00-4155-8bf2-eb9a177eae97",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8f6e0c-1689-430e-adff-39b999e09f0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "32858621-2390-4905-9ee8-55a0ecec5127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8469d0bd-1791-433b-b7b7-5e60075f9ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10329993-402a-44a6-a2d3-404e08036455"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "16c18968-6614-4d2f-9bf9-1ea7e71b0a7c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "db5dd92f-7fbc-4a0c-aa41-e77f7d35799a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc3dbd7c-187e-4e49-821e-f12755e6530d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ccb3088a-036f-45b2-b455-879b1ec1d767"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cead2d84-c033-4ef9-9a19-4679ba8513c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "57186c3f-b849-4bd1-bd1a-7d9f859fdfab"
                    }
                  }
                ]
              },
              {
                "id": "6ee37c01-61dd-4dcf-8997-102a2b593c5a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a06f02c-b4b8-4e44-8727-0c1a62de4eaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95017404-eb99-44b1-9a36-49905c04d753"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6fd0fbc1-9451-46c7-ad1e-423a7e2f740d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73715670-7d3c-470d-9656-dfe8845ecbff"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf74df8b-476a-45df-bd31-96e1d0b0d10a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cc1a03a5-3234-452d-8e2c-304f7b4b44d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23d3d940-7e6d-4104-90f4-8df4bbacfe21",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "094acb85-8240-4f3e-8d3b-0526ee5b51f0"
            }
          }
        ]
      },
      {
        "id": "bc609b11-0ff4-4297-9bc0-aeded52bbc30",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f6c386f2-20e6-41c5-994b-7c53de9242fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f031b549-7d2c-4af6-9cf1-ab1743ce07ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "797dfbea-347b-497d-8c63-f79484a5d312",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d86b5d-4885-41ec-98bc-f29179480f51",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a7801440-84fd-46ee-8763-df2ebe4891e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd699dc-9c3a-4014-964b-3b9b03a484c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a334b2f7-0e1d-4e46-a53c-781cd1af7764"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5384eca7-1509-4a45-966d-ba6c96e73c5d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f41f3c3-2e5f-49dc-aa86-f0dc7dfdf383"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2efaf2d-d056-42c6-a8cc-f8ee98986078",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74e86fe0-0db2-446b-bee9-66d03846b401"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31226f45-7868-441f-8656-b349bbbda8a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b16daf38-ca9c-43f5-a257-1799ec34fd70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58815e54-0b93-44c8-a489-e46c6c9e81a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb4053cc-7b9a-4d7d-8718-29b42c825a2c"
            }
          }
        ]
      },
      {
        "id": "7d3f7b60-f1be-4729-810b-f1ee62472cd3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "19ffb841-0a4f-4f3f-89c2-a7ab2f7e2672",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc60e563-fdcb-4574-9f17-94a500e67312",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "621fc4a6-258c-4fb1-b55f-da3b6a8c85ec",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd4040dd-5546-49cd-94e9-575db02d1e1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0f59392-d542-4996-87e9-ab10e36adb5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed2de07-30b8-40ac-8404-8244e715e41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f22c34fb-6b92-483a-a37b-b1f14424d2ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f8e2cb1-3665-45e7-b84c-36e068f45b43",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73082d72-1979-4fb6-bcc2-16c12b5c7b77"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19587678-4a20-4d03-ae1f-f7f6bfa012a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dc4f8b2-0e91-4be2-acc0-2d7520142c0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9262dfaa-eeff-411e-8ba2-1082ba291af3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1096fab5-edb5-40e9-a244-9327761bf8fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07ce1bc0-faa9-4238-84e0-2286728e1305",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "74e6dece-4778-41c3-8cbf-437d8ed062ec"
            }
          }
        ]
      },
      {
        "id": "fd931551-7513-4e3a-bfd3-da8fc28545da",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "18302bb7-b471-4906-8428-36238f05e82e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ea265a5-ba1a-4558-b8ad-82dd51831bbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "781aa870-45e4-4ec2-8fa0-61c9ba6a7000",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5eda3c-0523-421a-84d9-83ac74939c9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1cb297fb-09c0-442f-a692-15d16019de2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01649ca4-a664-4cfa-9761-88b75117a3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "95e32a13-097c-4d91-be3a-73aa565e5516"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a06b212e-3efd-46ea-a895-18e962ff84e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a3e14b1-b3f1-4f1a-b230-304b18813108"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41a0b58d-a6b0-4446-92b7-f0c641ba96da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6eaeb83e-0f7b-46d7-abbd-8519a21960c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a58d01d-8b13-42f1-bd24-960693d2937d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "453d46bf-9f1c-433c-a473-b837f3a60b0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d21f21d9-1869-4d62-b8d8-1f53215f999b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09d38780-b771-4395-86e3-5fd973fad965"
            }
          }
        ]
      },
      {
        "id": "30f0e532-b0dd-40a4-b7ae-56af03cce78c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc60603c-1f74-4b85-b6f3-1a274a0c6929",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4faf77b6-f730-4f3d-ae75-7c53dafab2bc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "7551845b-7baf-4d22-9733-10669767ad9c",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9dd765a2-3e9c-42d0-ba4e-1b56150b91c7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9000e69e-8d02-4aa6-aff4-c00c917e54d4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.023809523809522,
      "responseMin": 7,
      "responseMax": 622,
      "responseSd": 41.827017980087675,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1728262067285,
      "completed": 1728262078881
    },
    "executions": [
      {
        "id": "d2311e17-791a-499a-a42f-32d9d59c27c9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "65379cb5-bb5e-4b46-acba-9a575507999b",
          "httpRequestId": "61ee4ad8-34a4-4492-9d83-28ad0e51c2b2"
        },
        "item": {
          "id": "d2311e17-791a-499a-a42f-32d9d59c27c9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7a130a71-9d56-4181-ab7b-0a70cdd757b2",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "944ca5a5-f995-4ad8-af0d-3f4df53d44bc",
        "cursor": {
          "ref": "f71048e7-4ce6-4e71-8e89-4bebfca1649e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3cc96bc2-95f6-4be8-8bc5-7b6064fa7f40"
        },
        "item": {
          "id": "944ca5a5-f995-4ad8-af0d-3f4df53d44bc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ea2b1455-cf1f-4a3f-b457-21fedeaee769",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "e54bb678-ac86-477f-8744-966bf8cce973",
        "cursor": {
          "ref": "6f238b42-2bba-4ae2-8436-974ec731d432",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "3ad7d9db-54f6-44f9-8365-8a07d5e0f3d7"
        },
        "item": {
          "id": "e54bb678-ac86-477f-8744-966bf8cce973",
          "name": "did_json"
        },
        "response": {
          "id": "0464d94e-0216-41fc-aca2-1656744b4aa4",
          "status": "OK",
          "code": 200,
          "responseTime": 147,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da77eaf-a262-47d3-bf4b-31cc73f032a5",
        "cursor": {
          "ref": "9f02b4b0-9d15-47c0-8891-a96eb11f7ad9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d85c0d08-ebd1-4d22-964b-5f863d4f0f86"
        },
        "item": {
          "id": "1da77eaf-a262-47d3-bf4b-31cc73f032a5",
          "name": "did:invalid"
        },
        "response": {
          "id": "29e45f45-3173-4111-8cb6-23c6dabea0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da77eaf-a262-47d3-bf4b-31cc73f032a5",
        "cursor": {
          "ref": "9f02b4b0-9d15-47c0-8891-a96eb11f7ad9",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d85c0d08-ebd1-4d22-964b-5f863d4f0f86"
        },
        "item": {
          "id": "1da77eaf-a262-47d3-bf4b-31cc73f032a5",
          "name": "did:invalid"
        },
        "response": {
          "id": "29e45f45-3173-4111-8cb6-23c6dabea0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fcda8d-dd47-40dd-b1ca-d0cdd4adb6be",
        "cursor": {
          "ref": "ac9a2383-73a8-490e-b7a2-be0ece63256c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b3dd8a29-e3b3-4445-b756-a74e25cd5018"
        },
        "item": {
          "id": "06fcda8d-dd47-40dd-b1ca-d0cdd4adb6be",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9d1815b7-a4b1-46a7-a023-4ceb169ac7b6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 72,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f315d57a-d8ea-4607-a7c5-b90ed87bbaa8",
        "cursor": {
          "ref": "78a7d6f0-0e84-4017-9465-071668d0c3d0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ba9ec2f0-d1e7-4566-9817-d631da8818de"
        },
        "item": {
          "id": "f315d57a-d8ea-4607-a7c5-b90ed87bbaa8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3650bb67-e00b-475d-b8bd-be38ad585fa7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf0a396-c421-4807-a07b-78d55b9c24a8",
        "cursor": {
          "ref": "8c5c8c85-258b-49a2-b40e-6e28c8455e5e",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a345303a-efe8-4d55-be0b-d94c9746b244"
        },
        "item": {
          "id": "ccf0a396-c421-4807-a07b-78d55b9c24a8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f79a1ed3-97ca-4cb3-a21d-43a5e61a5481",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db55d7f-925a-4f3c-9d14-1dafe3c8aca9",
        "cursor": {
          "ref": "8573dea4-2585-45f7-a700-916ac99d7e9d",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "446812d5-c72e-4cbc-959c-58e47821f5b5"
        },
        "item": {
          "id": "3db55d7f-925a-4f3c-9d14-1dafe3c8aca9",
          "name": "identifiers"
        },
        "response": {
          "id": "97bfa1f1-0a87-438d-aee9-88a5d8dd327d",
          "status": "OK",
          "code": 200,
          "responseTime": 220,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219fb1e2-fd2b-45fd-ae83-04378606ab44",
        "cursor": {
          "ref": "c4878014-d4eb-4217-b93d-efb4323cbe39",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "f3615452-878a-4cc8-bb2e-16c64d34a953"
        },
        "item": {
          "id": "219fb1e2-fd2b-45fd-ae83-04378606ab44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "11c475bf-1d54-475f-9101-ad31d335e003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20792c6-a9ef-4773-a047-eea46b00b190",
        "cursor": {
          "ref": "07085143-49b6-4dbd-a0c3-a722ea92e600",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e077a783-bb27-48d1-b7f2-800d9db61f4f"
        },
        "item": {
          "id": "b20792c6-a9ef-4773-a047-eea46b00b190",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "806f98a0-384f-4fd9-a606-bb102ea6aebd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ff72d5-c4ba-4b79-8bd1-beac6d96ba90",
        "cursor": {
          "ref": "48e03136-17b9-4a09-858a-a50bf4b016e3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b0d0ec9f-6eee-4793-bdf7-5abccb08cc43"
        },
        "item": {
          "id": "89ff72d5-c4ba-4b79-8bd1-beac6d96ba90",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "845fedc4-9f9a-448e-8075-ad52e1419c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ac86e3-1d1e-4e2a-9dd2-c3c8826c61be",
        "cursor": {
          "ref": "abce6098-966d-4075-8aeb-546fea0a431f",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "615ee5f5-f27e-4a7c-bf06-b6fa8f4933bc"
        },
        "item": {
          "id": "d1ac86e3-1d1e-4e2a-9dd2-c3c8826c61be",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "cfe29ee0-55be-4c04-a438-ed292adb426b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da36230-8a4c-4815-879c-917ffba60351",
        "cursor": {
          "ref": "0e4c8dce-f755-4127-85da-b410cd6db7b4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2693083b-f696-4325-8ba3-31dbd261ec0a"
        },
        "item": {
          "id": "2da36230-8a4c-4815-879c-917ffba60351",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5676dcb9-05fd-488a-bcb6-76915b03450e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fadbb5b-f6ff-436e-b341-37b370026ec0",
        "cursor": {
          "ref": "a2ce2c5e-21d6-4d44-ae44-5f73e5b8693f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c4805587-0fc5-40d0-a5bd-70ebc6a112d3"
        },
        "item": {
          "id": "0fadbb5b-f6ff-436e-b341-37b370026ec0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c014464e-2468-40d7-a46c-e9de43600e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454bd343-14bc-4ca8-9a3e-f84fdd29d26d",
        "cursor": {
          "ref": "69ac46f7-5fd0-492d-9733-40fd5db0352a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "036b365b-d8a7-4342-96f2-c0a9516fdcc3"
        },
        "item": {
          "id": "454bd343-14bc-4ca8-9a3e-f84fdd29d26d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3b9e470e-60f4-44ee-9f97-42d3cbd4f7e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e61484-ee19-427d-9dc9-c46b0464afd2",
        "cursor": {
          "ref": "4edf456e-55b1-4a62-9443-82791fcc4a41",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f38d6215-2c16-40be-a6ff-bb3ca144ac74"
        },
        "item": {
          "id": "56e61484-ee19-427d-9dc9-c46b0464afd2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "70d1d2fe-c5f8-488b-a29b-c483a42841e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cafbe9-3527-4d2d-a760-a713aba89e66",
        "cursor": {
          "ref": "611b5ff7-abc4-4f91-8e92-417aa7b94854",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7ab17bdc-7ff8-43a6-b5c4-c8938284a613"
        },
        "item": {
          "id": "89cafbe9-3527-4d2d-a760-a713aba89e66",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aebc7e2d-639e-4684-8b24-c0215f6c1696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2892ca-7b63-4ee0-a03d-a726a785ffd8",
        "cursor": {
          "ref": "fb2497da-cc6f-47d4-9b5c-cf4d7195a400",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "704ee32d-c125-4b83-878c-9c5570645944"
        },
        "item": {
          "id": "ba2892ca-7b63-4ee0-a03d-a726a785ffd8",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ccd537bf-6e4d-4530-a4fa-1f47955f42f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6d3a97-942e-4c5d-8466-ec23d5edfc16",
        "cursor": {
          "ref": "235eb196-2b92-4112-9220-64ce777b98a0",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a7667836-d23a-483f-aedd-2df9a2597cad"
        },
        "item": {
          "id": "8f6d3a97-942e-4c5d-8466-ec23d5edfc16",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "190abedc-085e-4afb-bf4a-39f24f2c0dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b4214b-ed9f-4fb9-ad35-533bb4c70ea0",
        "cursor": {
          "ref": "61375a10-11f9-4ce8-92db-bacb6cba8868",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "5a3fbed4-dc59-4f07-8243-8e279c2ea857"
        },
        "item": {
          "id": "99b4214b-ed9f-4fb9-ad35-533bb4c70ea0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ea6ffc2c-7886-4434-a8d7-8406b921dc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab460c0-9551-424f-9b2b-cb5e59669e39",
        "cursor": {
          "ref": "640bd4af-2650-4937-8b02-c40e21bc0791",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "51d60434-314c-4a78-8f63-841c993976c3"
        },
        "item": {
          "id": "6ab460c0-9551-424f-9b2b-cb5e59669e39",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "025427e4-0720-4dfc-b4ef-f1f5f26df1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d9decd-fae7-41c8-afd1-893482bef1fd",
        "cursor": {
          "ref": "a6ac612e-c776-41fe-9dcc-b1cdb8d216cb",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9189844f-d4b3-4b56-8686-eb53de61abb7"
        },
        "item": {
          "id": "a9d9decd-fae7-41c8-afd1-893482bef1fd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9171f3e4-1c55-4631-86f0-dbd7f73e1231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b683eb0d-54a7-45e7-9af1-c54bc0d73568",
        "cursor": {
          "ref": "df5d3b9f-50a2-455a-bc7b-db5ccbe0f531",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c38eac32-4f15-4f11-a96e-79cf749fbd4f"
        },
        "item": {
          "id": "b683eb0d-54a7-45e7-9af1-c54bc0d73568",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3f10433c-9109-4dd4-848c-c70a57bb99bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba79702-f013-4e0b-aa06-922d888a67bc",
        "cursor": {
          "ref": "3f6a1780-2b40-4cd0-97b6-f071eab00e28",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "99299506-97fa-46b6-890e-068b0d551de2"
        },
        "item": {
          "id": "9ba79702-f013-4e0b-aa06-922d888a67bc",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "04898bf4-3d0c-4823-b14d-b808fe1c0dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f238da8-04e8-44b1-9c10-6664e3ecfb5d",
        "cursor": {
          "ref": "109e4f25-035c-432e-b6dc-2c5270e386dc",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "62c2745e-2b10-48f8-81b6-8cd5a994b786"
        },
        "item": {
          "id": "0f238da8-04e8-44b1-9c10-6664e3ecfb5d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "83c4e910-1512-452e-8af3-0ef16641ef5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571e826d-794d-477c-aaf1-7d8a3c428895",
        "cursor": {
          "ref": "c1a7d821-2291-48ab-8dff-48941c2dfe46",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d07b4477-661d-4c77-b715-2a00e066fdc0"
        },
        "item": {
          "id": "571e826d-794d-477c-aaf1-7d8a3c428895",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "cebf60f2-86e5-4978-ba2f-b774fd96d063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77efb6de-4df2-42ca-b4cf-024c78bf6097",
        "cursor": {
          "ref": "b9088fb2-b072-448a-b8fa-5f93f58aaf17",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8951e977-312d-49e3-8a29-3557bd56fda6"
        },
        "item": {
          "id": "77efb6de-4df2-42ca-b4cf-024c78bf6097",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1160f5ef-7258-4dca-bf30-a59ab94b1c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9ee9c1-02c4-4b72-8828-62f12095f706",
        "cursor": {
          "ref": "713989a1-9a04-47b2-9be2-3246fe06ade4",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8e73bc07-50fe-4236-8569-9f24c0e19cc2"
        },
        "item": {
          "id": "4a9ee9c1-02c4-4b72-8828-62f12095f706",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fadf8029-27a4-4679-b5ff-4c86cea16f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc87333d-6d1a-41c7-937f-9a3acdb69416",
        "cursor": {
          "ref": "0cb80a01-e0e3-4910-be03-b0752b4f7102",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f9db45b4-f96e-46bb-9c5f-2bdce535248d"
        },
        "item": {
          "id": "cc87333d-6d1a-41c7-937f-9a3acdb69416",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "00137264-c151-4f9f-aef1-3d35dfaff541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a020642-6824-4868-bfc3-215fbce4a53a",
        "cursor": {
          "ref": "45c94f14-8db1-47b7-806f-3fe70717e138",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b17cb704-aa04-4421-8bb9-f5b15e8b1241"
        },
        "item": {
          "id": "2a020642-6824-4868-bfc3-215fbce4a53a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e120940e-b5f4-4479-a6af-c5d5b79e8e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba63e50-45ea-46c1-8e27-6b07770af35e",
        "cursor": {
          "ref": "0562c832-10c1-4fa3-84e3-97fec2a6c134",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "843502b4-d151-4dc5-afe9-c2b78072309d"
        },
        "item": {
          "id": "fba63e50-45ea-46c1-8e27-6b07770af35e",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "059acf4e-b127-4bfa-8e2e-1c6ed62edd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9274408-ad65-4985-b6bc-7f7fa29bb45f",
        "cursor": {
          "ref": "c7529293-bafe-457d-be44-53526662199a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0eddb3fb-ef00-47f2-a92d-963bb4b11c43"
        },
        "item": {
          "id": "e9274408-ad65-4985-b6bc-7f7fa29bb45f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "87386b7f-e43d-47d2-98a7-3a4129c1d2af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d601e0e-bc24-4596-87df-b3bcc0c87348",
        "cursor": {
          "ref": "2c60816d-16e5-43e2-b1a6-332a4634807b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c190803f-5655-471f-8cf7-3148a63819c7"
        },
        "item": {
          "id": "7d601e0e-bc24-4596-87df-b3bcc0c87348",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b2c7ca6b-2748-4b22-9be6-dd4a544c4838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb04494-b916-4f32-85de-ebd9cad2c4d8",
        "cursor": {
          "ref": "7a0dda54-e61f-42df-b149-07251b103b6b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ef734a37-85fd-4fba-80f0-c34ab0816551"
        },
        "item": {
          "id": "afb04494-b916-4f32-85de-ebd9cad2c4d8",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a70bc060-1975-433f-b22a-9dcbcf5196b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd57069-6246-4cf7-adb8-5be4381d4ef6",
        "cursor": {
          "ref": "3edad8e0-f5c8-4720-9d72-d32f1f0ab329",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f50f3859-1cf8-44f7-a299-ab5138dec965"
        },
        "item": {
          "id": "cbd57069-6246-4cf7-adb8-5be4381d4ef6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ae9afcbe-3142-4785-8640-11972a145655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cc350a-6e31-41c2-b7d9-bde6ceb261e4",
        "cursor": {
          "ref": "9e7b4475-cc5a-4dfa-aaf9-fb797f580b46",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e898ca56-01ab-436e-9185-8b063bbf0414"
        },
        "item": {
          "id": "11cc350a-6e31-41c2-b7d9-bde6ceb261e4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f5f7c7ac-4df7-4f26-98f5-5d7b958dfcc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9729aab8-5a4e-4c01-9042-e026477fb8d9",
        "cursor": {
          "ref": "2e6bea29-4078-4be7-a39a-11c127b2ae0d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7611d02e-7d32-49d5-b39d-dc10d420f590"
        },
        "item": {
          "id": "9729aab8-5a4e-4c01-9042-e026477fb8d9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a3136c82-4745-494f-9122-aba5d6cc23da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b15aaa9-61bf-4e04-9758-a68a8e5f4ec7",
        "cursor": {
          "ref": "e2d9251e-5222-4113-b33f-2be8e5675a87",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "93ec6057-12a1-47fb-992a-4d231cde0ea1"
        },
        "item": {
          "id": "5b15aaa9-61bf-4e04-9758-a68a8e5f4ec7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "bcb739c5-13f7-4858-bb1f-37bb49009f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aefe6739-d512-42a1-81d8-209b1edef782",
        "cursor": {
          "ref": "dc44f3ee-cf61-42c2-a57d-ab5d90a23f0b",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c61e21c7-2dae-49e4-9e1e-e5dfd7cc7808"
        },
        "item": {
          "id": "aefe6739-d512-42a1-81d8-209b1edef782",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "82064e75-e589-461b-88cf-5382d3587881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f049238b-80f1-4d09-bc17-fdba8c166a17",
        "cursor": {
          "ref": "c95b7f07-7bd2-4511-bccf-cf5358d5e750",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "73dd15e5-afb7-4ee0-97d2-5028aae04ddd"
        },
        "item": {
          "id": "f049238b-80f1-4d09-bc17-fdba8c166a17",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "62949755-6bdc-4aa9-a967-54027b6e4495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a17c67d-ab66-4ed0-ab15-3bfa4a1780ae",
        "cursor": {
          "ref": "835b0b01-4721-4a8f-8c02-7f2b9f12c61f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b3a5c44a-ca6f-4628-966d-31c64f9a853c"
        },
        "item": {
          "id": "5a17c67d-ab66-4ed0-ab15-3bfa4a1780ae",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e98fcbc7-d7d9-4700-9c0c-739c7eb444cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6b2c4e-c931-4784-a316-2cfc3cc1f5d5",
        "cursor": {
          "ref": "e24c0e42-1b1b-45b5-82f8-866e8d5b5094",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8f1ad435-ce83-4b69-a6ac-dfd5f6f9c739"
        },
        "item": {
          "id": "7d6b2c4e-c931-4784-a316-2cfc3cc1f5d5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9c121960-c9f3-4bf9-b4b9-4f1e3658c21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb62874-d888-46de-8256-5ba28c4531f2",
        "cursor": {
          "ref": "2ba22db5-64dd-4d53-9de6-e209d99bcd4f",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ef133644-76b9-47c0-b592-401a80990a98"
        },
        "item": {
          "id": "9cb62874-d888-46de-8256-5ba28c4531f2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f4636353-19e8-464b-abc5-7d67560e5018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191e29c5-ce1c-444f-99fc-d92631655ee0",
        "cursor": {
          "ref": "bd589d7a-be8c-4f35-b7ea-709c06d1ad40",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3b3ba085-af43-4ce0-b492-4524e322519f"
        },
        "item": {
          "id": "191e29c5-ce1c-444f-99fc-d92631655ee0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cd83d2bd-583e-49a2-afc1-52ffc54678e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ad2314-abf1-4836-99b4-c948b8cd3b13",
        "cursor": {
          "ref": "d2599464-001d-4b98-bbe1-b681602c3f05",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b79f6874-a827-4719-baf1-cadaa63a1b2a"
        },
        "item": {
          "id": "91ad2314-abf1-4836-99b4-c948b8cd3b13",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "64e412d3-55e4-4ffa-97db-d658266a3aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147d2dd3-0c74-4fdf-8421-05360b3fcac0",
        "cursor": {
          "ref": "cec339ac-3c52-4906-82f8-5b3964afe83b",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "568fc5da-9ce4-474c-b7cc-ef69427ab307"
        },
        "item": {
          "id": "147d2dd3-0c74-4fdf-8421-05360b3fcac0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "038040f0-1c93-4252-b4b7-fb807667fe73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dac125-365c-444b-b17b-bb97561a39d5",
        "cursor": {
          "ref": "2713743d-e003-4349-938b-5f5d15dd9946",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "20e15500-9ea0-4b02-812c-6835d1f37744"
        },
        "item": {
          "id": "62dac125-365c-444b-b17b-bb97561a39d5",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7df69e78-769c-4b85-a19e-6f579a136d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2659094b-a715-4599-9cf7-91673be1088f",
        "cursor": {
          "ref": "7e691cc8-2eb1-405f-94bd-1bf2da7caf34",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "270f4842-a429-4612-b5b7-1c70fdc5cea2"
        },
        "item": {
          "id": "2659094b-a715-4599-9cf7-91673be1088f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "61641e4e-b6b8-45ae-9187-0d45bb8064e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d32dc19-ec45-4ab5-bd4b-920fad422208",
        "cursor": {
          "ref": "31d3ddfd-dee6-4b93-a86a-b6e3f78c0fc3",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c0978bc6-93ec-45ca-a040-ee4ecfe032fe"
        },
        "item": {
          "id": "9d32dc19-ec45-4ab5-bd4b-920fad422208",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e0728695-4014-42df-a10e-aad517ec964d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606d7c4f-cc32-4b9b-baeb-9618b9028ebd",
        "cursor": {
          "ref": "4d2188ae-eabb-4ddc-8fae-d2430867a7c4",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9c534c4d-8969-4286-a0bb-42f8019031e3"
        },
        "item": {
          "id": "606d7c4f-cc32-4b9b-baeb-9618b9028ebd",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d800204f-3f77-49cd-b2ff-d6968de3ff3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0d406f-ddf7-45b9-85d8-749a41bbf24a",
        "cursor": {
          "ref": "08b1b7bb-a79e-4584-b7fa-ca344844fa1b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2d70e7da-e41b-4c03-b547-f9984d3a160f"
        },
        "item": {
          "id": "ec0d406f-ddf7-45b9-85d8-749a41bbf24a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "20f3be55-a7f8-464e-8358-bfa855e72b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3e4425-6b1f-4dfe-8129-436dac056bff",
        "cursor": {
          "ref": "c2a9a432-d186-4192-9946-d608b11ea30c",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "279e1cbf-91c4-488e-9f86-e2295233d7da"
        },
        "item": {
          "id": "da3e4425-6b1f-4dfe-8129-436dac056bff",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e67ee7e7-a4b4-4bf4-8a53-a5730d6191cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f979023e-2988-4e9d-bc76-4f801a592a8f",
        "cursor": {
          "ref": "8a7e54f5-1647-43ea-ae1c-b024169da842",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3dba09c3-432d-4981-9e0f-b692b000f926"
        },
        "item": {
          "id": "f979023e-2988-4e9d-bc76-4f801a592a8f",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e802313b-cbdc-406a-b883-a0c1db8a0156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5de289-6779-4fee-ad40-7010df6d67de",
        "cursor": {
          "ref": "83e6b33e-41b7-44ff-9d94-86cc43043ebe",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d8a3605a-6527-4cc7-9efa-cccad6f8d0f3"
        },
        "item": {
          "id": "8d5de289-6779-4fee-ad40-7010df6d67de",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2ae552ba-f7bc-4257-9c68-23d31997d2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0a3ece-f60c-46ff-8021-6e5c21b96df2",
        "cursor": {
          "ref": "af2a4fc3-6263-49c6-973e-b5fd35086aa9",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2362701c-4f79-4940-a598-c2dfced4b0c9"
        },
        "item": {
          "id": "ad0a3ece-f60c-46ff-8021-6e5c21b96df2",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "38424eeb-875c-48e9-8f68-f89135368b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cda27d2-2f48-43ab-a522-503c72679e92",
        "cursor": {
          "ref": "fb489788-aa66-441d-b16a-2c50a0eded15",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d48320e4-09a8-4ea3-a675-2ddb84d54eb9"
        },
        "item": {
          "id": "8cda27d2-2f48-43ab-a522-503c72679e92",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f27bf0d0-253a-4bb7-a60e-1e6758942ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd563f9-be6d-4aa3-b49c-a5811f813720",
        "cursor": {
          "ref": "ddda3c92-b141-4668-ac65-13822919d5ef",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f7345b9a-646d-46ad-a510-27395b32ba42"
        },
        "item": {
          "id": "ffd563f9-be6d-4aa3-b49c-a5811f813720",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d57396e3-0563-4384-a07b-96084dbadbce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056c460e-3fba-488c-a264-617ab3c4bce0",
        "cursor": {
          "ref": "67fd3104-da62-4df8-9f13-c1f9e5ad8fdc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e2b0c142-b051-4ba4-9720-8eeea12fffd4"
        },
        "item": {
          "id": "056c460e-3fba-488c-a264-617ab3c4bce0",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "baea7de3-6d52-4b5d-a2cd-e84f66b303f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07acb437-07c5-4ef2-b93f-5060f52b8a0c",
        "cursor": {
          "ref": "a76bcaaf-d956-4ab9-8a83-8bdcefb6aaa0",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4f53a601-de79-411d-98c1-c1e3b51c06a7"
        },
        "item": {
          "id": "07acb437-07c5-4ef2-b93f-5060f52b8a0c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "29ca9714-2210-4a0b-af2b-639e8eb74e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d576a47-0166-4163-a3d1-fea2147deca9",
        "cursor": {
          "ref": "d0180a72-c44d-4937-87cc-62ed627b5682",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f3817517-865f-408e-9e1a-d871b6512ea9"
        },
        "item": {
          "id": "4d576a47-0166-4163-a3d1-fea2147deca9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "26c3e383-5e25-45db-82cd-d9b29d301971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc2b2cd7-da5c-47a4-b0f7-f24258ff6778",
        "cursor": {
          "ref": "4e56d949-6f1c-4a05-975f-7b111b7e51f1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a805154c-44f9-40ab-9f01-3a20f86f4ab8"
        },
        "item": {
          "id": "fc2b2cd7-da5c-47a4-b0f7-f24258ff6778",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d4d3ceef-b6dc-466d-a2d0-d41ae057fef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de6346b-40f4-46d5-a0ee-1b26e6f7e052",
        "cursor": {
          "ref": "b22cadd4-7af3-4725-b966-7710a07856c0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "406ec851-1b0c-4114-9f7d-4e51d93e957e"
        },
        "item": {
          "id": "4de6346b-40f4-46d5-a0ee-1b26e6f7e052",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7a0bc78a-d143-4249-a377-0100d0e77300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56f1d09-3055-48e6-ae0b-51315ae0c183",
        "cursor": {
          "ref": "f047e8cb-ecb4-4797-957a-d5ae3ddfdabd",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "95667e77-7e42-4d9a-ba02-0e3b77a35fed"
        },
        "item": {
          "id": "a56f1d09-3055-48e6-ae0b-51315ae0c183",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "00b4031d-33dd-469e-aaed-b4be52146580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cfd62f3-cf0b-4aa7-84e9-01f431584355",
        "cursor": {
          "ref": "fdef61b2-e833-4357-88b8-3c5d7087e2a5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "eafcc2bc-b491-42c3-b5b2-4494ffe7b31a"
        },
        "item": {
          "id": "0cfd62f3-cf0b-4aa7-84e9-01f431584355",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7e578b7e-4304-4539-bd5d-84c95f75b411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b548a687-21e7-4705-b145-f7ab241f6048",
        "cursor": {
          "ref": "67dbb608-0423-4395-bc3a-0df1d73a355d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "2ce3800a-5fd9-4c58-9262-cb5d7d298117"
        },
        "item": {
          "id": "b548a687-21e7-4705-b145-f7ab241f6048",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0b12c884-eaa5-462e-963e-b35709aaf9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2802788c-295f-4f5c-9e86-0a536eed3f12",
        "cursor": {
          "ref": "685cad26-f059-403b-bc8c-24e05115a0e3",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "69428b42-4cbc-41aa-8767-bb8a99db9b32"
        },
        "item": {
          "id": "2802788c-295f-4f5c-9e86-0a536eed3f12",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a31005a4-3a51-499a-b25d-a9d4727b66db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3f2868-257d-44dd-ab9d-0ba02fcde1ea",
        "cursor": {
          "ref": "ac75860c-527a-4244-8a5f-ff5312039605",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5f1f009c-453b-4335-8e9f-e3cb4c43ce75"
        },
        "item": {
          "id": "7d3f2868-257d-44dd-ab9d-0ba02fcde1ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9fb84d99-cdd6-4398-8497-1c11fc4ba615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c9942c-7f74-48ad-92f3-6968fce035ea",
        "cursor": {
          "ref": "5069c590-3292-48a1-ab4f-93e4402fa60a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b9322956-7f08-4959-b137-d224b0093b9a"
        },
        "item": {
          "id": "18c9942c-7f74-48ad-92f3-6968fce035ea",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4e9fcd8b-d5b6-4982-9ba6-f9c92cbb7605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc2dbe6-eb66-4653-90a1-9bf45d27c8cc",
        "cursor": {
          "ref": "a3a9475b-bc8f-4bde-a0a9-298e7772c75f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "db6dc045-caf2-4338-ba85-2a91040d456f"
        },
        "item": {
          "id": "5bc2dbe6-eb66-4653-90a1-9bf45d27c8cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b1128b20-054a-40f2-ae35-f14f61eebb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db257da5-41ad-4033-a487-8bb742ad73a5",
        "cursor": {
          "ref": "ae5eda3c-feeb-4440-8683-3b05c38ce123",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1f825356-f437-492f-a047-04818a5450c3"
        },
        "item": {
          "id": "db257da5-41ad-4033-a487-8bb742ad73a5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fe9e7408-bff0-48a9-b726-0d2b5bfc52ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f82cff1-3e1d-404a-bb0e-73766a726f54",
        "cursor": {
          "ref": "5118699f-da30-4046-9bd5-4131ae1d35c1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6f340980-bbf7-4903-bdc7-25f71ed8c6ae"
        },
        "item": {
          "id": "7f82cff1-3e1d-404a-bb0e-73766a726f54",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "4416e910-2692-4fcb-b8b2-d3e1a15d3781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9645dd-25d9-4b2f-8f2a-3d07370310bb",
        "cursor": {
          "ref": "9b51d776-c13c-40ec-a433-87bcb9a2c1b6",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6b48751b-49b5-4e0d-ba50-a23f439d1bf2"
        },
        "item": {
          "id": "cb9645dd-25d9-4b2f-8f2a-3d07370310bb",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1f9a19a5-1702-41e2-b223-e839b3d249ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49724530-7fd7-44f2-aab4-d7240a9b4a85",
        "cursor": {
          "ref": "7fbec8c2-1222-4167-b836-5a3fdfb713aa",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "87f6bb11-d750-4fd4-a49a-347f8ca75411"
        },
        "item": {
          "id": "49724530-7fd7-44f2-aab4-d7240a9b4a85",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "9dc7326c-4731-45b8-bb4b-1d68598cf2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a0aaa3b-362b-4d7c-adc2-0bb481dab9bf",
        "cursor": {
          "ref": "eedf1f4d-30ce-4c64-97da-114604d52345",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0151861a-b5ab-4939-a3e8-63aa6113c82c"
        },
        "item": {
          "id": "3a0aaa3b-362b-4d7c-adc2-0bb481dab9bf",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aab9a2c3-b93b-48d6-ad55-1a400bcecdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3056d01b-4a00-4755-8875-5ba28ee2a68f",
        "cursor": {
          "ref": "50879cf4-91fc-46fc-a4b2-85cdc43e5741",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c4010a4c-d49b-41f2-8330-1b555b311ddf"
        },
        "item": {
          "id": "3056d01b-4a00-4755-8875-5ba28ee2a68f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5524c8c5-16c1-445a-a9b5-6cda06e4088f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b603cf4e-7b9e-4390-b836-d88b65e1494d",
        "cursor": {
          "ref": "61026e24-26a8-490c-a46e-b0d475b6d236",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9522ee20-5d19-43ab-906c-7cfa7f64589d"
        },
        "item": {
          "id": "b603cf4e-7b9e-4390-b836-d88b65e1494d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "88f9918f-d387-4f70-a278-b6e65b366b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1609e0f-201a-4470-a157-98618bd2dfaf",
        "cursor": {
          "ref": "7375f04f-43ac-468f-b4a8-6b030edadffc",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6595aa0e-db35-484a-857c-bcd83fad31d7"
        },
        "item": {
          "id": "c1609e0f-201a-4470-a157-98618bd2dfaf",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "cf75055a-5cc6-4f44-bd82-8525d1c0c389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e72cf8c-9737-4529-b7f6-ec8274eb36c8",
        "cursor": {
          "ref": "6b41a545-7ca3-482f-8a33-11a91c11fb20",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d31a2681-d378-4ffc-b2aa-85dc8b6635d6"
        },
        "item": {
          "id": "9e72cf8c-9737-4529-b7f6-ec8274eb36c8",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1e89bc15-e636-4529-b48a-1bcc69940b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac4b8c4-6dfa-4fc0-add2-152526d0f623",
        "cursor": {
          "ref": "f02e4b2e-dbeb-475d-820c-c01f1bd2fbba",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ebac2d59-e52c-4f8a-9e50-6b44d4eb6534"
        },
        "item": {
          "id": "8ac4b8c4-6dfa-4fc0-add2-152526d0f623",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1060ee2d-b03b-4014-ba02-d67928f3a66b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c9db7-ec01-4398-b974-f495722aade2",
        "cursor": {
          "ref": "13b4edc8-64ec-4beb-a17e-dd9ee925f911",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9924d785-e6d1-4a2b-867d-42ba91fbc73a"
        },
        "item": {
          "id": "e66c9db7-ec01-4398-b974-f495722aade2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b80f41d9-f039-40c5-9fb0-593db93385f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d178a4a6-81c2-4483-9205-4ce2330de9e3",
        "cursor": {
          "ref": "06188f98-d35d-401c-8aff-34428bfc06f3",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "58009b37-f2b5-46de-b821-4f929564710c"
        },
        "item": {
          "id": "d178a4a6-81c2-4483-9205-4ce2330de9e3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "42b700dd-86a4-49bc-b401-de2239feb505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3cc58a0-261b-41e4-9fb5-f68eb8203688",
        "cursor": {
          "ref": "88b63c58-48e1-4e6b-af0a-7e0c1899ff58",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dae78157-1497-46ca-8e48-eaeac1fb89d3"
        },
        "item": {
          "id": "a3cc58a0-261b-41e4-9fb5-f68eb8203688",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a808fa5c-989f-4b75-9208-84b27d477ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b41850b-9063-40ba-b2b3-2fedf80a6bf1",
        "cursor": {
          "ref": "b4663675-84af-4e09-ab76-5ab660fda718",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e5cbdb8e-4405-4671-8de0-1b3790eb3c72"
        },
        "item": {
          "id": "2b41850b-9063-40ba-b2b3-2fedf80a6bf1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6adf2705-9643-4a3f-b1a0-503e47cdc11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a876d50-480c-4f78-a5b7-e6f8cc96d5eb",
        "cursor": {
          "ref": "b2276e61-10ab-46fa-bb00-aa52d3976c4e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "be860c73-916e-4673-8bd9-b688acedf879"
        },
        "item": {
          "id": "3a876d50-480c-4f78-a5b7-e6f8cc96d5eb",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "7e7c50cf-f44a-4f7f-b0a3-0a7086ff349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b41796-05c6-4134-b83d-ee6869624d7f",
        "cursor": {
          "ref": "53bd0e1e-faa8-41e9-ac08-48a014d1496b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "cc1c01b1-61b1-4f15-84d8-e8779e14d620"
        },
        "item": {
          "id": "31b41796-05c6-4134-b83d-ee6869624d7f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "efc14bf1-3bef-4911-b6b9-bff52a2d5957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa43a302-9318-4d19-b6bd-f0cb7ce0ed52",
        "cursor": {
          "ref": "07091cee-a37e-4065-9ef1-eb3e679ca14d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d786f232-3c19-4eb2-b2a8-12a3051f151c"
        },
        "item": {
          "id": "fa43a302-9318-4d19-b6bd-f0cb7ce0ed52",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6df17fa0-0a90-4062-aa06-2c2d656042e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53de244-f762-46c0-97b6-1e778c8a32c9",
        "cursor": {
          "ref": "a8e62ce8-68b2-47e0-bfe9-86e8f72e5d83",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "fd9fccdd-dd93-49d6-9b77-ad4c3c8a2cad"
        },
        "item": {
          "id": "c53de244-f762-46c0-97b6-1e778c8a32c9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "faf4bd17-0541-4c0d-a9b9-4cdee096dffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d7d2eb-88dd-4731-a13e-93e72bce78cb",
        "cursor": {
          "ref": "25556818-1459-49f9-9452-1b0d6889fe73",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "21313dc6-36ef-4fbe-a280-dfa98dc0256a"
        },
        "item": {
          "id": "26d7d2eb-88dd-4731-a13e-93e72bce78cb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "65f5056b-71ec-4765-abc9-1976255edacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8270c2c6-3739-4477-9eb0-a459a0797aeb",
        "cursor": {
          "ref": "ce628a47-86e7-4d4a-9512-b20b21b170b8",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3920ad65-0c6b-4140-8298-0c6da8f9a751"
        },
        "item": {
          "id": "8270c2c6-3739-4477-9eb0-a459a0797aeb",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "371067d9-5cc2-4b6b-bfce-91b692e30884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dd4d00-f1f3-44a5-9192-b0c1580a6189",
        "cursor": {
          "ref": "d47fd5a7-e84e-4d6f-b5e0-d97d1122ff8f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b05f183a-a459-4260-86a2-44a2340dae71"
        },
        "item": {
          "id": "c9dd4d00-f1f3-44a5-9192-b0c1580a6189",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b8f5a71c-c451-4f36-8e94-ea9e4f0d7a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50676dc9-b3fb-42c0-a15f-5f40d28123a4",
        "cursor": {
          "ref": "f82aaeeb-3c0b-4df0-99ed-cef1ddecdce1",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "0d552f86-d111-4f7c-b157-2e59887be5bd"
        },
        "item": {
          "id": "50676dc9-b3fb-42c0-a15f-5f40d28123a4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f84ae546-2bbe-4653-af42-ddbd95c9e85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f877823a-07f4-4f15-9bf8-3c891a9f4a84",
        "cursor": {
          "ref": "63e20614-27f0-4fb9-830c-374130fee696",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "89c6fec3-b23b-4e15-a21b-c45cf9e4a60b"
        },
        "item": {
          "id": "f877823a-07f4-4f15-9bf8-3c891a9f4a84",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "12268a3a-17bf-4ef4-8cab-21787dd8b36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0837d4-9dbd-4a70-9101-cd5c7c69ce49",
        "cursor": {
          "ref": "c61ba03a-c59e-4bb2-824d-b3f566d4d954",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "390257bf-a346-4b58-8337-985cf62e6833"
        },
        "item": {
          "id": "8f0837d4-9dbd-4a70-9101-cd5c7c69ce49",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a513904f-f229-48b3-bd3d-da8e9a4843a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e99363-a54f-4a6a-9641-518abdebae18",
        "cursor": {
          "ref": "a8776a48-54f5-4ba6-91ec-63e424b28850",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e3f7bbec-ee88-46a1-b9f6-fb0f45feaf7d"
        },
        "item": {
          "id": "98e99363-a54f-4a6a-9641-518abdebae18",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "144334ad-b643-4916-a521-8817a3d2dd68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e960ead-049c-4f5b-9fe3-9393c62e694d",
        "cursor": {
          "ref": "8b9589be-a41b-420d-b0fe-7295ce31d0c4",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0ac94c4c-3c70-45fb-a9b8-cb2a139171c0"
        },
        "item": {
          "id": "6e960ead-049c-4f5b-9fe3-9393c62e694d",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "22456a8c-32db-4a5a-9829-ed2e873fb602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7828e994-e68a-45d7-a4c2-bdcc0a95d07e",
        "cursor": {
          "ref": "8ae09d77-d4b6-4dff-bbb8-680d1481586e",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5fa4d8aa-f6a9-4919-ad13-3feded3482dc"
        },
        "item": {
          "id": "7828e994-e68a-45d7-a4c2-bdcc0a95d07e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1968d040-b7e5-4c03-a55e-4629ebe0d250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317cb2d8-a3a1-49ad-be87-36a0e68da713",
        "cursor": {
          "ref": "95384cef-4e24-4e50-8954-23eaad6d5212",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d081f70b-4819-4ffa-9108-b80d85c361b4"
        },
        "item": {
          "id": "317cb2d8-a3a1-49ad-be87-36a0e68da713",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f4cba6cc-bfa4-4861-ae5d-e58587261f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae2dd61-b6e4-4268-be88-b6a5f5b8241e",
        "cursor": {
          "ref": "3fe59ede-57c6-4b58-83d4-ee61e4dfe3a2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "81204db0-6edb-4c49-98cd-833d4f491c9b"
        },
        "item": {
          "id": "3ae2dd61-b6e4-4268-be88-b6a5f5b8241e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "afd6363e-790a-43cc-97b3-74b9508ed19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e84ee6-1e3d-4009-b597-0f3716bca668",
        "cursor": {
          "ref": "a085d476-0d55-45e4-8815-f9ef31336dbc",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "883af8ac-3edb-4a13-ba64-b61dd03b743b"
        },
        "item": {
          "id": "85e84ee6-1e3d-4009-b597-0f3716bca668",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dbb6dbf2-bba8-4b16-8116-51a45d56981d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8782608-6b2b-4659-ba39-c577a1f89e4c",
        "cursor": {
          "ref": "26d81c16-e204-40b6-afd3-7f76c5be32f6",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c536b6e1-5e8f-4798-b440-9b24f993d967"
        },
        "item": {
          "id": "a8782608-6b2b-4659-ba39-c577a1f89e4c",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "76dc9fca-3839-4401-ab27-5ee0520960bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef00a4d0-4e82-4eb2-a0d5-5a5f8334a0ea",
        "cursor": {
          "ref": "29655705-c002-435c-a83f-6f80d31a5f27",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fa916b7e-895f-4096-8173-6d927bf30be4"
        },
        "item": {
          "id": "ef00a4d0-4e82-4eb2-a0d5-5a5f8334a0ea",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8af49e05-877c-4e37-90bf-e6fbe542177a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba12635-fafd-4c89-82e9-655d0f780bbc",
        "cursor": {
          "ref": "e745b9af-8018-4452-8eb2-23754b354990",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "75e46195-ba78-4429-adae-c0e3ab33e20a"
        },
        "item": {
          "id": "6ba12635-fafd-4c89-82e9-655d0f780bbc",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4eabfcab-f771-4127-b3cb-0881d1ea0686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "e0e2a260-f622-4e5a-83f8-422cd6a8d8aa",
        "cursor": {
          "ref": "83f491df-e0dc-4d04-83a6-9241224ae815",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "2107c939-0009-4a5d-8c5f-cde540db9eaa"
        },
        "item": {
          "id": "e0e2a260-f622-4e5a-83f8-422cd6a8d8aa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "06d8e696-806d-4eaa-a151-8efa5f378e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0fa2ac90-4195-4448-9ff6-c03bc46d6073",
        "cursor": {
          "ref": "38aacd74-b25c-4ee7-ba4d-e3dfff935f65",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2ac7f5c7-d663-4759-a46e-127f9284c2c8"
        },
        "item": {
          "id": "0fa2ac90-4195-4448-9ff6-c03bc46d6073",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "91b6a95c-72ec-4b80-acc5-c0bb35337c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d26a3df0-af34-45fd-bc2a-e27dc4414114",
        "cursor": {
          "ref": "981fbf21-2216-4014-869f-1dde0d5ee543",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "33d47c55-c2e3-47c4-b07a-49379859d5d9"
        },
        "item": {
          "id": "d26a3df0-af34-45fd-bc2a-e27dc4414114",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8bb572e2-e71d-4f6f-a6c9-0399bbfb9504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "dc2cb590-e555-4c88-9229-fc41fa24b599",
        "cursor": {
          "ref": "c489ba22-4d85-4e53-b56c-c467a6cd4a17",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f936e642-51ea-45fc-89d1-43ba026bae82"
        },
        "item": {
          "id": "dc2cb590-e555-4c88-9229-fc41fa24b599",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3796ec12-585b-45cd-ac4a-61ebab13af11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "eb3e51a4-c59c-4b78-a839-2fdff6f8a640",
        "cursor": {
          "ref": "8ee02a6c-6fbc-4c08-94c5-90d648a55a84",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "25eae3d0-01f2-4cc2-a7af-004fdbabc18d"
        },
        "item": {
          "id": "eb3e51a4-c59c-4b78-a839-2fdff6f8a640",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f7e53c28-71a5-4bc6-a621-007cf78a25a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c0a6d28e-6674-4c30-83a2-350283b9b459",
        "cursor": {
          "ref": "59725114-c937-44d2-8093-6877342d7fa2",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "83db978b-f03c-4ad1-b676-2fa1e53b2900"
        },
        "item": {
          "id": "c0a6d28e-6674-4c30-83a2-350283b9b459",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ad744e91-46ae-4653-84bd-40867aae7bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "1b59b919-0463-4297-9561-210549fcebb5",
        "cursor": {
          "ref": "95a2a599-e651-4959-9343-8a818a10e1ce",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "73957a59-6255-4378-bddb-07decbda8308"
        },
        "item": {
          "id": "1b59b919-0463-4297-9561-210549fcebb5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7d9d718a-d8ef-4bd7-a5e9-53609b799300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d812e60-a434-4bbb-8016-a6dd4c7eaf75",
        "cursor": {
          "ref": "8f0bd580-36ce-47c5-9f93-83aea0b49993",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0b1693fe-0e00-42c0-ae58-48151be106b6"
        },
        "item": {
          "id": "0d812e60-a434-4bbb-8016-a6dd4c7eaf75",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6dd98ba5-38a8-4dfb-873f-e6967012b284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dada5a2d-85b6-45f5-b0fc-5c7cd6e81b4f",
        "cursor": {
          "ref": "645d6638-8de0-4b1e-98d4-704b03836d6a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4f11a579-811a-4b34-a125-574f5b1b2b58"
        },
        "item": {
          "id": "dada5a2d-85b6-45f5-b0fc-5c7cd6e81b4f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b2d6a4ca-309f-46f5-8fd7-d801e869a2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d886e88c-1bba-4e1b-9451-b96d7d485e99",
        "cursor": {
          "ref": "9a717522-25c4-4267-b091-3609ea134ac3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "abeb3c0b-3df7-4d7b-8abf-ca600881a6bc"
        },
        "item": {
          "id": "d886e88c-1bba-4e1b-9451-b96d7d485e99",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4019d5ec-35e2-44ed-8c02-e433719e4261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6a35617-8cc1-4f29-b68b-7512af8687ac",
        "cursor": {
          "ref": "b43a4f4e-ae5e-42f1-80e0-ffa3c416ddab",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "206170a3-9f27-40bb-8126-5d164d19758d"
        },
        "item": {
          "id": "a6a35617-8cc1-4f29-b68b-7512af8687ac",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "77be4131-e53a-4e9c-8709-cba6abec8855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b427b-bb29-48f3-9ea2-be2f89e6bd39",
        "cursor": {
          "ref": "5932cc31-e753-4b2a-9416-2d8bfb101df9",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5f19d6ef-4a4f-4178-b528-283544eccdfe"
        },
        "item": {
          "id": "4e5b427b-bb29-48f3-9ea2-be2f89e6bd39",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0fd4f446-b382-4cfc-b5f0-53c97ef65894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814cc12d-eaa4-4f2d-a6b6-9c76cb5cd60e",
        "cursor": {
          "ref": "26f570f3-ac6a-4045-b26f-34205ca7c4b3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3f8ea463-d1d6-40bd-bc7e-a01da4ef9f80"
        },
        "item": {
          "id": "814cc12d-eaa4-4f2d-a6b6-9c76cb5cd60e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "611635ee-6025-4dc8-8414-524e6fb515b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378e5568-1649-4fe3-a3c1-6d2cc66c2499",
        "cursor": {
          "ref": "48e504ce-d11c-4021-9596-7c7dac72dc07",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "627d3777-a865-4dd2-8124-be4e73062427"
        },
        "item": {
          "id": "378e5568-1649-4fe3-a3c1-6d2cc66c2499",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8263f160-51fe-4699-86f2-24d3d6e40d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf59059-1fc5-4195-9af8-142c7cba068d",
        "cursor": {
          "ref": "5fe6be88-87ce-4a95-ad51-7b8fec9e151e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f8f9a43a-f7c3-457c-9599-62510e2e7dcd"
        },
        "item": {
          "id": "acf59059-1fc5-4195-9af8-142c7cba068d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1e507728-47a7-45d7-9b93-314b9aef2a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362b6462-b006-403b-bf49-87f54e59b6ab",
        "cursor": {
          "ref": "7942c820-2a52-461d-9435-10e72a354ce3",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3be4557f-4a3b-4e5d-bf07-f2d4abd399dd"
        },
        "item": {
          "id": "362b6462-b006-403b-bf49-87f54e59b6ab",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e99e8e14-030a-454c-8742-c40aff3cdb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e861c163-1dc0-47b9-b2dc-f9c6f3a44106",
        "cursor": {
          "ref": "c0de62da-4bff-4a67-8f46-ce8854e1f8d7",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "63963c1d-7053-4d78-bea3-5d8e3e02176b"
        },
        "item": {
          "id": "e861c163-1dc0-47b9-b2dc-f9c6f3a44106",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "87d92e82-6d45-43b8-aacb-33bfa777a714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76efc733-7827-4867-b05a-0ec51f4a1c21",
        "cursor": {
          "ref": "5cc3bfa0-d76b-4abd-a4c2-96c756be4c05",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "94bdcde0-ce5b-47a1-bcd5-0225ce03225e"
        },
        "item": {
          "id": "76efc733-7827-4867-b05a-0ec51f4a1c21",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7ebda2c2-2fcd-4f20-8272-6076ce1f989f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5b2850-9251-40e9-8b25-5e525fad4b4c",
        "cursor": {
          "ref": "f62a732f-b351-4d64-a637-74e0b80fa388",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "8ba487d0-35c8-4e5a-b818-d838081e0823"
        },
        "item": {
          "id": "2b5b2850-9251-40e9-8b25-5e525fad4b4c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7956327c-7eed-4bec-a0a1-92d3aacecd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc2daad-75b5-4818-82f9-a1d6691d51bd",
        "cursor": {
          "ref": "350ae4b4-aed2-477a-9c5d-a7070e84394e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "930a48e4-8492-4e6c-9373-21154d9284b2"
        },
        "item": {
          "id": "fbc2daad-75b5-4818-82f9-a1d6691d51bd",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ce233b9b-8ef7-41e6-a860-2b923d4e2f0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b70897-af04-4e9b-8307-32403c8de8b1",
        "cursor": {
          "ref": "05215ae8-7695-4453-9b46-0cd7ab574223",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4a6912bf-e309-41ae-bebd-b81c42d79914"
        },
        "item": {
          "id": "34b70897-af04-4e9b-8307-32403c8de8b1",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "afb98b28-fc1f-4161-98a0-76b6668b6463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4656f8c-00f8-4e44-af55-29cd09dd5bea",
        "cursor": {
          "ref": "8b0d2b80-10b1-48b8-81de-0ce3037158e0",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6ea335a1-3040-4b1f-9dd1-72af7f868994"
        },
        "item": {
          "id": "a4656f8c-00f8-4e44-af55-29cd09dd5bea",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0c718f0d-2e30-4101-a61b-918a3f9a4667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21c5c58-b6ae-4b12-98c2-288c0bad92ec",
        "cursor": {
          "ref": "87c88ce1-1534-4adb-969c-43f188c035d5",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d4a891a1-69bd-4255-8a6c-5249cbc024b1"
        },
        "item": {
          "id": "f21c5c58-b6ae-4b12-98c2-288c0bad92ec",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "40d61ef1-a7bb-4c30-a01b-21fa040aea28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dade87ae-983d-4cb4-bf21-36d1c1dfaa69",
        "cursor": {
          "ref": "e13b7b5d-4b98-449f-84ac-631beb493252",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "68085c4b-6677-4fea-9f68-496d243b9112"
        },
        "item": {
          "id": "dade87ae-983d-4cb4-bf21-36d1c1dfaa69",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8556cb2f-61c7-47ea-a82e-004591763a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2292cd02-326b-4a58-9a8e-5c34289aea53",
        "cursor": {
          "ref": "a4bd97b0-ee41-4281-938d-80f8a06bdb4c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "88fcf914-79af-4682-aed2-cd9e32e695dd"
        },
        "item": {
          "id": "2292cd02-326b-4a58-9a8e-5c34289aea53",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f120b2a5-4c2d-476e-9f6e-081f5b71ef33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdff6859-d49e-4bda-a97d-76c5650cd80b",
        "cursor": {
          "ref": "7d3edaf8-e7e1-407f-bafb-dd7a11075632",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d9db34b0-e9dd-41ed-ad93-dab412bd9094"
        },
        "item": {
          "id": "bdff6859-d49e-4bda-a97d-76c5650cd80b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b182e209-49b8-4dad-aa81-32830c3c0626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edb92cb-539f-48de-9db7-6a5a7e0415de",
        "cursor": {
          "ref": "35aa98f8-ac22-43f7-95e9-4f31c57122ba",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f7bde91c-6b98-4801-9bb1-e48c0dfbf782"
        },
        "item": {
          "id": "0edb92cb-539f-48de-9db7-6a5a7e0415de",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "794c46a7-e6d5-4c77-9a2b-93202a3c572b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cbbe25-4130-4f26-9871-9cc976d8b669",
        "cursor": {
          "ref": "34244d5f-7b22-4d2c-93fa-de8945f4b608",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "955ea254-1b78-45e7-8f19-c7f5923fe5c2"
        },
        "item": {
          "id": "24cbbe25-4130-4f26-9871-9cc976d8b669",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "048fc8b8-7f7c-4f21-898e-9495dcdbde1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98068d5e-348b-41db-92f8-8a84680a09ba",
        "cursor": {
          "ref": "71b17b51-f2ac-40a8-9ca4-6cc8f1f58edf",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e154f3f3-3380-49ad-8b4d-3c95eac54750"
        },
        "item": {
          "id": "98068d5e-348b-41db-92f8-8a84680a09ba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "490bb825-c10d-4b67-9aea-97734bd435dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64dbe84-49ed-4ce7-b130-d26e76ac0922",
        "cursor": {
          "ref": "b6209a64-993b-40e9-ad76-453d4f2f5c3b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d3e383e3-2190-4717-8b89-7638fec1c708"
        },
        "item": {
          "id": "f64dbe84-49ed-4ce7-b130-d26e76ac0922",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0b5a78f3-f8c3-428d-a21f-f03a578172a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f68496-9b20-4799-95ac-fc3119fd27f1",
        "cursor": {
          "ref": "1666fa00-6e49-4ffe-98d0-790e5ca9ac21",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "1585ba50-40af-41c1-be7d-fcccb4146bf0"
        },
        "item": {
          "id": "74f68496-9b20-4799-95ac-fc3119fd27f1",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a3828376-1b5d-43b6-a662-ca727d18f02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac4a741-1c72-4af1-8c95-8d24ffda2182",
        "cursor": {
          "ref": "54cbd850-bec0-44fe-aaad-cca8490c44f9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "102177d4-c85b-48d4-a83d-e9e71fb13e07"
        },
        "item": {
          "id": "6ac4a741-1c72-4af1-8c95-8d24ffda2182",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "22651d3b-88e7-485a-9a53-3e890e9098a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef6a548-2311-4892-830f-e2ada333b322",
        "cursor": {
          "ref": "f085eaee-4a42-4fed-82af-7592c72c0dfd",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e51a77bb-4774-456b-b65f-69206165f9ce"
        },
        "item": {
          "id": "8ef6a548-2311-4892-830f-e2ada333b322",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "45951c6b-9ca6-49c6-ae3e-2aa98747cd72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe23f98-a666-4ba6-9b83-06ad08cfb673",
        "cursor": {
          "ref": "17d11fa6-8005-45b0-b144-56c0db99c734",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c076fb90-33b8-4d5e-bc14-fbc13ae9a880"
        },
        "item": {
          "id": "6fe23f98-a666-4ba6-9b83-06ad08cfb673",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "50b64e9a-279b-4d3a-88db-771a0c52211a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0866aec6-100a-4ee5-aad1-12725b1b5bc1",
        "cursor": {
          "ref": "4d343954-13fe-4b65-b473-25800e4167b6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9bfb8550-f153-4e5b-bc40-6f66a48b748e"
        },
        "item": {
          "id": "0866aec6-100a-4ee5-aad1-12725b1b5bc1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5eaf086d-b67a-4867-8817-7426c30643fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd981e9-c1c8-4bdf-97d1-3362d72ada71",
        "cursor": {
          "ref": "82679ee6-4826-4eaa-85e2-8adab796d7de",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d78cb7a6-68a4-4e44-bdbd-a4f166dd4187"
        },
        "item": {
          "id": "1dd981e9-c1c8-4bdf-97d1-3362d72ada71",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "99b0ebaf-25f3-4a75-8f13-7ba11d78f486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359c5c8f-57ee-4f1e-b5b8-894e83956369",
        "cursor": {
          "ref": "9beced36-7f64-412d-91fc-335edacacf2f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f60ac9cf-a57c-418a-91e8-aa49e3fc3269"
        },
        "item": {
          "id": "359c5c8f-57ee-4f1e-b5b8-894e83956369",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d0435d93-c424-45cf-b090-900ff9e6a613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59262bf8-d106-4c3f-9103-ecf247be690f",
        "cursor": {
          "ref": "074bbba6-7d1f-4d1d-b301-57c1407c0fb4",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "28029e49-8f3e-41ef-b9b3-b3c2d97e03b0"
        },
        "item": {
          "id": "59262bf8-d106-4c3f-9103-ecf247be690f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "88db5f90-7aa7-4d09-92a3-9e6241820a37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca55d8bf-eb56-47a8-b112-43d19217a783",
        "cursor": {
          "ref": "f4f85309-33ee-41e5-9bd8-9ba34f5f0133",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4ecb96b7-562d-4882-9f1b-89af82477506"
        },
        "item": {
          "id": "ca55d8bf-eb56-47a8-b112-43d19217a783",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5710ba24-8776-437b-a3e5-a86bfbc406bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79b4804-72f6-46ef-8b16-6a9e8a80b0ed",
        "cursor": {
          "ref": "9f53612d-6b26-44c4-9414-28553add8864",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "76841a36-3edb-4f3d-9d4f-20b56592dd97"
        },
        "item": {
          "id": "d79b4804-72f6-46ef-8b16-6a9e8a80b0ed",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "51ce5cbf-2801-463c-8241-a7491478c4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af08711-f63d-41aa-950d-d48294b42096",
        "cursor": {
          "ref": "a80643f9-e244-4795-94d8-71e3e8c078b4",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d177bc6a-448f-4577-9023-0c8d1972665e"
        },
        "item": {
          "id": "6af08711-f63d-41aa-950d-d48294b42096",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1a5c7aa7-b2cf-4267-9475-cc4fa5ecfb5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30187d76-4e02-4304-a8ed-420a52c74690",
        "cursor": {
          "ref": "3017732b-64c8-41a4-8a61-2819ff4d53e3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "24fa09c4-a5d1-4df8-837c-bddb638060f0"
        },
        "item": {
          "id": "30187d76-4e02-4304-a8ed-420a52c74690",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "00fe4d9c-0c66-4c05-8d38-1da1f7bf8c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc6d39b-cb0a-4d0a-a19d-8d8718bfd222",
        "cursor": {
          "ref": "9823aa24-44d1-44e6-9c89-771530de3c64",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "69e708a9-d7eb-4d92-b5e6-43de4b0262b6"
        },
        "item": {
          "id": "fbc6d39b-cb0a-4d0a-a19d-8d8718bfd222",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "6eb8bb97-bb32-4ba8-8c82-188c7e344501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2b4acd-f52d-448b-b6f2-dd9f70d7e477",
        "cursor": {
          "ref": "e4f9accf-93cb-45fb-8b5c-a801fb19af7d",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "99ab2c7b-9263-41a1-bf59-8ccd960746e8"
        },
        "item": {
          "id": "2f2b4acd-f52d-448b-b6f2-dd9f70d7e477",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cd8fd681-fe5d-4527-8cea-3afd1f85b191",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996e01fc-1a1f-45a4-811b-d8acf923c3bd",
        "cursor": {
          "ref": "3214c4f1-04df-47cd-b1aa-2e17280850e2",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "07f2b3b7-c1eb-497a-bfad-d1e2ec9ba501"
        },
        "item": {
          "id": "996e01fc-1a1f-45a4-811b-d8acf923c3bd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd1bc608-5eab-42d9-9398-67ecc9464f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8185e7-3927-4abd-98e3-3dccd6ab045f",
        "cursor": {
          "ref": "83628e9e-c62a-44a9-9ef1-a8ae5ca450b6",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "47cd2bc2-a858-40fd-b3b3-88a8728a9a2a"
        },
        "item": {
          "id": "4d8185e7-3927-4abd-98e3-3dccd6ab045f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "98e6c16d-3892-4929-9533-1b325a673517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcb952d-0bcb-49e9-87b7-3178f6aa8ed9",
        "cursor": {
          "ref": "8111dd7a-9c60-4fa6-adf6-a10a38814209",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9160176f-043f-4306-b26d-779d1563131c"
        },
        "item": {
          "id": "1fcb952d-0bcb-49e9-87b7-3178f6aa8ed9",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a460795c-8493-44d1-bb43-614f71b94e6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11bfbef-e407-4d59-a2bf-28f6519b8b32",
        "cursor": {
          "ref": "7ff80e38-c47e-4297-9315-06db9f82ce69",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "40cffd58-c0e8-4bb0-b629-5991f4713d3f"
        },
        "item": {
          "id": "a11bfbef-e407-4d59-a2bf-28f6519b8b32",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a2216664-ee93-4b0d-ae32-66bc2010e434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9747d7-2669-4298-8e8a-fb755ff7257c",
        "cursor": {
          "ref": "1cc4749a-9f08-46b1-a196-5fdcb9ccb4ba",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "88d62d38-d59e-45c2-bb5a-f05cb9fd69f6"
        },
        "item": {
          "id": "eb9747d7-2669-4298-8e8a-fb755ff7257c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ada0547d-f9d3-491a-a13c-0168ce93c8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6898ceb7-7bac-44b6-a038-b1a6cd3ce702",
        "cursor": {
          "ref": "e4b5d656-e4bf-48dd-8df8-cc050a18372c",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9758518b-da1f-4919-a5f9-74d8de3e5167"
        },
        "item": {
          "id": "6898ceb7-7bac-44b6-a038-b1a6cd3ce702",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a748d73b-8e25-43cb-b34f-9569d1c1b6fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23f07ca-bca9-4e65-8eee-08f8bfbd8fa5",
        "cursor": {
          "ref": "c7659c47-b3d6-4344-b217-943c9c4c8ea8",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "87cda6e3-3f07-4f16-a8b2-6104b989074d"
        },
        "item": {
          "id": "a23f07ca-bca9-4e65-8eee-08f8bfbd8fa5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "996fd592-1576-42d7-8a6b-90c934390bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61c4bf3-3c0b-47a2-a9d9-7bc87eab3a25",
        "cursor": {
          "ref": "14deb10a-00b2-4e35-a005-b00de6e5c82d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6e59d86a-1351-485c-9538-63c079ae93a2"
        },
        "item": {
          "id": "d61c4bf3-3c0b-47a2-a9d9-7bc87eab3a25",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "33208670-3b57-4014-a848-2539cca66f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6b2768-b59d-4763-8b68-9471ecdfcb80",
        "cursor": {
          "ref": "e7a835ff-2996-41d0-972b-dba547c49448",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ed716ffe-c346-4143-93cd-1209e88d4a28"
        },
        "item": {
          "id": "5f6b2768-b59d-4763-8b68-9471ecdfcb80",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "504a3688-77de-4f70-9556-d2641dc28e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95bbe18-8d16-4845-881d-b7490ce71254",
        "cursor": {
          "ref": "654f57d4-da50-4d79-8028-ba5de7f96bc1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f709aeca-39e2-4850-abe9-15002ebc71a2"
        },
        "item": {
          "id": "f95bbe18-8d16-4845-881d-b7490ce71254",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e104a379-c70d-4fb7-b0b4-752311958d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d96de4a-118b-42a4-b532-581484a90fb4",
        "cursor": {
          "ref": "1b956359-606b-4a5e-be9e-8b697f103a1c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bc40b4f4-d1e9-425a-8512-f595096f3645"
        },
        "item": {
          "id": "9d96de4a-118b-42a4-b532-581484a90fb4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5b812e2d-0f47-413d-8e53-1dde7f2be7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ac75f1-fddf-4258-98fd-9386e7c03183",
        "cursor": {
          "ref": "49ac9782-e54f-45b2-9713-47802e81ea5e",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c8df7819-61d6-4425-90b0-7b3f4f8018da"
        },
        "item": {
          "id": "b2ac75f1-fddf-4258-98fd-9386e7c03183",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0257daf1-9688-4685-92fa-2257f7f15157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2848bbb9-96da-4e0f-92fd-bad8f0997b00",
        "cursor": {
          "ref": "2d8e9f91-5a23-4836-9b09-487b6c158951",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "773e4560-39a2-418e-8bfd-22a686633620"
        },
        "item": {
          "id": "2848bbb9-96da-4e0f-92fd-bad8f0997b00",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "66b3150b-69e3-47a7-bd46-5110e6e5c45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdc0964-cfed-4b58-b697-f76f6d114b8d",
        "cursor": {
          "ref": "efb957c4-11cd-4e16-b29d-c3b45265f369",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "614ec792-f70f-496d-9523-bb4e5305644a"
        },
        "item": {
          "id": "7bdc0964-cfed-4b58-b697-f76f6d114b8d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "938f1a3d-5c06-4ab7-b173-d511b9206d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aed6448-3f02-42b1-bf81-48e42abfe421",
        "cursor": {
          "ref": "a2ac2808-24b5-4f35-90ba-e1ebdbe4ae32",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d6a32eeb-ea83-414c-ac75-0efb7fb62195"
        },
        "item": {
          "id": "4aed6448-3f02-42b1-bf81-48e42abfe421",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6dd77f7a-de05-4348-b6c3-4b166257acdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee2516ff-9af8-4536-ac1a-e5055781de41",
        "cursor": {
          "ref": "47f53b26-f6ce-458f-9ba5-28039dced13e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "38cc3b10-35ee-42fb-b40f-1667a1bceafb"
        },
        "item": {
          "id": "ee2516ff-9af8-4536-ac1a-e5055781de41",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "79caed40-77ff-4f6c-b08a-f54feb3dd089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170edc86-5cfe-4c74-ab7c-dc882bd53a02",
        "cursor": {
          "ref": "892b1c59-3266-4a9e-8e83-afce1a127851",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9c496663-ffb5-441e-9b77-c4c9ced2ecfc"
        },
        "item": {
          "id": "170edc86-5cfe-4c74-ab7c-dc882bd53a02",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "976706ab-447d-4d6b-a6ff-cb7f87720bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c6e1492-eaaf-4747-aff4-eb21a609133c",
        "cursor": {
          "ref": "f1caf341-a043-429b-8303-ba16744598a3",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "20ef160d-8ba7-42ac-8d67-0d334d9437e4"
        },
        "item": {
          "id": "4c6e1492-eaaf-4747-aff4-eb21a609133c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e0e46898-883e-41aa-903a-093de2bd025a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557c5f80-fc62-409a-840d-78d46f86e43f",
        "cursor": {
          "ref": "ef207780-a6f0-4bd8-99f8-448e0042f4e7",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e48cc5ad-3494-438f-95e0-101e4757161c"
        },
        "item": {
          "id": "557c5f80-fc62-409a-840d-78d46f86e43f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "9b91dde2-f5c6-408b-b10b-2d46256caae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b16d11-dd00-4f58-aafe-fd80b5ad8549",
        "cursor": {
          "ref": "425edfab-0420-43c9-bda8-5612dbb7ba3d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4d98d175-df68-4a23-940f-ff1a13cfd65c"
        },
        "item": {
          "id": "f4b16d11-dd00-4f58-aafe-fd80b5ad8549",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b11eea68-dfbc-41d6-9f9c-1664b24b1d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e933de9-c607-48aa-bb9a-3008f0cfea7f",
        "cursor": {
          "ref": "3ba62ab7-2a41-4a31-9d5d-43a29cadf07f",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "2de10470-ef2f-4bc6-8711-1df7cec1c99e"
        },
        "item": {
          "id": "0e933de9-c607-48aa-bb9a-3008f0cfea7f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "17a468b3-1b6a-4228-974b-aaa402e6f824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e786d189-c26e-4122-bb1d-66dbe7f7f77c",
        "cursor": {
          "ref": "83b6c56a-d3d5-4f35-b67d-03360ac23f69",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2b5848c2-4b75-477b-ade7-8b72fdd27acf"
        },
        "item": {
          "id": "e786d189-c26e-4122-bb1d-66dbe7f7f77c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "727bb901-7e92-4f78-b524-e691555c30f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6a8d99b-fee1-4ffe-99be-823e6abb9bae",
        "cursor": {
          "ref": "195ecc62-872d-4f54-957f-cc093fa03f4e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f9a2e062-dc78-4799-b8ab-54f429398da6"
        },
        "item": {
          "id": "f6a8d99b-fee1-4ffe-99be-823e6abb9bae",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "28214dec-fe94-4fda-a522-56b545058350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd29b895-9f10-4a43-8b65-0391bf9ee887",
        "cursor": {
          "ref": "d368342b-f3a0-4954-8551-ac9114570c39",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1227d673-f4d8-4e29-b9bd-0e633d45d02e"
        },
        "item": {
          "id": "dd29b895-9f10-4a43-8b65-0391bf9ee887",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0a100604-7d80-4aed-a4ff-5eb18d021cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77a6404-31f4-42e6-9669-e8f94bf038a5",
        "cursor": {
          "ref": "d4b966fb-c3e5-4959-89ef-cfae0762ac16",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "407ad9a9-1354-43c8-be31-06e85714c64e"
        },
        "item": {
          "id": "c77a6404-31f4-42e6-9669-e8f94bf038a5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "83b5318c-9504-4582-9f05-a47e80633c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89009ef7-e064-44a3-ac32-51c76587d6e7",
        "cursor": {
          "ref": "b05b3f1c-565c-45ee-8854-149b0a558876",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2cd54685-500e-4975-94bb-082c93baa7a0"
        },
        "item": {
          "id": "89009ef7-e064-44a3-ac32-51c76587d6e7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9e31ff10-4847-4583-8285-2e73e9de380d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8ac7e2-aff6-4f73-9f90-134b264c5a3b",
        "cursor": {
          "ref": "82bda02a-3cce-434a-9641-94992af19d57",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1c9d0b97-287f-41b1-95b5-f5012a533e55"
        },
        "item": {
          "id": "2a8ac7e2-aff6-4f73-9f90-134b264c5a3b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bee1280c-0f43-4641-8aca-50b997eb747a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54ee122-369d-42fb-9478-b89caef0728f",
        "cursor": {
          "ref": "6aa5f6ee-57d2-4e36-8ad7-cfe9622bb1aa",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "041381a1-cd19-4c43-8123-bcb51ce30ba4"
        },
        "item": {
          "id": "a54ee122-369d-42fb-9478-b89caef0728f",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e2c88612-3b29-4b41-8e45-757af70e7a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e37bc0-942b-4f3a-806d-f1a89504657b",
        "cursor": {
          "ref": "482ed3c4-5f3b-4799-9c43-d9589c621243",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "78e01575-1732-4d2e-8e34-4c15f586777f"
        },
        "item": {
          "id": "94e37bc0-942b-4f3a-806d-f1a89504657b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d14995dc-6a0c-4efb-b872-de2bab95abe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3eb3d78-69a4-4a1f-9af4-7604452f2a3c",
        "cursor": {
          "ref": "62e09853-93ee-4e31-ac70-ade86ed8eedc",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "26e9c231-f03f-4ab2-9af0-7dd5b4738a1e"
        },
        "item": {
          "id": "c3eb3d78-69a4-4a1f-9af4-7604452f2a3c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f3dca802-31e0-49eb-9330-91a82532c7d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bedd6c55-5011-4fa0-a842-b3462162de62",
        "cursor": {
          "ref": "f3720efe-34ca-4727-b36c-86d50c54d47f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a3ace4c3-8ba3-44a6-a380-532cb8323b34"
        },
        "item": {
          "id": "bedd6c55-5011-4fa0-a842-b3462162de62",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ee45cbc7-584a-4546-9c94-3b19c132b268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ad7669-f67c-4a4d-b58a-b336d75d774a",
        "cursor": {
          "ref": "3c457f38-2b08-487f-92df-4ccff30602ac",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "92643e49-0229-4ebb-b871-9ac83b7d2174"
        },
        "item": {
          "id": "80ad7669-f67c-4a4d-b58a-b336d75d774a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a4e07696-ef6a-486c-9400-cd40408c2473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c0c36d-d1d0-41d4-b807-f817570544ad",
        "cursor": {
          "ref": "b715cb2f-eb4b-4812-8514-445014262476",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0f40bbce-9997-476b-8b3c-ae4c01c91bd4"
        },
        "item": {
          "id": "08c0c36d-d1d0-41d4-b807-f817570544ad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "12fb4916-68b6-46f9-abcd-bca2fe48a27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb996818-cc09-4821-aaf2-f5d7248fca5b",
        "cursor": {
          "ref": "422742c5-ac3f-4a5c-a8a4-df9657a7df34",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0e16162c-d2a1-40c7-a64e-f0766bd45b97"
        },
        "item": {
          "id": "cb996818-cc09-4821-aaf2-f5d7248fca5b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "866222ad-27b8-4006-a47d-4a318ba5aa71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89a1a28-fd24-4cbe-bc44-f6bb572ed411",
        "cursor": {
          "ref": "b067fc36-7f34-4886-8b30-9adf093931a0",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1f093d14-4aef-43f9-a8f5-ccabb052062e"
        },
        "item": {
          "id": "d89a1a28-fd24-4cbe-bc44-f6bb572ed411",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "8666c3e8-897d-486b-a2d4-872fbe93a6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54268692-ab3c-4540-801c-1adb9c3ebe95",
        "cursor": {
          "ref": "7a255896-3072-48b4-bb98-914aaee98882",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6935e39d-d942-49d3-9bf8-8c008ac88b55"
        },
        "item": {
          "id": "54268692-ab3c-4540-801c-1adb9c3ebe95",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "244e439e-3408-4ea9-a0c3-6cba689f30fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a12d217-5b53-4769-9f04-53023e39c91f",
        "cursor": {
          "ref": "d029e33b-c873-436f-9906-c51737403e8d",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f4fd83da-cf4c-47ae-bee6-51cdab7d394b"
        },
        "item": {
          "id": "2a12d217-5b53-4769-9f04-53023e39c91f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eed4c40b-9219-4720-9eb0-c21a16697305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dec32ff-f774-4247-bf50-c0cafa07df82",
        "cursor": {
          "ref": "76f45b75-dddf-4a2f-aa70-08931308ec50",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "593483af-f5ab-4a67-99aa-aa0ae7a1d1fc"
        },
        "item": {
          "id": "7dec32ff-f774-4247-bf50-c0cafa07df82",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "734307a5-4d25-4dca-886a-043a3b43f7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d151362-c2e4-4276-9981-271458e033a5",
        "cursor": {
          "ref": "117b52d3-eade-43ba-9951-fdeb74f097f7",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0ec1977f-6f8b-4873-8faa-e58c6935871d"
        },
        "item": {
          "id": "1d151362-c2e4-4276-9981-271458e033a5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "38ef78bc-1d73-41d8-b561-508a0717e9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150706f7-3afd-4787-ba4f-e06c3b45124c",
        "cursor": {
          "ref": "acf3b0c7-b747-4484-9c4d-ffaf775afc08",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ef2784ee-c24a-42a3-8ccd-a6379117814a"
        },
        "item": {
          "id": "150706f7-3afd-4787-ba4f-e06c3b45124c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "856acab1-c7a4-4696-9195-306fe4cb283a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d51d7351-f6bc-4779-8997-073fb2d89acf",
        "cursor": {
          "ref": "7497c4a9-09af-4a40-94cb-fcbf0d2e2ceb",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2403eab6-4f89-4cec-b35e-01cdd2f59350"
        },
        "item": {
          "id": "d51d7351-f6bc-4779-8997-073fb2d89acf",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "35702081-ede7-4e47-a096-83a4ae5188c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6cf48f-d211-4dad-a74a-2471cba13c49",
        "cursor": {
          "ref": "c1a56d08-c14b-4360-a1b8-1000af51f196",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "138e9a8c-eff2-4e78-b195-81d30c485949"
        },
        "item": {
          "id": "ee6cf48f-d211-4dad-a74a-2471cba13c49",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "245593a6-03cf-4009-b6d9-10f7650bcbc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de112ef6-0aea-4be1-97bd-78769b8a3ad3",
        "cursor": {
          "ref": "12ee7a31-8ea7-4bb8-b143-2d1e33a9e1ce",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "26f68b64-4071-4ff4-97a7-748374274c87"
        },
        "item": {
          "id": "de112ef6-0aea-4be1-97bd-78769b8a3ad3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fcac2f73-d885-4082-83b3-2921fbb5d207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b2fca3-a3f9-42d6-ab02-10beb1fc45c9",
        "cursor": {
          "ref": "6a6841dc-6720-41cf-a084-a574dc6ff111",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6ae64bb5-982d-4ada-974a-095f34562808"
        },
        "item": {
          "id": "09b2fca3-a3f9-42d6-ab02-10beb1fc45c9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "70d0e4f4-a108-4fac-9201-5223fc5342a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a456e41d-c7e2-488f-9671-b591d2d8037c",
        "cursor": {
          "ref": "f003822f-100b-43da-b315-b9b2c09d8a1e",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f10c1811-7c47-42bc-8f5c-4b782fee6801"
        },
        "item": {
          "id": "a456e41d-c7e2-488f-9671-b591d2d8037c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "54649c57-d51f-464b-bc0f-a3e5c8acddde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81462ff-1569-47a7-9e75-74f2cd308d2b",
        "cursor": {
          "ref": "6ff6236d-e18a-43fd-926e-455aecd194e0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "486eb977-5788-4c05-ae3b-52840c4535b9"
        },
        "item": {
          "id": "a81462ff-1569-47a7-9e75-74f2cd308d2b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b3b9aca7-4c72-4f09-b279-c6747ce597ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212a0b4b-063e-4754-a557-33d40782b64f",
        "cursor": {
          "ref": "cac0f341-9761-40cf-b091-e5cd71e183c9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "32a20620-239d-434d-a730-e5833f0c695d"
        },
        "item": {
          "id": "212a0b4b-063e-4754-a557-33d40782b64f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7b861d89-d6da-47d2-b7a4-38767ab04547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6d0bda-0a90-439a-915d-808bdca0f674",
        "cursor": {
          "ref": "d21d3f64-8ec4-4903-84ae-a99f682dae9e",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c3b809ce-bfc8-4b58-8b91-d9e09ba27eb4"
        },
        "item": {
          "id": "2d6d0bda-0a90-439a-915d-808bdca0f674",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "30c4d625-0d2c-49a6-a915-b77852ed7831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30acc456-5207-4845-b0bd-f423de96738f",
        "cursor": {
          "ref": "116755af-160f-4622-baba-da0ee9df9b00",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "96b3d7ec-c702-4c79-abea-4838b0d48777"
        },
        "item": {
          "id": "30acc456-5207-4845-b0bd-f423de96738f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "99e13499-1f00-41a7-8469-e90a6f7021c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d20bde-95ca-4c52-ba0b-a1b8ae9261c0",
        "cursor": {
          "ref": "2513070b-9ba1-49df-8a10-6d861f0c5590",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d57d981e-3e25-4774-a348-564aca7aa59d"
        },
        "item": {
          "id": "d4d20bde-95ca-4c52-ba0b-a1b8ae9261c0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8199457e-a3f0-4c36-aa94-f54c794589ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc3ebf8-2846-4c31-b7b8-f4eab4ed0758",
        "cursor": {
          "ref": "d4e75747-cbb3-4696-ba31-39d746091e51",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4a3e9920-5d78-404c-97f5-9d144772f041"
        },
        "item": {
          "id": "8bc3ebf8-2846-4c31-b7b8-f4eab4ed0758",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0fc4f6f5-3245-486d-aa9b-0113b8bfb284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86816f7e-8f84-4429-850d-d314ad5b6ece",
        "cursor": {
          "ref": "51b4a7dd-2018-4f10-93f9-ed462fa268b2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "59e4187a-e6ee-43e7-ae47-bb1048a3fdbd"
        },
        "item": {
          "id": "86816f7e-8f84-4429-850d-d314ad5b6ece",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "41fb31f9-a3f6-4ab5-9cf6-d19697eb1068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110be63a-e0f0-4fc4-a366-bca111b83991",
        "cursor": {
          "ref": "d1120c8b-da0b-4e92-ae4c-562e11fdaa11",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "516a5386-2f16-4c41-9e15-3fb226631917"
        },
        "item": {
          "id": "110be63a-e0f0-4fc4-a366-bca111b83991",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ab043b35-2a22-49e1-95a4-463b0b4941bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea88b94b-082d-477d-8bc5-3ec70ac4b19a",
        "cursor": {
          "ref": "fcf8494f-bbd8-4be7-bbfd-321574f673a7",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fbf5603c-bafa-4f0a-92b7-2a7a3d16dcc1"
        },
        "item": {
          "id": "ea88b94b-082d-477d-8bc5-3ec70ac4b19a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bef9863c-6621-48e7-9804-81f94c6b2bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06a772a-662b-4319-a700-bce3b25ba126",
        "cursor": {
          "ref": "60fbc1e0-ceba-407d-bbdf-182cd632b1b7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "68e27f87-8bdd-4abb-ae93-a2fb74295cde"
        },
        "item": {
          "id": "c06a772a-662b-4319-a700-bce3b25ba126",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "af43a69f-120a-4d87-b557-77afcf3fd1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4770c15a-0eaf-4be8-bfd7-6e659b655546",
        "cursor": {
          "ref": "b1c133c5-044a-4fc3-99ff-b939200de8f6",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4448bf42-29f5-4b75-b9b8-0a98e1a12961"
        },
        "item": {
          "id": "4770c15a-0eaf-4be8-bfd7-6e659b655546",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "693adf16-594d-4aee-9518-9270a69a2732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd47b4b0-2f81-4017-9bb6-6a7590762745",
        "cursor": {
          "ref": "479718b1-1a81-4d8a-af45-373172ece8ec",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "268820a2-1709-435d-a5ca-2d801be30ec8"
        },
        "item": {
          "id": "bd47b4b0-2f81-4017-9bb6-6a7590762745",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2f794f7f-ad6e-4cdd-8dee-2169f4827073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "011eca2b-0017-4e0f-bf9b-b6bbe6ca754b",
        "cursor": {
          "ref": "9cd057cc-797b-4ff0-9bf8-4929b71c957a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "9b5e5683-e974-4fb3-963d-8a79619402a3"
        },
        "item": {
          "id": "011eca2b-0017-4e0f-bf9b-b6bbe6ca754b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "9fa322a7-40f3-4626-9b96-913dc7692f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd5a3e1-30b0-453f-8584-fb4bca4d06d7",
        "cursor": {
          "ref": "9d2b07b6-01f8-4bdf-bf66-1c654388836c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "62bface1-6c83-41d7-8871-07d0a61206a3"
        },
        "item": {
          "id": "ecd5a3e1-30b0-453f-8584-fb4bca4d06d7",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6b530b20-c6a2-4a5e-ad46-4998de54ad7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdc9a25-d40d-4be3-a8b6-f16db1fa5ede",
        "cursor": {
          "ref": "98b75706-fdd0-4e5f-9b0d-6b684aa6f97c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7fb27eba-a6f3-4e07-82f1-87c4f94701ac"
        },
        "item": {
          "id": "5cdc9a25-d40d-4be3-a8b6-f16db1fa5ede",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "763a7755-1fa6-4090-8edf-8d92ea9d58dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d0d7157-daab-43d9-82b4-e7bc2f070f5d",
        "cursor": {
          "ref": "f0c7b1a7-3807-4740-ab26-d1871bc6d5ad",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "574add68-eb96-4a0f-97f0-46811da3eb6b"
        },
        "item": {
          "id": "0d0d7157-daab-43d9-82b4-e7bc2f070f5d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b998d50d-be50-4b38-9470-4c0d743e50b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3cbc12-349f-43c9-946b-1f8f76027409",
        "cursor": {
          "ref": "afa632f2-ccd8-4585-b3f2-7aec16c368ab",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fd2ee66b-260c-46c0-8687-b18d5de8d86f"
        },
        "item": {
          "id": "fa3cbc12-349f-43c9-946b-1f8f76027409",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c980ff1c-bc67-4ea0-bea7-21db9336d984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d613e1de-6e7a-42fe-8209-4a80a335ac55",
        "cursor": {
          "ref": "003b649a-a9fa-4f28-b8f7-0d0f673cb3d7",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ce59845b-deb9-40ab-96df-9774a5dcb9fd"
        },
        "item": {
          "id": "d613e1de-6e7a-42fe-8209-4a80a335ac55",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b777af38-3a3e-4a7e-924c-6892548154a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade5a74d-08e8-4802-81aa-89b6a0a1ade0",
        "cursor": {
          "ref": "40ba083f-9934-4f7d-a3ab-6890c7e64588",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c27a8e89-ccde-473b-91d1-0ba5607b2e69"
        },
        "item": {
          "id": "ade5a74d-08e8-4802-81aa-89b6a0a1ade0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7736b859-18ae-4fde-b552-5bcf92b19ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c81c7fc-4ca1-46d0-b30a-20eb870aba74",
        "cursor": {
          "ref": "89b6c626-248d-4f42-b19b-3d6c634bec05",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "08396e76-3a25-441b-a27b-fd545b42ca53"
        },
        "item": {
          "id": "4c81c7fc-4ca1-46d0-b30a-20eb870aba74",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3971d4f9-c56a-497f-a691-a9351bb3b533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cad7656-9add-4fb9-82e6-a1a7abbefc4d",
        "cursor": {
          "ref": "f7db3da0-9705-4630-881d-d6c8cf832e10",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8a9129fa-4b9e-4e98-87c6-627822c79ffa"
        },
        "item": {
          "id": "3cad7656-9add-4fb9-82e6-a1a7abbefc4d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "44762b7e-6e90-48d9-b12a-fed3a0b45e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff912e8d-2250-40ed-98e1-54788f54cbfb",
        "cursor": {
          "ref": "94cac52c-c145-4fde-90cc-c646bc09fb39",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "350421c2-f8e4-4659-9bd2-6fb9833eb61f"
        },
        "item": {
          "id": "ff912e8d-2250-40ed-98e1-54788f54cbfb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "06c0f078-49a0-41c7-9dcb-b580f139da1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06621d7-ca86-4af0-90d0-aed6dd4f182c",
        "cursor": {
          "ref": "9fa91255-d61f-43dc-9b08-695c76ccbb57",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a7f37d0f-c881-4d28-9409-744dd6dd271d"
        },
        "item": {
          "id": "d06621d7-ca86-4af0-90d0-aed6dd4f182c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c0ed3c16-122a-41b2-9509-90dd029a4fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b058602-dccd-48cd-af5c-fa29769ae233",
        "cursor": {
          "ref": "b5873f47-0bca-4c1c-bf91-53183a04642d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ad73b867-e3a1-4e0b-a400-f400f7019aba"
        },
        "item": {
          "id": "7b058602-dccd-48cd-af5c-fa29769ae233",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c9156509-aeb2-44fc-88c5-f7beaad8bd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26858519-76ab-4bab-b934-d0ac0a99ec84",
        "cursor": {
          "ref": "4ca84d82-67e9-475a-8fc4-4e8cfbe03aca",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7bf949e1-878f-4e7f-b38f-71038867e13d"
        },
        "item": {
          "id": "26858519-76ab-4bab-b934-d0ac0a99ec84",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4b1dfbca-77b3-44a4-9a5d-f6aa37995d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270c84b4-62a6-4db0-aafe-62a21be6cd96",
        "cursor": {
          "ref": "9e2a5758-17a9-44ea-9979-de0f5300f051",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "455b8a59-b9c9-448a-9658-862a737fddaa"
        },
        "item": {
          "id": "270c84b4-62a6-4db0-aafe-62a21be6cd96",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "926ff0ce-ee81-407a-b4ff-75d43846d9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f30d2b-e61f-46f4-b84f-6746b996e268",
        "cursor": {
          "ref": "e70ce759-8771-4f4d-9219-b63a8718096a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "54096182-dfee-49e6-a41d-9e537ffca146"
        },
        "item": {
          "id": "f7f30d2b-e61f-46f4-b84f-6746b996e268",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "767d6a76-2fff-4f26-8ea1-9e8eac21527b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbcf9307-1cf5-4c30-b131-f8e696d67d43",
        "cursor": {
          "ref": "283b1673-96cb-449a-8279-1cc7ee1fa0c3",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e8357d67-3ca7-477f-b318-3cc55e0db133"
        },
        "item": {
          "id": "bbcf9307-1cf5-4c30-b131-f8e696d67d43",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "c72e3c37-9f92-4bcc-b076-cf0e8b2628a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ec6b20-20ff-446f-a9ff-261cca05c49d",
        "cursor": {
          "ref": "93d70c81-650a-45df-8d1e-b2f0c3fbbbbb",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2eec80a1-2de7-4f03-bab5-25738698fd28"
        },
        "item": {
          "id": "b2ec6b20-20ff-446f-a9ff-261cca05c49d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f598bfe4-d774-43b0-9ec1-359290cae601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f0fab23-25c6-4efa-b4e9-66368e79c40f",
        "cursor": {
          "ref": "eb2e6869-853b-4d3f-93d4-016557879008",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "111e3e62-4c88-4b26-809e-6a8e3f0486c8"
        },
        "item": {
          "id": "8f0fab23-25c6-4efa-b4e9-66368e79c40f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6c681861-3331-4875-b983-ac31573066f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e648fc83-93ca-4e95-a351-5a2059304cfa",
        "cursor": {
          "ref": "423540ac-8b35-47ff-b7cb-6c32b07edbdb",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "aff1db26-5556-488e-8bee-0e121ba1c8fc"
        },
        "item": {
          "id": "e648fc83-93ca-4e95-a351-5a2059304cfa",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "219ad65d-0c50-416e-9759-f98ddb92d9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d826754a-b28e-445c-aec0-a6d7036a3523",
        "cursor": {
          "ref": "ef2ac3d1-eb55-469d-80d1-2f80695f6513",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "86618e9b-3399-45fc-9f82-b33599a9e834"
        },
        "item": {
          "id": "d826754a-b28e-445c-aec0-a6d7036a3523",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8d320026-9fd0-485f-9331-90dd286ada1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca4dfa9-1f3a-43ff-9f0f-21da67ad31ca",
        "cursor": {
          "ref": "e5cb1e4a-09a5-4736-b316-4c978babae12",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "870868af-d43c-4629-9b07-3b70c0cfe681"
        },
        "item": {
          "id": "eca4dfa9-1f3a-43ff-9f0f-21da67ad31ca",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d9b79d88-e5ea-4b00-9bf1-13a168f765c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bbf629-84ea-4d6d-9fbf-02d483cadf58",
        "cursor": {
          "ref": "0307437e-4aa2-4e53-bbcf-6baafbb5ed04",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c3cd454d-932b-43c3-b306-7f6777579b26"
        },
        "item": {
          "id": "57bbf629-84ea-4d6d-9fbf-02d483cadf58",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "932babc2-4ad3-4a42-a56f-db4df2efd733",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc76dea3-3b2a-4536-9573-7b3a990e87e9",
        "cursor": {
          "ref": "057b53d3-5006-4d8a-b78f-0859dffd7e35",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d0387ffb-16e5-4f98-b36e-905df8e07030"
        },
        "item": {
          "id": "cc76dea3-3b2a-4536-9573-7b3a990e87e9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "0dac5594-b743-47b2-871b-af31f6e092dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b24af61-0e41-4470-a238-4946e617a389",
        "cursor": {
          "ref": "7ac7bbd3-8fad-40e3-b8e9-3ff4b1554ced",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a8744728-9b87-4a19-9609-1dc278471305"
        },
        "item": {
          "id": "4b24af61-0e41-4470-a238-4946e617a389",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6d2cbaeb-9785-4770-afd7-332b83682530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4e8ba5-7f2a-4cdd-b4cb-256871ddc102",
        "cursor": {
          "ref": "40a92055-08c2-4f44-8277-5f2a4385a6b6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f56adece-586a-4b79-9d90-fcf898b2aa7d"
        },
        "item": {
          "id": "af4e8ba5-7f2a-4cdd-b4cb-256871ddc102",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "190b2ce0-9a5b-4bda-af19-023bbe7f47ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f578e8d6-fb8a-474f-857f-36a254c1a058",
        "cursor": {
          "ref": "1fd0e923-ef3d-46ec-aeae-2e02c4e584f3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "acfbc0c0-a5a1-43a0-8bd1-5deadb3d4856"
        },
        "item": {
          "id": "f578e8d6-fb8a-474f-857f-36a254c1a058",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bb57b095-6d4f-40d6-bdc4-a4cae1c939b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1755b7d4-db59-4e3e-8872-8a64c7471710",
        "cursor": {
          "ref": "0b985be8-5cc1-4dba-acbd-7555587fa4d8",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "14c92e57-a647-46c8-8e8e-37429b05f611"
        },
        "item": {
          "id": "1755b7d4-db59-4e3e-8872-8a64c7471710",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8830b263-004d-4097-8e7b-8a031f03d9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9153e1cf-bc82-45da-9b23-a0f14e1cbcf2",
        "cursor": {
          "ref": "5470a51c-7fee-4584-add0-6cb7e96f5025",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "71196f64-d18a-47ba-a3c5-648f7cc191de"
        },
        "item": {
          "id": "9153e1cf-bc82-45da-9b23-a0f14e1cbcf2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "1938daca-01bf-4b9d-bc03-9d6b37cb1b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3771df-583d-4b29-92c1-08ee5b3da9aa",
        "cursor": {
          "ref": "96cd0b8e-36e8-4f5e-93b3-46263ab9ac03",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "39b6ae1b-f55d-4369-8585-86db75360382"
        },
        "item": {
          "id": "7d3771df-583d-4b29-92c1-08ee5b3da9aa",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ba414a87-16db-4f98-95fc-fc41cefbd3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c25f49-b001-428d-b65f-056beab84c3f",
        "cursor": {
          "ref": "09a195ee-ad1e-49e2-9b4c-2b260f4782dc",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a612a602-b65e-48e4-b6d6-837f4c645e8f"
        },
        "item": {
          "id": "c9c25f49-b001-428d-b65f-056beab84c3f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e7b974c1-da7b-4355-ad05-79c1c78d4501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf68a634-843c-4e79-afcb-4e7e210026e3",
        "cursor": {
          "ref": "c6c27b65-9581-4a2a-8d67-f587ab911f2a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0eb0a85d-993c-401e-8c1a-f0a0623c7ee8"
        },
        "item": {
          "id": "bf68a634-843c-4e79-afcb-4e7e210026e3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d2bb6b62-f9e0-47e5-a771-8167945b80d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d15c51b-21f8-42fe-9420-6d11cf198f84",
        "cursor": {
          "ref": "191b5e34-28ae-4b18-ad5a-ad9d92ed5131",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a16ca649-7971-49de-8dec-c471ace8daff"
        },
        "item": {
          "id": "3d15c51b-21f8-42fe-9420-6d11cf198f84",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "13963afd-0a54-44f1-909f-30e21338e940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb044c46-16f4-46bc-a4b5-6f12720d9292",
        "cursor": {
          "ref": "91a9efa7-d880-4758-b9b2-f7f7255c19ca",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "35ced051-6222-4c2d-a7c6-80624f527a81"
        },
        "item": {
          "id": "fb044c46-16f4-46bc-a4b5-6f12720d9292",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7c72f9c4-beae-447a-8448-d806aff87403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaad163-3ed2-4f30-afbb-a1ebff05b5c7",
        "cursor": {
          "ref": "1e593748-86f4-4dad-92b4-b1e29f9d7269",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2b7c54ff-5304-4714-8493-30ed4b00304b"
        },
        "item": {
          "id": "baaad163-3ed2-4f30-afbb-a1ebff05b5c7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e5be0168-7561-4b7e-8df8-eb3aef6f3bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ca7de0-dcec-45f8-b9f6-11450b31a37e",
        "cursor": {
          "ref": "6cb04451-13e7-408c-b67e-173042651ccd",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a3f36c87-8fb7-40bd-9c37-91cf70b54ffd"
        },
        "item": {
          "id": "d3ca7de0-dcec-45f8-b9f6-11450b31a37e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5fb7a3cf-887a-4f98-82dd-b529f8bf3e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39a942f-1557-4451-94b8-5e707bab3841",
        "cursor": {
          "ref": "db8a4e17-457e-4a8f-a851-93a46ee1b0f7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0dcd373d-ba61-4483-b75f-1e1c031bba12"
        },
        "item": {
          "id": "b39a942f-1557-4451-94b8-5e707bab3841",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3bfd437b-322f-4d3c-9512-572ab50f3906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e31102a-ba14-402e-92e9-671a205783b9",
        "cursor": {
          "ref": "68bc031f-d01c-41e4-a08f-e886e976ecb6",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e6aab04c-6956-483c-8c5f-da8c0868382b"
        },
        "item": {
          "id": "4e31102a-ba14-402e-92e9-671a205783b9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "21898ed9-ca02-4297-933a-0382b1eee01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad2a4ad-830f-4d3e-8626-64208193231b",
        "cursor": {
          "ref": "51054674-d91f-40ae-9079-5751501b8082",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e30d00d4-d68d-4ba6-bb6c-91f7b4eeb7d1"
        },
        "item": {
          "id": "9ad2a4ad-830f-4d3e-8626-64208193231b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b7a6592e-77c7-49a4-bd26-2f644431152a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a2043d7-7980-4d8a-a41a-a05174a8d28b",
        "cursor": {
          "ref": "a6092d6a-b6d3-4e90-998b-54868738693d",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f4e0ee2f-3a46-45c4-abab-bc63997586a2"
        },
        "item": {
          "id": "1a2043d7-7980-4d8a-a41a-a05174a8d28b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4418a4c4-c116-4c72-86be-dcc0be6b0e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995489f3-ccba-4167-8444-c058c5311b26",
        "cursor": {
          "ref": "e56bae94-c176-4028-b0a3-0fb39933c48c",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e71b1591-8cd8-425d-8139-bc2b41724c03"
        },
        "item": {
          "id": "995489f3-ccba-4167-8444-c058c5311b26",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "007da0d5-7135-45f6-92ce-096c3c642bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847e3dc3-0635-4709-b3ec-4c8a2b4ebe24",
        "cursor": {
          "ref": "8185db57-4e7f-4af6-80b5-c566083391d9",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d4b09b0d-6dbd-4cf5-8c96-e6aecd5d9d6a"
        },
        "item": {
          "id": "847e3dc3-0635-4709-b3ec-4c8a2b4ebe24",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b326cbcd-5a56-468b-93f9-e8f65681a5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9903c5b-7e00-4155-8bf2-eb9a177eae97",
        "cursor": {
          "ref": "54a139cc-608f-4761-91ce-20b8e3e89dc5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "220be38f-14b9-4f54-8c77-7ce4fb8d60ca"
        },
        "item": {
          "id": "b9903c5b-7e00-4155-8bf2-eb9a177eae97",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "ac02cad1-95b1-47c4-ad0f-b8d42b3ae948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "db5dd92f-7fbc-4a0c-aa41-e77f7d35799a",
        "cursor": {
          "ref": "dcd4713a-0bb9-4ac6-a9c3-6ccd4662525b",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "381bb359-0820-4b3c-8622-4f79a59f5c96"
        },
        "item": {
          "id": "db5dd92f-7fbc-4a0c-aa41-e77f7d35799a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4e50a2c8-6be4-49aa-9762-484c9bbaf435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "6ee37c01-61dd-4dcf-8997-102a2b593c5a",
        "cursor": {
          "ref": "f32b9da9-85e2-4fec-bcdb-edbeca3de15c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "69baf778-6734-4bde-bb2b-6203b589279a"
        },
        "item": {
          "id": "6ee37c01-61dd-4dcf-8997-102a2b593c5a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "371524ea-eeeb-40e6-897c-cd8e98a16b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "797dfbea-347b-497d-8c63-f79484a5d312",
        "cursor": {
          "ref": "7f90c81d-182f-4b44-82af-f610721c8ed6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3067b4e-e52c-43fd-ade2-a63e893d1e0c"
        },
        "item": {
          "id": "797dfbea-347b-497d-8c63-f79484a5d312",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3817d541-33dc-4557-8792-9c018926c08a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797dfbea-347b-497d-8c63-f79484a5d312",
        "cursor": {
          "ref": "7f90c81d-182f-4b44-82af-f610721c8ed6",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f3067b4e-e52c-43fd-ade2-a63e893d1e0c"
        },
        "item": {
          "id": "797dfbea-347b-497d-8c63-f79484a5d312",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3817d541-33dc-4557-8792-9c018926c08a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621fc4a6-258c-4fb1-b55f-da3b6a8c85ec",
        "cursor": {
          "ref": "007a581a-b6f5-4207-b3be-55f333081b26",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "623e8dc6-31a1-4633-b09f-25c22eb2abaa"
        },
        "item": {
          "id": "621fc4a6-258c-4fb1-b55f-da3b6a8c85ec",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "cd68c463-d04f-4aa3-98d2-73cfbd00ea56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "781aa870-45e4-4ec2-8fa0-61c9ba6a7000",
        "cursor": {
          "ref": "8c21f9fc-6737-4c08-8fe1-2b31fcef136a",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "50fe21a7-8cdc-4b47-9b66-aa11730a510b"
        },
        "item": {
          "id": "781aa870-45e4-4ec2-8fa0-61c9ba6a7000",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dda4ba85-cf93-45a8-bada-fdcb2d26ae5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}