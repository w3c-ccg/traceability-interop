{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e805b93d-e855-4a85-80cc-fbf7e2b2681f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "4bb82ecc-c9ba-4460-8100-b20e95d5dc54",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "03187eb5-2e2a-4cf2-bf23-bfb89cf3f6cf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cb920209-9ede-42bd-98ef-acbb67486dbc"
                }
              }
            ]
          },
          {
            "id": "f852916e-7a56-4ca3-bc92-668f1a5724a1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cbe0090-ca17-4eef-b333-9f56784695e6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1eea3925-bae7-448e-9120-11cae0a84e71"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a33101f0-d982-48cd-925e-ccafe4cd6354",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "8f0b72c1-8461-4fa5-a0d1-bf3e74f6a8e1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c3eb895f-2961-4b19-8595-a35dc99a6958",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "084b0736-ddd7-444c-84e4-d3e5aff5973e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d3d7101-1d41-4ff7-b76a-8a9e348ae779"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8966b70-6ebb-4688-9317-e2e873cba386",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a33bbfec-8816-4038-868f-5c4fcb080ce2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d2708ffd-ae1d-42e1-8700-3452a6e75af1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a6fc6e5-4876-4dd4-a98c-505e431ba006"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42af7079-67a4-4beb-9f79-f47f2b03d218",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3f289b4c-ec60-4b60-8803-a4d0da351a53"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d322ffc-c198-46c2-baea-1ba20c9f585f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e7265b34-6b79-4631-b39a-b89beb4619a6"
            }
          }
        ]
      },
      {
        "id": "1b38a4f5-c248-47a5-a81a-7e4664cca848",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "18fdafcb-eaca-4635-be05-eef2ad62d26e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d8919d3e-da9d-4d4f-b3a6-25c677e00853",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc31f736-cb1c-42f9-b076-13f0699a1024",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b0b31c-dd36-4e93-8610-608d48086f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e0871420-fbcd-4a9a-8994-f15fddeacb4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac004776-7339-40a2-afe4-f727373470db",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171bbfeb-1ecf-45b7-be9b-e0e0bb9c729f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79e301ef-7a81-40e8-9ab2-65d6d9e3f1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a42e07-754d-40d2-840c-6a877a3ad756",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd3f28d-a79a-4edb-8c16-0154cbd8ee46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e130e783-95a9-4a5e-8dd3-1f5babbae1c6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "53b9dcc4-8998-4824-8307-7627c04a72a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "75ead4da-a831-4b28-8ac5-a112362febd4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6f9423-97be-464f-9200-e965071a0a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6adc3996-bd7a-440e-8d47-343b2a8c11fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd8038c-adc4-4d92-ac69-21cab65b5799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20002135-cadc-46e3-9426-3209b4d2952d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "83a08175-ae17-4ba2-bba5-77eff4b9f0ba",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8e7581fd-4939-47b9-aa18-aadac224d1fe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad33976f-4164-43e9-a953-ae2b9c3afc8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "22ddbde3-51d7-4d1d-98e6-9b58c0c9121a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4689cba1-2122-4fb1-9dff-3cdab5b1794a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ae6a79c6-c4bb-405d-aaaf-4b5e263f954e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b61ce5d6-94ac-45e4-9d63-a62f145fa622",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94170a4a-fa4a-4e75-92ef-a1e8530b3807"
            }
          }
        ]
      },
      {
        "id": "0145fa71-70b7-4f67-a915-fe5bcafe53fa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f04f64bc-c687-4615-b92a-332248e43e9f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf60d26d-efa6-48d9-ad93-7becc9bc8bd5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1752d0f8-4399-444a-a005-d8e085358596",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ad40a56-9e21-4e55-9c90-9e257a53620c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed1c182e-4b46-478f-bfd6-39437283dee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab7d75c-67dd-45c7-b844-2d2b51a8ae61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0664ab9-718a-4283-88c9-de573ee80110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d5508dc-d4ef-4c72-93d2-b29164bf5150",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a40cd4a5-3166-432d-ab71-726c53824d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a21ba7-3a8b-4f8b-9784-f1b6d4c9be67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7864be-a550-4659-acfa-71ec972a748d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1941bee-58d6-42a8-af56-54319261df11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6edc3d0f-4bb5-4d3f-8e47-8ca175bfe69b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbbe4a0-05f8-4200-9603-a461c1f495ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bacb532c-acca-4513-abc4-32f22fdfe9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bafad3-b9ef-4e65-ab74-8010b0ca5c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94a0f756-7b29-45d3-9cec-0647003272fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42ac7be6-ff86-412e-93d6-4fe1d32626b2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d5493f-8a6d-4e43-ad1d-fe46b478b472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2014c2dc-d3ad-4e15-b1db-1312d5a6b7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2125d42d-3bca-48bc-b08d-914d820c7ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36aaaec8-91a8-462f-bd93-d55bd30fb20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84327b3c-701a-4b3c-915e-7d049002c45e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb7c798-fefd-456d-acc4-44da53105245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97ed4a95-373e-4c1e-ba59-488e8e55f2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3fa7b6-8131-4329-8ede-06c7be28e697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26064f6e-a629-41dc-919a-0447b34fdf26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9082981-dfb7-4ceb-8612-56e1d6c3c692",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68cadf05-12fa-4e98-a669-d9d19b698dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e792723f-6dfe-4258-b49d-b1f0e185c5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04c76b5-264b-471f-ab65-11aff558b910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1bab616d-8fa3-483a-8f84-7d5fb2dbdb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d712206e-6681-46da-a0ca-a827058bd61d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0a4766-e362-4185-8e05-8fad71d15f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73df58ed-219d-448e-8722-a87f6e5fb7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9443b056-6549-423c-8b5d-9d132261e0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fced7231-a5d3-4020-84a7-54a219e0bbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf1f9c3-c94f-4204-bb7c-a3824744512d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd07106-a58c-4d09-8bcb-a9a0dbbf5dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcc1ff6-8f90-4c1c-82a5-12bc198f0998"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878f6c9b-9812-4f48-966b-f68e4acb2074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb697687-05e7-4dc6-bf0d-c86a2e8a6104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a72c1c-cebd-4f62-bb0d-bba3dafbd60f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "493ce3dd-fe21-4dc4-b664-33b08c870f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d088b994-88fa-47bf-9c02-32fd4f409420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9d13cc-d4e4-47b2-b32a-c4b7695602c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a38e6cf-17cf-4cd5-b615-4a58a356e22c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e509905a-e5b6-4814-9b6f-d2334eb52770",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dc4403-e059-4cff-b62f-4b15e78c8b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d9c7c6-4530-4607-b76d-31d6a8e9d752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c288f16-3968-4ee6-ba95-22c9455aac7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e5c690f-c359-4ea2-a88e-1f1f6dbfe32b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2190c301-5352-4939-8166-b2c160139042",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df2302e-5a45-45c3-99da-f70d1ada5f92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a154e5e-963e-4694-a0ef-026793c86405"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0ce868c-2dcb-4a9d-ae0a-252f2af6f766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d000b05-a1d8-413a-b611-e991a4a70a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93280c1c-8110-4b51-8432-5529b9923a77",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e6b440f-d002-4260-991c-98772fb613fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80bb388-0bf3-41e9-9078-9cb683295d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46358ec6-5cd8-48f6-b542-99f4a22a1034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c95de0d4-4444-40c8-bfc6-9548a07b772a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e26c0d-b224-480c-bb01-47507015c8b4",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83c0dd8-17be-41ce-adf5-1ed28f0644f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0309bc4-65a3-47a4-b6d8-7f0af6ce40da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea0e051-83b8-42ba-848a-d8d24e6733c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81e9ac25-0387-4c57-b490-def752b06870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6a4a89-04b8-450f-84d0-65ae9ccc0633",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9493a15e-0afe-459b-a25b-482e5d83d1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2302968e-b9db-42ff-8d29-2ee131c38d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9abf7a-f46a-4c48-9938-06ab27241f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3555e37-a7bb-4c55-a802-802f4ef9c869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88faf507-8994-4435-bb36-505c6499a8ba",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49399484-7f02-43bc-aa08-7562331797f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd6cd17-8122-4585-a138-0040543da2fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ebfc8d0-73a9-42f2-8ce7-5cd659e52ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb60bba5-d93a-4a97-9df7-ad1ca508c726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2636cf10-15cf-4017-aca2-2544abf81bb6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a4f8cc-51bc-466b-9d7b-82d1fb121619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19c5821e-f417-41ee-8163-a08211f163d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b700c38a-dc0b-4475-9414-08617d48cec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c74c9db-79ea-4c75-b957-3d1904948184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b15b110-197f-4ef1-befc-62b088bf0268",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0110ca37-2e21-40a7-be88-9c983cd9fda3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5acf3d3-e75c-44e0-8c94-ca62465c1115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e201fc3d-5f4b-47b0-9c5f-4a6c6bb51246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f05aaeb5-75e2-4247-9539-632051e4250a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10dae7d-dcb7-4901-95af-9c33b3f5215f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3729b7be-2448-4d96-ac11-c61963d39057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cd7028-cfd4-4693-97da-3c68e0c54625"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85d4f3a-9529-4524-9323-bafa3a70cea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0c4dfa9-0557-4dac-9ff0-03742f889860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92cfd17-6555-45d0-a4ee-0ae4b6536e63",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31637a7c-b4dd-44b0-91cf-267753ac9dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bedad8c-e8a4-4891-b99b-41cdc0ab8cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e09821-2895-4f50-8656-984712655a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "341ad73e-34a9-4eb8-8c72-686f958ac42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3861a038-a02a-41bf-93b4-abc4912f6d53",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecd8810-ac98-4d51-97fb-33eafcaf136c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf42a4cf-b8b1-46c8-90fd-4bb633270c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05e5fde-ee4f-4354-8969-96178525be2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff25aa2-cbeb-412e-b9a3-82d3e87cecff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c05dc9-d759-4e87-a5b1-4669c766fb07",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189c23fe-14d6-4d3a-bf55-0482bc0e86e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43cbe2b-1578-4cb9-9338-a7257e83be83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1a4607-50b7-48b1-86fb-2c05fc336dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "add5949a-71d4-4e85-8c80-745befa48230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b71b17-90bb-4cbb-abfb-ed1e4e10514b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5812b5-896f-478d-994f-dd8074f072cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e3cce-9dbe-4310-99e3-0432c5b086bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e164e64c-b2d8-47b6-aaa2-7b570a24ccfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a341d294-0c0a-423b-805f-a139d782cadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1870f3c6-437f-41ca-8345-feaf8f60aa5b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18fc95f-8a11-4cb6-8464-15edcf1da640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f595f13-8f21-4266-8a9f-f5788f248e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf2a8f8-966b-4f35-894e-c109e109ccdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae121a1e-c23b-440a-8e16-6d9314fd0df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0899a15c-5d54-49bb-8ba0-42264c9d02b5",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdb3d81-90aa-444e-84c5-3756d734f5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1980e5f-5ab7-4db7-9e20-e1003f6ee467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4150b6b3-e11b-40ae-b146-f517108e9d0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b99173f-1373-4a70-9bbf-389f3770cb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3e749c-9c9d-4831-bf2f-21264ccaf576",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cc17c6-df10-44b5-8166-0afe27b0de41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cec9cd3-3141-45cd-b64d-2902cda6e2f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2085c8ef-fc76-4844-8cd8-f582e7924b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69fcebf2-5079-4d50-ab4f-cc474c873e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0f6977-ddd7-48ae-9937-5ea6d69f2515",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0431d849-a36c-47b4-8482-04f64d1599d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b08165-d584-407f-9d33-f6e8ee3d1b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25282241-6c45-4f34-80fa-cc03ca4ba305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2259c0-0823-4c8b-85fc-4e619177e6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7e3056-c431-4b9f-8129-0648e259af25",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fbb65c-f5ba-4f88-a77c-b926e560c719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8d71700-56fd-4d11-878b-082fef37cf16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903e942d-7259-4e3f-a6b7-ddf62e31c166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc83afa-3518-4b2a-b700-c27130c9d500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa168e0a-bec0-48ed-b50f-c439d2d02a07",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d37f40-a2da-438b-9b1e-1df4f5cd9c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f84a557b-ac02-48ea-9024-042b406df041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae749392-a3b1-43f0-93dc-c78bedaa0a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6389650-2694-4143-a814-407dc90e9d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c80c07a-7390-4a4f-85a0-80503d965d69",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db99900-0d31-433d-b1d9-8d1ee68a8a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adee3bbf-0688-49d5-9b60-102c22a64a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31df5926-bb7b-4609-9600-781407a56200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e97860db-0867-46a2-9286-cd4bba164391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fcfaab-6d24-4cc4-9a3c-7cf48fd72b9d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8ff97c-b7f7-43ee-a98c-b6f64ea298f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf85fe09-8758-4df8-8c3e-d7e1e1cfe5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab04bc1-b38b-4738-a43d-b6cb716c0370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "443b5d79-d736-4047-a752-fdff2c54c300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015fd4c3-0add-4fc8-80a4-1272dc87d807",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0389c4e3-9639-40c2-a3df-2ce73db3ad2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b02c20-2ff0-423f-b5f9-e2fc6dd33ec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d0d94a-0290-47fb-8dca-dc1e81277079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e003d1-3fec-4bc8-a126-a1ac0d266e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9aba31-6f36-4c4e-9240-f20d54d97241",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5694577c-4923-407c-aed6-9ab648fcf77f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3989f52-4dd9-4ea9-bb11-bb78ffeaa670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa99963c-b05e-4ec5-9ca4-b0a5fcd02d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4120fbad-5f51-4aaf-883c-35dd0c80c19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e26f94b-1cd4-4fb2-b485-2f04f653b69f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf50b21e-bdf6-4f7f-b778-5d7c1d3a359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a02feb8-83d3-421b-b78c-67868fce266e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e7a7ef-cb5c-4213-b30f-3e4a600d401b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d200f8-db0b-4bc5-9191-bf9ea5d4a512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63feef2e-7805-471d-8376-cbd1364642e4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3e37f2-8426-491f-ae48-5c146864b448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09281e89-ded2-4533-8c21-151976f5ce70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b34c9b-2b74-46e2-afdb-694c4c506564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c9db0b-b55a-4a10-81b0-015288a219bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e884ce02-87ae-4bf1-87db-aede177921cf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3227a6e-7682-483c-a868-908c83afc867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd384c34-5965-4858-ab36-31dc96803d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2059ed0d-8184-47f0-80fc-b81ff382a651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "85696011-1a24-4283-abab-9cee228e0439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f0b51da-5810-44ed-b961-d7be0a4fa4f3",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf42ee2-0f7e-4e1d-80de-8012da08fd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71501b02-74c8-47ff-bef0-e0aea1cae964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42cccd32-32a3-4b1c-b766-2818407873f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0496d343-2cb7-4e58-86ba-d0206adb8a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51dc9141-97ec-45ba-b6ff-bcc85ac003cf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b722d2-872e-4182-a7e3-d68627c2fc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebb7f64-26e7-49c2-af45-ed6c92b603b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ceeccd-110c-4a55-8f77-241d2a3966b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7059ccc-2f3c-4abd-8197-5cea4d8a8114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e014481-3659-4488-808e-d3edfb807ca3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b673b05-98f7-49b9-8a48-e71a90e02494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39234ca2-942e-47c7-bdff-3a6649726c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bb38bb-f703-4d94-8f3b-bc4d38aa8443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7172e470-50a1-46fb-973b-53ebd4b7b882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacfa03b-6e52-4f9c-8e87-c755c69f48f7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c58b95-e6dd-45be-8bfb-f995a239a493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1715268-5619-4fd0-9137-fc825a60963c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aea6d3-5abf-4232-9025-6ac9e217ad5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "727826c6-180a-483b-b026-d81462082e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac2b007-5c58-4033-a7af-6f7e92d62be6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0abf1a0-7a9c-4b83-a224-3b80b9a47c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0beded5c-41c8-44e7-a7a8-229da0e13839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643e5765-d515-4dae-a3c5-8d97992744f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb45909-a7c3-4d95-9dbd-3612d6fd9ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f46449-3293-4157-bc14-17b425742954",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2966d144-0af6-4c55-bec8-3aed5502d6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce70e1bf-12f0-4e3b-a7d2-2340002455ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4176c58b-dcf4-4f52-b6aa-a820c07f9e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "579b64b6-910f-4355-a92e-255988fa530e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d760f9a7-bbeb-4255-92ce-5d6c109e0e2c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bad0d1-cb91-4b17-8f81-d1a39b567180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb322d0-33de-4746-9cc9-b510a21563b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab760037-7a80-4018-b9ed-dd6279a1c7bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cd55a7e8-82a8-429c-9fb6-f899c89b99cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cdf3435-6286-4559-9c07-c58eda30041a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e5535f-b5a6-47ce-999b-d8d89f12214c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981a319f-921b-41e3-9a7f-231e2960700e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96aa54de-c7e2-459f-8ee4-7aadafaafebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d88d2328-dae0-435e-a9f8-42211a287ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2355ab6-b0a3-49e1-94b5-ded9a91c78fd",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4617363-e1ee-48cf-aad2-557aef066681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf91fe2-0cb1-4b92-94f6-7ca9dc5359d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ecf4f5f-b2d8-443a-ab72-2503c97fa6b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d7e0bf-0c58-4fc4-9695-465e643e25b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4f3a40-d36a-4e28-8c61-356859e6f789",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1fe66b-15ac-41a3-a2c6-b9c572131a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1bb8d4-85ee-4b81-8c45-cd07dbc338ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283c9a35-1727-470e-bb1b-039dd3c761fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "92867836-d19d-42fb-8d4e-4e67a28387c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46384358-9985-4a88-ab52-20cf9b55c040",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d54c0c4-c123-4d4b-9ebe-3b5c7e4a2a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f3e900-4280-4b59-939f-0e6b19b7d885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75d346f-765b-4fd7-8e24-fadcd3a9ad57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94860562-08fa-4271-a83e-0b47c91da482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a92afb3-e26a-415a-9d05-05c4ecac46ae",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81a4c81a-2d44-42f9-83e7-c387b326668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcd3743a-f0bb-415c-8511-0d5919ef1bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377d06f6-8536-4e41-a6dc-740e00a3b6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c718c11-64e0-4c99-93a9-3d2cc499b686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dcbe38-a8f9-42d9-8f64-66995d21e548",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5c20ca-495c-4c88-8ce9-75094187cb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d565a0-ea00-4fa8-9e8c-8f8574e1e616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "427ca676-413a-44df-9455-57cd92eaa30e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7226bb2f-d721-487e-9e32-fc0ad1eab816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d37137a2-6cbd-4f8f-bb62-814d0b5bcc2e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0dde8d0-6a4b-469b-bdb2-d8a0a9af4812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7defced-ccc2-4156-9d2b-a14d98bb0204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db2e95d-0bda-4f0b-9dcf-444eb0c498a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "31343562-5a0f-445b-8c98-96c948b5ca9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff66ca0a-fc68-4359-9c35-bb2e793a4059",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e3bcf7-d582-4620-b47e-a2f408fec5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7613254d-e0d0-4d89-91d5-3bc782235d70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e686c526-f8fa-4a3e-9b70-f65ae696536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5743bc-ebfb-4a67-8e04-a2717cc8f08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a97d02-6419-4159-8cbe-48ade87f4839",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bf2572-f31a-4543-b931-1a0b8ad406ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45e7fbb-1204-41cb-97b5-17d427588267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77b6d3a-b9c3-4be1-b50f-9b57e10355df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67ae9db-134a-40da-a821-9f8349647fc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ead578e-aefc-467d-8550-ace70e2b9883",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdba667-c2ce-44ad-9ae5-b1f219a2cd92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944e9d0e-bdc8-4402-a599-5e553301bdee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5305924-af6b-448d-9726-11c3df5d0f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e64ce9-bd5f-4e7a-99fa-d7e7f72ca3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b347592-2be2-430f-a1a3-60ee57f718d3",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0da3c7-82be-4894-8fdb-565982987c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e13a4d0-9a15-4ff7-abb0-7dfc606c6b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cebed3a-e6bd-425e-92d9-0a4b2575b50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5b4242-e2ab-4c6e-a492-16b67d3c47ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4091ed02-a814-4288-9383-025cf9a98d58",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea0c328-3c8a-4ca5-b22f-42fc5376b9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "549c1b01-15cc-4e65-8ce9-63b6ce07cf8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3356f430-59f7-451e-8194-c85f306b5dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde9a992-6b0e-4d30-83af-2988020ecae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4449decd-9f46-45eb-9b11-bcd5f34abc64",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b12529-3400-4f9f-8928-789f269033ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "448517db-bc1d-419f-b44c-21bbad0909a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1376d7-719c-406d-9373-790572cd4913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2486d4-7a8d-4a12-a9c4-d19b8898659c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec5e843-69c2-407c-a923-28e2975c5b47",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40fe7ead-9e71-4c1b-81e8-09db139e6576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c906c8b-fa73-4e00-8ae9-b7de8e6512f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d757e46-a802-4530-9eb8-e1fc6708f0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e4250ca1-a047-4a15-8128-ebf2b4861524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31dc4e7-8152-4d4f-a77d-66ae88ebabd4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d36c181-7206-435c-8bf4-db9b10a5daf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639bf1c1-dd30-47ca-a53b-194e94d71ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c186bf4e-70ae-4038-8526-e150c57f08aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a641a4b8-b68a-4fab-ad05-41c3f2d72fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95262490-2e1c-44a0-99f2-3d9fdac0449e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd09a3c7-0281-4d20-87b0-a48f973fe11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdc5678-08e0-45ec-a15a-16f5a99a6d5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecb4da1-b09b-4409-ba31-74ed6e781087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e79b3be-8738-4839-8e32-d1e09a2d001d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ac953-b838-4d8c-b9d3-bba93e4ae2e3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e79f1a07-4bae-4118-b24c-6fd9260c7f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daed64f5-0f37-4bee-a6b5-d626d1b9ca28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dadee1ae-c2db-4df6-a492-2b3e58fa9bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4cee8fa7-0f6a-4cf0-9de2-4690e8d3428c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dd003f-9b3a-4339-b75a-7883efe3b47b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf894d43-a239-491b-89ff-5016fbc26188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b37de6b0-c00c-4d6d-b670-c236fc4bbc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c74820-590c-484f-8da7-46ca06426371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a056681-9a84-4eff-8f8b-5ce6c8075653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3887f92f-3b74-4973-bd68-3f978dc4d2c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41b3ddd-032c-45ea-9add-0e99f7081cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5659a065-27ea-4c48-a159-8ab6ed96143b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83e8e9f-b5a3-40e6-895a-16b5cc3680a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bcf3226-9daf-4faa-9ad6-a28c3312cd35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7d83ba-e230-414b-8b84-d3d1b93055bb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "694d2bf8-85d6-4bcc-a2ea-902a045cb04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11434214-52a2-4054-94a7-cd6e27d56c2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48696416-56dc-4d47-a31c-21dceb28d485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ed662b-2600-4a52-89aa-859f722bd049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e7ddc07-5437-4297-8e65-cc7143d43796",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "803ffba6-7750-4dc6-9472-9f637f086851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "088be55f-ca3d-455a-b036-8c39002b1916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c716ebd-b65e-4caf-8831-636673698ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62e9f278-f253-4af5-8f1a-c9995634ea91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0f07e7-7fec-407b-8426-397706a9577d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2712217-19f8-420e-b252-d3a5bf7fad91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3f3aab-9874-4fea-b6a3-10cddc5b22e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfdeff7-bf72-47e5-8b81-97e827b22a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffc22ed-89c3-4ff4-8af3-216d077c8904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a169f0-4ce2-4950-9c37-35aa90a7b8df",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e1ccba-58ed-4a3b-be17-d572b0ac6c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb1ba5b-e5a7-4027-b6ee-0897642face0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "056194a3-275b-4713-af50-2337111960d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea07da95-6c19-4466-b1d1-7c7dc67ed114"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8439e38d-a2fa-4a87-a5e1-8afc669894a5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611a0820-60de-4097-8b08-8286e4358a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07121358-da82-4e24-8404-56ee2f046423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a15e9a-f5e6-4d3f-8ae4-5a14575c3797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c256f2d4-f8cb-4cad-87ca-230bb988c702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb291f2-287a-4c4c-a89f-2f1f4ad3fd55",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf92e4-f23b-47ce-bffa-7dc919ff91a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a263268c-fe95-4436-9c8b-a0cba7ed283c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8860e5-a75d-4075-83e0-b2760a5d5bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6ea105-86dd-469a-8cea-1cae107cec2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4c12be-8449-4c24-a458-641749cb70fb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1884b531-78a0-42ad-af5e-e8b2ad2dbf75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a997df96-5afa-460b-8221-b79c8fe8deff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f50fa2-742b-4862-9080-a4eed3df062e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0035202-802b-4607-b330-5e2ef09fafc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea76030-62c3-478f-9db2-152dcb071387",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d9adbc-1dbd-484f-97e6-066bc63c4d97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e56cd34-c016-48fd-873a-cfab7cd30b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dd8c32-b02c-48a0-a0d6-eefbe9029205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f82ff73b-f93e-46d2-8aec-496b8bdf80ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c07705-2de0-427c-8927-84c4efd57ef9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26a73ce-c12a-4318-9cf5-684be083e6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bcff74-fddf-4d1b-8075-9a4a55fb53e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4210c4f4-6807-450f-a04f-aed08120cc3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31c8d820-6bb6-4708-963f-a0b76d262a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e374cf4-1eb3-4302-b563-d2aee11e85fc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55b4bfe-6538-4a75-9472-093918eb19a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7dc0fc-3130-4b28-a936-5eb384cec234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed9d055c-2911-4d59-ad84-66ec8d87639b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e92e6469-d5a9-442f-b882-a067a96498fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e8858b-68ed-4108-9cd3-4dc5fa4672fe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06dd2a2c-ac30-4f45-8a41-e530cb6519b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39f8fe8e-6650-479d-9efe-90e3cc187487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5020335-6f94-4e76-9677-a1b336939080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "24d45442-a74f-45e8-ab63-6e3de190a2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca09b49-c152-4ab8-bd81-800bbb67bb08",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33d5922-284d-4501-8ae2-fb495758ebeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ad92b6-63f6-4775-8f84-fb9140cf2777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ae9d3e-fb55-4b8d-a311-9092971d1448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c157778-51d5-48ea-8259-24059628c7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5335890-4958-4759-a586-3f3defd70d8e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f02536c-4934-49b2-97c0-68cd43762ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f1f2eb9-ca3f-4f8e-bbb0-3a0b44da4677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918a02f0-e2e7-41b1-932f-fc4bc7f99a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b85e36c9-4729-4ba2-9355-b4d118a440cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6682a9ab-9240-4acb-a0b3-543308590eed",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8073a4-f7b5-437a-8a74-1697861051de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f21383d-dfaf-4b63-9f3f-291fd7b15dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09a258a-d910-4362-b996-24e69245402f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b235be0-196f-47f7-9188-8961410fb9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd67e05-90a8-4c3e-9d73-683e126724d9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d702bb-272f-4281-8511-5f662f16aa41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f45c23d-0427-4545-b6ea-eeb03b494e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392b99e8-a479-4500-b20c-751e8ad7740f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "773c63f2-6c8b-46a4-8362-3a863ae04d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387bdfa7-7385-45b8-9587-56e2066daf5e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aceabbae-1392-4914-a7e1-9ef4c64593fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41726e3f-de32-43d7-a882-e8db71b7a5fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6edf25-26aa-4fc9-bdcd-24e6526c8fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a1f17e-3b9b-41da-b201-430cfb003963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7c613a-c2e6-469f-a794-5e2f15a8115e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bb221f-dc48-485a-b47b-39e094e4fb29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ededcf-d5e7-49f5-92f9-b2d31e337e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f5a471-de64-4391-a529-d783d6f766b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bd519d-4d2d-4cd7-99bb-e4170ec8acc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c72082-02bd-441e-9439-9ff1135c6ced",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "609ccb6b-2b64-4b98-bee2-b75ed944180d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c38fd405-0a50-4f2b-b161-762667eca240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7254340a-7081-4844-a76a-7d3d901e66d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f696d07-9267-4e01-8b53-0502b1454db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a43b87d-9bb2-49f7-82b3-fa6cf22dac87",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e7f3f85-e592-4f61-910a-6dc21b240fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc855169-07c6-43c1-85e7-cf323cd6e179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1da7d6-3f43-437f-bf73-77a1dd39425d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24fd4899-0657-4dd0-8481-4e03a7c65ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbae05f7-d075-4bbc-9c55-ca99521b0a13",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f82168-b667-4fd6-953d-52190604b17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1615ab88-075a-4e3a-9a89-60072a00c7cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6854b0-7858-41a4-a09d-b072572f4e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "da05ffa5-5a86-4c19-be50-f9a3f564721e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2649fd96-2a6d-4871-be28-1bf27dc538d6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45eb7be8-d52d-4ba6-b049-9f0900de5fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19743941-6c84-4042-8b92-f77ce03e7a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af92f998-26e6-4ee8-ad31-0b5d7e49ccb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc4c362-a052-47fc-9419-e95dfa210f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af8a11b-86c7-4f45-855a-a24e2051b53e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3c4af1-5cb6-4e60-9f63-940e449d4d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852c66cb-c966-4859-88a2-1faa4a28791b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a7dbba-b229-4255-8062-4f0824b35410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "634f08c0-0442-4bc2-b51b-b4124079c04e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0a19da-2f5c-42b1-8d71-d0a6d4abdcf7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cfb2fd-7797-445f-b182-eadd64adbb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1047e0c8-c846-4e5c-81d1-8ab66642267c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7e0aa0-d4d0-41cc-b8b8-8604f893e0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "300f37a7-84f4-4558-9926-eb5b0970125e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c849858-9524-4fbb-9b1a-ef580fe7fa84",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89951832-7add-4b78-bb76-d931b8bd557a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db748ec6-9c9f-4d66-a055-f79f52b4339e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207de514-0b87-48e5-8252-7aa3b1c0a783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e609cf0-3e83-4c06-9927-8f42412a16b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6925956f-197d-4de5-a0f3-66904bf4fdff",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ca8846-342a-40e4-b42e-33cc3841cb8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74bdd474-00e6-4b07-a3dd-ed30ce29806c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86207ebd-b759-46ea-b6d3-bdc88662fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "935ee918-e8c8-4aef-a420-f35dd4c2cbc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea0c742-4591-437c-8964-184a9c8ba21f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb06ebf3-77ca-48eb-bbf4-cd4f554598e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d0caa5-53c3-46db-9f0f-26c1d6ed798e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b315cb50-8392-4a21-a5b0-30c9deb6ee16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e32e725-6f7d-4688-b7a5-0938acafc43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadb4b93-9327-4acf-8ff0-bcc027de73bd",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e63725-6cc1-4ef0-b556-566ca2a88d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbba6421-a8a2-4c46-994f-f70317894dc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029e3449-5f26-42c5-90f9-bd8be2425b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "534e5659-3a20-42aa-9fde-2bd73dc55a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c434df-3af8-45e1-acfa-08254606da3f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2b304b-a65d-48d3-a887-ebdc668f9a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08532a8-fe73-4df0-ac31-fcea73779b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6042478e-0187-41ca-99c7-bc8e1f7458f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "527ea740-f2e2-4524-ac70-e0c808f42929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e920ebde-0f19-4110-b87a-ae645eaec6fd",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d6c76a-908b-4452-875e-ebbf9fb133c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b3cd94-4a55-413b-a048-0cdcba51685b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4567ff1d-7c25-48df-9cd9-c1fb8b91f7c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2b8293-736d-45f2-82b9-18de7bf33081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee1ca4f-e277-4ede-a086-e459220ea5f6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f8f94c-ef58-4682-9305-39957a3436cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b6dd81-7e24-409e-a6a8-4e66cf61f9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea29a12-7a1b-47c1-a886-878392b76644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "72ecd1db-ae38-45ae-9053-6a4472193dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aabd9e9e-6d69-431b-a4b8-d8b351850d4b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb6ab1c-8cbe-4715-ad2d-99c61caef614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f8d80a1b-2d0f-4a69-b735-edf186d06c9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0a5f98-2a06-4519-99ec-9fcc3121703c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "db6fcdc4-4ffb-4581-8ccf-f403f7b8b60c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "43dda38c-016d-4a08-8e06-e6886f737bae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c231f5f1-6005-4de5-b018-393bc84d13e5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630f8c90-99e1-443b-8179-105d1e4f22ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cfc42e0a-9b34-4662-ab40-50bd5344d7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206a524f-7ef3-4249-a412-e9db699c9ddf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "474f02d5-1232-49a6-802e-7ccb9b94a80d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "099201c9-1a08-438b-911e-c0559f532546",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c58f8612-3a58-4fe8-bc87-2795d292dc86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0db3ff32-d49e-4c74-ad84-c9603421951a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51d5d721-afa2-4346-9793-c99b282ac45b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6b2c8754-fa5e-494c-9337-a88d7224694d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09b9e349-d34b-4e11-af79-ccac6fdca19a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "08c1d735-7a9d-4d05-a189-4c649805c1c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "98ce86fc-d7af-4ac0-9491-58dc5600237c"
                }
              }
            ]
          },
          {
            "id": "1f69b5b4-e7de-4573-a7d4-672e1e08aea0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75afcded-2026-4365-824c-7aeb49f44b65",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "29a11de0-4397-4696-8fe2-4f8c9c5cc83d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9848a54c-8b7f-4a23-b897-a771f7984cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0af5d59d-e82c-43fe-846b-6e8517b59bc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a19235-53dc-4a97-9cb5-ca05d6de0478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42eddf67-36f3-486f-a084-d999380dab22"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f96efcd3-c745-4b1a-9686-c3742c1fe09a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e8e9343-38c1-4029-b546-9c6ea3a37671",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7172484a-b6ad-464f-b952-aaea666751d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0144a645-fd1d-447d-ba3e-434a349b4b2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f38371b8-d64a-4fd5-ab2f-b72e899ca5bc"
                    }
                  }
                ]
              },
              {
                "id": "7636120f-d233-41c0-8a29-5bfb1ef26f5c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2f0a2eb-a30a-4bb4-adb9-36ce6505b988",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f6164ca-91dc-474c-8caf-91ea67c309d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f907508-c41b-498f-819b-5053b255e24a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da26a715-474e-43d9-87ff-f3858b44d1da"
                    }
                  }
                ]
              },
              {
                "id": "d8f386fc-57e3-4119-876a-c16c3fb29b18",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09522a03-1c64-45ae-84bd-250466ccce3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9ba7a92d-22ef-4441-9e2b-84227f69938e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bbe2b51e-c9ef-4188-9af1-287797d55f54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f15b87de-ca97-47f0-ae85-de64ed1e3fb3"
                    }
                  }
                ]
              },
              {
                "id": "5114b0f1-55e2-4552-a2e8-0a3ab606520a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0a93f59f-258a-4927-959e-6bd2c20f5e5b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd3bec4a-5f5c-4b15-b970-960b2e3510ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9888e274-3126-4286-8ff8-5082b6d25b40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4181bc91-c90b-497b-bf4d-a4f309e05574"
                    }
                  }
                ]
              },
              {
                "id": "3df18561-45d6-4e25-9240-cdd104ce5ea8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17e3b88d-1593-4214-95ed-f6df81f3ea0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60fe3196-1e08-4f1a-be42-8b3d42e23677"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0bc17f0-76cd-49a9-9744-fa77bffe70c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "db951f20-e6b5-4f1c-beb9-82ab87d00b76"
                    }
                  }
                ]
              },
              {
                "id": "f1ad33b0-5ad9-411f-823d-6f8523706e6b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e1ceefd-6545-49c5-93ed-29dee1fbfafd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "49aa6b30-dda5-4676-9312-b24bf43f3b02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0488eda7-4010-45f9-a13e-360a0bef5d29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e6eaa3e4-a6ac-4ca2-be00-79fb88c24fa3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62aff6ac-3e8e-475d-bae3-b858d84b2aa4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0dc50ef7-74c5-44d4-9c96-c668287693f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4d8d9346-bf28-4469-8b61-ac861337181a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "790c1dca-46e0-4952-bf28-9ef7bbc59333"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c922eb21-340c-45cc-a6d6-6de534b99bb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "3008c52b-e509-4c02-9aac-fd28dd08b6fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f2b05d8-fd76-49df-b9e4-b10f452af258",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3081cf80-5ab0-4460-ad42-f6020eeff092"
            }
          }
        ]
      },
      {
        "id": "ef50047c-e9c2-4a6e-a006-8f6b1b544b92",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "36071d86-dbe8-4c78-9849-24aa100c2093",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3bf449d5-8602-40de-be1d-aa044f35f90f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b94adf40-638d-45cb-8915-0953c943e3fa",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4c76f6-65c0-4a02-b80d-68ae11cd071f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78271fc-d9ec-4e7d-8355-590c77c18bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d49bd937-b6e5-4ebb-8c94-f82c6a523355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5bd9769-d5ea-4cd9-93ca-3b823bd124c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4257e5-3b3b-455a-bd4d-ddf0df4dfbc9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba982d5a-2990-4257-880c-bff986b87c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121d35b4-5d17-42f9-b5d8-0ed1cf80dc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deadb88e-017c-4f6d-a50b-35bac1e6d118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b500ae-1c52-4a22-b71d-6d13db437bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d186f9ff-65e0-4aef-9fab-3a15ba1906a3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e216e2-8b1c-4e63-b9c2-7615a40b2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84e55c64-bcff-44ec-b9d2-51721101a3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50248f7d-8c1f-4a38-9e0b-fc6ce09fe708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "286159f5-011c-419c-b9b7-76d60eb43eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98091955-4708-40e9-9d0f-9ccc0d0ce844",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f01a9d92-6dba-4257-bdfd-db5d68627bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4911203-6878-425d-9bba-c48e43acf0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a909ea-0c2c-4cbb-9ae7-f9b14cc45f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6535d8ec-370d-486f-bc09-13a0043783e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b2c7ac-99a5-4cd1-9bef-05bcbf0f76a1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2e1a94-46fb-473c-b160-d98294bf5e47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becaee96-573c-4c06-9933-a83625d3602a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc8d9a7e-4dcf-4ed5-833b-fb71a3ff8360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce621bf-b402-4ea3-9b2d-12f479c3088d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97513123-e7ec-44ce-9e76-fd28cdb58c20",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbcbb24-a181-4748-8737-9b3321420b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eaa6288-aabb-4d90-8c43-f2ef52225a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baf45ab-137f-4ceb-875f-e6b3ba105975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc8fabb-2bef-4487-801e-613ebed5c820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7529e6bf-0b34-478f-87ff-3e685bdb1643",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c922ff3-f911-4f85-b6ec-b70411db0c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96a7b2b-205a-47ae-9fd7-e7b8094eec12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf230784-a22d-46af-b520-b6893efce1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4d6453-c131-4922-aa89-625bcc30f294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f8384f-f961-49c1-81b9-fdb715b5156d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cf89ff-8939-4d4d-8daa-ff7c565d2623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccb4c72-5cea-463e-9f8c-e3c2abccd29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a377e8-3b56-4cfe-81ba-791d52a5d2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb6de71-0f25-4ed0-ad11-fb155dab7a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d155adc-1f0c-40bf-bf71-e522fa4a3562",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a44eb8-a7cb-4cca-9ab5-f957f6b3c238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8a32ab-1aed-4061-9f3d-033370ccf047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6da8754-f040-4ab0-b1f8-365db5156551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95557e8e-e113-4380-9931-c3cee6b04548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c44d3fd-b800-422f-8f6f-84b3cf8e3c80",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1884f3ed-3dae-4323-b89b-a9cd49d911c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92aec984-fb33-43b3-9510-123e5bf1c71d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc949a37-623d-42c3-8e0a-cb9dfd5fd222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c33d851-3757-47cf-930c-ed2f35da2640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d2c5e6-b3e0-443f-9999-f16896060f65",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1857d0d-dc77-4be7-9559-ed5f621697ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ea37e0-e650-4571-94d1-aeececdc0bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7063acc-02e3-4808-b83f-57217d777332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "22f57001-867c-461c-8070-115dd5bd0535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f400f1f-f032-49c9-8307-50dcec500b03",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda95c28-c164-45e5-ae67-ce4c2f4565cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f799b17f-d9f5-4f9f-acf4-67b20579d9ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc83b36-d5cb-4d1d-a630-1771d0c15da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b482dec-ac4f-46ed-a2a8-42032a454360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1bfda1-f925-4e8a-bde7-74e50c66719a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa86152-7f09-4c3b-b0ae-a3d0fcc8ef40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea1bdfb-b285-4ab7-8121-2950a516554d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827878bc-5d52-434c-b79e-c5421e3938ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3230d4-f4c4-4563-b498-b67c7c0d6182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d67801-5b56-48b9-84c1-709fbc7ff0ec",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8aaca56-7b70-4f49-96c6-507cddeb2214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45770900-8bac-4f08-9ca3-fe9f79fdfba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868c312b-b607-4041-8f7a-f3888231929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7258a8-8278-4067-800e-f54a68e93a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bbf6f3-5745-43f9-b926-a4749312d860",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9df48ca-16cd-45a4-b404-72a95c38c8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14eb81b5-fcd4-40ee-97f6-b742aa24c100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b96e5c-567d-4e3f-850d-c3712f028597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "56e7d377-960c-43fc-b66c-2fca9bf611f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16af3a59-0825-4a2e-8d36-0e477c9270ad",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae64b77f-ebfb-4015-873d-bd23e3579126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fae8313-b31f-4b35-9e5c-1a821d412e89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8227044-830b-426c-a230-55fcbf17c111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8744c7d-e893-4cb9-a56f-6c4b318a34d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5922b1e2-595e-4d11-9b24-b87ea47d0b63",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5e5863-168d-4069-80a2-17b9659fc8e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6aba75c-98d0-43d1-8ea4-af63cf05e157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4400cc5a-d65d-4fc0-ac7c-564c599a9443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "01073814-b681-4277-b815-bb58b5b2603d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6d90446-c3d7-418d-a4d5-e6af78ade1a9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9901991a-5767-4b99-b7cb-2f22139c5679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4400f98b-dead-4dbc-aa9d-27785b4017f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f87337-ab91-4fef-b763-f0c00b5d559d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc5fa7c-6404-4039-b704-aed8a3faac4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72cc3c33-82b1-428d-900a-83ccd1406a68",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d27b72-0f7d-433e-a2d5-299e73a050eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffd2a6f-9bd6-4286-afca-6cf92ceebd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f85e721-6b68-43c5-b5f1-c180dab1cdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "887284b1-7577-4924-97cc-440bb6a87457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fa67ac-e0af-4479-b79a-f3df548ecb56",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68d563c-c2cc-4b89-b491-afa65367087f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6337b52-4f24-4f26-965b-ce370a745f0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28f8b3c-8695-421b-b874-4e6dc747065d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b27593d-0882-4224-a4c4-0442b60402b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d332fbe-d6f7-4b71-89c9-05c7fb16a96a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ddf218-9112-43f3-9b61-849b98b81d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6fdc02-fa56-452c-8e30-67bb54cbcd61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a23144e-3598-4b19-992e-1e6664dab1d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f1aa14-cf04-4217-a7ec-41c23a4e95c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fdd1d9-4523-4ab6-9000-305e0491bed2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8090bf-a4b2-4578-b93b-1f02c3ef283f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd713843-b78e-48bc-a615-c47703c9711a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d709a25a-19c5-4fc8-b216-ff11ae5be48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc3a7291-3d00-4cc7-8528-05054730bcf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7363e28-be40-452d-b9ed-ecf541271784",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70df3346-2044-4274-86b5-f3e7bbeef497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "decf617d-99f9-495d-a4bb-4ceb8546c441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55840410-7e17-4cf2-875a-da1b63b12be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "583ee683-3a1a-4aaf-9363-a8af42c04b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c145a31d-03be-4244-8e4f-8bd27fba5f7a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6df3ef-b26a-4386-b0c3-f5f23d0172a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0afbe9-d7bb-4a42-857a-0972097ac28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607eff1a-78ab-4d8b-9c20-5d8d130eead1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3e9198-d877-4fe6-b9d8-e0b9d72183a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f1e77d-f01b-42b8-8274-05545c524121",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86e080f-d7cf-434b-99cc-86401a137472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "621cb942-747e-4445-bbd3-c75b50335afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d280090-2ede-47c4-bf8e-e826985dd1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77bfa910-9b8f-4624-8ff5-32fbcba206ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b49852-0e5b-4633-a09f-1973d489164c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f646e1d-1019-46e0-a47e-8d696b7f2ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ea9df8-658b-41a1-bc1b-91d329add757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f691de-70f5-4ab8-a0de-75e87a3dd112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1d998ba-3b4c-4892-8c85-248ba53208fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0770af71-e87a-4a23-8067-e99d11b8817e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d492be-feaf-495f-8120-0c2e453d341f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44cc0920-25f6-415f-a92d-4d0be8024361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8be194-75cf-414a-a284-22d23a1b4c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc031b6-e149-4f78-94ff-630db577dfe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbe881c-814e-4373-a71e-bb252ac3de17",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "037a5b62-f4c7-4e04-b261-2a7974040288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2398c9de-5759-4457-975e-da15c915b69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c1db92-80e1-46f0-8412-42c52c041a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a37d6301-5643-43b1-af2a-d164be22debd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d75bbca-18a8-4652-ab88-886d8909d1d9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc0d9ad7-14f3-493e-ac46-111848004cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c045920-8441-4d9b-98fc-954b8de7037c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e66232-64d9-48d9-8fb1-7404e30fd000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4699eee0-66ff-4f82-98eb-4f1ada485e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28049cea-8829-4f58-b5e4-3c9c4ce28565",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af81903-5f59-4329-bfaf-880d2ad6da25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4b23373-d95e-4e6a-8b49-43409f25fbf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ad29d8-51f0-4e04-9850-651b24973e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "784705ad-2caf-4a28-b6f8-46dbdb3d6a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03bf1c9-8c73-40e1-8854-664556393ddb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35783d92-8396-4a53-8746-5082612bd59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e58509-8a35-44e9-9992-3f2ecc292645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced587b3-932f-489d-acd1-b757f792ed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8cd9bf-523c-4506-9b2f-e694f8a4843a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9c1496-3dad-4ea7-a3ee-2228fa3189fb",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ada6863-dd66-4e20-9b5a-1addbece2c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01756c4b-b9ec-4869-993c-c7cdb5ae376e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1bc832-e3ae-4f9c-8f3a-43614eda1acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40af172e-cc97-4708-a41f-d8d86232f60e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc05a6e-a707-42da-8e94-9b23f6674752",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f492164-7b58-49a7-bf40-c4be4b0494e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "950738c2-369f-4990-bb3c-da522ced5521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686a5485-afc5-4e15-8819-a843d8b2a32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "226b586e-8a5a-47cc-b8c5-01a54d6ce638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d61f994-f1c3-4cf7-bad7-b7380e582085",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f03e48-987d-4d0b-aa0b-364aacf3a80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c1b178-dea5-42c6-b04c-a4ad23efb438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd77ec5e-1ad4-4051-896c-4eac182cbdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78fdbf2d-e869-4e23-bb1f-3a484dfed019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c21958-ea21-4c16-9af3-b2deb0bf0685",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e866739-a44e-4cb2-83ba-56d6bb1b9743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d75c9f9f-ad4d-426c-8393-be0506dce670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b234895b-31cc-4644-bfa8-e65a122bb09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab92113-0b8e-4f59-aec4-9994e6c7874d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43102d20-8143-4266-abf1-d94e6dc1e392",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d2a908-1495-43b9-b595-8a989ab9cb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566d03bd-a321-407a-8dee-1bcb6b01c925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123357f9-8255-4024-abfc-7a32cda2ea16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f21557ec-f3ae-4ca9-980a-110a9bc79f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70165a8a-9365-4034-aa75-cc12e2da9629",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1203814-e4fd-4108-90ac-87fde9ce8dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10870a66-d263-4985-8ad9-10ce4e1f5d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21134f8-a574-4a0a-b1ea-989c081313bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d66f2218-6cf6-4f12-b208-d1d54e4b39fc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "323abb57-a2eb-4301-9f33-13198f4cda0d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a93f32e-eb96-464a-948b-5acbc4029654",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8febd7a-ebda-4307-8e08-5774602cc200",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "60a99b3e-5058-4591-9525-e5df1dcc0429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c8414b-d3e1-43c5-a692-50751f53fbfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10e592ca-f8a5-49df-ac72-4dadd8c3d597"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0bbd6e0-22ea-4d81-9b81-3aba24947f19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "523fc53d-b52d-44b3-b7b1-fb7a906c50f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "26176fda-1589-402e-9141-12b30634567f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8acb7bb-aea5-4ffc-9274-2a57e66019c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e39b282b-6b5d-4e1f-b5e0-d1f06a9992bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "de0b915d-be7d-4a3b-9cdb-15a4ea707b88"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19caff6c-33e9-48b7-9c66-0621c4c87875",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbb073b8-e90c-4ab9-abb6-3658ec0b80a9"
            }
          }
        ]
      },
      {
        "id": "83ae5ea6-ff3f-46a4-a6aa-9a9de03bcb05",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "25a78f41-3842-4fe7-bd24-4d82cafde5c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "717bf273-12de-425c-ae15-280002027ddf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3747e3ad-09cc-46c2-a58b-7fd9d966515f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3741aa8b-152c-4217-ba14-63faddafc971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfd4f03-67ee-4dce-a8a7-3c2f927392b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518f2e1b-1872-4520-9d6a-18a59a8104a6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a5a42e-eebe-4c18-8407-1cc8d41dfce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfbc3ee-a13d-4ed8-a0c5-8916b79e6834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba462d0-9eaa-437b-931f-3e446e433662",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f5e682-0836-4eec-b037-4d18879b2166",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6697357b-4a52-428c-8923-1095bf0b03b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee79e1d-fc2b-4989-9233-b1ab3598a5ef",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61973080-2295-48fd-bcfd-137774de8078",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3534dc21-112f-4bde-856e-dc5b9f3c02de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c5eb1bc-0632-47d2-a3a4-491e9200297a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0207b5-f92e-42f4-b195-311af51f0239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0228d99-3e88-4777-99b8-02485f794d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cb466d-0f89-48e3-a0ed-273a1638332e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19de25ab-5f5d-45f4-b670-1a676a46fa09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c3354e-ca5c-49bb-b34c-43f4f7b65916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ded79f1-db4f-4c90-9ba6-4cb6354a9547",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a4bade-3272-4523-aac6-a2b209532bf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94dc69ee-af56-45e6-b719-507209dd4873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c3254f-31b2-456a-a000-d0504d3fa7ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1f0589-b21b-419d-8dbc-00f01f5b61b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fea5e58-19fe-4c40-835d-ba49510fc920",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b95742a-e006-44a4-bbe1-5a74a03ea221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5181d33d-214a-4f18-aab5-1923df4da67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46acd6b3-0dfe-4567-a2ad-844de179ccdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f76fe51-4564-437a-b528-00ce10c3d390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5492e51-32db-4246-883c-5ddd05628934",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da4c1d4-7aeb-4f8b-936c-a04e5570996b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bb8144f-6b40-46e8-9999-9a2a3d9804c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "839b7bc9-cf83-4b3d-bd07-9fc44e6aa520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1024491-d748-4780-8733-f2cfb59f2659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97daa67f-d12a-405f-a75b-7ae2061e2ee8",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e79dc8-2ab6-473b-acb8-18d9b903dfe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13e88ced-0ec9-491e-9eea-3fb3137e4ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9855bd2-9ff6-4e9a-9d14-90edca21436a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a566f286-ea0c-4d80-bd35-e5396c5dfd09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eca6092-d30a-46a3-8796-80eb4defd07e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0b9581-918e-45b2-bc0e-1896ab25de4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7483167-1f05-4e34-b328-a4ac8491ee82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "037f7b03-19d2-4d6b-8f46-e8bc2d6aa913",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51931b85-4e05-419c-a587-a970b3ba240d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8051ae0c-e79b-4c6c-96a6-cb37ab2e48b8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7457d181-cce5-4dda-b806-8ce9bc143a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3425353-b35b-40d0-965b-c3ad41307748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb64f72-a178-4b5c-a67f-bbca8169c074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ddbc45-e8eb-44cc-b06f-18111e4e12cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c27fed1-86f7-4304-84be-bdcaaf31e097",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e0b232-4ef3-4976-ba8c-ff77a45e9074",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "290c3187-0762-44cd-9829-fa19f7289695"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8cbf51-80f3-4679-8f1c-669c4583743e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4355440-a69b-444f-9785-34a606ac471c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3302fcc2-3513-44d1-a095-ad71a486c2d1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5381c08-8af5-4f29-af9e-4e4a41131aab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adbd2165-b83d-4869-bf80-a34092ffa380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea9082f-831e-45ff-8323-76c1ef411a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "370eeff9-038d-40c1-824b-afd31682596f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f16cf06-35ec-4317-95f9-7f6a5a1afa9d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0364e8e7-d180-447b-9151-748f8a0c3634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f7cf8b4-c66c-4243-933c-6613c69c9308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c568bfe2-7c73-487e-9786-acbda934ebaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e894bac-984c-49e3-a8ac-c2725e01b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3737f852-0544-4fc2-8622-f2e5252359f9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3a1f16-26d6-49c7-8506-78f2e576bf0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3436f17-4f9e-4a70-9dc2-f5a9f3c1a117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e090a1e-c61b-46d2-bacb-9a16cf326948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec9c6c4-879c-4632-8bfd-bd8478bc8754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc81e2d-6fef-4605-b73f-66cb73b42355",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e66d32-fd8f-4291-a34e-1388dd99d8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1faaa26d-f439-4e07-8f05-200a8ec99517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "757522c1-3944-4609-8d44-53afb23c4ec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca8fe1f-08df-4e63-bb5e-2f297ec3307a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837fa70b-32af-4299-b646-024628b5ba1b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a818e8ee-f776-4baa-a878-757cee37b62b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d07070-ad27-4714-ae5d-ffd77ba1bb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690400a3-d457-4085-a460-b51a8c6d2466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff0a406-3194-48a7-9641-11a30d301233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef49341-0f02-4738-9568-f1b95285c47f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fd15a0-dce3-46c5-b024-2cff93b1ec78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a8fdd5-3869-4270-a2d1-8dd80ce15ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f32334-04a0-4127-a25f-7952e5290dc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1369292-1c78-4242-9f9a-0d6ac49fb025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42f82685-00ea-442e-8af6-a72c2e05c9cc",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e4566c-d728-4d80-a981-0cf7e456c3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8e784c-5f9a-46d8-8ac7-63a4ebf1ad4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9240b323-ab6a-4984-b8ed-d478bec03bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826f7d54-40f5-40cc-a260-94fbca8f1edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028104f6-d712-4eba-af75-95ca33305f20",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc11b74-a721-4e89-b08e-4b03ab0f11ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0442b89-62ee-4285-816c-5633b1d41b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0333a646-4ac6-40c9-86a1-49cf5cba71cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0870c9ad-c56b-4f94-9d46-01af79930b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6e62a6-3f34-4162-bd4e-afd78e95b7bb",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f73347-e618-424f-ae5c-69d4fe578811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1698486-0e84-4202-9756-8ead457cc935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6764bfc0-3f39-4955-8c9d-fe8caefcdd01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99972bf7-94fa-4738-8aef-aced6df7bfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aedf239-0e43-4a07-9b6f-dfbd4b1311cb",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd0171a-7843-4f47-a75d-5c9cf7087638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b8c257-7bdb-4c87-9861-64bf5ff71d88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f14c3d9-4a48-468b-ac6f-83d54cd89ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "412113c2-3053-433e-b82b-710956baf4f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "637eed4c-e77a-4e7d-b94d-e1f63e6bb292",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220aa990-d129-415f-beec-8b37c49ecef8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bd97b0-64d9-4510-a11d-aa85575c46cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c501ab-00a8-4cc0-84ae-6c2dd7eebb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848d640f-38e5-4b76-81b9-df051ac65f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2652395f-8bb1-4495-a542-8d2f7f5ac8ca",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd855492-8cd0-4621-adf5-94cb96771357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85bcb5c9-4f32-4493-95d8-c6a887c6414d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bcbe36-299b-4391-a4ad-977f1a019ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eaf3a16-ab2e-41d4-a56c-6d73f1e4e37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b777f2da-f777-4ce1-a8b7-f53c8740a26a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b627cd84-fd9f-4654-a819-619fab0d4740",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ceccb9-7369-4bcd-be26-c9ac6d3e2703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "105a1abe-1b8d-4c42-8ba7-0ace74e7ad6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b9bfd9-0e4a-4a51-a259-2c1a489f6dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7160f8-b1c9-483b-85b3-8e44a0074623",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f79447d9-1a85-4454-84d3-a7b19abaf45a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a0412ed-0a91-49a2-ae67-b3b0097e5b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d69d851-5a05-4877-bed8-a2f2eb29e768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ea5108-8f3d-4b2f-b255-934e0e50832a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7136856c-e922-4e55-b4a4-601cd16569ce",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45049e1f-dbc6-48fa-bd04-03190ba7c388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd22050-31ba-48f9-9798-d6dd3f4dcd76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbd1a4f-f4df-4f1b-be64-7a4b14be4d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64145d1-2b39-4296-80bd-cc5e12fcd41d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497e51bc-958b-4641-8c01-2d553e166a10",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3481dd80-8d44-4256-9e66-0634668aef22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5378266-7af8-4398-8c21-4d2b7fe85c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff98700-9c17-441d-9506-950a23e86839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2cd982-adcb-4912-a6e5-ae1e6b9c266a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe0877a-210a-43a3-9942-c4c3125ec5b6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da522851-b14b-40ff-ada4-07c9e82a75b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70e1416c-7b5b-4e9e-9de6-16b976baf13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b661e5-30de-4ce8-b5df-5339d5f97411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a37ec98-358b-4394-9f7b-b27959c41141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b475ff26-2c49-4b91-94ce-7fb1ee6cf030",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac77613a-3e38-42cf-b9da-e6cac0bc454a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4241f5db-b27b-4393-8fba-a6f02efef49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad107eb2-a86e-4ded-99be-5b05bfe17d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ff3b0f-3da0-4a84-8fc2-bcadde01f359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9543236-1356-4c6a-b605-f404a189f6da",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4da69d2-974d-4ff0-ab15-b4a9deb38ab1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b7f8246-3bbc-4eae-b463-37e451077b6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb7d7e9-f421-486c-8b6b-4830f9f33702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ff3602-e5d5-4758-8823-30dd017ec77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e3e62d-b3a2-496b-9ec2-f4b640769f74",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24f6c87-158d-4920-8c87-972f6057acc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef20a5f3-d03b-41f4-a594-5d4cd4f8e11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c774a698-3a8c-45de-9194-1de317e06525",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "538acdf7-9f06-47e2-b666-ba49ced368f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ef6c6d-abcc-47b8-ad4d-34023464c91d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8343774-9d5c-4157-94c3-dba2401d2a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d36aa89-ab97-4e0c-9063-6bea2838b04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238fab68-593d-4d6e-9f5b-47d9ffa467e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43db6c34-0772-4338-a04a-581e63533ead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eac82e32-25b8-424e-a6f1-eaf72481af06",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d596accc-6508-41b1-9957-404468011c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc552e85-f12b-4ac6-be57-b0c93804f2ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caeff342-0549-467b-9cdb-3766da46dc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7796205-4704-4eb6-adeb-892374da3507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51c572d-2b0a-4739-a715-33749e91f08e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b09eed-f950-45fa-8224-9abfea3df2fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839f2418-0797-4365-9ee1-9ca057d28ac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2bb196-6a33-461b-8d49-8f68cde15368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f790508-4bdb-4e10-a0ad-84add4f05f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11037b6-b89e-439b-aa6f-6e3da769f093",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921e27a0-281a-4994-adf0-1c311b31a3dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fae983-eada-4ad0-8edc-12cb0868ad36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fdd27c6-7c7b-4fb0-920b-c123f394ff24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1077ef5-6ff3-4de5-9df9-ad268994bbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8b0c3d-cd5e-4fab-b299-39c2f4f2291c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3589a27-da7a-4640-9ffe-7818f2a98290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53831ab0-46bf-438f-ba22-2f431b11c2d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c5d2119-66a8-4fa2-b603-bd9fea9169b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7c0e64-5591-411d-86ab-c91cd6f74579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37314053-3700-42ff-8087-2d13546691bf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcceab62-64be-4017-b59a-92c6ba8e344b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c909c1e-e65f-449b-9148-1ab37a74ff40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146ce0b6-f4f8-49f2-b015-ff499b0cff13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8a3075-7163-490e-b9ea-3054342f89f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cbfbd4b-ebef-48a5-b0aa-37bf5ef2423d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c0e971-133c-4104-b10b-5f8a0ab09f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d75fab-102a-4d5b-9f96-b629b0799caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e939d3-f74e-400c-8449-226b824adf73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e50c726-75cc-4147-9e60-2054a28d25ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b18992c-bd17-449e-abf8-7a23c24085d3",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8063619-f191-4741-a712-94abb0e66574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e539142-8e70-4a2c-8fcf-afd5adceee3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b9dba1-c82f-496d-a5e4-f7bb67118ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e6b992-4167-47b2-9219-0541dddb0a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52564b4-84d5-4fc4-b073-dc0b69d1cea0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7d1c6d-318a-4a40-832e-b838df790d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec6fd63e-694e-4db0-9401-44450457e6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d152d7-af8a-4c42-9c50-de2eec70cd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c84758f-a065-4adc-b485-6ec98df478a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad36b1cc-eb6a-4a58-9fbf-e7854bb2d6bf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c047d537-f5eb-49d8-8467-5a09ad09d95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6afa0eeb-ef18-4033-a258-d400a5856fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62928a89-17cf-4125-b421-9014a52214ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ef1523-4d29-46e4-b04f-1eede37e0eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6a335e-ad01-49e0-8d5d-1d33c7fa3999",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8422cdca-bc5f-4404-bb81-1e86dfa55802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09e89f56-aa08-4142-930a-7daddd05a3b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888c375d-8ca2-4983-93b3-06c2f4b2d3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c137227a-0342-4768-9905-e22351a9f5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcb90af-9b79-4f44-82ec-36716169dfee",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "724527d8-9e2a-45cb-9472-c858d34d8cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4171cc-cac6-42a9-93ce-09175f9bc403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab5baa83-35ed-43ff-b716-84c7020eab61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a79686-d965-451f-849d-739174bf5476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b49a2f-5b9e-4ae0-bfca-d8e46d669058",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09492db7-826f-4184-afd0-969323ecebf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9c5528-f542-4fb6-98af-35d40612cfa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cd4936-de46-46c5-bb4a-1e3f83eb9e95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494ef58b-dc71-4f96-abe3-e6c595be46f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50767881-1f3e-48da-89a4-dbacb5cbbcfd",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eeef011-8df0-4f1c-9f51-35cdddf2445f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec25e577-8339-4b0b-9c9b-f92135c8b72a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb2ccfff-27e1-4485-a86c-0e5552f62832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c04bc9-f16d-47af-b4ec-77382f03ce0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32acafe8-0800-4021-a791-d278a7479cc1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964e99e9-1b24-42d9-9200-bef746835b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b91307e-1d5e-4ced-9ee1-5022713ec8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f3a36f-3255-44ff-88e3-0cf40f6b6760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099dc081-b06f-44c7-86ff-ff68c8e331d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcda19f-108d-4b1b-be24-28f81a743faa",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3ea54a-d4b0-4292-82fe-9e090eee7781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d4fbed0-fbc8-4269-92a4-9dbc2e7662c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a88c9a-ef3f-4f98-926d-f966ccd65592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81787f3e-21d1-40c2-93b5-41e28498e120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf752dd-6f73-4a3b-98ba-5ee12e75be5a",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deaf1130-c960-4071-b938-1831c959f8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3d87591-01ac-4dbf-972e-71785ea5253a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db629e36-8a8a-438e-9228-93c07ea39fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c2c3b55-8ddb-4a21-9c49-e7d9cf9db4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a320181d-78e2-4cd0-8b86-d52c867eb79d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87eb735b-adfc-4246-a8e4-52ab52e016bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdf2c6f-84c2-46b5-95d1-e3fc2a19cbe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f2cc31-ccdf-4c62-96b6-83a869e73c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cdf6be-e8cd-46e3-a143-04faefabdfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e276dc02-28a6-410d-9ad9-d0f2a2cde587",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27352cc1-889b-46db-9459-237231a84f7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e04ce01-eb11-43d6-9e52-95301a339648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252133f2-2cdd-4616-96f2-656c7fc26a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c500c3-257e-416b-8d29-3714c4de89f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a90cb1-9c48-42ab-8a0d-f0e7e734c40b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5309e3bd-71fa-4f3c-a19e-06178ca3352e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6598e7-428d-4596-9328-fbebd4353982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf438061-fcf3-4c43-9276-d1b99c5f9908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51641bab-5b73-4e3f-9ecb-780b38846d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b22530c-728c-43cc-b310-f35d2fd5e20a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69513c56-1d9a-4c55-8dac-68df73d0f0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05771fb7-2bff-43cd-9020-25b9f6176e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e446a2d-c26a-4810-b9e4-977f1acc1669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d746bc1-72b5-45da-b555-cf0bcc4a0ff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263d37da-7431-4deb-84a8-8b1ba87b74c1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ac7ca3-6d16-4276-846c-e792b718c07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c650cd3-3c40-4191-b3f2-6ae68ad48772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5a67e5-01eb-4c84-a8ce-42b349fc5811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56af8fb4-5dec-4a77-b8b9-84d7f40139d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea36440a-5ee3-413a-9583-a331ff97bb66",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff7d3006-f7ce-45c9-b3b5-ae7d76be4a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9017b2c6-ebfe-4651-9f0b-5f9a749c59ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5963d3a-34dc-4676-99d2-8d323ae7a8d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1868dd-8a12-4460-9d7e-8d44ad1b1461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077031d2-8618-464e-9b72-04d5a5241ce9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf921a7-b591-4d8f-8cf6-c84420660fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da6e061-c66d-4593-9279-f963a4442fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "249b2c9f-044f-4c9a-ac22-55e8b16ffe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a0c5f79-2830-4240-8ba0-74f8afc8afef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6553c941-87b2-4488-b7a6-6cd16b3f7db7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee9653f7-b7fb-4163-81de-a11b0822ecf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb90f2b3-fa44-47da-ab91-973cfe6366de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b572015e-fb6b-4248-a60b-a0002e57081f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b12e97f-87fa-4543-bce9-a8e1030409ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f776c448-6556-4d94-bf5f-56b6d146019b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d56562e3-a491-4225-8134-043526ab90fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7160083-2c7d-483a-8c49-871a2b9f3c8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4e0afe-278f-4354-a35e-7ff13be7092d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773c2725-3702-4f6a-839f-b75690f0eab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39a90d1-a5f0-44fd-83d6-d8109e2381bb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca360ca-c2a9-4d34-9f3b-f54e7bea00e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48037dc5-f540-4958-8440-392391e9b55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f5b458-a025-46af-8878-b7b20586e0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2368d6a2-7adb-4828-9d35-8ae6bf8f6dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a8f15c-8ac8-4bfd-ba6e-155f705604e4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0252d20f-da2d-45e6-9a52-824d7ed7bab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c6ab9a-5ad1-4fa7-a202-864fd683c007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae336d3-e2ce-483e-be36-998b945554ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab85d9bb-0a9c-4dcb-8f52-54dbe2748ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e235bb-139a-4490-b537-d289957d1259",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d5f87a-ead9-44b9-8fa8-25349a3cf1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ff750c3-89c6-4010-a622-47b7f97e9577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9037cf5-7d28-4bfa-b4e6-1511eeaba796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4312f31-f113-4c03-956d-25598f7a7a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9431158c-c6b3-4b77-be08-61c7e84c5fc9",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d127d9c-a853-4548-ae84-532771107b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505531b2-4891-4bce-92d7-2375f59e3f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ee0581-04af-4549-92b8-a8fc477c66c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3e2da91-7bff-49dc-8555-58226f1fa69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd35a225-d1f2-4ea5-9538-0fe5ea53dfca",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f2b981-2bac-4ceb-9a30-5e0ca3ac55c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1499df22-7470-4cd2-bcd9-9271de7298f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76de7303-ed92-4fb7-bf6c-9022613ebd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4a575d-8c09-442a-9d53-0982cf45bf77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93dfbdf1-5718-4ab2-82ab-1f62b70ac737",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a50c04-0716-46ef-9cd0-ee2ad6e16c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4449a5cb-375e-4187-ad9d-20926f60dba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137d3396-cf99-4cfd-aeb8-ef47c3c636ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b118c1-fcef-4948-b16a-85a8b985a131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9cb227e-c2e8-4a40-abf5-d903d1c9d665",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ed65c52-66b1-4531-aaad-92d31fb8cdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faf548f0-e8df-406e-a5e7-1e0446ee93a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2790c3e1-fb87-480d-a686-b038f4828222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e45c00-ee11-425c-8655-0b0439c96ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279f3712-94d7-4946-9de5-87557c5ba21a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a586b398-bda9-40f8-9853-b09230efad0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93e4ba7b-8cc6-496b-a267-6a5f501a7b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e7759e-42a2-4374-a1ee-26e4b2881a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390c3a45-1961-48fd-b835-2f02817cadaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b11717f-6714-4b55-ab3b-e0605d9a7f81",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c18c46-c27e-4527-8e12-ab46dbd977d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "197220dd-180d-4aa1-8417-0780fec99cd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308a91fe-f9d9-4ac9-8c19-512abfa5160a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7ee8ff-eace-4bc8-9fd3-4e18c7802cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16fe34eb-8adb-4820-9aaa-2cb107cc7f5d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c0102a-02a3-4631-9c4a-bc7751efcedf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "112ca2d5-ba46-4fa1-a784-508ae072819e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0a45ea-0975-49f5-ba21-7611441360da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695c85f7-be4f-4b43-9bdd-9db21cca7eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff88918-4c60-47e9-a7ec-1187f51eb656",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e28d4b-ea27-4990-b9f6-68b213c72ce2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0ef0a8f-7755-4a27-9543-8a2cb544b97d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc3613f-25dc-4507-9c54-4d90b9d7d3a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a1adc9-72d9-4ec2-9d38-d5372811362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c040101-cb50-4e26-909a-6696970aa0de",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68861b04-017f-4307-bad8-b661401ab047",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22065c23-ca1e-4839-8ca8-5e54e85bc6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04250ef-4395-4037-92e8-06408f39672b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532078f1-6081-43ca-b05a-22636f34f257"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fc3946-cc94-454f-aba1-f7e52e275a02",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f469fca-21f7-4afc-ae0f-b36bcd17a8ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a176dc4-3f78-41b4-9a70-71182bf6aad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d332f51b-0747-4b8f-87c5-b68d82e20c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7700bea7-4cb3-4c43-920c-6ca01c2bdac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59aab6d9-6941-4e29-8101-765acd77e0c8",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d014e5-995a-486b-bd50-f5d35eac1f85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d7d4d3-324d-46d2-82d9-b43c7b8d980c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d9c948-b19c-4cae-9712-969dacaa7f72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7b42e9-e283-4a85-9e0c-9fa1f7a1a028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd48d9db-25be-4df2-9cff-762716e17fe4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0430ed7-f307-4377-84c6-88568b70b2d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e9fe94-a8c4-4873-acbe-153cdeeb2c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "211c32f8-0549-4b0e-9eec-a485eb82047c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb15ea0b-dd89-4da4-b20a-332771889190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7124c291-ef1c-415f-ac3c-89ab5e47b253",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b723f-53c1-471c-9007-49c7433c7714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600c21fe-7f53-40d6-952a-61b2cd9f5f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4412e06-5126-4177-8f1d-3668e8f0afad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe0780f8-5db7-4622-a9cf-40ffdbb79b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9359d68-10de-47e0-ac07-33bbc0cc3d18",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049c3a38-03cb-4a76-89a1-e1ab71f1ed37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c6e6534-059d-43ad-9a0e-701e6d341875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8be557-5058-4354-9431-7dd815549ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9620d79e-2bc2-4eee-8db8-05d510527dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3d2ba9-2d91-43e3-aa3c-ecf58aff1e46",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c26ba4-789d-4c1d-946c-ba0f55822a2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "312efc47-a5c1-4352-9924-75c06c875cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bde8f7-807b-4038-a538-6f30a3e1226f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89594a8b-5f0c-4c4f-8b6d-b7b3de7d313b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acdcfae-cfd2-418f-a45a-bb49584c976e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6dba780-af01-44da-becc-a07cd69af51f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2abd3f22-7dac-429e-b73a-c08fc9735854"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b272779a-8dac-4102-95d6-28d70a38fe30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "432d1a28-7e9e-4754-b2eb-0913831fa866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2a5565-d0c9-4d2e-88d5-ad82d4275d62",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3cfa1b-1f16-4c37-8444-1d6e558def20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ce7cf61-75fa-4037-93bc-0dc2c9e19122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb19ca7-66b8-440d-b284-8ccb50c75550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32927559-bd86-4d7d-86b1-4b9e176bfeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc59df75-baac-45b4-b956-cd535da381ff",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9face1-e1a9-4c3c-9ccd-5f0b3e3ab555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a8579b6-a822-4c3f-8657-7741cb51b09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075cbfde-186d-4bbc-ade3-d4650553c724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "462456e6-7c8d-4f7f-a92f-a1264ea2024d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed2ffd8-0941-4494-ac3d-f3f3689ea620",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0500672-d4e7-4994-9f80-2d2a22b999de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16faba3f-f9e7-49c1-8a8b-2cb747a4e1a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff0136b-9d01-4699-8edc-ccf5206c3d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a914ee-ecbd-430e-af5a-39b0ab2fd9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933b1ee1-403a-4915-bbd0-3c746064af64",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27e1c4d9-8fe4-4289-a0df-99c29eda3ca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f17b0ad-cff1-494b-9193-a2452c192d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca5f888-9462-483e-bfe5-3831531babcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "823dd0cd-a9f2-4317-b3e5-88efcec7c894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c973496-905e-4f3e-89b5-8d444c87c9e6",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8373e2-a2fb-48cd-a70b-fe4bf012d38f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44cddab8-a079-491a-8a0e-fce2d07f4ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fa2c7a-ec3a-40b3-95bb-232942b9e1f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe57bcb-718f-4317-9410-6ffa4786f057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e537f18-abf5-4f1b-a525-4eee3599a734",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9864ba69-07b5-47f6-8564-86d865e96882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5deaa38a-7dfe-467b-8cca-43527242b6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e246b7f-b993-497e-8650-ee5fe04f3324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066b9e13-b154-4b13-86ea-38a157bd5c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa5cebc-529c-45af-90f1-a1e0989fec94",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af656a9-4e25-498f-9191-70818d9057c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09830173-d988-4fee-9976-608a95600e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4208ae-aabf-455a-8665-5e722fb85e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6697a2-d470-4a59-9a70-c54dff11ae15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df0f4f6-6e1a-487a-88c8-9755525a23c7",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db9abd1-ecae-497a-bc46-0413837f91bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d4cd027-4b02-4e35-8e12-9148c63c8490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5d176c-de66-4918-8439-feed11aa6c5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb35602-24b4-4b3a-a4ea-67eeddb6dbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efef1d05-026f-4318-8d2d-3c3291662d31",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbc1b33-2ac5-427b-818b-ece39c5ca9d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97e02134-39dd-456d-aeaf-3ae7b65fc521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb48aeaf-79bd-4729-aa09-db88a20ce3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00e5a71-bf58-4182-9c93-4772c4c8eb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b1aaca-8e81-4f4c-b36d-76797e5a2e5f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2db750-e514-42b2-bb86-282c0ed13470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aba9e38-ee47-4652-93a6-e72f38048363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78aaf756-da96-47b7-9984-cb8a46bfe4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e78e84-766a-420d-bd38-efc6b811d31f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85476e9f-7e18-40e9-9933-3f4e6e7a8c0a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8753e14-d2c3-4153-abf2-ed5a1bfc5a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ccd2b8-e612-406c-afb7-bcecc26110c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2549d7-c544-4200-8861-c3167b30af20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e5a8dd-b5b5-4264-a140-642ecf4969d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4d06b8-7079-4db8-af21-8fcca002ad44",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce37a37-d02d-4c2a-b006-d53a577fd78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e45b0b-37e6-4ed5-b9a8-9951dce8321f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5681dfa-69f7-4cf8-bf51-705ed77571ec",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89261f7-b2ad-4254-9d8c-e61b8d18f9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3cafc5-ac53-4b73-a26c-867f4b80e9a7",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c70ef0e-8577-47e2-af6e-87e51d114b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c5f4f9f-45f2-465f-addd-98bb903adfd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa445d8-d72f-475c-83e0-6b985882e823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0bbdb65-a48a-4362-a47f-c66b6cd0cd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fefcfd29-48f9-475a-b97a-aede3937eb68",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8da8c6-5ebd-406c-9717-f1299385ea9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "812a4a92-ad0d-42d5-b4be-e0a724f13707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7076bb32-b81e-42ee-ba22-c63d843166ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c02679-0716-4fda-b02e-1d831ca1b72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbcfca7-aab0-4062-bcb1-40fa8d0eb842",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cdedc8-ede2-439f-8931-41f56ea03199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15bc9513-9a2e-4344-8b27-819702139511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765429c0-dfab-404f-9fa1-e9a7b87ba67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47f05bd-4be4-4373-8d47-a43937eb7362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76833971-6342-4f29-8ee8-f63fc44d6fbb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42711b83-dedb-4ce9-a05e-af760809c9cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d452a12-680c-4cb8-82a6-bc046fd54b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed96b745-e4a2-44f1-8d45-5481450c2534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74f80a24-6781-42c4-a458-2a515762e71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac7feb5-631b-4833-8797-f72381f502d1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edf68e2-15b5-44a4-b18a-be73c7788906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d37e53-4bfc-4627-8532-28cf2d5c6cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b8bdcc-c254-4442-8645-6e08cde887c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bfb1062-64d3-4380-a9ec-3d1652bb0b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e66a6b-c418-4b90-ab36-64d16a34b762",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c6b78a-2ef8-4687-acf6-acbafcb698ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb52fcc8-4f2a-41ec-9d36-be0d795e0ec9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e2b9c3-a89e-42b3-afb8-48657de927a4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5372bfb-4d94-41a5-a7eb-05e6c3469e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4370eb-24e8-4454-9425-6a1649735937",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a773504-e4fb-4917-b790-a4c110039f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41a55ac1-6dff-414d-b2dc-7a788784a7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c9cc63-1d9d-4f72-80fd-191db2fd88aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5700794-8033-4006-a6b9-9c89f2503e8f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cc71017-7035-41bc-b941-754924491450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76b00887-cc0f-494b-81df-a493113d0224"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d41dd45a-1ffe-40c4-a40c-0bc2242a0b98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdbe219b-019c-4262-892b-431996c64d93"
                    }
                  }
                ]
              },
              {
                "id": "891cf082-7360-4627-acee-5d603d40c8f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "281dbca1-5fb0-42f5-851e-d437a9b6c347",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d45c15-8017-4b40-a9d4-ec6755ae9f6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7bd6d3bd-1211-4e99-ba34-1665ca931011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fdecf01-4d97-4b1b-8119-67e5cbaa21f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11385b55-e568-4032-a2a4-98ed7a34847e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fad12c2f-025c-4e7f-a78f-be4b59087ad4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96c4a486-e6d6-4a2a-a2e3-cf2094c98898"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "be51876f-21a3-457e-834d-4540102b500a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ab6637d-7570-4f03-8a33-fb486c700da0"
                    }
                  }
                ]
              },
              {
                "id": "c6a86282-0fc5-4fe8-8154-9a9c141398b8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "32301a63-fc31-427b-8641-a4a7aeffc842",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4228ea39-2f82-4ba9-8f87-debc9d184d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d2c20a9b-a30c-42e2-880f-12e788a4bb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0477a1be-6e25-43c0-b376-86577f432215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f9a8db-a444-4ed8-aef7-55aedd71e8ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a40a8fee-a7f5-4eaf-943e-1736dab3f70a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe32b708-f4cb-49d3-9e79-d82eea1d1792",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08958043-9f66-4405-bf12-b2bf1893e794",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "159d5094-a14f-40ae-afa6-6e85ad6dbce8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8c9a56d0-999a-4d98-8fdf-d3e9b97e09ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "096024d2-3dc8-4b39-b1b6-464f28828de9"
                    }
                  }
                ]
              },
              {
                "id": "cb933974-9415-4bb1-b801-720570fefef9",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad3fd652-271f-4855-bdaa-d90cd63aa120",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2e2447e1-72ba-4f5f-bb11-792149006ae3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0682667e-e2f5-4120-8ee4-3eb9507070c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f042862-2cfe-4022-86b1-a16b62ca014c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "168562e4-8bc9-4511-9c09-4ac9c0dd82e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "29273435-2672-4502-8b53-cff97f178176"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c776b719-6ef9-4a60-9a1c-053fb6f212e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61205844-deab-4388-b47c-ee05265da10b"
            }
          }
        ]
      },
      {
        "id": "9676db8b-c89d-4a69-9460-b7bcca45e9cc",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4ad36afb-c4ef-45e5-ae60-dd519e5f3553",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cd7be259-2024-41d0-a499-866a677ed7a2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "61c7e468-13a4-4c83-87f8-349b405a9e73",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662bfcd8-cbec-414d-88d4-acd523513af7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "abf764f5-38d2-453b-a573-8297565c20e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e4d1a4-80cf-496c-9f9e-8567780b96fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "feb527e0-f035-44f4-a10a-99dc5675bc5a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "321d3ef1-fb02-4b98-bdac-1143592e1a9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a64a55db-6b61-4a11-867e-4c4dbe4795bc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "92a65380-7523-458d-94d3-437915831164",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f80b65cf-3c98-4946-b623-4eafeb8d35dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab54dc1a-d305-4092-8642-1580b6e0778f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "b836b1f0-685d-4a8d-b85a-37ca9b9840be"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52445329-5e81-43c1-9df8-4881bc25a904",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "56ddcbdf-489e-4e14-a1b7-0ff2bcdcc3f8"
            }
          }
        ]
      },
      {
        "id": "68489aff-e0b4-4f40-8676-4f644470d040",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e9d30bf3-d980-4664-9766-d3c2ebf4f6cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff2a33ff-6949-4db1-80aa-38843ceb5fd8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7ec75ca1-3efc-4ba0-99f8-c61551078dae",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c8ed2d-210d-4961-acff-d8b62c7649f3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61ab4c24-7cec-4727-8987-b949542e443e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaeb73c-9cbc-4e79-bece-f99a4eb827fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08a3a78f-f64a-490b-ae13-d5317c6bffd6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "183fa68b-4393-41d5-a5c5-f3079ba9085d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1783069-127f-48fd-80e1-4d3587be6101"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b71266b1-f94c-4ddd-87c0-b0dd4cd592a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea76b1b2-903d-4870-8153-9ef6dfc4cffe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89b9f665-2c4f-4e9f-a5cd-5fdd50154bce",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "03cb3ceb-bb5d-42ce-831b-e8cf5992b4f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d313248b-ed3b-45db-8d1a-fdcdb54f5351",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13b15a4d-fb2e-4b29-9086-5cb499cdc3a1"
            }
          }
        ]
      },
      {
        "id": "8c67b4c8-799e-493b-a6a8-b04a26db41ad",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2136bf7b-9b26-4867-af9b-c5fff638eea7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b08f521b-d5c7-41ca-bc67-ce92b891ed9b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9cee034f-21b7-4ca0-b841-83a44a37f476",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae3d747-e03a-4048-b765-011d5374c223",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79717a51-8e13-4fdc-90ee-77f07eaf819d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0858bd77-9dcf-401c-9e60-98d29f25a4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e887ca1-9b48-4b22-b92f-e4e751368ead"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e00a18ce-0a4d-4f4f-89f9-8b0b6671c834",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ebe6fab-b577-4670-97fa-b81e2b00f2f4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b2eb107-6776-4558-9cc4-7946a6580e00",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9acaec88-63c7-41fb-9e1c-3f83b35dab75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04d67bdc-5a60-49a6-bec6-9356c2c5ebb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bd74a952-ff34-49bd-b3bc-fa4ceb0f217c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5da2eda0-c34b-4d80-9bbb-74e99cfa30d6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "444cd0a5-ec53-47fa-805c-a458572eb789"
            }
          }
        ]
      },
      {
        "id": "53188271-6f6b-46de-af60-0d7d5d07b7b2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b84ffc7-a853-49b5-878b-5c3b09e65662",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4179806b-725f-479d-b425-8bddaad3f5da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ba5454d7-037a-4e9b-a966-ef7a927cb097",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f75ca16-7213-4399-a156-05c0d24e04e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e748facd-59e1-49d2-bb6d-fe52231320b8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 65.90079365079364,
      "responseMin": 9,
      "responseMax": 334,
      "responseSd": 23.75089971907073,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722385984807,
      "completed": 1722386009501
    },
    "executions": [
      {
        "id": "4bb82ecc-c9ba-4460-8100-b20e95d5dc54",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a10dc1b8-abb6-4a75-b9d0-944b37ae50a2",
          "httpRequestId": "705778c2-8e5f-4918-bb70-4e5064791a35"
        },
        "item": {
          "id": "4bb82ecc-c9ba-4460-8100-b20e95d5dc54",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "04aeff44-3347-4a42-88d3-10c987b6b424",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "f852916e-7a56-4ca3-bc92-668f1a5724a1",
        "cursor": {
          "ref": "cdf03021-6d7e-46a3-9b3a-2c4b545fcfe8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5ecfdd55-f771-45a3-94a6-363c6efa3ae9"
        },
        "item": {
          "id": "f852916e-7a56-4ca3-bc92-668f1a5724a1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f43f1765-bcdb-4c63-8f4e-7ba8ca222f77",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "c3eb895f-2961-4b19-8595-a35dc99a6958",
        "cursor": {
          "ref": "545a6597-69f7-426c-9909-eb6a45c85e8e",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "68746a53-0804-434f-8b8e-916470efd537"
        },
        "item": {
          "id": "c3eb895f-2961-4b19-8595-a35dc99a6958",
          "name": "did_json"
        },
        "response": {
          "id": "1e389173-3460-45ab-90ba-fe25ab8b6021",
          "status": "OK",
          "code": 200,
          "responseTime": 334,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc31f736-cb1c-42f9-b076-13f0699a1024",
        "cursor": {
          "ref": "486eff69-8219-42e2-8104-90f86091ab44",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "57e4fe7c-8659-45dd-9564-5338dea9d239"
        },
        "item": {
          "id": "dc31f736-cb1c-42f9-b076-13f0699a1024",
          "name": "did:invalid"
        },
        "response": {
          "id": "2382299f-96ae-48a0-afe5-c8345a1f29aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc31f736-cb1c-42f9-b076-13f0699a1024",
        "cursor": {
          "ref": "486eff69-8219-42e2-8104-90f86091ab44",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "57e4fe7c-8659-45dd-9564-5338dea9d239"
        },
        "item": {
          "id": "dc31f736-cb1c-42f9-b076-13f0699a1024",
          "name": "did:invalid"
        },
        "response": {
          "id": "2382299f-96ae-48a0-afe5-c8345a1f29aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac004776-7339-40a2-afe4-f727373470db",
        "cursor": {
          "ref": "09af0585-313f-40b9-8b0a-4ff9b69e6d9a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9fdeedeb-42e0-4da9-994c-f8b6743667a7"
        },
        "item": {
          "id": "ac004776-7339-40a2-afe4-f727373470db",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9ea13c7e-00c9-4529-bdc5-a6b92bc0e83e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 227,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a42e07-754d-40d2-840c-6a877a3ad756",
        "cursor": {
          "ref": "7720a571-c3f3-4d6f-b1a3-8964e87b2d9d",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "84bff235-5214-4f13-9615-bceaf7f9c675"
        },
        "item": {
          "id": "25a42e07-754d-40d2-840c-6a877a3ad756",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1e7e08fc-b918-4971-871a-020b9c0d9c42",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ead4da-a831-4b28-8ac5-a112362febd4",
        "cursor": {
          "ref": "7f1bacbe-4556-4292-88a3-122980cd35a2",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fbb4ce7b-3749-4440-9c62-c5c4806fec70"
        },
        "item": {
          "id": "75ead4da-a831-4b28-8ac5-a112362febd4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b7f1cdc5-b29c-48fa-88f4-0411771cc105",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 87,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7581fd-4939-47b9-aa18-aadac224d1fe",
        "cursor": {
          "ref": "c92d07f9-251d-41c8-8809-41db9bb4bdac",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f583ab9b-45a0-421c-9672-99295da2f9fb"
        },
        "item": {
          "id": "8e7581fd-4939-47b9-aa18-aadac224d1fe",
          "name": "identifiers"
        },
        "response": {
          "id": "ff114d66-703f-4186-8aa0-929a1a81d77a",
          "status": "OK",
          "code": 200,
          "responseTime": 152,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1752d0f8-4399-444a-a005-d8e085358596",
        "cursor": {
          "ref": "f2806233-6ee2-402d-b508-ccc64a609eed",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8f078abd-ead6-497e-a8c4-f0218b349d28"
        },
        "item": {
          "id": "1752d0f8-4399-444a-a005-d8e085358596",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ac5c8e59-99b8-4e7e-b2d5-23d7d75ff986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d5508dc-d4ef-4c72-93d2-b29164bf5150",
        "cursor": {
          "ref": "36c196fa-c277-4ad3-bde5-2539dfe856ec",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f53ff4f5-b326-46bf-8b07-73459786187e"
        },
        "item": {
          "id": "2d5508dc-d4ef-4c72-93d2-b29164bf5150",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b688e4b3-46e2-4c4b-ad2b-4f816c532e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6edc3d0f-4bb5-4d3f-8e47-8ca175bfe69b",
        "cursor": {
          "ref": "7c532683-7bd4-4a92-a2cc-33f31fa875ec",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9d3c1972-e52b-445a-a6d2-6185ee406ce2"
        },
        "item": {
          "id": "6edc3d0f-4bb5-4d3f-8e47-8ca175bfe69b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "07a4c31f-9742-420b-bcbd-e2af0f482a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42ac7be6-ff86-412e-93d6-4fe1d32626b2",
        "cursor": {
          "ref": "2b818523-2d95-4c6d-a149-12f7574d7513",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "876b4cb0-5137-4d30-9ac9-391cdbc87d1c"
        },
        "item": {
          "id": "42ac7be6-ff86-412e-93d6-4fe1d32626b2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2ea76584-5afc-4130-aa37-5bc31df2c2f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84327b3c-701a-4b3c-915e-7d049002c45e",
        "cursor": {
          "ref": "c9fcc533-d2fe-44d7-a7ec-7b071c522ea4",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ef6291eb-0e92-4be7-bdc9-8b8919c31be6"
        },
        "item": {
          "id": "84327b3c-701a-4b3c-915e-7d049002c45e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "073dd7f8-9689-406d-a176-237459aab050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9082981-dfb7-4ceb-8612-56e1d6c3c692",
        "cursor": {
          "ref": "46370102-c557-48b3-82e7-2d5edfbefc31",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d04551ac-eb26-4b7e-9c12-5dba901a77d1"
        },
        "item": {
          "id": "b9082981-dfb7-4ceb-8612-56e1d6c3c692",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "381b6a6f-fda7-427b-aeb0-9034be0d2a96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d712206e-6681-46da-a0ca-a827058bd61d",
        "cursor": {
          "ref": "3c10d7c6-a111-42df-8b03-59a395f17fef",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d8f24f4-0821-4766-a501-05298c35bfa9"
        },
        "item": {
          "id": "d712206e-6681-46da-a0ca-a827058bd61d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e99d81f4-1c11-4caa-9011-3c379cec4909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf1f9c3-c94f-4204-bb7c-a3824744512d",
        "cursor": {
          "ref": "a47de75c-e218-44fb-a1a4-9af98ab19fb1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4b81f64f-2e17-453d-847d-f166c0ef70dc"
        },
        "item": {
          "id": "dbf1f9c3-c94f-4204-bb7c-a3824744512d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "81b420a6-4d49-4738-a1c0-0d88ea03935a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a72c1c-cebd-4f62-bb0d-bba3dafbd60f",
        "cursor": {
          "ref": "dcfa1676-fc2f-4cd4-912b-1f53006744fb",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c40c12ef-b3c0-4d3e-9729-219fbb1f7d6f"
        },
        "item": {
          "id": "a3a72c1c-cebd-4f62-bb0d-bba3dafbd60f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "14e197fb-77aa-4b5e-b600-9f44a7f747c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e509905a-e5b6-4814-9b6f-d2334eb52770",
        "cursor": {
          "ref": "349afeef-5dbe-4715-8800-9b620163be38",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "618d705e-fc71-4245-9b15-eaab6484fc04"
        },
        "item": {
          "id": "e509905a-e5b6-4814-9b6f-d2334eb52770",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ba81399a-2cb5-4af9-a495-0edf18d75959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2190c301-5352-4939-8166-b2c160139042",
        "cursor": {
          "ref": "6600908e-6999-4d7f-bbfa-062dba2b0003",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ff3b02ae-3b8b-4dc4-8517-8627fd0f91ad"
        },
        "item": {
          "id": "2190c301-5352-4939-8166-b2c160139042",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c00abd97-5f25-40a3-8ab9-64c31579528f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93280c1c-8110-4b51-8432-5529b9923a77",
        "cursor": {
          "ref": "0d475d98-9ce7-423b-8c9c-35921a3f2518",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "fa26a854-1cb8-4b31-9099-e2b7f30f505c"
        },
        "item": {
          "id": "93280c1c-8110-4b51-8432-5529b9923a77",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0a819ea2-3fb6-4568-b73c-c857444f3771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e26c0d-b224-480c-bb01-47507015c8b4",
        "cursor": {
          "ref": "9a62f0a2-2f39-4270-bc93-c7b0fe32a116",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a8f45c54-3086-4b6f-90d1-28bc47a40ebc"
        },
        "item": {
          "id": "99e26c0d-b224-480c-bb01-47507015c8b4",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2232168d-4357-4af8-bb4f-1ff0a7f6862a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6a4a89-04b8-450f-84d0-65ae9ccc0633",
        "cursor": {
          "ref": "dfa48d09-aeed-4903-962a-52a919dcdbc8",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "6ba38c45-96fb-4929-9b93-43dfe65fcd7d"
        },
        "item": {
          "id": "9c6a4a89-04b8-450f-84d0-65ae9ccc0633",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9a07daab-8052-4def-bb93-c72228d47c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88faf507-8994-4435-bb36-505c6499a8ba",
        "cursor": {
          "ref": "b0ff44e4-a44a-4ccc-b26e-67fcb00a2254",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d5902e21-4e33-4eb6-8bb2-f45ba7c13839"
        },
        "item": {
          "id": "88faf507-8994-4435-bb36-505c6499a8ba",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c214f3d0-65fb-44ba-98d1-8c10b77b130e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2636cf10-15cf-4017-aca2-2544abf81bb6",
        "cursor": {
          "ref": "08077eba-4c95-4659-8b4f-070ab3a034b8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4653b0e6-e255-4d72-970a-76338f9a91ba"
        },
        "item": {
          "id": "2636cf10-15cf-4017-aca2-2544abf81bb6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "49eb46a7-575f-4e31-bdf9-b5be940d6e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b15b110-197f-4ef1-befc-62b088bf0268",
        "cursor": {
          "ref": "d1d9c3a1-b500-47a4-b72a-90c34c7aaf48",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f459c026-826d-48cc-bdb2-fbb3c6374bb1"
        },
        "item": {
          "id": "3b15b110-197f-4ef1-befc-62b088bf0268",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "aea9beda-752a-4bf3-ba5e-467735ebd2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10dae7d-dcb7-4901-95af-9c33b3f5215f",
        "cursor": {
          "ref": "6e7c34d0-9966-401e-a527-67ab2229ba82",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "81e5f401-f5c1-49a5-9837-5b15a0c91351"
        },
        "item": {
          "id": "e10dae7d-dcb7-4901-95af-9c33b3f5215f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "409dab49-fef2-4f32-b5f7-81d25021d482",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92cfd17-6555-45d0-a4ee-0ae4b6536e63",
        "cursor": {
          "ref": "867fd04c-a3a2-491b-b4eb-0de3c3c847a9",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6c03165e-77e3-40df-864b-13d26ff13c3e"
        },
        "item": {
          "id": "a92cfd17-6555-45d0-a4ee-0ae4b6536e63",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d5dc7df3-d33b-416d-85f8-f51fcf2668a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3861a038-a02a-41bf-93b4-abc4912f6d53",
        "cursor": {
          "ref": "f1023d92-f413-4d84-8c63-8989c87edca7",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c8378b43-3145-4880-9351-9eb02f6f65b0"
        },
        "item": {
          "id": "3861a038-a02a-41bf-93b4-abc4912f6d53",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3c62eebd-5fc8-442e-8657-0f59e816bb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c05dc9-d759-4e87-a5b1-4669c766fb07",
        "cursor": {
          "ref": "64cc3e63-37df-416a-8ba2-8c83874ebbe3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6d6a0c30-00e5-478b-9363-1a970b498b0d"
        },
        "item": {
          "id": "85c05dc9-d759-4e87-a5b1-4669c766fb07",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e3e3c2b3-2182-44d0-8dec-21c5497f8da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b71b17-90bb-4cbb-abfb-ed1e4e10514b",
        "cursor": {
          "ref": "047e1a87-626b-4d7a-87be-fb767446c265",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b4a6eca9-936e-477f-84bd-b3724a4a152c"
        },
        "item": {
          "id": "68b71b17-90bb-4cbb-abfb-ed1e4e10514b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "92fe8409-82e1-4aeb-8edb-285059c97097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1870f3c6-437f-41ca-8345-feaf8f60aa5b",
        "cursor": {
          "ref": "788c8d4e-a4c4-4ba0-949c-3f97a3ba54d2",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f4073ad2-8cd4-4a74-baab-2f2d24e7dc18"
        },
        "item": {
          "id": "1870f3c6-437f-41ca-8345-feaf8f60aa5b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3f45e9d6-1810-4aa3-99e7-58ddc7204985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0899a15c-5d54-49bb-8ba0-42264c9d02b5",
        "cursor": {
          "ref": "bcccd648-5650-4658-8b76-57ee258ce2f7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1af5ac45-a629-42bf-a58e-0e8dbc40093f"
        },
        "item": {
          "id": "0899a15c-5d54-49bb-8ba0-42264c9d02b5",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "42b3bde2-a271-4757-ac3e-c59d3fc2a39d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3e749c-9c9d-4831-bf2f-21264ccaf576",
        "cursor": {
          "ref": "cd229b59-8877-4dd7-bc87-03ec16288ab2",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c3ea834d-e844-498d-9e3e-9214f6450c3e"
        },
        "item": {
          "id": "4f3e749c-9c9d-4831-bf2f-21264ccaf576",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "51ad0e8b-fa17-43cc-be36-6cd9de2c1231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0f6977-ddd7-48ae-9937-5ea6d69f2515",
        "cursor": {
          "ref": "19de8d9d-5bdd-43d0-8231-164b504385cc",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c7831b0c-e7f5-4afe-ac9c-102360d978fb"
        },
        "item": {
          "id": "4b0f6977-ddd7-48ae-9937-5ea6d69f2515",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1004577a-132d-48a5-a4ea-d054198e1642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7e3056-c431-4b9f-8129-0648e259af25",
        "cursor": {
          "ref": "4e1cf01e-66e0-49fe-9eb5-1e3dcfbfc097",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ef33b5a1-9f58-441d-9375-e81e17ef9b3e"
        },
        "item": {
          "id": "4d7e3056-c431-4b9f-8129-0648e259af25",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "03b287de-349b-49c0-ad82-f9f45d097125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa168e0a-bec0-48ed-b50f-c439d2d02a07",
        "cursor": {
          "ref": "86504005-54c3-4f04-8391-d98bb32b4871",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9e7bb457-79d9-4523-a15b-af4a151c5aa6"
        },
        "item": {
          "id": "aa168e0a-bec0-48ed-b50f-c439d2d02a07",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "195dcdfd-9988-4d13-8559-075281a7989a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c80c07a-7390-4a4f-85a0-80503d965d69",
        "cursor": {
          "ref": "a3bfb723-d5c7-4fd1-9ec9-de1386ab6887",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4ea72c5c-7dc1-48ca-af36-596bf7f864b2"
        },
        "item": {
          "id": "7c80c07a-7390-4a4f-85a0-80503d965d69",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3da54ec5-208c-4a67-96c6-0257ec85e1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fcfaab-6d24-4cc4-9a3c-7cf48fd72b9d",
        "cursor": {
          "ref": "13792d08-8a0c-4d94-a34a-97624a5c6e23",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f942bd30-0448-4937-b84f-986567fafe5f"
        },
        "item": {
          "id": "c0fcfaab-6d24-4cc4-9a3c-7cf48fd72b9d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8536c4a6-f35e-477c-af21-574431c009a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015fd4c3-0add-4fc8-80a4-1272dc87d807",
        "cursor": {
          "ref": "b6e5b480-a552-493a-ab34-08640cbd0245",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7cc58fda-d1b6-4e1a-8d94-42e1f1828203"
        },
        "item": {
          "id": "015fd4c3-0add-4fc8-80a4-1272dc87d807",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a50c89e4-d337-4b79-baae-3e76f58aa600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9aba31-6f36-4c4e-9240-f20d54d97241",
        "cursor": {
          "ref": "2ecf3b07-c661-4e2e-ab44-f0a7506696f3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e0086155-ba1a-4bf0-8167-3e3accca323a"
        },
        "item": {
          "id": "1f9aba31-6f36-4c4e-9240-f20d54d97241",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "4cb9f485-42ff-4cb4-8378-cf20d02b423f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e26f94b-1cd4-4fb2-b485-2f04f653b69f",
        "cursor": {
          "ref": "42f6b72c-1f36-4656-a5a9-cf1239fa5c89",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2ca3a1c7-7169-42e8-ac4b-f0946e3ec11f"
        },
        "item": {
          "id": "0e26f94b-1cd4-4fb2-b485-2f04f653b69f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "aa4f89db-daa5-46dc-b790-d6455a1f4ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63feef2e-7805-471d-8376-cbd1364642e4",
        "cursor": {
          "ref": "f01e080f-b3ae-48da-bb72-9f1cadf7f0a2",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "c6d43991-11e6-483b-869a-eb375ddfb862"
        },
        "item": {
          "id": "63feef2e-7805-471d-8376-cbd1364642e4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "6cc003d3-b0f2-4b8d-bf87-afff5d7ff683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e884ce02-87ae-4bf1-87db-aede177921cf",
        "cursor": {
          "ref": "d4dec563-428c-41eb-b474-20dda8ee99ae",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "3ee3a815-8949-45cd-9dc7-bb8a00568b97"
        },
        "item": {
          "id": "e884ce02-87ae-4bf1-87db-aede177921cf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fe3e83d1-7a1d-4565-95f8-8ab8d88aaf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f0b51da-5810-44ed-b961-d7be0a4fa4f3",
        "cursor": {
          "ref": "07613d38-542a-4941-9718-9091cf5695b6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cc3e14c6-1762-45b5-9734-b4ec07504bfc"
        },
        "item": {
          "id": "6f0b51da-5810-44ed-b961-d7be0a4fa4f3",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "089ec5c6-53e3-411b-ab49-101b5d6ac276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51dc9141-97ec-45ba-b6ff-bcc85ac003cf",
        "cursor": {
          "ref": "d223b991-fd34-4ee2-8c97-79a7987ed8b5",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9514c79a-d1e7-4648-97f1-59bd40fb8561"
        },
        "item": {
          "id": "51dc9141-97ec-45ba-b6ff-bcc85ac003cf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bce18289-bd5d-478a-bcce-0c82816bab42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e014481-3659-4488-808e-d3edfb807ca3",
        "cursor": {
          "ref": "26b888ba-4b15-47a1-86b6-249c742eb5af",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4e482a92-c95b-416c-98fc-770a2a01070e"
        },
        "item": {
          "id": "5e014481-3659-4488-808e-d3edfb807ca3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "be0f0e8f-899e-4c66-bf70-f0f8215fa8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacfa03b-6e52-4f9c-8e87-c755c69f48f7",
        "cursor": {
          "ref": "7570b11d-d637-46f0-9332-e591beea89a0",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fd11d5f8-b4a9-4537-abfd-51b267d71f68"
        },
        "item": {
          "id": "cacfa03b-6e52-4f9c-8e87-c755c69f48f7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4fd41bf0-b9cf-4126-9e33-bdd900b6cf2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac2b007-5c58-4033-a7af-6f7e92d62be6",
        "cursor": {
          "ref": "0b3801d3-138e-457e-8d76-faef1bc73fe4",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "80581384-5aad-4695-ad5a-0a23cddd9210"
        },
        "item": {
          "id": "5ac2b007-5c58-4033-a7af-6f7e92d62be6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0bfa6de8-ac1f-4f3c-94d4-2857013a3677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f46449-3293-4157-bc14-17b425742954",
        "cursor": {
          "ref": "18b0fd82-238d-4218-9567-dc81b8811161",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "97240a8d-e6cb-453d-87d6-763cff8d15ad"
        },
        "item": {
          "id": "e7f46449-3293-4157-bc14-17b425742954",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1ee5649f-213b-4ff7-8c92-a8355aa9dbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d760f9a7-bbeb-4255-92ce-5d6c109e0e2c",
        "cursor": {
          "ref": "522e79e4-ab11-4be6-bf00-3d248cc6347d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c739efab-291f-4687-adbd-c67675a78990"
        },
        "item": {
          "id": "d760f9a7-bbeb-4255-92ce-5d6c109e0e2c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0a70ecdd-b1f3-4c74-8171-e9ccd51c6cb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cdf3435-6286-4559-9c07-c58eda30041a",
        "cursor": {
          "ref": "944be5de-6776-4d1b-a034-98a556716747",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c617ed40-ca37-4c2d-9e5a-49cd1c22bfa4"
        },
        "item": {
          "id": "0cdf3435-6286-4559-9c07-c58eda30041a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "db8648a7-8635-48a9-9659-c8125b755403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2355ab6-b0a3-49e1-94b5-ded9a91c78fd",
        "cursor": {
          "ref": "ce60f7c4-1016-4ac4-831a-51f2aad8f33f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7563e3a4-7df9-45b8-aff0-7cf4ee2c2b79"
        },
        "item": {
          "id": "f2355ab6-b0a3-49e1-94b5-ded9a91c78fd",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eb0a86aa-1859-4fd2-9b54-55b543a968a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4f3a40-d36a-4e28-8c61-356859e6f789",
        "cursor": {
          "ref": "d473bd74-ef2b-40b8-a735-140ccb77e445",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b13f82af-1a91-4779-8554-7ea9d200f14d"
        },
        "item": {
          "id": "ae4f3a40-d36a-4e28-8c61-356859e6f789",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "626ac0f3-112e-428c-8a0f-64e5a60ac785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46384358-9985-4a88-ab52-20cf9b55c040",
        "cursor": {
          "ref": "f70a4b9c-9184-45c5-96c0-eef5f43254da",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "467fe768-fe69-4b5e-bc9f-a08aafdb9942"
        },
        "item": {
          "id": "46384358-9985-4a88-ab52-20cf9b55c040",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "a0fc34c2-1572-4802-a9a6-265828d20098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a92afb3-e26a-415a-9d05-05c4ecac46ae",
        "cursor": {
          "ref": "ab72f546-281f-4b32-b471-2efbac582b52",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fb619750-32b5-484b-8228-afce6b9a2504"
        },
        "item": {
          "id": "3a92afb3-e26a-415a-9d05-05c4ecac46ae",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ed88c485-17c6-4c6e-8c59-2361b3037851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dcbe38-a8f9-42d9-8f64-66995d21e548",
        "cursor": {
          "ref": "40552047-097a-4b81-89f2-64487dedfcaa",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "3367d344-d741-4960-8a92-2f639e888303"
        },
        "item": {
          "id": "84dcbe38-a8f9-42d9-8f64-66995d21e548",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "cbd4d0c2-060a-4e90-a272-3a2dd6348a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d37137a2-6cbd-4f8f-bb62-814d0b5bcc2e",
        "cursor": {
          "ref": "e9119316-8833-4c67-a563-20589ec3c428",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b6e65d31-3c47-4c2d-a928-d0b2db4ad410"
        },
        "item": {
          "id": "d37137a2-6cbd-4f8f-bb62-814d0b5bcc2e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fe422d9a-f00c-4d14-9bef-662d625ab3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff66ca0a-fc68-4359-9c35-bb2e793a4059",
        "cursor": {
          "ref": "80c90bea-9c0b-425a-807a-9386418f4b04",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "abd9c122-80dd-4ed7-aaf8-c7085964dff6"
        },
        "item": {
          "id": "ff66ca0a-fc68-4359-9c35-bb2e793a4059",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d3e8e94b-4b53-4068-84df-b87102b8d502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a97d02-6419-4159-8cbe-48ade87f4839",
        "cursor": {
          "ref": "5ea6056a-de06-48e5-801a-83d9ba230ec3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "98fffad9-5624-454f-acac-b179e55e3002"
        },
        "item": {
          "id": "d1a97d02-6419-4159-8cbe-48ade87f4839",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f6ddcaf7-998e-4a1f-b0fa-95e5111f6af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ead578e-aefc-467d-8550-ace70e2b9883",
        "cursor": {
          "ref": "518a1c5f-279c-473b-9ba5-3156f8ce0ceb",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "4dce29fd-b0f6-4b8d-8226-299c64e928d1"
        },
        "item": {
          "id": "7ead578e-aefc-467d-8550-ace70e2b9883",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "083060b2-8724-4d94-bf00-58c1aa5d1416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b347592-2be2-430f-a1a3-60ee57f718d3",
        "cursor": {
          "ref": "f209d9b1-a318-4285-8626-63ea70d6cdd7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3e4616fa-55ff-4f25-b69f-40843dcf40b1"
        },
        "item": {
          "id": "2b347592-2be2-430f-a1a3-60ee57f718d3",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "fc3177db-2eb7-479c-bfe1-de08a10f10ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4091ed02-a814-4288-9383-025cf9a98d58",
        "cursor": {
          "ref": "3375d3c4-31b9-4611-ad5c-40c7bc3ed659",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "fd5bf3bf-90ed-4583-9f36-3c3b60561f8e"
        },
        "item": {
          "id": "4091ed02-a814-4288-9383-025cf9a98d58",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9be69eab-7da8-4c89-93c0-909be9e09eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4449decd-9f46-45eb-9b11-bcd5f34abc64",
        "cursor": {
          "ref": "071d3987-0d60-4823-8e74-11b13da95815",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "83559ad5-3aac-440a-9c69-a7a89d237c28"
        },
        "item": {
          "id": "4449decd-9f46-45eb-9b11-bcd5f34abc64",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f257f9ff-5678-4808-b5d3-5d4e0ec7355e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec5e843-69c2-407c-a923-28e2975c5b47",
        "cursor": {
          "ref": "72af0475-afdd-4bd3-9b7a-df4eda897ab2",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dfb0a086-d0f6-4632-a858-8bbe108ff947"
        },
        "item": {
          "id": "4ec5e843-69c2-407c-a923-28e2975c5b47",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5a9c7993-86ee-494b-adcf-418583b9cb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31dc4e7-8152-4d4f-a77d-66ae88ebabd4",
        "cursor": {
          "ref": "0c8e0de6-b6bc-4f16-a2be-a79140db3913",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c919d37b-c4b1-4064-b30a-3e9a123cd6f9"
        },
        "item": {
          "id": "e31dc4e7-8152-4d4f-a77d-66ae88ebabd4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c804cb67-18fb-4715-84a7-0352d385c6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95262490-2e1c-44a0-99f2-3d9fdac0449e",
        "cursor": {
          "ref": "35f063d1-0334-4081-9dbc-bfe4037a92f1",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ad15649e-6979-43a6-83cf-817ebc247dd3"
        },
        "item": {
          "id": "95262490-2e1c-44a0-99f2-3d9fdac0449e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "958f93c3-4f2d-499e-813c-c7c9e93232b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ac953-b838-4d8c-b9d3-bba93e4ae2e3",
        "cursor": {
          "ref": "397e062f-5c9f-49df-a4c3-18aacc07c4b3",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6355149f-36fc-43c3-9dee-4a7031414193"
        },
        "item": {
          "id": "b57ac953-b838-4d8c-b9d3-bba93e4ae2e3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "56a44275-149f-4b2c-9ff6-e1794e960a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dd003f-9b3a-4339-b75a-7883efe3b47b",
        "cursor": {
          "ref": "68b183f8-ecf0-4518-8a19-4a40eb1177d2",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f01b16c6-f5cc-4e87-bfd0-ae891d53a402"
        },
        "item": {
          "id": "e3dd003f-9b3a-4339-b75a-7883efe3b47b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4457f386-f2e4-4677-8f62-b4d9377c20c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3887f92f-3b74-4973-bd68-3f978dc4d2c2",
        "cursor": {
          "ref": "796e009b-cfdc-45a2-b5e1-3b275cdd9835",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "58c29578-a6ca-4e59-a3e9-066ae829932d"
        },
        "item": {
          "id": "3887f92f-3b74-4973-bd68-3f978dc4d2c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5a4502fb-3425-474d-b9a3-c0ea48b57b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7d83ba-e230-414b-8b84-d3d1b93055bb",
        "cursor": {
          "ref": "c3837cd3-ded9-4eee-ae2a-ab647a1d0da8",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "72971c91-192b-4299-b425-32ab6fad1e78"
        },
        "item": {
          "id": "ab7d83ba-e230-414b-8b84-d3d1b93055bb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1061eebc-8f02-4090-a1af-28b73b8383aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7ddc07-5437-4297-8e65-cc7143d43796",
        "cursor": {
          "ref": "11dd8d39-cd63-4474-bfe9-7c56f26772bf",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5a7426fc-e35c-48c1-8b55-f123caf4d4ea"
        },
        "item": {
          "id": "6e7ddc07-5437-4297-8e65-cc7143d43796",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e071ffc7-6c76-4120-b73b-2e43c027d712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0f07e7-7fec-407b-8426-397706a9577d",
        "cursor": {
          "ref": "f511cbff-f17d-4923-9f18-d49cf4795f80",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a469932f-acf0-44ed-a0ac-913d16a7a45f"
        },
        "item": {
          "id": "6c0f07e7-7fec-407b-8426-397706a9577d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3963688d-04bf-4dd2-97a9-68e8a9a61623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a169f0-4ce2-4950-9c37-35aa90a7b8df",
        "cursor": {
          "ref": "cbc0e503-1771-457c-8457-b1dd9853e884",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "e02b5aa9-f743-4851-880e-25c1974242f7"
        },
        "item": {
          "id": "c2a169f0-4ce2-4950-9c37-35aa90a7b8df",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "646d3c7c-0592-401e-9c43-93fb422e362a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8439e38d-a2fa-4a87-a5e1-8afc669894a5",
        "cursor": {
          "ref": "d3206e8e-d453-499d-af3d-94ae9daac0bf",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "96284d89-d294-4f88-8fe0-dcdf96bbedfb"
        },
        "item": {
          "id": "8439e38d-a2fa-4a87-a5e1-8afc669894a5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d9bf34f5-b9c7-4bad-bfc5-65d07c43cbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb291f2-287a-4c4c-a89f-2f1f4ad3fd55",
        "cursor": {
          "ref": "cd7ed2ed-00e7-410d-bb11-07a7abeaf970",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6c4368ea-6f11-4b6b-9e33-0de0f4df1c34"
        },
        "item": {
          "id": "7bb291f2-287a-4c4c-a89f-2f1f4ad3fd55",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e4100ef9-bdae-449c-8cd4-abd372e2989a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4c12be-8449-4c24-a458-641749cb70fb",
        "cursor": {
          "ref": "4e785a33-9a25-415d-bb7d-5941e217c44c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "34f4e945-5660-41ae-a372-138dee61d99d"
        },
        "item": {
          "id": "aa4c12be-8449-4c24-a458-641749cb70fb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ef6346db-1ec1-4fa6-8998-5baac1e1e837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea76030-62c3-478f-9db2-152dcb071387",
        "cursor": {
          "ref": "713f8b58-6a94-4648-bd29-cfffedd134e0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e8b4b3e5-c724-4533-b978-02b19474414a"
        },
        "item": {
          "id": "3ea76030-62c3-478f-9db2-152dcb071387",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "59397e64-f273-47a0-986b-3104279c8e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c07705-2de0-427c-8927-84c4efd57ef9",
        "cursor": {
          "ref": "abfecced-b2ca-4530-b9f7-ae90493428d4",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "95347966-ef65-4111-9161-9cd84bbdb59b"
        },
        "item": {
          "id": "f8c07705-2de0-427c-8927-84c4efd57ef9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d1e2067f-c5ec-4bce-a13d-a2ae16c1ab12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e374cf4-1eb3-4302-b563-d2aee11e85fc",
        "cursor": {
          "ref": "49ca5111-e0eb-482d-a74e-8043cf68b8f3",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0838da07-0649-4a7f-9ee5-052d1d7a4ec1"
        },
        "item": {
          "id": "6e374cf4-1eb3-4302-b563-d2aee11e85fc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8cf84f83-0597-4286-ab03-7b1c31511914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e8858b-68ed-4108-9cd3-4dc5fa4672fe",
        "cursor": {
          "ref": "cf024572-42ca-4d28-82c2-7dcaae40be7b",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d2e31b1a-20e5-4f17-9533-0d635a67cf52"
        },
        "item": {
          "id": "19e8858b-68ed-4108-9cd3-4dc5fa4672fe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3ea75f88-65b0-4840-ac4e-a35d9c662cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca09b49-c152-4ab8-bd81-800bbb67bb08",
        "cursor": {
          "ref": "89c257a5-8587-41ac-bab7-5dded91528c4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "599ff34b-1f2d-4437-941c-433edd3d23a6"
        },
        "item": {
          "id": "8ca09b49-c152-4ab8-bd81-800bbb67bb08",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a27478ca-5d31-4133-b308-58baeee672c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5335890-4958-4759-a586-3f3defd70d8e",
        "cursor": {
          "ref": "b620a462-123b-4836-b39a-8978750b9d60",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d4bee5fa-b958-4a4f-b097-fa55d12ba545"
        },
        "item": {
          "id": "d5335890-4958-4759-a586-3f3defd70d8e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5bd6cbb0-e4b4-4cb2-b92d-8f8e487cac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6682a9ab-9240-4acb-a0b3-543308590eed",
        "cursor": {
          "ref": "0c8e0402-48e8-42b3-8333-ab1f5abb78b3",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "dc6b28d7-d1f8-4fa0-a244-f5adb54386b7"
        },
        "item": {
          "id": "6682a9ab-9240-4acb-a0b3-543308590eed",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f48b20a2-5fbc-43c8-88ad-2321d9406710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd67e05-90a8-4c3e-9d73-683e126724d9",
        "cursor": {
          "ref": "2b85d988-d8ae-425b-91a3-f92f14fa5231",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8014ebdc-206e-448a-b0a0-a33fbd62efa7"
        },
        "item": {
          "id": "4dd67e05-90a8-4c3e-9d73-683e126724d9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "59d80477-501e-4d7b-b737-2e1d5803d5e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387bdfa7-7385-45b8-9587-56e2066daf5e",
        "cursor": {
          "ref": "f2217453-adda-4f62-8fac-b94666bc569b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7593d711-cb9b-4b7f-8170-016c5bbe7aa0"
        },
        "item": {
          "id": "387bdfa7-7385-45b8-9587-56e2066daf5e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "85f319f5-ffdf-4cf4-97e0-d7fd3104f0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7c613a-c2e6-469f-a794-5e2f15a8115e",
        "cursor": {
          "ref": "75fe8584-1105-4335-a540-21c5ab9b4369",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a7840806-f06a-4cea-beae-449f41acdbe9"
        },
        "item": {
          "id": "af7c613a-c2e6-469f-a794-5e2f15a8115e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "6d0089ee-c0fe-4828-b59a-c065431e081a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c72082-02bd-441e-9439-9ff1135c6ced",
        "cursor": {
          "ref": "eecf0f3a-9cf6-4cf6-8cf8-1fe66dc1aa8c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2db49176-ce69-4637-a8fc-d75119f268ce"
        },
        "item": {
          "id": "63c72082-02bd-441e-9439-9ff1135c6ced",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0db3fe2e-e4e1-457d-8395-f810af14875b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a43b87d-9bb2-49f7-82b3-fa6cf22dac87",
        "cursor": {
          "ref": "b2a1f177-d4fc-4f1a-8179-1d16934174d9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "71897456-23bd-4fd2-a52a-8c7b37f5552e"
        },
        "item": {
          "id": "6a43b87d-9bb2-49f7-82b3-fa6cf22dac87",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fdbee260-3ada-40ce-ae6f-a0fc692b40be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbae05f7-d075-4bbc-9c55-ca99521b0a13",
        "cursor": {
          "ref": "78daf5cf-4fe2-469f-80ac-07261f7888af",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1030364a-6636-46c7-96a4-fa71f56119de"
        },
        "item": {
          "id": "dbae05f7-d075-4bbc-9c55-ca99521b0a13",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "0626b6a8-6daa-4fdf-85d6-37223afc7d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2649fd96-2a6d-4871-be28-1bf27dc538d6",
        "cursor": {
          "ref": "8cb269f2-9b59-468b-9c1a-00cbba47aa78",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "904cf816-9fa6-4749-86c1-0d7af80d19bc"
        },
        "item": {
          "id": "2649fd96-2a6d-4871-be28-1bf27dc538d6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7f4c89f2-165f-4928-bce2-cc4da5a2d573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af8a11b-86c7-4f45-855a-a24e2051b53e",
        "cursor": {
          "ref": "551384f6-1e91-4fde-9bd9-2892701ab4b7",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e6c3ef63-3bf5-4c5c-9926-47da0a2be3c0"
        },
        "item": {
          "id": "2af8a11b-86c7-4f45-855a-a24e2051b53e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eb50ac6d-15bd-43ed-a9a1-eef88cd0912e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0a19da-2f5c-42b1-8d71-d0a6d4abdcf7",
        "cursor": {
          "ref": "24365247-3ae4-4f29-9c3e-f4bc5ee0d911",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "412f70d7-1f37-4658-a52a-1873ce8bbfd3"
        },
        "item": {
          "id": "3f0a19da-2f5c-42b1-8d71-d0a6d4abdcf7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "35d7a949-7277-4201-812f-d8bfdd98acbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c849858-9524-4fbb-9b1a-ef580fe7fa84",
        "cursor": {
          "ref": "4eafbb02-84a2-4e65-9feb-a4eee248cf29",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1606519a-7354-4528-9a41-1bed9ab2f0f6"
        },
        "item": {
          "id": "8c849858-9524-4fbb-9b1a-ef580fe7fa84",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bb7bec1d-2e79-4afe-a122-75fa284e3be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6925956f-197d-4de5-a0f3-66904bf4fdff",
        "cursor": {
          "ref": "42740883-3a98-4b59-8f48-f1c326c6794d",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "58e15a5e-a1c6-49c8-94a1-97d737420b48"
        },
        "item": {
          "id": "6925956f-197d-4de5-a0f3-66904bf4fdff",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a194faad-2a9c-4fb7-b508-49ee2a67fe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea0c742-4591-437c-8964-184a9c8ba21f",
        "cursor": {
          "ref": "4f981543-057e-48eb-9b1c-d98d02fa1764",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "9ec35ed8-91a1-4e69-b296-6b1ea7078ffa"
        },
        "item": {
          "id": "fea0c742-4591-437c-8964-184a9c8ba21f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "934cdac5-4ab3-4077-bc43-2ef1ab0b0847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadb4b93-9327-4acf-8ff0-bcc027de73bd",
        "cursor": {
          "ref": "29197147-0fbc-455f-b5a5-475beee5f14a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "411ee0a9-ae10-4a38-a8bf-00eb3071955a"
        },
        "item": {
          "id": "dadb4b93-9327-4acf-8ff0-bcc027de73bd",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ada97722-45db-4c20-88a9-332b16c5e539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c434df-3af8-45e1-acfa-08254606da3f",
        "cursor": {
          "ref": "aa65deca-5520-422e-9f92-b1751353ca80",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "19b62965-ae4d-4c39-8699-7a12d4e4a610"
        },
        "item": {
          "id": "e0c434df-3af8-45e1-acfa-08254606da3f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "87604f0f-6afc-4748-8aaf-6d97eb8def4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e920ebde-0f19-4110-b87a-ae645eaec6fd",
        "cursor": {
          "ref": "f94a1f55-de2d-4715-af81-43d1be2518f5",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a42d77c9-637c-478e-beda-aaa263d92c1d"
        },
        "item": {
          "id": "e920ebde-0f19-4110-b87a-ae645eaec6fd",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6191a314-bbdb-44c0-a4aa-1cec8b112245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee1ca4f-e277-4ede-a086-e459220ea5f6",
        "cursor": {
          "ref": "6bfc33bd-18a1-40d4-9eb7-3173d4718d89",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7952de2b-4c02-46d3-9d9b-15df0b469717"
        },
        "item": {
          "id": "aee1ca4f-e277-4ede-a086-e459220ea5f6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "62b27124-7f89-407c-9c64-1dc6a96b2321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aabd9e9e-6d69-431b-a4b8-d8b351850d4b",
        "cursor": {
          "ref": "9e3927dc-19d3-4f75-852b-c29e87eb841b",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "29d3f47d-2ca0-4b61-91d3-824ccea86cc5"
        },
        "item": {
          "id": "aabd9e9e-6d69-431b-a4b8-d8b351850d4b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "db2b2af9-0c22-4a1f-9d21-746af7358541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c231f5f1-6005-4de5-b018-393bc84d13e5",
        "cursor": {
          "ref": "bae828b4-c53a-4fd2-9492-385a2741fc42",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "668f206c-d8e3-4951-ac84-dea2f8a1c2bd"
        },
        "item": {
          "id": "c231f5f1-6005-4de5-b018-393bc84d13e5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "be0c6fb2-5417-4dee-86a6-685c5f215dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a11de0-4397-4696-8fe2-4f8c9c5cc83d",
        "cursor": {
          "ref": "2e8f1618-2aa2-41bd-a83f-2d3e4f3c93d6",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a016fc4d-eea8-4f79-9c97-4d83bfea5d8c"
        },
        "item": {
          "id": "29a11de0-4397-4696-8fe2-4f8c9c5cc83d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1d252462-31a1-4082-b122-79363b6b19ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f96efcd3-c745-4b1a-9686-c3742c1fe09a",
        "cursor": {
          "ref": "7ad4cdf3-e8f9-4e31-add5-17b32a9e70f8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4cfa1ebe-155c-44b5-a7f0-27ccc566f20c"
        },
        "item": {
          "id": "f96efcd3-c745-4b1a-9686-c3742c1fe09a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "79bdba12-22e0-4b42-840e-404a7e60cd99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7636120f-d233-41c0-8a29-5bfb1ef26f5c",
        "cursor": {
          "ref": "1055804d-7b97-4fc7-b8be-a35f2517a782",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9fdd74b4-0a24-42d9-a06a-664fda1a1a4f"
        },
        "item": {
          "id": "7636120f-d233-41c0-8a29-5bfb1ef26f5c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ce20f08c-d67d-449d-a2e8-3b41c52032e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d8f386fc-57e3-4119-876a-c16c3fb29b18",
        "cursor": {
          "ref": "762bba2a-fcb3-46c2-810f-918f27a8cac7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a8b3d1eb-613f-4436-ae9c-84f03279c6f8"
        },
        "item": {
          "id": "d8f386fc-57e3-4119-876a-c16c3fb29b18",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "98b4bf59-aacc-4d31-8664-7719696f28cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5114b0f1-55e2-4552-a2e8-0a3ab606520a",
        "cursor": {
          "ref": "371190b6-c88b-42d6-818f-7fe143b23845",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a380fba9-ef3a-4fae-bbbd-3c27a56eb527"
        },
        "item": {
          "id": "5114b0f1-55e2-4552-a2e8-0a3ab606520a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8edf89eb-d0f9-43a9-b0bd-64c856c7d1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "3df18561-45d6-4e25-9240-cdd104ce5ea8",
        "cursor": {
          "ref": "83f32a1d-ede2-419f-a11b-0a086c689616",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cc8b2d41-ca26-4ed0-b317-dc268ed9ffe7"
        },
        "item": {
          "id": "3df18561-45d6-4e25-9240-cdd104ce5ea8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "949163b1-ffde-484e-920b-d6aae4aebf24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "f1ad33b0-5ad9-411f-823d-6f8523706e6b",
        "cursor": {
          "ref": "6496cd3a-a012-4eb4-b7fb-c5c6e72fc458",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7ca67eba-5f14-462a-b45a-de796682e165"
        },
        "item": {
          "id": "f1ad33b0-5ad9-411f-823d-6f8523706e6b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "9f4a8c82-6790-457f-b352-b11d8a5374c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b94adf40-638d-45cb-8915-0953c943e3fa",
        "cursor": {
          "ref": "58eaf792-6d1e-41be-a1c5-6682a7054834",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f9a9ee54-82c6-414c-8213-f25723cb53c2"
        },
        "item": {
          "id": "b94adf40-638d-45cb-8915-0953c943e3fa",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7b80bd9-5891-4dc1-8a6d-edfeb03988e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4257e5-3b3b-455a-bd4d-ddf0df4dfbc9",
        "cursor": {
          "ref": "82153daf-f6c6-4484-af25-a713441e887f",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a0e94778-4c31-49bd-b075-d44f271680ae"
        },
        "item": {
          "id": "da4257e5-3b3b-455a-bd4d-ddf0df4dfbc9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a1c7653-1ee2-44d1-bf0e-9d1c5534c21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d186f9ff-65e0-4aef-9fab-3a15ba1906a3",
        "cursor": {
          "ref": "d802dc3e-26f7-4637-80c9-5c21094eee45",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2b8ec93c-d0d8-4ff3-a7d4-ed4d5c20a2f1"
        },
        "item": {
          "id": "d186f9ff-65e0-4aef-9fab-3a15ba1906a3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5c84ef6b-363b-420b-928a-093fd5574417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98091955-4708-40e9-9d0f-9ccc0d0ce844",
        "cursor": {
          "ref": "d3859daf-d264-4d6a-8a00-465acaf9dcf6",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8de5100e-6a9b-4bb0-8b12-ac82a0646f79"
        },
        "item": {
          "id": "98091955-4708-40e9-9d0f-9ccc0d0ce844",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0115cb35-79a8-4e47-9b4e-f5e1ae18c991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b2c7ac-99a5-4cd1-9bef-05bcbf0f76a1",
        "cursor": {
          "ref": "28b62208-0183-45f5-af71-4513ca7a0a1c",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "71486ce7-60fc-4582-b9b9-78846484763e"
        },
        "item": {
          "id": "c7b2c7ac-99a5-4cd1-9bef-05bcbf0f76a1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "476ada4e-8589-4034-a8bd-7d6a0af5aaec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97513123-e7ec-44ce-9e76-fd28cdb58c20",
        "cursor": {
          "ref": "83518d88-85aa-48aa-843c-31bf81ff0741",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b49468d2-386d-4413-964e-7ef360a44572"
        },
        "item": {
          "id": "97513123-e7ec-44ce-9e76-fd28cdb58c20",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c539fe65-1fc5-48b9-9db7-5ef7b6aede9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7529e6bf-0b34-478f-87ff-3e685bdb1643",
        "cursor": {
          "ref": "430d613e-5b1f-4d43-b1c7-65660023d3e0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "94c8e85c-4e94-4196-9c00-7c39ef2d4254"
        },
        "item": {
          "id": "7529e6bf-0b34-478f-87ff-3e685bdb1643",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a8ecfa3f-459a-404f-aeac-26617e2128aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f8384f-f961-49c1-81b9-fdb715b5156d",
        "cursor": {
          "ref": "ad771836-8101-469f-acdb-a6a74bff0480",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8075d07e-e15b-477f-bfdc-5fbabc601dd3"
        },
        "item": {
          "id": "b9f8384f-f961-49c1-81b9-fdb715b5156d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7f1b6d9b-fdf5-4690-876e-aca1a88534d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d155adc-1f0c-40bf-bf71-e522fa4a3562",
        "cursor": {
          "ref": "de8e3826-7d4a-43c3-be31-ab2ab4438ed2",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ca79d9e7-b3cc-4a56-a9f3-104dc6ae4f17"
        },
        "item": {
          "id": "6d155adc-1f0c-40bf-bf71-e522fa4a3562",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fca0618b-6c5b-480c-8ac3-c8bf538cb6af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c44d3fd-b800-422f-8f6f-84b3cf8e3c80",
        "cursor": {
          "ref": "82b6b8e3-331b-426e-99b3-101017daca09",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "919d9163-b545-4dd5-bade-2c773233d56a"
        },
        "item": {
          "id": "8c44d3fd-b800-422f-8f6f-84b3cf8e3c80",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ad06d8d3-65e0-4089-b6e9-b0b417ddcccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d2c5e6-b3e0-443f-9999-f16896060f65",
        "cursor": {
          "ref": "69a84340-f5c2-4da8-9f80-ed046ed94aeb",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4ba29d09-8e8d-4399-9501-3828c4de0fad"
        },
        "item": {
          "id": "72d2c5e6-b3e0-443f-9999-f16896060f65",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9b819af8-7df4-442c-b76a-60e541b7c06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f400f1f-f032-49c9-8307-50dcec500b03",
        "cursor": {
          "ref": "2ce5fe47-f003-4880-af2a-06378d17499d",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a59f3130-60b5-42fb-9dc3-3f338360a26c"
        },
        "item": {
          "id": "2f400f1f-f032-49c9-8307-50dcec500b03",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b0defa1d-26c5-44f2-9b8e-4c4f94d87225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1bfda1-f925-4e8a-bde7-74e50c66719a",
        "cursor": {
          "ref": "6cbb7b7d-7b06-4451-a955-741635113d77",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4036115f-7b6e-431b-9aee-0a78b9754c20"
        },
        "item": {
          "id": "7b1bfda1-f925-4e8a-bde7-74e50c66719a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "3a9a243b-1185-4846-9972-e2ac904f91d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d67801-5b56-48b9-84c1-709fbc7ff0ec",
        "cursor": {
          "ref": "57ee3d6d-1fc4-438f-b303-9c897d11bfdf",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "41e062b0-33b8-4d06-b89e-259e7c016a90"
        },
        "item": {
          "id": "86d67801-5b56-48b9-84c1-709fbc7ff0ec",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1f4e0e2a-27aa-47ec-9414-cd424fc4c514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bbf6f3-5745-43f9-b926-a4749312d860",
        "cursor": {
          "ref": "eb2f7618-e4c8-4e3a-9ed1-05259799f3ca",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "456f8139-b355-4192-8adb-9880cd416c22"
        },
        "item": {
          "id": "67bbf6f3-5745-43f9-b926-a4749312d860",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "249b5c92-d2bc-4360-8e5b-7ad03c819d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16af3a59-0825-4a2e-8d36-0e477c9270ad",
        "cursor": {
          "ref": "86f42cdc-556d-476b-ae7a-82b360b36014",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8a733234-d4f3-4d49-9f83-ef685f3a1ad8"
        },
        "item": {
          "id": "16af3a59-0825-4a2e-8d36-0e477c9270ad",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5a9c5c47-e345-4096-8a14-de2c4f6e7461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5922b1e2-595e-4d11-9b24-b87ea47d0b63",
        "cursor": {
          "ref": "1130d09a-cc19-42c0-8352-15efd19ae1ec",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "29a7fa4f-fa47-4da8-a6a1-7a3d7ca6a51d"
        },
        "item": {
          "id": "5922b1e2-595e-4d11-9b24-b87ea47d0b63",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b584f613-e5b5-43c6-bad5-b52950916c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6d90446-c3d7-418d-a4d5-e6af78ade1a9",
        "cursor": {
          "ref": "0876e6d1-8321-4553-bbd4-27a83209ef50",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "16dd5836-d94e-4549-b238-b01d9b9ee6d7"
        },
        "item": {
          "id": "f6d90446-c3d7-418d-a4d5-e6af78ade1a9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "795433d9-cd07-49da-a991-737a4963ae22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72cc3c33-82b1-428d-900a-83ccd1406a68",
        "cursor": {
          "ref": "ba3c656b-57a6-403a-ad7b-fee409f0cce1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "be53de87-2087-4f24-b47c-2dce4c8ac6f7"
        },
        "item": {
          "id": "72cc3c33-82b1-428d-900a-83ccd1406a68",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4f3b0542-8cca-4d4f-85ac-7023d6dee65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fa67ac-e0af-4479-b79a-f3df548ecb56",
        "cursor": {
          "ref": "1d8515cd-d9a3-43dc-8cbf-93c3957fd0ad",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ebc7a734-318e-4867-a206-7e6480da2fef"
        },
        "item": {
          "id": "d7fa67ac-e0af-4479-b79a-f3df548ecb56",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5de220c1-e6a0-4937-8e4a-080dd4fa2364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d332fbe-d6f7-4b71-89c9-05c7fb16a96a",
        "cursor": {
          "ref": "3d2e9656-68fa-41a2-a28f-173bc7b13037",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "d453c00a-64d0-4d68-9287-284d55aedab7"
        },
        "item": {
          "id": "0d332fbe-d6f7-4b71-89c9-05c7fb16a96a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "861116de-6a06-4dc6-ac5c-63665a373dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47fdd1d9-4523-4ab6-9000-305e0491bed2",
        "cursor": {
          "ref": "864d9fd1-cb19-428f-8be2-61ed258c6413",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "11f7903c-80f9-4284-9571-9c089a9368b9"
        },
        "item": {
          "id": "47fdd1d9-4523-4ab6-9000-305e0491bed2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "18b28f39-9ba8-49bb-ab32-aa72ef93f1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7363e28-be40-452d-b9ed-ecf541271784",
        "cursor": {
          "ref": "28305f51-9c73-4e68-8a5c-b63e7630d248",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ad12bc8a-15f5-41ff-922a-eb5c719f06d2"
        },
        "item": {
          "id": "c7363e28-be40-452d-b9ed-ecf541271784",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1f824d51-d1fe-47d2-a0c8-39af668a68f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c145a31d-03be-4244-8e4f-8bd27fba5f7a",
        "cursor": {
          "ref": "1c4f7e70-bbbc-49d4-8737-d642ffef6a5f",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "23f69aa2-6859-4c13-b89f-1c906be633dd"
        },
        "item": {
          "id": "c145a31d-03be-4244-8e4f-8bd27fba5f7a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7b4a1159-1912-4950-a2b8-aa3859fe833f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f1e77d-f01b-42b8-8274-05545c524121",
        "cursor": {
          "ref": "825aad93-7fae-4497-9f70-b6ac2d65d043",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7e821ba2-8b7c-4268-8162-62b11b53e6e7"
        },
        "item": {
          "id": "92f1e77d-f01b-42b8-8274-05545c524121",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9cb4ccb3-3d62-4efc-873f-7fa347f9cd0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b49852-0e5b-4633-a09f-1973d489164c",
        "cursor": {
          "ref": "92dacad5-99ff-480b-9b97-1c2ba1361667",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e5f47ef6-ca15-4c31-9290-919e77879d7d"
        },
        "item": {
          "id": "67b49852-0e5b-4633-a09f-1973d489164c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e9c4759a-6d81-482c-abf0-d3a0a867fee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0770af71-e87a-4a23-8067-e99d11b8817e",
        "cursor": {
          "ref": "0f373cca-459c-47e6-8542-b09040dd13ad",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d1f44b48-d7d3-446f-a409-9b5d52c35c69"
        },
        "item": {
          "id": "0770af71-e87a-4a23-8067-e99d11b8817e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ad53db69-1814-4c4f-bd64-a6d7688d4532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbe881c-814e-4373-a71e-bb252ac3de17",
        "cursor": {
          "ref": "720884f0-9755-4017-b04b-74f0d62aebab",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3c5b26e5-3654-4349-ad15-5f88b9634e9b"
        },
        "item": {
          "id": "cbbe881c-814e-4373-a71e-bb252ac3de17",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7aced99a-0b03-4206-98fc-473076a8316e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d75bbca-18a8-4652-ab88-886d8909d1d9",
        "cursor": {
          "ref": "47dda8f3-9090-45b6-aad1-8df1fe9aa911",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "24e6036b-63ab-430d-8b20-39058f6e9e58"
        },
        "item": {
          "id": "0d75bbca-18a8-4652-ab88-886d8909d1d9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "eed47f16-5b17-4f1c-a347-4b4237f1d090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28049cea-8829-4f58-b5e4-3c9c4ce28565",
        "cursor": {
          "ref": "e6980a13-501d-4f8a-8082-d8dfba552d38",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "30d52b1f-3144-44f3-b0cf-940fb9975cc8"
        },
        "item": {
          "id": "28049cea-8829-4f58-b5e4-3c9c4ce28565",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d2a1b7e-59c4-43e7-a14a-84d2c29b859e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03bf1c9-8c73-40e1-8854-664556393ddb",
        "cursor": {
          "ref": "dab23b92-5c1b-4cd3-b568-64d9933f5eb5",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7fbb0bb0-5aac-44b1-9665-366b48bca0ed"
        },
        "item": {
          "id": "d03bf1c9-8c73-40e1-8854-664556393ddb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4a5dbdbe-b660-440a-b10f-4f767852abd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9c1496-3dad-4ea7-a3ee-2228fa3189fb",
        "cursor": {
          "ref": "eb23d7f3-dbd2-4ca8-a169-c458fd8e4e3b",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a95a7608-8f26-4851-bfb6-300b9b8186d4"
        },
        "item": {
          "id": "2c9c1496-3dad-4ea7-a3ee-2228fa3189fb",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ee39e65b-8620-49b6-877b-7c15c02033a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc05a6e-a707-42da-8e94-9b23f6674752",
        "cursor": {
          "ref": "1fc16ff8-1a0f-45f5-956c-0ba6a59c8e73",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f8e1a7d0-fe45-4a7f-885d-40a593c2f4e3"
        },
        "item": {
          "id": "9bc05a6e-a707-42da-8e94-9b23f6674752",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4956df06-1598-4bee-a1eb-4cf2255bf0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d61f994-f1c3-4cf7-bad7-b7380e582085",
        "cursor": {
          "ref": "884f1dbc-215d-425e-afe1-d6971909751e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c30d1e16-bbfb-4340-a314-c10ad3862353"
        },
        "item": {
          "id": "2d61f994-f1c3-4cf7-bad7-b7380e582085",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "53aaf062-cfb4-4b89-998c-e2f34c996790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c21958-ea21-4c16-9af3-b2deb0bf0685",
        "cursor": {
          "ref": "6a3962bf-9a11-464f-a5d4-10a670828ac8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "fa232715-85b1-4dcb-b5fd-685258c0696a"
        },
        "item": {
          "id": "69c21958-ea21-4c16-9af3-b2deb0bf0685",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b7c7b1a1-34d5-4076-ba9a-3da2711e4b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43102d20-8143-4266-abf1-d94e6dc1e392",
        "cursor": {
          "ref": "01bb3173-89b1-44ce-8d4d-c45886c6fbe0",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1cf43f76-ed8d-4392-a6eb-fcfd4b7c0698"
        },
        "item": {
          "id": "43102d20-8143-4266-abf1-d94e6dc1e392",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2f8de2d6-4f23-47d5-8c99-92edd2cae8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70165a8a-9365-4034-aa75-cc12e2da9629",
        "cursor": {
          "ref": "29fdf6e5-4a18-447e-a1af-cc10d44f210e",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b47571d5-0eb7-483d-b6de-f0fc95afef73"
        },
        "item": {
          "id": "70165a8a-9365-4034-aa75-cc12e2da9629",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "40617594-67fd-4eed-b25d-df89b5c80f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a93f32e-eb96-464a-948b-5acbc4029654",
        "cursor": {
          "ref": "86505c44-89a4-4436-bc57-1261e403a697",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d1472e4c-8d33-4d72-b50a-308bf26586a9"
        },
        "item": {
          "id": "1a93f32e-eb96-464a-948b-5acbc4029654",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f9b444fd-7ba5-4a3e-8083-bcc671c8b6cb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3747e3ad-09cc-46c2-a58b-7fd9d966515f",
        "cursor": {
          "ref": "95469ade-52e5-4cbc-815a-d7f72195b8f3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7642cfe6-2c12-45ff-998e-11a3a0161a37"
        },
        "item": {
          "id": "3747e3ad-09cc-46c2-a58b-7fd9d966515f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b2ec3f8a-4a3c-4f7d-9c62-398871f69040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518f2e1b-1872-4520-9d6a-18a59a8104a6",
        "cursor": {
          "ref": "fbf7cf00-b367-434d-ac88-1a46b13e8c01",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "0c3c7e72-af16-4bdf-ade1-7e2bf9a41b45"
        },
        "item": {
          "id": "518f2e1b-1872-4520-9d6a-18a59a8104a6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "452e9afd-8571-4ebd-941c-e599d703eaf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba462d0-9eaa-437b-931f-3e446e433662",
        "cursor": {
          "ref": "ae516592-1608-4c71-8502-9057cc934089",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "18eb94c0-0595-4454-b741-8d3254f23b90"
        },
        "item": {
          "id": "9ba462d0-9eaa-437b-931f-3e446e433662",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6e749374-de1e-40dc-a5b7-bfdfce3dbd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee79e1d-fc2b-4989-9233-b1ab3598a5ef",
        "cursor": {
          "ref": "1bb1c6c4-101c-4a7f-8ac1-ad0f07f9afff",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e5194374-bec2-4bd3-b46b-80bee9ebdbd6"
        },
        "item": {
          "id": "8ee79e1d-fc2b-4989-9233-b1ab3598a5ef",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "5fe74dbf-ca03-4613-b8c2-5b9bb0610c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5eb1bc-0632-47d2-a3a4-491e9200297a",
        "cursor": {
          "ref": "b1f59627-df8c-401b-94c7-4f75b5174bcf",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1d59bab6-f671-45d3-bcd4-45348f812fce"
        },
        "item": {
          "id": "9c5eb1bc-0632-47d2-a3a4-491e9200297a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2d042644-6bfd-4d50-adba-6552bb31e149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cb466d-0f89-48e3-a0ed-273a1638332e",
        "cursor": {
          "ref": "bdda9c65-49bf-469c-8a47-2a006044f0fd",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1294f0d9-43d5-4c52-b349-7de9dc3e441a"
        },
        "item": {
          "id": "18cb466d-0f89-48e3-a0ed-273a1638332e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "fae0c101-e382-4e07-85d5-1fbc2cd117a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ded79f1-db4f-4c90-9ba6-4cb6354a9547",
        "cursor": {
          "ref": "0eea52dc-5731-4e67-aceb-cee017e0dd62",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0a9cfe40-6e75-4bb0-9c74-bfaa2db7b696"
        },
        "item": {
          "id": "7ded79f1-db4f-4c90-9ba6-4cb6354a9547",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "09dcb00a-7488-49d7-a8e4-ced58f1c7f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fea5e58-19fe-4c40-835d-ba49510fc920",
        "cursor": {
          "ref": "ae6ff463-28d6-4ce2-a2aa-cdbedabc7d65",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3b331747-af8f-4d66-a61e-37fb63251a1c"
        },
        "item": {
          "id": "4fea5e58-19fe-4c40-835d-ba49510fc920",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "1c5b30ec-dd1b-4f31-a7ff-e02218f17ca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5492e51-32db-4246-883c-5ddd05628934",
        "cursor": {
          "ref": "70b94f6b-3514-4862-ac12-d999bdae2feb",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bb90ff56-b7cd-4ce9-b200-ff4db02918f6"
        },
        "item": {
          "id": "b5492e51-32db-4246-883c-5ddd05628934",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b8963a67-02cb-41e8-a0f8-f64c3ff221c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97daa67f-d12a-405f-a75b-7ae2061e2ee8",
        "cursor": {
          "ref": "30309133-78a1-4d68-b612-b3a16a98b3e1",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e7c5ca02-b69d-4097-8229-5973e597e920"
        },
        "item": {
          "id": "97daa67f-d12a-405f-a75b-7ae2061e2ee8",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1f51c16a-3eff-489f-ab1a-97e13c2c1b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eca6092-d30a-46a3-8796-80eb4defd07e",
        "cursor": {
          "ref": "110cd3fe-da8c-4add-964e-b3fd4e120b30",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b575aedb-8a2b-4cda-ae66-709986ce9fda"
        },
        "item": {
          "id": "8eca6092-d30a-46a3-8796-80eb4defd07e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d0c22470-196e-4080-ad16-0b2fb972ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8051ae0c-e79b-4c6c-96a6-cb37ab2e48b8",
        "cursor": {
          "ref": "7c76f7db-2fce-470f-b37a-09949377b95a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "726cef85-6579-4a60-a4ea-a36e49368ebf"
        },
        "item": {
          "id": "8051ae0c-e79b-4c6c-96a6-cb37ab2e48b8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "18b3e67f-8034-42c4-a9dd-797ef9573ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c27fed1-86f7-4304-84be-bdcaaf31e097",
        "cursor": {
          "ref": "c93988e5-1477-4979-8933-9260d54af36f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c07daff0-ac36-4505-8f09-ad3f2085c806"
        },
        "item": {
          "id": "6c27fed1-86f7-4304-84be-bdcaaf31e097",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "80b64032-614d-433f-93bf-073f351e18cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3302fcc2-3513-44d1-a095-ad71a486c2d1",
        "cursor": {
          "ref": "0b26f95e-9406-4008-9b8d-f0b0b4ca0768",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "27273551-0b73-4244-82e0-2bbd37ba5527"
        },
        "item": {
          "id": "3302fcc2-3513-44d1-a095-ad71a486c2d1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "641caf6a-eb12-419c-87bd-8adb031e1c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f16cf06-35ec-4317-95f9-7f6a5a1afa9d",
        "cursor": {
          "ref": "d3bd06e1-5694-4ef8-9bb0-e2fb6af4fb5c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "697c2813-ce34-4081-8978-bf355647cde3"
        },
        "item": {
          "id": "5f16cf06-35ec-4317-95f9-7f6a5a1afa9d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "00c0e601-1c79-4eb4-a1e9-2df0b7d4aa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3737f852-0544-4fc2-8622-f2e5252359f9",
        "cursor": {
          "ref": "9ac461fb-471e-473b-b255-7d0da18bc037",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "84587f5d-400b-41b6-a704-f45dbb3f50f5"
        },
        "item": {
          "id": "3737f852-0544-4fc2-8622-f2e5252359f9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f8f15cee-4a4c-40b4-aa24-6d9bb16ccaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc81e2d-6fef-4605-b73f-66cb73b42355",
        "cursor": {
          "ref": "b4541415-cf9c-4ce2-b642-64168f6b9c49",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "68ff2875-7013-4e6d-af24-07de83204719"
        },
        "item": {
          "id": "fcc81e2d-6fef-4605-b73f-66cb73b42355",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3a68c308-6716-4f25-8a89-dcf890c8266a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837fa70b-32af-4299-b646-024628b5ba1b",
        "cursor": {
          "ref": "e4833458-7601-4ca4-a052-59b276bc9719",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b13b7153-21ea-43c2-acfa-f88f3eee9dab"
        },
        "item": {
          "id": "837fa70b-32af-4299-b646-024628b5ba1b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4afce820-e211-496f-87f5-bb7a43a4f481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef49341-0f02-4738-9568-f1b95285c47f",
        "cursor": {
          "ref": "cca16ec9-0eb7-4f3f-84f1-76cb8c3c839c",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3c23e7d3-8567-4a94-b5e8-7daaa9c0468a"
        },
        "item": {
          "id": "fef49341-0f02-4738-9568-f1b95285c47f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "131ab0c0-acf0-45fc-bd75-c2f480c9c889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42f82685-00ea-442e-8af6-a72c2e05c9cc",
        "cursor": {
          "ref": "38170d60-cf9e-4122-93e9-3d8c841803dd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e0d28b56-8cbf-4f86-8c00-24fdbcf0dd10"
        },
        "item": {
          "id": "42f82685-00ea-442e-8af6-a72c2e05c9cc",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "00e39783-e5da-4aec-b8cd-a3d37ab93137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028104f6-d712-4eba-af75-95ca33305f20",
        "cursor": {
          "ref": "4b302716-a63f-496b-b3e4-b347a07317ec",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "38f208ea-c976-4a50-9c67-8c8afab15cea"
        },
        "item": {
          "id": "028104f6-d712-4eba-af75-95ca33305f20",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ff042f71-221e-4c4a-9980-aab177996996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6e62a6-3f34-4162-bd4e-afd78e95b7bb",
        "cursor": {
          "ref": "d5e1c342-911b-4faf-9d2c-309d433ca3e4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c9d174ac-d66d-4bee-ac57-ed1f32f32176"
        },
        "item": {
          "id": "ff6e62a6-3f34-4162-bd4e-afd78e95b7bb",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "98be5b84-c5d7-4599-8b52-2ea12eb3d534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aedf239-0e43-4a07-9b6f-dfbd4b1311cb",
        "cursor": {
          "ref": "1d643aea-87c7-4e43-a486-b449c75d7788",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d6118d85-44f9-4cc6-bb5c-e65ac56790f2"
        },
        "item": {
          "id": "2aedf239-0e43-4a07-9b6f-dfbd4b1311cb",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "80c92f96-0e2b-4e11-9bf0-347382698944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "637eed4c-e77a-4e7d-b94d-e1f63e6bb292",
        "cursor": {
          "ref": "e808f934-b4db-449e-b23c-0feb5dbb1fbf",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "045db6e5-a59c-4efd-8fe5-6de31e3eb9ff"
        },
        "item": {
          "id": "637eed4c-e77a-4e7d-b94d-e1f63e6bb292",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bf9253b9-b141-425c-916b-ce1e93bee32a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2652395f-8bb1-4495-a542-8d2f7f5ac8ca",
        "cursor": {
          "ref": "7d6da3b7-508c-4f3d-be87-b50009921904",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "af85fbd0-7ef4-4390-be9e-bab8e97666b4"
        },
        "item": {
          "id": "2652395f-8bb1-4495-a542-8d2f7f5ac8ca",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fffb4908-9f0b-433e-ba9c-91d4f578e2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b777f2da-f777-4ce1-a8b7-f53c8740a26a",
        "cursor": {
          "ref": "496a59af-8adf-4d8a-9066-902ef4efe58f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "60947307-e2c2-4ca0-b1fb-bb8224cf4179"
        },
        "item": {
          "id": "b777f2da-f777-4ce1-a8b7-f53c8740a26a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7fe655af-9879-4950-9749-da37974d826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7160f8-b1c9-483b-85b3-8e44a0074623",
        "cursor": {
          "ref": "42203a30-9d92-457c-82f5-efb63b4ed590",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4a7254cb-d7e0-442f-83c2-e61cabda1c1b"
        },
        "item": {
          "id": "bc7160f8-b1c9-483b-85b3-8e44a0074623",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "37214011-f59e-45b8-ad40-4320170bd777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7136856c-e922-4e55-b4a4-601cd16569ce",
        "cursor": {
          "ref": "b965607f-4176-4fe5-80ba-dd21665f0f4f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "e9e9ca8a-8f8e-4af7-9c4d-cfea38f195ca"
        },
        "item": {
          "id": "7136856c-e922-4e55-b4a4-601cd16569ce",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cd234b38-2431-4928-a6a9-903930c2686f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497e51bc-958b-4641-8c01-2d553e166a10",
        "cursor": {
          "ref": "5f342af4-e4a9-4749-9434-7e4607fa661c",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d7a3cbdc-9789-4914-95c8-cc02201808fe"
        },
        "item": {
          "id": "497e51bc-958b-4641-8c01-2d553e166a10",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "73aa371b-42ec-46b5-b260-13b44f9e0e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe0877a-210a-43a3-9942-c4c3125ec5b6",
        "cursor": {
          "ref": "ce3a4ba0-bffe-49cd-b1ef-459d4e72466f",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "57c0939d-f150-4bf6-817e-d51e129f163c"
        },
        "item": {
          "id": "fbe0877a-210a-43a3-9942-c4c3125ec5b6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "aadedf2d-c0a9-4587-ba74-49137fe62ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b475ff26-2c49-4b91-94ce-7fb1ee6cf030",
        "cursor": {
          "ref": "2593ca0d-ac66-4e40-9787-1c30cfc2f10f",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "46eaf542-3fc3-4950-9c1c-ef72b2ff08e1"
        },
        "item": {
          "id": "b475ff26-2c49-4b91-94ce-7fb1ee6cf030",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8cbfc7a4-1b33-425e-81b7-44d84db104c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9543236-1356-4c6a-b605-f404a189f6da",
        "cursor": {
          "ref": "3837388b-7c78-4d91-8700-b21a956bd6b4",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a53708f1-7b85-40ad-8864-d359763f60da"
        },
        "item": {
          "id": "a9543236-1356-4c6a-b605-f404a189f6da",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6e16e118-db65-4189-8b5a-3d2e55d011d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e3e62d-b3a2-496b-9ec2-f4b640769f74",
        "cursor": {
          "ref": "2788e11c-be7d-4c78-bf73-a745b7a4a98a",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b1ce833f-5309-4ac0-9f00-e5b5f3f72266"
        },
        "item": {
          "id": "04e3e62d-b3a2-496b-9ec2-f4b640769f74",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1d8b4591-42f3-4191-9ca2-5912b87402c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ef6c6d-abcc-47b8-ad4d-34023464c91d",
        "cursor": {
          "ref": "f70e4f7a-a899-489d-b2f5-f96dc824d7d4",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bd84b943-6057-40f9-86c9-e4360bcf786a"
        },
        "item": {
          "id": "43ef6c6d-abcc-47b8-ad4d-34023464c91d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "5244f948-a9e9-4607-9d4e-839064a36728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eac82e32-25b8-424e-a6f1-eaf72481af06",
        "cursor": {
          "ref": "3cb9b709-0bcb-47ac-8c08-e24ae16a66f8",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dea73fcf-5dbb-447f-8bfd-4a41de6f1db7"
        },
        "item": {
          "id": "eac82e32-25b8-424e-a6f1-eaf72481af06",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d60e9375-0903-4bbd-b616-51de9ee751f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51c572d-2b0a-4739-a715-33749e91f08e",
        "cursor": {
          "ref": "d6cdf556-4b47-4b96-9482-211f9c1dfd5c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "afdb7cf2-ec94-43cb-8f85-57f30627b89f"
        },
        "item": {
          "id": "b51c572d-2b0a-4739-a715-33749e91f08e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6dcb9119-deff-4f3c-8de8-6743398a3e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11037b6-b89e-439b-aa6f-6e3da769f093",
        "cursor": {
          "ref": "93384ba6-1685-455a-a84a-4ebb71cb0156",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1c5bfea2-92e5-44e1-8194-020e13141c04"
        },
        "item": {
          "id": "a11037b6-b89e-439b-aa6f-6e3da769f093",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "28b12194-41e9-4c82-b1f9-cd8a061f6b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8b0c3d-cd5e-4fab-b299-39c2f4f2291c",
        "cursor": {
          "ref": "af7a0cdd-236e-4595-b35e-51d49bde7dd7",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2dd69d55-2e07-47c0-9147-078a4d46bd34"
        },
        "item": {
          "id": "5c8b0c3d-cd5e-4fab-b299-39c2f4f2291c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cb20950c-38bb-40b8-88d1-f16f59298741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37314053-3700-42ff-8087-2d13546691bf",
        "cursor": {
          "ref": "ba8340f6-e899-4d16-898d-fc37cbaf8a50",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "bfe97d3b-250e-42aa-8e17-ee60a6e1ee52"
        },
        "item": {
          "id": "37314053-3700-42ff-8087-2d13546691bf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c147134a-0a85-4d58-a5db-1562f280ef2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cbfbd4b-ebef-48a5-b0aa-37bf5ef2423d",
        "cursor": {
          "ref": "cca84f14-9883-4729-b9fc-d1f007714365",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c9cf50ee-b931-409d-a6b8-57294cfec1a5"
        },
        "item": {
          "id": "7cbfbd4b-ebef-48a5-b0aa-37bf5ef2423d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e470b45a-adff-42e2-8da6-bf14c7de7530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b18992c-bd17-449e-abf8-7a23c24085d3",
        "cursor": {
          "ref": "31300555-5055-49ea-93f8-a4f0bd035a45",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bd0a70a8-67fa-443e-95a7-211b5f3e3526"
        },
        "item": {
          "id": "1b18992c-bd17-449e-abf8-7a23c24085d3",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bd1b1d2e-5326-4a05-bcd7-22e417ce0598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52564b4-84d5-4fc4-b073-dc0b69d1cea0",
        "cursor": {
          "ref": "cb9373cd-4cfe-44dd-ab0b-49af1f4ec850",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e6fe6af5-db23-4474-9896-9b97a3b95659"
        },
        "item": {
          "id": "d52564b4-84d5-4fc4-b073-dc0b69d1cea0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e9ebbd55-060d-4ab2-8e5c-60bfe582cca9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad36b1cc-eb6a-4a58-9fbf-e7854bb2d6bf",
        "cursor": {
          "ref": "89a5e90b-33fb-470f-8731-3d12cc3275bb",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2018090e-f529-47d1-8dd0-785d76ac23d1"
        },
        "item": {
          "id": "ad36b1cc-eb6a-4a58-9fbf-e7854bb2d6bf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "12060b02-f24c-4bc4-ae51-2a599c3885b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6a335e-ad01-49e0-8d5d-1d33c7fa3999",
        "cursor": {
          "ref": "e33ef255-3310-477c-a682-57d8e1752887",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c156e76c-9d0d-470c-a952-c4af7f0460a1"
        },
        "item": {
          "id": "de6a335e-ad01-49e0-8d5d-1d33c7fa3999",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fc948d54-1356-4832-8393-08761b575e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcb90af-9b79-4f44-82ec-36716169dfee",
        "cursor": {
          "ref": "74ffd1c6-8d9c-4c8d-8231-ebc16f391cdc",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2f41f45f-6512-4b20-9c7b-7ead97ae752b"
        },
        "item": {
          "id": "2fcb90af-9b79-4f44-82ec-36716169dfee",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ecb09cda-a9b3-43fd-a582-9bcaf3cd9f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b49a2f-5b9e-4ae0-bfca-d8e46d669058",
        "cursor": {
          "ref": "0e67b0e2-0f64-45a5-8661-1da9c538cf74",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c9665808-1508-41ec-bc45-5a785a100878"
        },
        "item": {
          "id": "22b49a2f-5b9e-4ae0-bfca-d8e46d669058",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "91b2fc84-c265-4e3b-867a-3c80a7726e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50767881-1f3e-48da-89a4-dbacb5cbbcfd",
        "cursor": {
          "ref": "157f9b7d-99a2-44ef-9382-efec8d9563f9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "72506330-887e-4aeb-af34-967ef131e641"
        },
        "item": {
          "id": "50767881-1f3e-48da-89a4-dbacb5cbbcfd",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "52500392-94c7-42bf-964f-f549d8066722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32acafe8-0800-4021-a791-d278a7479cc1",
        "cursor": {
          "ref": "b6d9d725-c6af-42a8-a07a-a3998225db76",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "47998c07-bb51-466e-b0f7-2601a4b93552"
        },
        "item": {
          "id": "32acafe8-0800-4021-a791-d278a7479cc1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fb5ccd41-edb5-475c-b2ea-d53106bdc186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcda19f-108d-4b1b-be24-28f81a743faa",
        "cursor": {
          "ref": "17483a7c-367d-48e9-8493-d008f2ea181f",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0ee152fa-ea03-4d9d-a1ed-51e9866c02a6"
        },
        "item": {
          "id": "2bcda19f-108d-4b1b-be24-28f81a743faa",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "edd97b28-5d01-4527-a9f4-453ae1935c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf752dd-6f73-4a3b-98ba-5ee12e75be5a",
        "cursor": {
          "ref": "73a3233f-d58b-47ce-a427-040a0e3f7a42",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d8b775fa-59e8-4050-b752-c9311421a70f"
        },
        "item": {
          "id": "7cf752dd-6f73-4a3b-98ba-5ee12e75be5a",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "cc758af3-6e6e-4410-b1b1-29c493c0c883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a320181d-78e2-4cd0-8b86-d52c867eb79d",
        "cursor": {
          "ref": "a0d3ffdc-347d-4884-b101-f0946c19ca33",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c3389223-99ba-40e9-b4f6-a13d83ad4275"
        },
        "item": {
          "id": "a320181d-78e2-4cd0-8b86-d52c867eb79d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "764b72bd-4ac5-4559-a3b3-d6abc6a2a241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e276dc02-28a6-410d-9ad9-d0f2a2cde587",
        "cursor": {
          "ref": "3571af4b-baaf-4bc2-b5a1-16b7dde34949",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "21f8a2c9-abb2-42f5-8bfd-29cdd902c7ea"
        },
        "item": {
          "id": "e276dc02-28a6-410d-9ad9-d0f2a2cde587",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6f54b18b-fa21-4233-9902-9f2338bc47cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a90cb1-9c48-42ab-8a0d-f0e7e734c40b",
        "cursor": {
          "ref": "cc42eaad-d621-4e46-95ad-95e23ed92548",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "edf640e6-b07c-418d-8ec2-1836e6533b5e"
        },
        "item": {
          "id": "84a90cb1-9c48-42ab-8a0d-f0e7e734c40b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b11d8aae-5243-40eb-8418-647b84de90b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b22530c-728c-43cc-b310-f35d2fd5e20a",
        "cursor": {
          "ref": "af361ee1-8cf4-447c-a0a9-709cddc9aa01",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e93a2c09-1125-46bd-bf40-e2502abb214e"
        },
        "item": {
          "id": "1b22530c-728c-43cc-b310-f35d2fd5e20a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e7546ce4-6920-4bac-be5a-6a8b1bf5eb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263d37da-7431-4deb-84a8-8b1ba87b74c1",
        "cursor": {
          "ref": "6e7c4281-f138-4f2f-9101-0e43d1b90da6",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cd3cc7bd-bd34-43fb-a4b5-0d995988e350"
        },
        "item": {
          "id": "263d37da-7431-4deb-84a8-8b1ba87b74c1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f156119f-50d8-4dc0-9692-284dab241a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea36440a-5ee3-413a-9583-a331ff97bb66",
        "cursor": {
          "ref": "2eb74ad2-2879-4b89-87cf-ec9f525330da",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a18800c2-1577-44eb-9f22-31625d33f8d7"
        },
        "item": {
          "id": "ea36440a-5ee3-413a-9583-a331ff97bb66",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "efe1557e-8057-40c4-96c6-9ee5655cb35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077031d2-8618-464e-9b72-04d5a5241ce9",
        "cursor": {
          "ref": "94f20fd6-af26-42f0-b396-281112ff6dd3",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8c87b241-34ce-4eb3-ba84-e4506f826cc3"
        },
        "item": {
          "id": "077031d2-8618-464e-9b72-04d5a5241ce9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0099125e-1ef9-4613-b0ee-e59ec9f755da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6553c941-87b2-4488-b7a6-6cd16b3f7db7",
        "cursor": {
          "ref": "2fea0978-fb64-4722-9a8f-ae2105b40a4c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "948fbf10-6b90-4a02-8a91-e0341618767a"
        },
        "item": {
          "id": "6553c941-87b2-4488-b7a6-6cd16b3f7db7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a10b0e27-4c1a-4eff-97d7-54b7788cff4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f776c448-6556-4d94-bf5f-56b6d146019b",
        "cursor": {
          "ref": "a2c99ed2-9394-464e-97f3-18a7746472c6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a584fb47-35d9-448b-9144-7db03023acbf"
        },
        "item": {
          "id": "f776c448-6556-4d94-bf5f-56b6d146019b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "56db5240-b260-472c-a2be-9eb4b4062f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39a90d1-a5f0-44fd-83d6-d8109e2381bb",
        "cursor": {
          "ref": "ab957064-8a09-4d62-86a3-f820790ecdf5",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5ee2871c-cee8-45c4-b21c-11bec460b448"
        },
        "item": {
          "id": "e39a90d1-a5f0-44fd-83d6-d8109e2381bb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c4e5e548-d0b1-4749-bbbc-0b2aab6674a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a8f15c-8ac8-4bfd-ba6e-155f705604e4",
        "cursor": {
          "ref": "6468cb9a-edce-4511-b328-f9c893be6bbe",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3844ffc9-9fd8-42a3-9af5-6ef51a2f9f14"
        },
        "item": {
          "id": "75a8f15c-8ac8-4bfd-ba6e-155f705604e4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9f89f374-80a2-43b3-babc-f0dc11292990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e235bb-139a-4490-b537-d289957d1259",
        "cursor": {
          "ref": "10eaabb2-2c01-453c-aed9-e65c6fcb2914",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "22498f4f-f9fe-4f26-91e5-4597de092afb"
        },
        "item": {
          "id": "91e235bb-139a-4490-b537-d289957d1259",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d83c6bdf-30fa-43d3-a9c9-ad9e7c510ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9431158c-c6b3-4b77-be08-61c7e84c5fc9",
        "cursor": {
          "ref": "5bc7e738-867b-4431-9947-9b1a6f1dda1d",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "93790bfc-09ab-4bed-af29-0d4a5d13a74d"
        },
        "item": {
          "id": "9431158c-c6b3-4b77-be08-61c7e84c5fc9",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c101d986-9120-400b-a852-58896296c5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd35a225-d1f2-4ea5-9538-0fe5ea53dfca",
        "cursor": {
          "ref": "a6459030-218f-47d7-b097-2f794f2ddbd7",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "c8ba1edf-429b-406e-aded-05e035bdd124"
        },
        "item": {
          "id": "fd35a225-d1f2-4ea5-9538-0fe5ea53dfca",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e6551991-eefb-414f-9227-2b170f6a9502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93dfbdf1-5718-4ab2-82ab-1f62b70ac737",
        "cursor": {
          "ref": "48f1df54-85ad-43bf-b60a-b3f43544d6ef",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4c18d42e-ea4e-4d53-b1fe-061b45dd1893"
        },
        "item": {
          "id": "93dfbdf1-5718-4ab2-82ab-1f62b70ac737",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "19da4282-a795-4da3-9664-8ab8feaf2fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9cb227e-c2e8-4a40-abf5-d903d1c9d665",
        "cursor": {
          "ref": "bb9f3e89-ac13-4f78-aad9-d237f40e1393",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "eef11ce7-4aea-4c6b-9722-b678e61f8c7d"
        },
        "item": {
          "id": "d9cb227e-c2e8-4a40-abf5-d903d1c9d665",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7706ed69-4fcf-466d-95bc-2a23e853db65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279f3712-94d7-4946-9de5-87557c5ba21a",
        "cursor": {
          "ref": "0333efae-82dc-4b5a-b1df-5b6e10d5a909",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ff4021ee-5dc9-43a0-bf96-59ef71460ae8"
        },
        "item": {
          "id": "279f3712-94d7-4946-9de5-87557c5ba21a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "77c5a8dc-ae4e-4ea5-b78d-cc11a485ad66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b11717f-6714-4b55-ab3b-e0605d9a7f81",
        "cursor": {
          "ref": "e4155431-2f1e-4a28-9d8a-d518c5d3ce20",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d593413a-befa-42a6-8df3-6885373a4c99"
        },
        "item": {
          "id": "5b11717f-6714-4b55-ab3b-e0605d9a7f81",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fa909f6b-8d76-41ca-bcb6-4c6ce8cc1fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16fe34eb-8adb-4820-9aaa-2cb107cc7f5d",
        "cursor": {
          "ref": "458ab84e-0a70-4799-84ab-97b4ae60c7e8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "dfb5858a-04ea-49cd-b5a7-13d5c48915b6"
        },
        "item": {
          "id": "16fe34eb-8adb-4820-9aaa-2cb107cc7f5d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bdc66a40-c9dc-4d01-a393-7eafcf6bf779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff88918-4c60-47e9-a7ec-1187f51eb656",
        "cursor": {
          "ref": "e1edc5f9-475b-49e2-9ab6-22d47e4aee04",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3a465ff7-27e9-487e-bf3e-223ead799eff"
        },
        "item": {
          "id": "9ff88918-4c60-47e9-a7ec-1187f51eb656",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "181c9033-04cd-420b-8f14-a5eec1cbe909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c040101-cb50-4e26-909a-6696970aa0de",
        "cursor": {
          "ref": "84d03c2a-0400-4be6-8e0e-6fe65dd10dcd",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4541561d-7d9a-4929-9196-2e520ffc1dfd"
        },
        "item": {
          "id": "6c040101-cb50-4e26-909a-6696970aa0de",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "42bf05ec-ce06-4fb7-aaa3-d8b9f9c27709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fc3946-cc94-454f-aba1-f7e52e275a02",
        "cursor": {
          "ref": "16038b6c-8b0d-4fdd-8835-9937be7c5a1a",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "bd169549-0159-4c3e-b506-f95b8a8953e5"
        },
        "item": {
          "id": "39fc3946-cc94-454f-aba1-f7e52e275a02",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a00cd5bc-1e63-4136-b71c-c9c33962964a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59aab6d9-6941-4e29-8101-765acd77e0c8",
        "cursor": {
          "ref": "fa9e9dfd-0439-4376-a150-c1a46e64aa69",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d23309de-f940-4b5c-bb8b-0e85ae0b83b8"
        },
        "item": {
          "id": "59aab6d9-6941-4e29-8101-765acd77e0c8",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "293156b7-5149-42d1-8268-5d14cda4f586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd48d9db-25be-4df2-9cff-762716e17fe4",
        "cursor": {
          "ref": "8454420a-8752-4919-906c-9254b66d05b8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "87095a63-bf89-45e2-9dcc-64057794e67a"
        },
        "item": {
          "id": "bd48d9db-25be-4df2-9cff-762716e17fe4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d8ac9b87-749f-478e-9ae6-fc5a6edb1ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7124c291-ef1c-415f-ac3c-89ab5e47b253",
        "cursor": {
          "ref": "5612be9a-b57c-4791-8845-79dd6c4ac9bc",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ae03bba9-c6e9-4619-9895-cf8e3ee26ead"
        },
        "item": {
          "id": "7124c291-ef1c-415f-ac3c-89ab5e47b253",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dae45f36-36b0-4673-8f3c-f6d30733fed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9359d68-10de-47e0-ac07-33bbc0cc3d18",
        "cursor": {
          "ref": "14d8e37d-c313-49a3-b209-836fb1a1640d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a46be2ab-6e70-4038-8403-7cf9de2869bf"
        },
        "item": {
          "id": "d9359d68-10de-47e0-ac07-33bbc0cc3d18",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6d291667-cd17-41ae-91cb-9642bd546078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3d2ba9-2d91-43e3-aa3c-ecf58aff1e46",
        "cursor": {
          "ref": "1b6b68fc-67dc-4ce1-9df7-dbe4dc58d169",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1da50ba3-4edc-4abd-bdac-55e72cc11479"
        },
        "item": {
          "id": "cd3d2ba9-2d91-43e3-aa3c-ecf58aff1e46",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "430da073-b018-4f8f-b033-0dde3a09df62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acdcfae-cfd2-418f-a45a-bb49584c976e",
        "cursor": {
          "ref": "73de410f-8432-4518-be57-d56489e5b582",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3e547e51-d55d-4482-88a5-37ae281c9d75"
        },
        "item": {
          "id": "7acdcfae-cfd2-418f-a45a-bb49584c976e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "00576926-8e0e-4f3b-a328-ebc5014267d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2a5565-d0c9-4d2e-88d5-ad82d4275d62",
        "cursor": {
          "ref": "d3d3f2e1-589f-4987-a28d-445797a0c614",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "13dd2143-2d89-4b9c-9205-b0dd577eda98"
        },
        "item": {
          "id": "ff2a5565-d0c9-4d2e-88d5-ad82d4275d62",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "22bc8b45-c0b8-40b5-aab6-358a97064c3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc59df75-baac-45b4-b956-cd535da381ff",
        "cursor": {
          "ref": "f3e41525-512e-4ca3-b981-d6ee938ea554",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aeb249e6-71c1-4806-9376-03ca55349c07"
        },
        "item": {
          "id": "dc59df75-baac-45b4-b956-cd535da381ff",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "29b1aeed-5fe6-4757-8e76-6f0a7393fe41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed2ffd8-0941-4494-ac3d-f3f3689ea620",
        "cursor": {
          "ref": "895c4cbf-0d4b-4ddb-a60d-f3ebae1cb39f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "038493ea-b16b-4c66-8297-6d975f295557"
        },
        "item": {
          "id": "9ed2ffd8-0941-4494-ac3d-f3f3689ea620",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5932347a-1b88-419f-aace-d7def6fb7b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933b1ee1-403a-4915-bbd0-3c746064af64",
        "cursor": {
          "ref": "33aa5944-7bfa-4785-8f7c-06e6f1dc8c59",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "de9d704e-c87e-41a7-a0b1-a8d1fe585c82"
        },
        "item": {
          "id": "933b1ee1-403a-4915-bbd0-3c746064af64",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "fde49b56-2247-4a1c-a468-d4bfb3091979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c973496-905e-4f3e-89b5-8d444c87c9e6",
        "cursor": {
          "ref": "aca7df02-0e30-45d3-81c2-8e95f9fb298d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "9bce4e5f-1cea-4828-95b3-05af8b5632fa"
        },
        "item": {
          "id": "2c973496-905e-4f3e-89b5-8d444c87c9e6",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e1123e4e-e44b-43ec-9138-c6d4d0f74142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e537f18-abf5-4f1b-a525-4eee3599a734",
        "cursor": {
          "ref": "1cd82129-6ea8-42b9-849f-3cbb2b6bf772",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "835b46e9-7f52-4521-991f-33314e04f597"
        },
        "item": {
          "id": "1e537f18-abf5-4f1b-a525-4eee3599a734",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "4ee88eec-df02-46a1-ac18-0192ae9d196e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa5cebc-529c-45af-90f1-a1e0989fec94",
        "cursor": {
          "ref": "7cc634f7-9818-49d2-b325-506a4ba01fa4",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ce0cdb22-849a-4dae-b2c9-0385e01992ca"
        },
        "item": {
          "id": "efa5cebc-529c-45af-90f1-a1e0989fec94",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f0d0f8dc-2cff-4c86-ae6e-d05278bec80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df0f4f6-6e1a-487a-88c8-9755525a23c7",
        "cursor": {
          "ref": "84bb2e3d-a471-475a-9eef-474cfca0ff0e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "183e73e1-dc0a-4109-be16-4871a49d7e08"
        },
        "item": {
          "id": "7df0f4f6-6e1a-487a-88c8-9755525a23c7",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4e3b782f-4d34-4239-9faa-1543d11f0db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efef1d05-026f-4318-8d2d-3c3291662d31",
        "cursor": {
          "ref": "39910c2c-a943-4d0b-9972-6249e09aff4b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a257e96b-3cb4-42c9-bff4-f25ddb42a6b8"
        },
        "item": {
          "id": "efef1d05-026f-4318-8d2d-3c3291662d31",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "08912b8f-f661-44b6-b390-d9a055b9bc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b1aaca-8e81-4f4c-b36d-76797e5a2e5f",
        "cursor": {
          "ref": "6375dfc2-3e2e-43b0-95ac-34cccd1db4a0",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f31b5e84-e289-4a76-a0f0-880df48c2887"
        },
        "item": {
          "id": "22b1aaca-8e81-4f4c-b36d-76797e5a2e5f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cfdcf641-45c4-4100-81fe-da3595fbe264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85476e9f-7e18-40e9-9933-3f4e6e7a8c0a",
        "cursor": {
          "ref": "b38b8ade-d819-4588-8174-90d47b1183e5",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e99fd742-799f-4881-a85f-92ff28414a49"
        },
        "item": {
          "id": "85476e9f-7e18-40e9-9933-3f4e6e7a8c0a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "82da5c2d-b34d-46e8-b491-ed1f261e5d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4d06b8-7079-4db8-af21-8fcca002ad44",
        "cursor": {
          "ref": "0ae8f7fb-3332-41be-aff7-1edfdabf8b75",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "be6ba983-9351-4ecb-ac5a-64652e08efc6"
        },
        "item": {
          "id": "8a4d06b8-7079-4db8-af21-8fcca002ad44",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "badf881a-f02b-4c1a-a2c6-315f4d2f3754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3cafc5-ac53-4b73-a26c-867f4b80e9a7",
        "cursor": {
          "ref": "fe5e23f7-8b00-44cc-9b6f-65bd95494591",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "abb7ea84-b0c2-4225-84a4-59bc06752c31"
        },
        "item": {
          "id": "2a3cafc5-ac53-4b73-a26c-867f4b80e9a7",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c80979b6-5746-46fd-a411-82ac15a4427e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fefcfd29-48f9-475a-b97a-aede3937eb68",
        "cursor": {
          "ref": "8e5b3887-35bf-4321-b578-66bc70b2e72b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e3fc63bb-4bb0-4c47-b38d-fb1ed38cb604"
        },
        "item": {
          "id": "fefcfd29-48f9-475a-b97a-aede3937eb68",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "aa799db3-5c52-4f10-a2e9-2d86848881a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbcfca7-aab0-4062-bcb1-40fa8d0eb842",
        "cursor": {
          "ref": "2b2969ae-af15-409c-a975-106a3eea40cf",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "56aaa31d-6aaa-4fe5-a271-e25bae95545f"
        },
        "item": {
          "id": "fcbcfca7-aab0-4062-bcb1-40fa8d0eb842",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7508658e-6811-4a02-8b16-2bfa96929487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76833971-6342-4f29-8ee8-f63fc44d6fbb",
        "cursor": {
          "ref": "1ce28d93-25dd-4df6-a451-2d16ef4a064e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d3c03368-b217-4cea-8172-e2f2be22f40b"
        },
        "item": {
          "id": "76833971-6342-4f29-8ee8-f63fc44d6fbb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "85427c5b-47bb-4ebc-bbea-c5abb811815b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac7feb5-631b-4833-8797-f72381f502d1",
        "cursor": {
          "ref": "0cd0c388-6eb4-441e-90f5-deaa00d7b3a0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1cceccb0-8ec4-4b82-a64e-1de938441c8d"
        },
        "item": {
          "id": "aac7feb5-631b-4833-8797-f72381f502d1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "67ce172d-27bf-4395-b973-bc3cc6cac5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e66a6b-c418-4b90-ab36-64d16a34b762",
        "cursor": {
          "ref": "e68aedc9-908f-49c5-8b50-84470e7d33aa",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9adc3682-5bc2-41ba-baef-68f0130220d6"
        },
        "item": {
          "id": "48e66a6b-c418-4b90-ab36-64d16a34b762",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "019518c9-df80-400a-848e-77676fbf4f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4370eb-24e8-4454-9425-6a1649735937",
        "cursor": {
          "ref": "af17433d-91a9-4b71-adf4-5a425853618e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ba719bdd-8049-45b2-b667-f7def13dcc76"
        },
        "item": {
          "id": "4a4370eb-24e8-4454-9425-6a1649735937",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "71d34c77-f432-4522-a611-b90ea1a82fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "281dbca1-5fb0-42f5-851e-d437a9b6c347",
        "cursor": {
          "ref": "cb53c1fe-f782-450d-964e-0bf7953d7128",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a66d0648-1949-4228-82ce-dd059f8b64b3"
        },
        "item": {
          "id": "281dbca1-5fb0-42f5-851e-d437a9b6c347",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "947952cc-ab0d-4555-b4e4-74717f581b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32301a63-fc31-427b-8641-a4a7aeffc842",
        "cursor": {
          "ref": "cdf87208-0689-4a3e-aef3-f98b91f1d115",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0c4527c6-d8ef-4db9-8e08-3bb5ab7db7e3"
        },
        "item": {
          "id": "32301a63-fc31-427b-8641-a4a7aeffc842",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "16a76f0f-9f86-443f-85be-c4a237fb13ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "fe32b708-f4cb-49d3-9e79-d82eea1d1792",
        "cursor": {
          "ref": "a3186434-a9c1-4f98-9a1e-a0f765a8d209",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "8e7968b3-60dd-462c-bdfb-66a9bdda5d7e"
        },
        "item": {
          "id": "fe32b708-f4cb-49d3-9e79-d82eea1d1792",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1718ae5c-e311-471a-85cc-b5c8653067f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "cb933974-9415-4bb1-b801-720570fefef9",
        "cursor": {
          "ref": "fbdfa894-8196-43b7-8677-541f6b0befc2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e85a67c6-f9ba-4c56-af75-1bd9b51afca3"
        },
        "item": {
          "id": "cb933974-9415-4bb1-b801-720570fefef9",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "3f506c26-df59-479b-8212-71cdec81a9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "61c7e468-13a4-4c83-87f8-349b405a9e73",
        "cursor": {
          "ref": "e6ff45fa-212f-4401-b536-733ae1909489",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a42d6783-5eca-4f7e-a8ba-7bf07744ab3c"
        },
        "item": {
          "id": "61c7e468-13a4-4c83-87f8-349b405a9e73",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b55d6e0-56e4-4dfe-b92e-9f88df93e1f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c7e468-13a4-4c83-87f8-349b405a9e73",
        "cursor": {
          "ref": "e6ff45fa-212f-4401-b536-733ae1909489",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a42d6783-5eca-4f7e-a8ba-7bf07744ab3c"
        },
        "item": {
          "id": "61c7e468-13a4-4c83-87f8-349b405a9e73",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6b55d6e0-56e4-4dfe-b92e-9f88df93e1f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec75ca1-3efc-4ba0-99f8-c61551078dae",
        "cursor": {
          "ref": "7e1975db-fc35-4807-948c-e055e4171b0b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c74fe9ed-5ca3-4f20-a66f-2abb09e4583c"
        },
        "item": {
          "id": "7ec75ca1-3efc-4ba0-99f8-c61551078dae",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "32d3eb6c-0a7e-4e36-8516-2d67d4e50561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cee034f-21b7-4ca0-b841-83a44a37f476",
        "cursor": {
          "ref": "edd6a4a2-3269-4407-9dc4-25fa1d9da7c5",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "a45b3329-c61c-4428-8f33-9810208c4a0c"
        },
        "item": {
          "id": "9cee034f-21b7-4ca0-b841-83a44a37f476",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b28c3c49-5d57-4a05-aef5-984af599cd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}