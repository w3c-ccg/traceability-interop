{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b1e19e79-7828-4139-b50b-fedd32f0f043",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e1cf37ff-9985-411c-8370-c8a19e0ca877",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86647dcb-e329-4ec8-867f-cd25b1426376",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e8858e5d-d584-4ab9-a4d2-7823d9de10da"
                }
              }
            ]
          },
          {
            "id": "5f33be30-1b23-43f8-b9a8-5afab7013b45",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfede88e-5573-434e-a89b-b2e06fe1e151",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "11fc9d10-8a4e-48e0-b91d-db5b637a1b7d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c240c80c-ce44-4fe7-a134-c928bea076d6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "05dbd652-7a59-4da2-bf7f-c9c5d86d6b38",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8785d9d4-d764-4eac-9113-d143cb4f4620",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31f7f306-afa2-4cae-915c-3c077102b390",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b541a844-371d-48c6-ad53-7c45157bb53f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8610755f-8518-489e-b692-18cfeb2e8ff6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a850ec0-b723-4bc5-95e9-032d538b694a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3782e021-f58d-4664-9c73-51a74f04881d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "82d9c26d-3259-4155-b5f8-c17a246daa4f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b6946d5-d152-4323-8467-064ea1b361c3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5b266158-7ef6-4d13-ad0d-86313dc7f5d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "671c828e-2722-4019-8c82-03c333ec00e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc66c5f7-dde0-4c57-850e-3c304c12ce82"
            }
          }
        ]
      },
      {
        "id": "87bff17d-1d20-4c9c-b3f4-dbd99f893ed2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "487dbd75-97d3-4557-85ab-5eb74b77cede",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7c33fdde-534e-4da9-9a2e-385201cb727b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "471c3d9b-5c05-4b3b-afbd-6d32c018f38b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df10fda9-694e-4ea2-80c5-3363bdceff28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fd98a6ca-f72c-4cce-9eb9-be8850c80709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fa05ef-a1a2-4d7d-ba9b-4de9f4a734f7",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7905d972-dc68-4b3a-af9f-411812f483db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aed6b9af-9a17-42ad-a798-120fd3ffaaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f922ee5a-cfb7-42a9-a74b-4afea8ac478a",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf907bb-e0c8-4563-9e3d-62d5eacb5f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9d4fff8-38df-4a56-8d84-774f4b4fda19"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b9f5a426-021e-43bf-ad75-d102e0ba081e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9681cb67-3c99-4983-bc7f-16134deebb98",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc7587b-b278-49a7-8173-ffd041c00457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d7f89f0-097e-44ac-aa80-9ff43169f70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de3f627-8702-4ae7-8571-a850d51bf5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a906a498-6957-45aa-9e45-80cd2672e21b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cddfb2af-50db-41fe-b4b5-44959e526888",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4311cfd-5a96-4fbe-933b-9cde6b7290ab",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac31d518-5aaa-4e71-bfa4-f0bda7fa13a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bd180691-a7ff-49ef-b9ac-ed77f9c51a2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc412356-185d-46f0-8b0d-f419b7f4b545",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "73401789-0b1f-48b4-8f09-b8109d713876"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "764b727f-54b9-43ea-ab54-fd2c740ae04c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "319b55fa-5c25-40c2-9e8b-dc0bde0039e7"
            }
          }
        ]
      },
      {
        "id": "353597ee-d19e-4e1e-9ab3-15b9cf0bf175",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d30763af-97b6-445c-aca4-e5a004612c30",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cda30375-d55c-4699-b78a-925af5799b14",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5cfea1a5-e8ab-4c52-a56e-12728f2627e1",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51b5642-154b-4ebd-afc4-fa30457850df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8ffa58-8f9e-4756-9edd-2d9ac929c57a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ffbf0d-4868-4eda-84f3-fc1366805d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93fdd250-eca5-421d-8ea0-890603c5ed48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b83b7b-c7e1-43fd-94fc-b299cc192244",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bfb7d1-b26c-4d33-8582-d014cf418ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0f5d40-79b2-4929-b745-32997f1bd9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2206388f-a875-42e0-938e-51df6a6be3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb88c847-583b-489e-9d4e-dd1b2c0e8c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb740f7b-568d-4121-8d83-f73f8a51bd37",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc13c09a-33e2-4082-aaab-d6c49dd8fc02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a648e6ce-0c45-47e8-8cbf-9039af352e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af3853d-602f-442a-ba6e-83c7759eae1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27f51819-b3e7-496f-b63f-4714277c5ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e553d6ce-fd05-4992-82e4-d1a5dab8282a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17e8a94-d8d0-4039-8e9e-8c790d0891f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dff896c-fdc9-4849-bf10-b7363febba3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80515cc-90b0-4780-883a-695eb38e18f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af4047df-3ca0-4424-a283-e617c43f1b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0816eb6d-8823-4fdc-94d3-ddfa4623b394",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40167331-ede0-4cc1-a2b1-bb82bb76bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0724a5ed-000f-477b-b114-c86b4724248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8049a9f3-6672-48f1-bf3a-d8d0b019172e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "babd6fbe-d097-4dda-b7c2-b15dd71c5da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817b1dcd-9d4d-43ce-b1f6-37d6faf414cb",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b3b109-7543-470d-aff7-70565bf57675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7693c051-9ce2-4e6e-b3ee-297ec578a395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a333f5dd-3028-43ef-b742-c930e865c102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d6af921-caf7-48ff-9305-5e4aa67707eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fffd8a8-caad-41ff-bea1-35a95bcecc75",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f245cae-c7c2-4ee7-abb3-49707a16b568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edc470b-8e19-4306-a70e-f0aff8182834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb6fb64-7157-4053-a6bc-7ebde3ace8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ef4537b-b9b5-406e-9eb3-11a69ac9beb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbd1c4f-9dd0-48d0-aad6-508056a06c6e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd274bd-996f-400d-94a3-fec9620917f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915aa5ea-272a-4f09-b45c-e9381a4d3ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb456226-ae74-493f-b9eb-3ea40a80dbb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "025935c9-b7a5-4967-b523-f896bea9cab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e5fcf9-d941-45ea-9f8f-82e98969301a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee0abfb-b1af-42da-a1e1-183e1d72dff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8bb18a-6756-4283-acb8-5474b336096d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64426953-c593-4674-bb90-10cb27b39e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bbd2a03-2f9d-4ece-ac7e-b4f2df924503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96388272-280f-4d63-ab7f-8a5c668758a1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767d62ed-22c7-4647-8725-c1b71ab6965d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f106d9-2a13-4fd3-bfa1-abec11b9d0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb680ed-55c8-4875-9b07-26fe4c334b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14b9f58c-305e-4be7-9a04-f6f0217e7ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f23486e1-b6aa-4daf-8350-bd88fa0c09ec",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717d3c79-fa42-4fd6-bab3-a3a432e417cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31070cd-bdcd-45ea-b88c-239e67a257aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e803f41-0e6c-4a23-a5bc-890b964ba48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f612f173-5b7e-4a0a-bd5a-a3ee4f8e287d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bbfbe3-6d3d-47c9-a853-9549c2a65866",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58478b50-8f52-43f8-9410-3959138fbec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef59f465-bec7-4ce8-b2df-363a3497bcb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7845eb3e-7326-4aba-aeb4-a4fb31fdd560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fa3b91c-59c8-445c-a825-091b2c7e6380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bceeed-c324-4f90-8884-db4fda56c8ec",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4fead2-8246-4a8d-8f86-0080af96fdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bc9c99-c094-4f96-b18f-b2c4e06deccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026d344d-e380-45a1-bc17-ff55fb5d4e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd18b385-ec28-42ca-b52e-53bf5dc201dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e281cbc8-b65a-465a-9b04-b9258048097c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfd380f-086b-4dec-8aaf-b60aa487e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca2a78c-d1d7-445f-895f-db1c684ff453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c891eb-7316-4fc5-a348-6b32dd68c56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d47ca5ab-7a85-4649-92d7-85d9c0840469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b5ebb6-081e-42f2-8be0-c869cbdd0856",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e095f4-3332-4f41-8840-2a861fa800af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5552838-ce97-49d1-9c60-2a430c9ea07f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc9c09f-15cb-4fb6-90b0-86741f3cf69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ff52c7f9-da81-40b3-91a8-4db09abfec0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd2d171-16a2-4cba-a2f7-090e7647900b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "503b2282-d403-4f68-bde0-fcafc58f0b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a228c7d3-9152-4ca8-afcd-4611043f0957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4f8ee2-d194-4bc3-b95d-1befe06e5793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe8add0a-571f-4414-becd-bbee0a3f5e47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2361610a-0abe-45b5-bc39-9e4877d4d389",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6de292-fa46-4e81-b4d1-ca4e15c2685e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dccedb8-787a-4fb6-bdf6-fdc562cfbc98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642fcefa-97c4-47a5-87e5-604f0a297ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eb1570b-69e4-4823-9932-49249a1967e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f815943-5beb-4e26-9a27-9efcc7c273a7",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc3ec77-93df-4061-9d33-6d5d862658d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3befefa5-72a0-493b-b9d4-ac5ca529435f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b3a8a54-2407-4f3c-8997-30b44ea92ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "be882473-ae47-4062-8823-8293d66a353d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed97df3-b6f9-417a-9a12-1b7ded0fa77c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67a0ce7-6165-41e0-bbe0-749a3cb2ab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3f5df7-3e86-4545-bb6a-f79952e3a1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafc4cdd-b359-41c0-90ca-ed53cad4d5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00e74863-c0a0-44bb-8889-a429ba18765b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205efdde-740e-4efb-be1d-cf3d2f733f20",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3442367-4ad6-4709-ad02-f90bca79c5c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3a417c-b8ee-4a9c-a09a-c26231445e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18a09f1a-e526-4df7-970d-e6376b76d737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "264d0eaa-e6b8-4886-9d90-1c86cf04cbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac56ed3a-e8f6-438c-ba58-f46626aa9f9c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dba93eb-b50d-4106-9aa5-b30c9f58eb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17fe230b-3cfb-4e84-9ef5-72286c27a805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335ff1b7-6f34-45ca-abdd-4ce5e61a744a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9c89ea-ad53-4e91-b522-add63ab66f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1207335d-f58e-406c-8749-59583400c38a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7692ed61-4fe7-45a2-8423-87777713e7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd5524ac-f286-4d80-8adf-27fd6e857d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f856cb5-edb0-4d86-b9e1-f54c5c900b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb695ce-5755-4378-87c7-7920b715ad26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2214a09-46b2-4695-9bc6-22e406947404",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5824487a-aa4e-4a4e-820d-5b14aaef7f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "194704a1-6d63-43b8-b4bc-49f298a5e707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0307265c-4ff3-4e06-9de4-245937d5ef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "256be92c-8519-4203-a92b-dbc33890273b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6c924a-d340-4aca-bba9-7c05141c599f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee3fe45-3aca-4ba2-aa6a-432d90eab22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9612a8-0a07-415d-88c9-b782b071bd11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21abffc2-eecc-4270-bc20-6d321f0ddde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7a2533-dccb-4f7a-9ca8-25db27ee68e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd00a3d-8c7d-4fdf-bf18-397d5ec5a29a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee0abaa-f120-4ea9-a5aa-92884766093c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f30047-2082-45b6-a31c-c53a7b76ba6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ca63f3-c326-446d-83d8-d9d52d98af53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc34c821-25ca-4489-9e20-0df2e6779788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87f2862-0217-48fe-8432-c00adefb2d1a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f57502c-c8dc-4a0b-9ba5-4b1b101aece8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7097c3d5-6a26-49bf-bf01-fbb987ee35cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93766c78-96fd-4a5c-9d9f-1d301ca4d9ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1f4bcd2-ad6d-4118-a62e-710b758cdd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20034f3a-59a0-40cc-a52b-ea96e8dd6d15",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d17a64-9a83-48db-9b95-7255c82482f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c940dc-e0d3-4f7e-9293-ed14839c741e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fc7587-e45c-4ee0-bfdb-56533c963bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f50cca26-dbe2-4499-93f1-ed7a7f39cd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d3a01f-5def-40c3-9b65-d5d5fcc3f037",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed14a64-a314-48a3-a392-6247ded6aa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35416252-3a53-4f38-aac0-49286e8e2293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ac95d4-c8dc-4d90-b0cc-c1416b5057ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e4b0bb-4c44-4b2e-a75c-37e98985062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e5e074-dfc6-430b-8377-a1834d3e51e7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09dac73-e919-43dc-acb5-7ee6f01e145e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae48a5a9-f638-4889-9291-3c1ae2a175d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c99de5f-6c87-4145-ad02-863e852c5181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f284a5c-196a-48eb-906a-3930e61a6815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9822204-8dd0-466c-97fe-f2fd966d351e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb93be3e-4dd0-4725-9dd2-f63d3ff025f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf5f9e1-0d78-4350-a270-13f729ce3c64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a43cac-5021-464c-a38d-6a49dca9bc45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccf8402-46b0-4072-8558-3f1039e00b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2292a57b-fd8a-4484-a1f1-7103d9beb1f5",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c69ba6-cee0-45c3-af03-511083c0a1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1bb5951-0da7-4681-9dd0-668ebd819e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac0868e-d1d6-4324-a7ec-08e9808eba95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "154a0d82-7c68-4744-bf49-65d7cc4956f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52040a29-6385-4934-9435-8422182974f5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad9e09f-a87b-4041-9568-4f9c97317a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "297661ec-27da-4745-b6fe-35cfdf8cf3fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabf4c50-5df5-4b52-8e19-3b51b30a6412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffaaf34c-d07b-48a3-ad51-b36765916799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84f315f-310d-4190-9803-2d185888eebc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e6dc16-7671-45ed-b34b-5a03bd070171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c1850b-94a1-40e0-805d-0e6f7ae36b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9923ef-3e80-4e30-b309-7ef7bd8bddd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "245bd86b-c998-40fa-869e-a98ae9ce2e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68bbffe-e332-4813-9769-da5baa32ab1c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6412707-bc10-4e91-8450-f2d8ed3d0ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ad159b-e927-4081-8af5-077ef32807f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641f73c9-0d5a-42de-a4a1-99f9a1d59b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39c61cd2-3b4a-43b5-ab9f-fdecbae9f1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd4058b-fffb-4daf-a0b4-a4233aa2a5bd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6826793-0678-497f-a133-3be831cadd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e35d363-a373-4309-acb5-e57ea6417391"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57489494-9158-4c1f-8b92-11164f983b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2149161a-b86d-4559-a8f5-9292cce297a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7832686-15ab-48d8-b138-8352acbf4c6a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb24b4f9-d709-4e72-a355-9469ab8a2553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acec8666-e280-46fa-a101-98bcda489ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb93390b-9114-4657-8d88-443908b7e75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa34e4c2-2ebd-4e1b-8a56-ec7fccd1268a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cced2fa-842c-4a26-8f27-5b67a494b88e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3e4416-80df-4802-ab6b-1c1e17582272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50e3447f-5c0c-4576-b885-8edcde240e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f32a94-9df7-4756-9384-cd545a3ba4e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41c04d2f-0103-4a20-b27f-1d3520bf6a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0832c03-ac1b-4de1-b7a7-491a9aa8aafe",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797ac6d0-102c-404c-bf67-16b3177707d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3db823a-eab0-46b2-90f1-940ffe977dc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d2ca8c-f658-446a-9c02-fbcb8a168cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "742e7db1-ff64-4fee-afda-2256e7ac8ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4f8bf16-2ccc-41b5-8d24-db75ac234194",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b46848-f010-43c4-9f40-6d205aad372a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b11339b-f55e-4214-9a1f-f0aff536ec7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57472e4d-8835-4e0f-a07d-72bed13a7be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b467f73e-6baa-4ff1-ba63-971fdf6c482a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6804000-f79e-4a66-b2b4-7c43839d66cc",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f85e3c2-6b7f-4c92-a429-022bb7fc3605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93266375-404a-41c0-be10-bc10eadd8da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30de140-2c04-4a49-9c5b-e451fe3cea61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9781243-37e5-42fd-b0e0-89092ce76015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d50d942-4b54-4acd-be03-2a21072e5907",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9502bb43-63c1-4f2c-b59b-37d46b8ba484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b15a80-b66d-4685-904a-860cdc23687a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17db56c1-597c-4ebe-a724-374edb1703df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f84402a9-2ea8-4ff6-9609-c14219b2b3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d9c5e3-c0f2-4ac4-9ad8-66f25dd3e97c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df55e0b-f4d7-4274-b33b-409468d546b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2b2ab4-5eaa-4148-8c8e-a7a59375d0e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ac1995-0dda-4699-b796-d9924659dc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "031d1ba8-f896-4e99-9d8b-8c8d954e18eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58cc0ff3-8641-4b19-9b84-ab3120d56dd7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c758c5c0-e54f-42e2-bce4-142b55b55966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e29a87d-9233-4431-b4e1-47aac48d6056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2176c818-6e81-4e30-9378-35f713bb6d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b958bac8-4d13-423d-87fe-c532149ea1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3f1039-3a49-4a51-bb3f-5759983f1528",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e9e344-0768-4915-a040-0d3558519cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8914508-1886-42a8-a7ce-8c82ab922769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef188976-f4c7-45bd-a131-ea0edb675f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff9f8e3-b2ca-4e4f-ab0c-42e488b0f1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad23447c-df73-4fbe-8bdd-dd334e6b5ef7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd9628ec-2d22-487c-8bcc-9ca6dbaca56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf44eb6-408d-4e75-9ce1-358b8feeff37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5da78b7-e3c9-47ee-a6c4-7c516f9fb61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed92adbc-36c6-4249-b7f7-434da0306afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb9338e-1faa-4dde-9b44-8d933b467842",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddd9c19-7c7b-4228-9bd9-9f2e4dcff52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fea5b87-5fd4-42aa-817d-082833aa3e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626022fe-b077-4f56-98a1-3d885320abb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35702c5a-711b-4793-bdf5-5a213032b130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07da1312-1cf7-4be1-af1a-d30e7833af1d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c8b9308-ed19-4a8c-9a36-6fa375e4faee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e5041bc-a01a-4831-b2cb-ac5c11249f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea66ee65-ee13-412f-b4a9-152578835db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5897a2d8-6090-4500-80e1-5dc1edfb4fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b329d60-7c5d-4031-bc80-10c1118c6ee3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dee9d4d-d122-4a6d-9a83-49d30719499a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9407bd71-72e5-4b15-b876-a40fce79bae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46532985-086b-4d11-88a0-85ae0f878375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15dfb506-43cf-42b7-a042-e5c5c51058bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9390799-1107-4d48-b4c6-645528d400ea",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a109e1b-ec34-4669-9cd1-6c92fe4503e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a209322d-c117-4201-bbd9-4811334d11cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a08f070-ddc6-4eed-9f00-fa63d6d52494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b885fc39-86ea-443e-bbe4-e08340b09251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da874da3-fb30-49df-ad3b-5c8dc72dfd82",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5bb79f-bab7-4b53-bea0-0de1506d9a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8b54ae-4013-4902-9bb7-5d683d96af7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2bf15e-3352-46c1-88c5-330be6deb5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "84b9fd5a-5fc6-4ecd-bf23-4ca1112bfb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb60960-f9b3-456e-a2b2-35b85ca84de3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5215525f-7a3c-4b97-8092-f0902426e08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "715d5336-eaa3-42a0-b1bd-29963f6ebacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31948c27-6429-4620-a34b-5d6cab5d3cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f091f1-cfb1-4e39-b83d-2d85dd1d781b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41898f34-c073-4bb6-8a23-1057362b4fa7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df18d6f-a4f3-4900-8f4a-0fd8be5ffdc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dbca0c-85c5-4286-9ee6-7eb0f67a2cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0d8cc2-fd3b-4358-a351-795060c887d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a159348-05d5-48bc-9118-a25e1a4bd896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4e2179-a54d-4f7e-ac97-3ba50add9647",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdabb9df-d57e-43d7-8729-e1f20106cb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfa6927-1b27-4c6a-a1a9-fdcd07f2a9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310aa719-7785-47c4-8505-e2ff230f2a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf5cba0b-e84b-4307-a074-98c2c901fa0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61728347-b275-4984-8f4f-eb1da5fa50e2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28c829f-f91d-4623-9815-4b587436233e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c7d1fa-22ea-4f03-9339-7cce11825500"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06cce74-0f66-4fa0-8653-636a99ea0ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81ab0392-e2d1-4253-88d4-1b89ed4bbd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc0c06e-3553-452b-aef3-b5528f5d1deb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28bf0298-a767-4804-87bb-a3218ce44e63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30480d8-99e7-4f52-9628-b673fcf456a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720e7c43-ac40-42fd-8df1-ebd23ec99a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca557a54-d0f0-4b93-a5a7-cc0727f43774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decbe9f6-6a27-48e7-b5bf-f19fad434543",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4710bd24-8dc9-4816-b19e-f6948d53e4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb843450-85d1-4b70-a971-1a519ab4306a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae65b1a-e3e2-4cd9-8c61-613840ebcad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "da97272d-defe-4415-bc30-115cde1c49e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf930ea8-830a-49ce-b32b-734c021414d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "569ac9d3-d7df-4659-b520-2852c1641552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f337356c-c619-436b-906c-ba2715d333a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d1cbd5-6a63-4811-a5dd-1b837bbecd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "62b40096-3e4c-4d5c-9af5-8391dd7f01a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d49953-74ef-4cd9-9d43-5d29e9655fbd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57056fc0-e89a-4220-9abf-0e644cf5242f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "050750c0-c171-442d-88c7-1f46e5d3e1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a40597-583f-4397-96b2-49acbbd12c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f611f4b-a2cb-45d6-bf14-9a0d768692e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a5feb2-4c98-44ba-9605-2096ac734322",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb698455-4f50-42f7-b2f9-c793818ddd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc952281-afcb-45f3-8ffb-4aafa0d861a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ffc011-2289-4054-b785-0c38229539ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "054de498-ddca-449a-b169-0930c2e3d790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07944929-59c5-4420-8ba2-e8fc81bbee24",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6720466a-16c1-48a8-bb3c-d8360d724e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee1b6af-da59-4a5e-b75c-813a9f7e9393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1eb6c7f-c309-4c3b-bfc1-4ce2d55eb765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "edb29975-ee70-4247-bbd8-dc0f4f07e7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e91e01-f69c-44e1-8e3f-e2f8e3955f4c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b477d35-6174-40ee-b618-2e0e1690e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e79ea61-c361-4b82-8275-b4d2553aef43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f9fcc8-1e4e-4c45-bce4-d096c2a5086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3d868d-00c9-4564-aebd-d3bf9228fb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c24dd3-c98e-4a11-9268-6f0c259b5ec5",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d6c49b-9397-4d0e-a894-39b441438d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d912954-5d94-4db3-9e2e-36fb573354fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752df9fd-e3a4-41ee-88dd-07e6df430e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "547dd40e-9893-4688-b12c-00b904b0eb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d11d46-fac4-4a21-8412-a5bc5e1a9d6e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe1ce81-f1ba-4777-9f81-cb287ee378f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423787a7-e934-4e53-9130-4036a854162e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f65afa7-f98a-4222-812f-12a724536590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2f7de2-301e-49b8-a0a6-45e3b72cd16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7978fd00-d70c-433a-a46a-834ef8be3a6a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f9be3d-42b8-423a-8664-30885919e34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "267aee86-5dbd-4d73-9342-55b57852c767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b03f696-4b1d-4ab7-9edd-73611057d44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4e06f39-a033-45f1-902c-fbdd2cc54df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbf3855-5627-4ef1-995a-0067d9de0d8c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fdf3868-e043-4f45-8e8e-3ad55189889f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfa6240-acc8-4a4c-b6f4-47f9094d380e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a92bf056-c241-40e2-b993-8580fe59600c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36c62148-2c21-483a-86e2-a616d955f365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92937c4-94d5-4185-97eb-e852030b0c9a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b9d9bfb-b853-4b7f-b19a-6e96bd8331a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eee4499-94fe-4313-8264-85300f7811b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00567b8a-02d1-4b9d-a9cc-27e58fc847f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8479f85-cac7-47d4-80a9-814caf13eab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffbafa7-b310-4bdd-8e27-048e99e5476c",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2137b6-0cd3-4dca-a6a3-6cb923fba125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd248072-909d-405b-a138-c80f2f14129d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2badab5b-e19a-410b-b065-d0a33fd8a45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d70b2f3-92f0-49d3-8ab9-82cf279a6c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeebfbb0-e66b-4d55-898f-795b0a60d058",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5f51e8-614d-49cf-8d20-378ee33fb027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe9b775-996d-4b0a-b2ac-541b96a2b38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abcb4c3-0806-4f7a-9e79-cefe0c3a5b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0efe524-9cf9-43e3-9008-5311b6ca5af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d82c8e-94cb-4486-b904-7b5d997b0098",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffaebaa-aa34-4586-a4d0-1c06748ef4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81438bd4-dbc1-4876-865c-fbed3539887b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e436c51b-0cff-4a6b-9212-dee00288c1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "37e1e50a-b5aa-4122-a975-bf9948fa1396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0aa3d2-2311-4a7a-bc95-6701308109cf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9f9d597-940f-4704-99e8-a7f4a3c8ab01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f75c1b1-08ba-4600-85b2-e204263d786b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3efa4e-a686-42ab-87a0-c50c9bfdc81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "85e0d8c5-28b5-4ad4-9da2-503d8919478a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358f5e01-6005-4c81-a69a-c8d4047032fe",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa09357b-f183-4db3-bb15-0905433b40e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db57205c-415a-4a25-9f5a-bcb2be3c3a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc048ebc-bb57-4556-b680-ac3b90b11975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4a09a89-bd70-429f-a95b-df1a52964026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f58c66-e031-4db4-a8ef-26ad9b6c377f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4565d63d-54f0-4272-87da-7b9569661cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea984324-1f54-4695-8386-b2ebb6f85d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76542691-4c14-48e0-930a-68c380e6c14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03c77557-b171-4b33-a1e2-2bf2f21857cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8fd425-2fc3-4cac-bb5d-12e70032c1aa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1a5eb4-db53-4c30-9954-de848b9407a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64742723-9be6-4391-b342-36775d933ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fa1ef8-5998-410c-8ac6-e584e01a3078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "668bc726-67b0-4629-b1c3-e50c58ce5111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c5df24-d299-45b1-8d7f-d63afd102ed9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30b0f21-b52b-402f-bbd9-63bbdea1dba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20aaa464-2cfb-4d74-9444-53d1e748464a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad52e063-7b2f-4f16-85ee-1bc23bfd4d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f15556da-82b4-4f79-902a-9e76bd4e4303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd19c2d-de23-46b7-a3c7-0c2f10add63d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a958d3d6-d5e1-472a-8d99-f7f0d00ac033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc986c2-4d11-4062-bf20-6b09b7ee8880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ce5eb1-3fcd-4bfb-8aba-5f28f630ba59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39304f45-ed89-4677-a63d-df6a71950a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5bdb9f-84fb-4786-a434-840ed2ea9d31",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b07c17d-74cc-4f62-bf2c-2ee791d8e602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0210bb54-bb18-4961-a1fb-f822d1f890c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05fdec4-48b5-404b-a600-225ec0b7fbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd2546f-13da-49b2-aefe-e078ed0a6461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3d19c5-99a0-44b0-9998-230750116e51",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b0eaea-4748-4725-85f2-d7b9f2c2bfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0246c488-c665-4284-9e5d-84b86b95e94d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cf4120-e4ef-4031-9a90-fd85c953ae43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12593c8-9617-4512-ba48-4d87421d229e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "236f58c9-2b8c-4b2c-80a4-91f25d70164c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1265f7a-8279-496a-8ae9-19889affa3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a689e5c9-5cc9-44e9-bef3-22627a913028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "864900a9-5fc7-43ac-98d8-a11e7af2c3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfcf534d-29de-4821-9a06-f4f320e0d2d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e1d84d-64dc-4f1e-b241-dee7037cebf6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bde24aa-4566-4c10-a59d-55f335b48d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8def9d56-a2d6-49ea-bacf-cbe48cbfa465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809a0e33-2237-4d02-8835-a52ad8bee345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4c003b1-8fea-4080-81cd-36adf79b285b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11249a0e-2a7f-4fd9-9142-fbe86d95f95a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "183877cc-f0af-441d-a10d-24e5ede34883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cfd42e-bfd3-4c01-af55-b5702c981bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598d38e5-18df-4cdb-bb3c-8dd6ac5b0600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8310f015-edb5-46c6-a64a-496859746018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597037f2-1f77-492d-9bf5-656c40ee911e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd8047f-d8bd-4ff7-bb56-621bdb678fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e7d3d4e-9036-4696-8c46-704a94b6947a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3ae52d-852c-4f7f-9b3b-337b235b449f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "61d51abb-1b25-4da7-89f8-7f478d5d51eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3031eeb-0549-40f8-9ed4-ac057e2b384a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64b757c-b260-42d1-9891-b36777722dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a51c1044-f5c2-43b8-b911-583939d6f8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf76b69b-85cd-4306-afd7-c8c3b3ef96fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d6bca2-2ddd-4be3-bb62-cfac0fc5d038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884daf3a-3213-48c9-837f-347aa01bf83c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b979205d-dc02-4cce-a986-b89739c6abfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f90aee6-0147-4faf-b6da-5477d6adfb31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5aab2f-4917-4e23-a299-6bea71c8c142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7814fb5-b0c2-46eb-99ff-c8dca43084af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e041c0-6077-4f2f-83d3-f91a0e491014",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e34ea8-8279-40e9-a143-863692c906bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "158bb4f7-b9ea-41a8-aa59-663ba20d1471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcce4dc-aa76-4ab5-a15e-6c46ed4135be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6ee07d-d87e-43ac-8ed9-0387b191f783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa28cbd-5aae-4c94-9aaa-6fd2afa3f45b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3f195d-e0b9-4c42-a487-27777acb6d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16bbfbad-7266-4da9-b8f7-8229c721f676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650892da-38f8-421b-940e-c5ff2f3eb5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96913b9c-08c7-4152-9aab-d36b496a2e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca31aba0-3c1f-4e1a-af30-140b417ae47d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb92784-d6a0-4c4b-8c94-27414a07ecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec69904-851c-4e06-8554-6e5a45c65e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057cb9c1-c647-45d6-bceb-16c8e5181e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d38e645-1db2-4182-b0f5-f8065c34333e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f978d63e-5fb6-4388-89c0-7e68900aedef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c62c8cb-32cd-444a-b08e-f398b76a65a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81591b9c-efda-415e-b05e-43dad7f07b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ededd4-ebcb-4c01-a227-99877abbaf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b86d0be-e5ff-462d-9e61-43b73433612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d7567f-8694-4097-9fe0-45093c70d976",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ee239d-7d24-434d-b0d3-5925ab1b7a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb610b0-a9d5-4c26-9db5-d089d9c7bfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4ba447-1ff3-4ae0-968c-e1a37de78cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "505b907f-82ab-4e95-923c-f1876382cf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80bcd5c2-8056-46b8-a02e-f6222d18a0b9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2700e94f-cfc8-41ab-b7ab-0a29cacb3055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e69de8c-0545-4e96-86a1-88cf327896fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae226cb-8428-4341-a765-53325bc202f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ac27b0-5784-446a-a01a-27466e8ab480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7198a97e-a298-4138-b48d-f60c1f65fb22",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4324ea-91f0-4511-bafc-578b4ca04f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b734a726-8aa9-481b-8b4a-6770f515ff0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ba64b9-c8e9-494e-8400-6c473468a8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "42d409bc-69d9-440e-9023-c2d23650c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf58040-f17e-4b22-a018-621a18c432f9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911092c4-5387-4330-a85d-c5ea817ecfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551bc4f9-2ce1-4e39-88e5-358383c187ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f7cf88-0629-414c-90ad-999cef192a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d52c6cd-f2d0-4f15-8bd3-44b739ec9ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8943365-5eb3-471c-a9d9-95dde2cc605f",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1dce047-ad13-489d-aa5d-465511fc14e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "88c9cae6-a64e-400d-a80f-0511fdb0a92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d707c5c4-3432-4d24-8689-c7965b135e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "eae263e3-6e55-4f00-8d1e-e0f654f755ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ede1f8b5-1873-42a0-9f9e-e841d7941a26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c600348-cc14-4141-874e-a4e52d11bf34",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b70de9d-a465-4fef-bdfe-0167ffcad233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4627d1d4-360f-4210-a8a8-153d32e9a9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6134ddad-cc27-494c-ba85-d0da63dc9dc7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aae2abb1-d609-43e2-9138-dcdbb2a96a0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7e30f1c-67ab-415e-81ad-7da03b582e9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c09cc754-a5de-44b3-a05b-7ac6c650edfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ba540a4-288d-4ddd-9d3d-dde88785f0c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eba2be8a-4326-4777-882f-8f1a9d64f82c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "879f413e-3c06-41f7-8127-483355119c63",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4f4d73c-aa22-418d-8e4c-92083af90d88"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "697e7327-4148-470d-8ea3-8a6eae08f02d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c45d59e9-9523-4658-8aa2-58740048b2a6"
                }
              }
            ]
          },
          {
            "id": "3e8c5113-c5b9-4038-933f-480cd1d20662",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a8c34273-be2c-441c-be3c-8feaff0d4f6e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb3b7779-4366-4b17-91c7-d8e16e7c7889",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64c58c9f-6cde-41ca-b0e5-0ff95064bb24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b56efd56-b349-48ec-940b-cffb952491df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9a06adac-c765-447c-bfb4-36ca85ae1624"
                    }
                  }
                ]
              },
              {
                "id": "a5101e0c-c013-478b-b49e-66562b542c80",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bfb9a5b-c1e4-4935-bbf8-4bab9a1beea4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d99cc71-b0a2-4b22-bb92-ff1f43b120db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6751b267-b5a9-4219-bd1a-39a145320153",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d70b8e19-b25f-4fb2-b27f-bf2f70fe19fa"
                    }
                  }
                ]
              },
              {
                "id": "48100afd-0f5e-47b1-bab7-a49754ea55c0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9081287b-131d-441b-bdc2-7a0f7c59df18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74aba8ef-95c7-486b-8555-b501940b1dcc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43376907-970c-477c-a5c7-58289c8e7e68",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83716934-0503-4e84-a9f4-c9cf5e21f34d"
                    }
                  }
                ]
              },
              {
                "id": "315b1453-cd12-4795-8992-576e0379178b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b9d853a-60ad-416b-9639-5f0b613c33ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "450400d5-11d3-42f1-b7cd-2494fcd3f182"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "358d2ff3-7b37-449b-bd20-fb4701d56f6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f9570cb9-247e-436f-ae35-8e179300879c"
                    }
                  }
                ]
              },
              {
                "id": "012dbfa6-5f0b-4378-8f7b-779836981f16",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac03a057-8dbf-48fc-9820-f9181665c7e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9d5e8f57-bab0-4781-a421-aa3696404307"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2b95affd-bd04-44ff-b94c-d45b2f5af58b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4233eff2-c4d1-4734-b8e9-ff969158b960"
                    }
                  }
                ]
              },
              {
                "id": "ccbd6a0b-e57a-47f1-a3f4-13ab36775135",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7dbf0a34-a9c2-420f-badb-b64df82fb797",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "42d07c76-6eb8-4fd8-be46-e7e20b0a7aa1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bebcb99c-da25-489c-9bbc-cd7c7af3b7bb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c13a23f9-022c-412f-9e18-f3029dc8199e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4797a8d-30cb-4808-af3e-226e0929f2a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d62ce9f8-7414-4dd4-b5b4-cd53694de5a2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7dd3140b-40b3-4640-b5b1-4e24ed082e7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3378ea0-31c6-4e11-a819-e53ea28743a8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c13287e6-716a-41dc-8c4e-447556d7695b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "56b7056f-f142-462d-913f-a6677f830cb1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7905bbbf-4037-44c4-a822-9355448d5e54",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bed51050-e58d-4f45-aecc-67579fe41329"
            }
          }
        ]
      },
      {
        "id": "618ac376-344b-4620-9195-e5be0e7bf97a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d702fdc0-d3d7-4e08-8c56-87e60bc4a8f0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0e6297a-7a2f-464c-b2be-9e60f80d3ecf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b465961-11dd-49ca-b54f-55cedc0f27ac",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9642a033-c867-4daf-96d3-9f9bd4ca27d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7646b8ed-6e8c-46b7-ba23-e0f3f00e86d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9023bb8a-fae4-43fb-9330-613875d04aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdf23c6-e090-40c4-aeb4-5bd73567830d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88638770-b06f-4085-a98d-86fe8250f2dd",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b87961-faff-43bd-9a7a-aab3c9186dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7884d28b-4118-4a30-8340-914019e2a44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1fa2c5-1d65-441f-8dc7-61f40bf3de20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4abbf63-cd92-48eb-8f38-3ed311bb01b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e64f90ea-7994-4fd5-88c6-7b2e2005c6b6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec69c1fc-3318-49cc-a3dc-c7b71e3683f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5410297b-7b45-400e-815f-656dd217ab74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46bb5889-7bd1-482a-93b1-5529105de39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4fbe89b-f9e4-4216-91dd-c85008a835a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591cbb53-296a-4021-b325-616fbb7b3b60",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d3d481-0ff3-4d4c-b547-5cdbc7d21719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b29991-eb11-4590-b3a7-2fd8317cc82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95e03c6-0a41-4643-9e02-f85d8b6475c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6ef135-ee63-4920-b5c2-a5a1baeb06c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73354c4-c376-406b-bdda-adc7ba532825",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "066af4c1-f573-46ca-8b44-8fcedc5cfdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1658a3d-bda9-4f0a-8e75-83ba701af28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97890d9-73e3-44bd-a5e7-fc5dfc6e50ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "751e7f1e-11b7-4cb6-b7b7-cde99104ee42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b1143a5-cb64-44c3-b39b-c63f518ab78d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e301cb-7e99-411e-ba2a-12c56e0e48b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ebd427c-ac41-48df-af6e-bad58d4210f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78888e43-b67b-4f48-934a-2870f192d699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "745a077e-ada7-4989-b2a9-b8c55e919c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e590043-b96f-493f-b2ed-e07f07b2020c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec33c865-c73e-40bd-9707-485b183d60b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f6aab3e-5409-466d-849e-ba54efbe0f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c7e865-3953-49cc-8225-ff5855f9cbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3f4292-7977-4c71-a4ed-9a532fff0f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5259db42-a7c5-44fb-b0ac-f4afc8f09001",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc12a41-25b7-427e-8aa6-d57e630635aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c628642a-62f4-4b12-811b-56801080935b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be9879a7-a9ca-4fef-982a-6c5bcb268cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfeb1add-2290-4fb5-95f1-4984b1a850d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00c0510-fb7e-4300-8b8d-5be461480213",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d1ce81-4611-4cca-aea5-0322f021b2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f047a11-603e-4bdc-a61e-ba5416df895a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bd4d1a-93b7-44a4-92dc-dd6604fcf705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2fb4bc-8ff9-4e48-bbfe-b686da9d055e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897e85c5-042b-455b-9e8e-9580c0ff36f9",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a4fa28-f426-47d0-9132-a141d83e9e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a9d3d7-780e-4801-a7f2-0b7a26fe5aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c939ebd-6c10-47da-aeca-a3c367e21d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "50d6fb5e-3ad1-4bbf-a668-1524b3a4e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67aedcb7-189e-4fe6-a246-ce57c2b461e6",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f9f224-1d5f-4311-91a5-409da2d0309e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1441c9b7-8430-40ba-96e2-1b7839d31802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19137ad2-dc6e-4ed7-88eb-347aa40773be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "91db61a7-d8ce-4c62-99a3-eecb3c09e1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2834f8d9-ed55-4b85-84b6-c14c7fc5cf7c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c34db7c-420b-42d4-a5c1-419587292d87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81ed7d0-f7d2-4ad8-b1b8-222facdd5e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5349970d-cf0b-41fe-be42-d11743dd0559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6129034-cc17-40e1-bdcb-324e8755940e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1c7095-eb5a-4f62-a80d-d41dd5a72df4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c6faec-7f2e-4e46-8e46-5786ff4ff077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a8bb52-397b-4f9a-816a-b66640223f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d61b75-d6d0-42b6-aa5b-6d14ec4735ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "303aa745-3187-4a30-8e8a-425e7736c3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37d4af86-6dc9-4a4c-8e7d-1b54da20a0ca",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7b6657-6524-4b96-a03a-7a16d64c0feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeeaa162-b354-4bf9-b854-1804c5544191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d5961b-053b-4a8e-afd7-63f26124d03c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1241f23e-bfc3-444c-a2db-ad563d52c6cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8ad0b5-5270-44ae-9051-71424c04d0cd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "051bc432-73c9-4b03-a261-4810dc5359a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7dacc2d-a620-4141-b4c0-801d29488d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d2b6e3-1c20-43c5-928a-d54daa037f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "babd5d43-e235-4b91-b4eb-05cfb1820bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e230ade-551d-48a6-bb08-2787dd960fec",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2a3a96-f931-453e-a5b1-e6ffea9aa268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee150f02-5603-4d2f-b45e-1538e592f3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674cfdbc-4eb2-4ef9-a126-dd80e22ccb1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "874ec8c3-ee82-42e7-91a3-28bed0248eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e16729-95c2-471c-b636-003fd6f47da2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904997ef-86e7-4b17-b903-6389455fe4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf75b5c2-1f63-4839-a7ec-7ce6690f8f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b03843-62e9-4ce0-9acb-29fd1664d0a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c04176ab-0c3e-458b-aa82-2d2ba83dba5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f649ab42-0c88-463e-907c-679d1da24bf4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4cbc27-7144-4a7b-85e2-96a31964e033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bce37a-2d70-431a-8408-bb5c442ccdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a57693c-328d-4db5-9248-14ab47b0d24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2465f8f8-5c1f-4022-b6a2-b8325e6d4868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82338251-6f25-47af-94d9-f2b7fa6ee504",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65ae200-f609-45e2-b2b8-ec24737d339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a337565e-19ca-45bf-af69-028323eb198d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872efdb8-ec80-4a34-908c-5063edd7fa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "422f8d8c-b115-4752-89e3-9d656b5f1d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a304e3-7446-4885-9152-a59885278b27",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d21ff85-5208-4e2f-8c1c-622d0bc5083c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddf54e31-8a1b-4ee9-93be-17bbf4dc3153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f57b2ec-cbe0-4a81-8df0-481c11679717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "624fb265-22b0-465d-b9a7-961e400515ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d03d7b-705f-451b-aae1-9bfdf4badf8a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "076fd85b-e821-4484-95bb-cb1a3adc00b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa4028b-fa1c-46d7-8956-9edf5a6bf20d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e8e15b-ce98-46db-992f-d7e718fab169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d3b5b5-33da-49da-8624-31581e2de251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e41f2bd8-379e-4f84-95bf-6994b728ce60",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2bb8b1f-dfcc-487a-b833-04e30452bef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4858c385-2c0d-4e83-abd4-962fd7be58e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb229ba9-5f71-49ac-948b-182ce45b763f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61840cd4-e758-49b4-934f-a73a44ec9a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09cd2145-d260-4fb0-83f1-f69a25a0b86d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4c8422-6880-44ea-9436-35be33493bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856b874d-fc5d-48ad-ad1a-cdf86b0671ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd26f31-3cd0-495d-811a-c8ad36e894cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0aca5a5-43c8-4f51-a0a8-4cc3ba168a21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599c8e44-aab3-4d0e-9924-41f6ddf28039",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0ed1c2-c5c2-4d0f-b28a-78545188cb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d6093d-7bf7-4e56-b526-f4d60eaa9639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09370309-313c-4673-936e-546fa8141ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a832bfd-41b2-4919-9616-b13201dfe91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e94abb-cd54-4bc0-9047-75e00a06b128",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "303614ad-a385-44e5-8c91-de84e83550da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e80a59f-2ccd-4408-963b-457237701b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eff3b8-27b6-457f-bc00-94061233ef43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "931f1ea7-3326-4bca-9577-95a7bdc16494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c48a0be-b243-4e37-8589-fed3994065d7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb6277e-2c25-4229-9e04-4dc7ddff13de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e88e0ca-0fd4-42cf-8409-23e138e2efd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6ba1ab-861d-464b-83f4-820d790cfb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1962801-b2a3-44fa-bf7e-fd3d93283434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba801ae-4991-40cf-bea4-81544dd17fec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316a90d2-cc25-4893-9262-d1c1cf298afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b61d42c-4b8c-4447-b469-352851c12485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8d3946-e388-4b3d-8825-25ead2d302fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b991de03-cea7-4da1-ad3f-8f3f39330947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af913158-394a-44f9-ae4f-0331f394bd83",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d783e8-d617-4ee3-890a-eeb6796cb8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd421b0c-620f-4e85-a235-f610d4ceaca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c36f3125-7941-4f6d-9de9-fb86af13fab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "093ed321-3d1d-4f7a-8ffd-1cfab3b2db6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5958bba3-e88f-415f-a98d-34a6bda04bdb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c863185-1c5a-4eaf-af54-0d1df1e7c6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229c4eef-e552-4dea-adbd-4c654d46e7b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ec13b8-e011-4d94-8091-6f524339d3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49691627-ab51-4906-a3f7-fb56a88ac297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2928ff-a783-470e-a02f-7b3e58443e2b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "981f5304-f9a7-455b-9255-30221b66786c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5177fd3-ed4a-4161-8826-c9ac1cbd2322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055cb5a9-8f04-4141-8fb3-9bc4359d2d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "111ec5f2-3a75-4b92-bd65-c45bac3d28bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266c8523-1ebd-48a3-9ba3-3a5f68784a1a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c570b96-744f-4675-83f5-a1adc6d693da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d03e59-d83d-45e5-ab47-758e31a0c74d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6f60804-e053-4aea-8e42-7a1418cc54ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cff15fb-6037-4015-8723-13802e78b7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e28aebf-6350-4054-a06f-8a30799da96f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f214301b-32e3-4724-83d0-62c26d75ffa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd9eba9-a38b-425a-9d95-31b44ca175b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b92a4a67-6aaa-46f8-94c3-68f658329154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cad4d716-4f91-4cbd-8266-de6ea5983b55"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5eed714e-7da0-4f00-8b8e-2beee03b43ac",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89f8f2d3-37ac-47d6-af31-40a799eb4511",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f7edbf6-6856-48bf-98ac-a89605400c66",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ca7ce3be-9e05-411b-b28e-8118dcb858f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e673fc2-f784-402d-bc2f-9ff85f25d2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7dbe01dd-9742-47ff-9043-d6be48eea8b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a46c7773-0925-4d90-beb6-d85e53dcd18f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a8a9681-b0d2-46ec-a5f0-74a147b52b05"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8ae1886-6f40-4b83-8cf6-197d4bc71ff0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "968f14be-6ec9-423d-bf95-c972eaabf82e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7538a6b5-3a77-40c9-9f52-27455907c1cc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3f3df0ec-7c26-4aec-9089-11d08359038f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "845dc84f-d9dc-4dd2-8786-892fb3397c5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9dd468b7-d1e7-4751-9f8f-112c378a7709"
            }
          }
        ]
      },
      {
        "id": "99bd499f-4848-4c4e-b688-c0478ab86ebe",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d8de28bf-291a-42a5-852f-0cab97a7544b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9a70238-73bf-4561-9f50-d0b265c03c1f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d5b1053-666a-447b-b2de-1f8e17b03e1a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20dcb39d-87f4-40ff-bad9-0271806510a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eded39a2-1f8f-4e50-abf8-2d04833c4d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef64bcaa-b1cc-400c-a2b1-b8e4c8a5b537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "500cad1c-437a-45eb-aed1-ab4a83a13c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8831d5d2-3687-4104-a9a9-52f869e6caf7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea509233-8d02-4ca3-87e0-134fcf85bd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94065ed3-853c-4693-8aaa-53857b2b1de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c0ba41-20f6-43e9-89a4-89000564ef4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e436629-464b-4e1c-9f1a-3e88bdceef89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bace02-ec9c-4af3-9aec-69cc4a76a1ed",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb85b7fb-c065-449d-8c15-5c0b89ca6eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c06a0f9-beee-4b2c-9505-676ac89271fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25012ce-c10d-4a7f-8d5c-3389570bc88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de432151-a26e-42fe-884c-030040ae0961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4fdf155-a95c-4a9c-a166-a1c6bb0531a2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa033f5-cb92-4b7b-b951-40444b6ba2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29abf018-7823-464d-8625-50cb3e8595f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43b78804-4fe2-4427-b6c2-25b18d4f9152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b50eca5-2523-4d9c-b0ee-f42a467108f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e035b0c8-0653-407f-83f3-358e48905bbf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa16514-d43f-4990-bcfa-a0724756f734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1490d9f3-8868-4eef-a5ea-4ec7066ecef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8543086f-f0bd-45e6-ac41-af2ce1dadafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "733f634b-992d-4ed5-a2e5-3f30bb1de7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad545d2b-c13b-47d9-a65a-f4aed619fc1a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5eb953f-567a-4245-bcdf-cc4b01e8aba0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c547dc-c6e9-4ac9-97de-25f1569894ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "621edce6-0a3b-49a4-ad52-b69564c6f0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab21976-7777-41b0-8fd9-621ef3d44a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7012029b-2af9-48df-8a7b-7dee1b3ace7d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee0f40c-d2b2-4876-b9f0-8a135c15ab43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4541be73-3270-4a6a-8ffe-3e1dae31f16a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "580b2351-bb87-4ece-8f72-5b47bb944803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e39cbc9b-9c9c-4cb3-beed-7df41f45fa07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49336b16-3a45-487b-9a00-bea6d07c80df",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a059ff-f686-4d75-9a47-59c0a8df9c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6f5d32-cf5a-4034-820c-a801638adc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dd0f41-e6da-4c92-871d-589f3a465abc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ec7d26-077f-4440-bd67-fadcac4d6244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb708a3c-6fc3-423f-a71e-2f3db15f0913",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a722d800-a6bb-40bd-abd5-3064c1e295e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a31b1c3-90c9-4085-b026-f11db9e159ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ae3388-74fc-4655-9ef9-8dc4f129e84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c63725c-5085-40d9-95b7-bd170ce9920d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0f4ff2-d043-4bfe-a506-c04e7566aa5c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696b2dae-f3b1-4b18-8381-ae1a61b7c74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56f2b3d-2c36-4b60-b3e7-2bb139956614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a783837f-d288-4346-b540-8309f883f143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e079908-16df-4f16-ad5d-7f63450fd308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74871a32-9bd9-4c91-bac9-2d1948c6f0d5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cd192d-b32a-4ea4-954d-fb1d58c17bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad161d9-3378-4002-8cc5-c4c14fcd706f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b05d5e-57e3-4609-9274-126d91a53232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dae19d-4e60-4ad7-b1b4-f538201f76dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d1cc87-1fc7-4127-8a85-3502cc07c407",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a147a7-5a6a-4c84-966f-e9859934af4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097a1bbe-2512-40a4-947b-6bedbed9686a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bae0fb6-ae28-456f-9c25-31d0bbab2bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2cb26b7-aa59-47ef-b9e2-51ef3c600f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477714be-f046-461d-b1d2-856f5282f8a1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3398c6bc-77c7-4a59-b715-0d3a519a84ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd7cc646-dd3e-400e-b33e-edd415dc88ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6feba58d-9fd1-4fdc-88b4-52146eb847d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b927c8a8-2dc0-4947-807c-fa4f98a1bff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca6f075-1d99-43c6-b21d-257e17f532db",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916a225f-41b4-45d1-99f4-b7c4bde0b962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ce2fa0-488f-41e2-84c3-94de7ade3a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2360ab9a-926e-43b5-aea6-88f5137a57ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1a297a-47c5-4e67-bfd4-5c37a199d46b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87674e20-a156-4c50-aa55-a1e6e69b2046",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a4639d-5206-44dd-adec-f57b33bc332e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3589a37-e728-4714-b23a-38185f5e52d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25b35223-6bd2-4159-9fe8-d3e34a0829ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c019a98b-8529-48de-b8d8-e5f9abb65f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0efcdfb-499f-41fd-868b-6c4ce2b1c34a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a41e06-3cf0-42d0-990e-331cd6f8d5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64307009-39bf-4b6e-a188-f59049afe095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e7e466-8fa9-4181-a915-0658d2da874e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "887ea3b8-7457-4716-8837-e526245ab5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85e309c-5158-44d9-bff7-a4ff154b068a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb9c20b-4639-420f-ab42-075229f11c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7a08ad-60ed-471e-8092-66d36036e5b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f58a946-e1b1-4680-9692-5932006c5ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "90870329-f1c3-43ba-89f5-7beb4d822030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d0ee40-866f-4d4c-bf89-3e5b10e15a81",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea1629d0-a077-42c6-b7ba-219f1d5d2810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45873ce-84a5-4678-a140-ceeffb160e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca34136-4d01-4c91-8599-c79fea1c4260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de6d008-f857-4f22-8b1d-6351590173e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6cf748-bc29-47d3-b05b-9e3b9807b8ff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c439f7-a212-445e-a215-4e468e5a8af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dad1d2c-2d37-4f34-aff6-921c468d6c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb89c55d-5922-4f8f-a647-89bc6a6c6a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "540c97b5-c51a-4b26-8b0c-b24d4938a66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c270c2f-9f36-495b-bac7-68fa230ccb24",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe66aded-175d-4583-a77f-792979ddbaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0c0aab-3b67-4319-bc08-3edb3150dcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c25e41-dc58-4340-ba97-48e796844081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba42e1a8-9199-4979-9b15-033d0dc88512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1368324-2714-4cb3-92c0-bf9a64a4f3bc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c0e7f13-c81d-4862-8b40-79cb9ba0f268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338d890a-edeb-49fd-b603-410702e14eeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e0b8cb-37ea-440e-8225-a9e3eb269254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03dcc11-4be3-4f32-8414-0ad922f1fdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5ce6e0-eb19-4b96-8c68-8bc4b7b3a764",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfada484-6c98-4b47-87f3-5ca5a4eaf491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2585ad53-bc0e-49e8-99da-ba8d48d2bdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53cd142-6038-4d02-9326-dd57e0db9f63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee6155b-325e-4482-9e9c-0364d9adb02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699c89d9-afad-4191-b31c-72911fd38d3b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "827d7398-402b-4b78-87aa-a3c51ec41572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb812db-9de1-45fd-a6a5-cdf6f05c0c59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577eb2f4-e939-4903-86d2-7d0fd4fd696d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d92833-60b7-41b7-8585-128c7369abd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132251c6-9e54-4032-95e5-66ad48ece8c8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fc4716-7e2c-4ccc-9830-dde6bd437a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dfa448-3a9b-4913-9a68-56f5136c5cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafb2538-2c87-4dcc-b017-700d3309937d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f7c4d40-7423-4145-8be7-a22b00eb0dc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6790df13-43d6-445e-a635-bf61eaf51285",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87918385-2f06-446e-bd81-746e7bbd527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d9d9b1-190a-4f89-a574-430e4e5e42df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e69f87-5cac-421b-a375-69fbbfa37369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ac52cd5-7a78-4bd8-b3a3-3a4b3a2d8906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd07058-f767-4ac4-bf70-d78f982afd31",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cb7e11-440e-43c5-9c51-daba1a7ff274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b189c99-cda2-4b7a-a05e-734bafec57fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35a810c-7263-439c-a0d7-891969f79204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d86aff-9691-4052-b90f-93d33e5a9b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb400ffe-10ea-4553-923b-2d1c5eb26e59",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ad8e23-4d67-4bfe-8701-9aa3763c7b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82236951-7834-421f-8e0a-49e061a88511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880a232b-1da8-4caa-93e0-ccea86d47c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a39bfc41-3fd5-4074-82fe-9d6468cd2f95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4bb35d-70aa-413b-9bc8-6fbbcc6ae203",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335ca898-43c9-469a-9761-7a5d969100d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328bbe92-27ba-4be4-ac76-44f6d092a1f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86715f5c-b5e9-40ce-9704-dd70282f9597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "891916a0-c181-4472-8b7d-93e728e9cdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d544e6-abd9-4eb1-9d32-7b91174206a7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0754c170-5c61-4cd1-a944-f93ebb507a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b923d1b5-7436-40f4-97bb-69376e723188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d962fa38-7fc5-462a-b1ad-4f97b4c996f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d35e997f-92d6-4890-a755-d3b783a33e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5578b851-e2d5-4d0a-8d37-00babaeb9008",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e78e2f-7f4d-4db5-8dd7-2ead533df96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4edf0b6-b03f-4bdc-b41c-a2328634b4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c40a819-eea3-466c-92d1-d7580171fb50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "087f50a2-c696-49e6-bc1c-69d34daec9af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa27c65d-b32c-4e64-bd4d-9f5935cd4fda",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "319745b6-440d-4e04-a4d3-d1744e8be5c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5ac682-a5d6-4e1b-978c-df4aa6ec1724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65794d39-cce9-45d9-8fd5-ff4252e61aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1235871b-1840-4e9b-b75e-f95c46d83532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b68478c7-4e89-4933-9145-b99dcc38b312",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2ab912-2d5f-4fb3-8d83-5c97abc20a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a63db856-ea8c-4cd5-bd68-7e7848eed1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30169c51-6ad9-469c-97ea-53476e7d13a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78682995-f994-4e0c-a879-d8a43c088ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5839b4-6a5d-4cb1-93b1-0120f24f8ab7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63702aa8-f469-48cc-b645-ee0c69bf1f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f120ee26-677f-4a45-a218-0848452ea851"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3286c6a4-a775-475e-8492-9104e3c9653f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fad70f1d-adb3-404e-a56b-fd3c24d78965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1db2403-939a-419c-91ef-667d759c99e7",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f06e39-9fd4-4faa-96af-43c922b77562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc20a162-a7bd-4475-997f-58b09db474c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9125397f-6c75-4877-9b5e-89345d3f6542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5167a4-4784-4e39-b1f6-3605ce025e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0857cf4a-f03e-4dde-addb-dbcd685782bd",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1b5e24-85a3-463e-9eed-265f59fb06e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1461cddb-ed4d-47c0-9c9c-d6f738834163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c497ef8d-f427-4df2-b02a-eef6c171ebcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4455590-60ca-4042-9af7-b6a467279ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0be3177b-3b46-4372-8fc8-ad75f29c6c64",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25aea2c3-8dd0-4df1-95f0-ddbe3e74856c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37db91c3-fcc3-4557-ad22-7c4b32288990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0867e75-0280-4c4a-93c9-bc5b6753ff71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71b9938c-c5fe-4809-a2af-99156341b46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb7a53c-4d24-4788-931e-8ea47e8f0a6c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2820446c-b344-4069-b084-547a9bc4bba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868f5a39-3564-4734-a805-ec4985bc5272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b7c69c-e33f-4665-be26-e0cd22eb5987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1ab81c-e768-4217-a7e3-ac646ca6679e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10b96c6e-16a9-40fc-954a-9f0da40acc66",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b857086e-13b0-486e-bcf0-247debc94f0f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb9445c-e784-4352-8091-d8d0674f7ba0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "801c3938-a526-4cb4-bf51-ce258242e0e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3587ef6-93bc-4cdc-9b04-32fa650eda33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4ca5c05-54ec-46a1-9576-410609a642d9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6adb304c-12cd-481a-acab-cb58a955f2e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc4a1f81-9b74-462a-a05b-65af1dcc5e7f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcab1549-f967-4cc3-8382-7cc1f499e28c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "065c77e0-9125-446b-8c11-473fbc586cd5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0216f98-4e0a-44f6-a190-7142bff94a38",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a7561704-568b-41c6-9a86-49ed5727f06f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb159832-2fe6-4a25-9811-66624935aec4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2692aa6-84a8-4942-8bc7-63f4a8ff3031"
            }
          }
        ]
      },
      {
        "id": "fc4f506f-3eb6-41f3-93f1-9353f7da163e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3d731ff8-e978-43eb-836e-435f90043d79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bbec8b7f-fdfe-4c21-bb40-8cfaf9305462",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2b060bb4-15e3-49d3-ac58-b0de4a13f0b3",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a5c78a-c9dd-40b6-be0b-370449187219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0578e07-87cc-40c7-9208-e6c9c0d66887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3429beeb-29bc-4acf-b1af-439f8e1447d2",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02678ae9-3013-477f-99f2-288b856a96fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "943693fe-9dbc-4b7d-9921-f5dbbb4e6e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f2c6fb-0c55-4682-b26d-7b492e7a1266",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a0686f-e3ba-41fa-8a2b-e8756e1a74ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66ca6835-420f-4e1c-9a7b-c12214942d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45aaaec3-b845-4225-8644-b1fa7286b1a4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbc218d-10db-4be4-b019-1c89bbb7e8d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64889701-7946-4274-8167-5c43fc540816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f55fac2-e903-4ff8-9958-e27725bd4c7b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57eccb93-5d0e-4434-a8f9-93ea9f3f83c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850a7bda-8481-4ae0-a76a-f96b8aa7f4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c43e3a2-2594-4f05-8f5a-c0499fe05a2e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa055c0-fcf1-4fa3-8543-06a7c543d9ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf6d3cf-01ad-471e-94ab-2c327c82b238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a56242-d4b0-4f35-87fc-fe0e595c011f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe4f8ec-bd7c-4487-90d5-acd33b3211d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c14727e-e3db-4140-b2a5-5282932ba125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6052439-8a43-47cc-9082-4de3366d7bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7240e73-647b-4ea6-8fb8-e195ab06070f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09fccec-8036-418a-a5f2-44b9cc8f61d0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7948cd-d659-4062-bb80-ad876e24893f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88d074c5-d1aa-4968-a748-912493388ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2a2e80-f7da-4483-a607-ae492bba8428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e142378-faa3-4715-af50-248d3bf2560a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428ea3e3-92bd-479e-ac45-ae28f37dc38b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643d92f1-9845-461d-907b-cb5b7edaa7f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "756b4908-1306-4d9d-b4de-7a1ebbf65927"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d623d21-9032-48c0-abd9-8efc20850bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435c8c01-817f-4121-8ae7-00bf51e1a3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc1dfc82-07d2-4115-99ba-7196bb9c5bd6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63047003-3ace-45f9-86dc-9d01dc668c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d3702dc-fc0d-48bc-8717-f2e9b7c62a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a253f43-ebcf-4a36-bc5c-26847affb345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c7760f-ebdc-4421-87f2-03edd7cdc511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0336bcb-8a2c-4b05-ab98-e6f41e2cb2ad",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61816ddf-5a3e-4f0e-8b3d-801bf2d625d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b668a35-8f81-4069-82c4-377557523713"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17694d78-9e85-414a-8878-4d43875cb872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d7951c-f1e7-41b8-89ad-615dfde1b2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a834b518-c1ef-4e1e-a33e-cf649bd3e965",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46120077-2b64-49b7-b0fe-2adf3fa66214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18e86127-5114-43e8-a7c0-28bfd7af0bcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eee2eff6-3458-42b5-bdcf-d63915687475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f5db18-45c0-4a60-b45f-687125d0868f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfd51fa-fa77-42a6-a5e1-1de9d65a4daf",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6789d93-0609-43a1-a698-8f770297aff2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78232405-ae48-4ce9-9e46-46e2aab907a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "447441fd-cef1-408e-a5fe-0b11a5b6f1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efebe89-8345-44a7-b520-1530879973f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3e4fd7-7b84-492e-832c-d3e3587f66e6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e169986b-182d-4145-9267-6abaada33951",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70b6a22d-6150-425e-ab46-55ea7abdf7ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9d781f-b60b-435b-8f8b-e1d3d9e7b19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1b990a-d29b-418a-a324-59dd8df0ff0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d81111-9d99-4b20-8f30-f69310cbf76e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ceee96-64fe-46d3-9dcc-71c39aa24faf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffb7e98b-8ba6-4024-a344-d2cb1cf995cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0c053e-7d8d-4c98-b294-eb4b7e3279f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93933f9e-dca8-432c-b002-8cccb4499adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9b8670-e1c6-4e23-8777-de364a8cde5f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6431b829-4dba-42c5-b6d8-cfc6a15253f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f0ddae-e31a-4eff-b14f-94c12d9c7edc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d70242-76ed-43f5-aef4-6629f29d0a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669733a9-b9b3-462e-8e7c-56ce326f20d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d12557-9704-4b11-a21d-bae156af5001",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c70bc9-3773-40d7-b889-7115fc8be4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43a09fea-5586-4b5f-a957-a9b2b59dc7b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fefafd-9e83-49f7-860c-c05a958bdc70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b0775d-537c-409e-a60f-c0b289fa8a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30b0fae-092b-4ec1-9339-ae7b58b38f17",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ed1fbc-e9bd-4d9f-bd1c-08e4428e73c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e09c48-a667-49f2-90ce-b4aadf390864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de31e81d-383c-4402-a0f7-bddf099b7075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5740e0a-ce38-4e02-8e69-3f40d1c6f139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df3aa6a-dcf7-4062-a325-e1aef86ccb9f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e5a1ce8-4a1b-4f8b-bc6d-bd2b6c7ded8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7019a937-5461-4798-9016-dcde39e045a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ee5e49-79ad-4d7c-b731-1d49cbe793b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18de3a13-63ec-4130-b904-2a14d08892bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673f20ce-d9c1-4104-a6ee-f1f16070628d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbb8b48-5cde-46ab-b962-f4c352549fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90335eb-4208-41a5-a9ee-9891dca9fe09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63902593-db4b-444c-aacf-e04ee5b18ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb67a10-5272-4afa-8ab0-184fb9c6d61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbee863c-7bd4-4af1-a81e-bd8db19e42ad",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45872563-8585-4126-80ba-077c630f503f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93265a5e-1bc0-4530-8e04-94998e210259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c37e87-c1a2-44b0-a10a-a605dff480dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688c7c4c-88bd-4ff7-a950-a314ae196a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "270a0970-01a2-4bc4-a1bb-96094081bc59",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ac8b21-481d-4349-bc42-0869ebe6ae9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b40c14-dbe4-4e27-9182-18b0993e1162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8343a101-26e7-420d-86e6-117e4e5d41c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418fa592-a480-4dc2-98a3-64240b592b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc269f51-e88c-42a1-955f-29fc3e12df01",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4da79d-381f-4344-9e59-c7b6ba42366e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142f95f5-ab18-49fd-9ca0-02187ed2df40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "101aff5b-7b7a-45cd-8489-ce0830682d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7ef4822-0548-412a-a048-668d42fffd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f8faab-92ae-4eaa-bf97-ba377c8175a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b9283fc-df6f-4532-883b-d02992e3905e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1282b9b8-ccf6-4515-be9f-8578667ea4a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "638ce788-5dc7-45fd-9683-b13a879be1df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafb525e-878b-4aac-b017-3246fa7e7ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e4b059-045c-40b6-a3c2-60b362db2b73",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2e8f91-197a-4a72-827f-5793db193ed8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13fa125e-7d36-4391-85ba-b3b4265dbcf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5207ac61-0ab2-496a-8f9e-f74b9a380022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa33476-9e78-4132-9108-69ec2409ae75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfddcd3-bf97-43f5-8641-036bbafd15ec",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9736ee6c-2292-4bba-9ea2-c5baf08c5191",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc62108-da35-4aff-894d-929720be9287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b28b7e-618e-430e-b556-f5cb5cd6f0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d11987-5a4e-4a1b-a2a7-678ff06f7776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a387230-72bf-434a-98ec-20e2e773c4dd",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df6148f-22f9-4874-b786-e3e4fe800d3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a2e999-e364-44be-907e-9c9bbf1d3302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1b0c6e8-2856-4694-a84e-8a12896ad26f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8c0ffa4-db9f-4911-a603-f3409e38d60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0833f99f-9cdb-4f1c-9275-799561d35c53",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846c5e72-6c8f-4bb1-888b-c5413e329b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57c6ae4-1ccf-4483-a4c3-eaa19f0c25fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d36cf76-7cb9-408b-aa15-04cb8fedbfd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42039e2-7316-4371-85ca-638129bb8387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3f256a-7efa-4f3b-87a0-f5280b04f7a8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010b572a-52fe-45a9-a382-7cea9f678127",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f815ec3-df45-4bd0-a25c-6320b94a31ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce955d7-d064-40ba-a421-c2dfc3ebf375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02f63da-b0e0-413a-9157-8711b5da4137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3980a1da-a4a7-4dd7-92a4-7bc9ddf318f0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f837ee9-67e2-46ae-b8d0-27534d58ffd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0451cd02-5e64-4310-be0f-2b54f48ab6d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc59a9a7-7dc0-48e2-b6f9-d1d5c25e36d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3dab485-d6a3-4ca4-8a8e-513cc0a38135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d19664e-b0e0-4a0a-8e5a-d1564db81b8a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbe233c-b641-4ab6-b869-878e1aa75991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5266779-1501-4dfd-ab67-c59763d501c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0df0283-7f0f-4e9c-9835-a53b48d9b8b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ca34d2-1304-4620-bdd3-8ba3acb757dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc13f456-9081-4378-ace3-ebd9cff19d73",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53117844-f418-45c5-8e77-3d8ba781f61e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeaa178f-d103-4f8b-909d-08f8283cb32c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da98312-e942-4762-a91d-2e845bfb3bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "600f58ec-f93d-49bf-a271-d47f6d6ad0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad48bf9-edaa-4451-ab52-fce382a184ee",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb29c12-9d95-4130-ba40-7701988e17a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e31d6d-48ff-4847-9c7a-44d9defd7c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9331241-0211-4f68-8245-83bb40749928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd07a41e-ef6a-4915-a263-d3e862ce28ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ca5c3e-2102-4d7e-8fac-26dffd9bafce",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a607810-eeb1-47cc-8e4b-488313dde4d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e222ea50-e640-4b11-9904-3af84b5f7214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf91e43-2860-408e-9e00-fa2e2e9cd3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd31065e-6341-4f27-a788-b6a9aaea2bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54263ada-20d3-4a02-8812-65e2d6d40f4c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc61e335-80e7-4f32-81c9-126d836d4ab1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a04d0d1-073a-4ec1-b816-21cc299f275e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae337cf1-53ca-4fe9-82c4-aa880b2c9f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb227f6-52d5-45f0-819f-1dd8d6994deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45b753f3-63a1-4641-a8c8-8ecaaa62c38e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae461a1f-1450-4895-a041-67effb8eae81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c4cd74-930e-44d9-8ad1-abc18ad299ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e03d3b-c500-4fdc-8e56-7bb7b617e032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f6d38e-646c-4861-9e47-2ab753c5d0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c11b9c2-e3d5-4ff5-b487-93ceba5697ed",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544268a6-12da-4cce-9c64-dbc80e033daf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71179416-5776-4259-a526-fd11c5af3a9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a78781-8c51-45dd-a81f-5175af44fdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdf8836a-6473-4fe3-aae0-0c405425bdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13527a95-903e-4d6e-b231-9780a52d05cd",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f59fbb6-23e7-455a-94bf-0359dadb29c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d7613ea-8c0d-4539-869f-92893c0c0a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9a2982-d7ef-49c0-8d71-5301e3953f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b520d7-4038-444f-833b-313f0903bb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d596d7e5-a554-4996-8b78-3bfe952690c7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e88224-a6e1-4341-adc7-623dd8ec1878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf981f3-98a8-4315-8409-b403bd0d147b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d548aa3-4176-43d6-a255-23219579a5ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d2039b9-aa63-43de-8876-87b126008b73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ca19d6-c246-4ecd-a3d8-ae1c5b7cfd59",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc74882-219a-4f37-8172-3d5d0257fd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ab583b-a0fe-447a-afce-bd4e5165d04f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb5d5f8-53be-4cf6-b6b3-a8adc72bb61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36c0313-6ca7-46e3-b7b1-7bfcfc12021c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bee2e12-bdc1-434e-a019-5a2d09997fb5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e59dd4-a44d-47ce-b3ee-1547a5f4da32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e15d02a-45fc-42e7-a2f2-abc5d4c089d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17b820f-6939-4f21-a36c-0547a9c59a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfb4e8d-f809-4473-89da-9723e7e720aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85201b14-e640-41cd-a476-221c781ead2e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d080e79-6113-4f13-885f-e34e3ab590fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675b58e7-4f50-4b47-9b9b-fb48e74f8aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00c45fb-893f-44e0-8434-dbb17d6d4bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb61e37-b3ce-42c8-a078-69a7e8261a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd38ff7-3ee2-437f-81b1-ce439e6197f4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a46eef-0361-4ab7-9eb0-84e8f4da9d4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0f95d4-d20e-44c4-b5ea-0ee97a494b9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de685cc-5a03-4dfd-a3ab-9faffefecc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6328cf6-799b-4330-b92c-2bcc3fbbbae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386c9a95-5219-465f-818d-8d06b0dc8b64",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71914164-481c-46fc-a128-a7ad43a419fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878e2c00-86ae-4293-9204-6dae9d9ebe66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d706134-dda5-4280-8680-95d07c140723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95453b24-2366-4c84-a23d-5d2db99e87f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88fc418-0c0c-4a78-946b-cf9d638b1d2e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e85907-fb42-483b-81b9-1f750dddfb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a412a9c-ab0b-4631-92de-1a2446a6c8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236b57f5-c599-4427-a431-97a7bbd34ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3080160-ca1c-4e88-a72b-d00553dc4f7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ac3de3-478e-4e34-ac35-a54c37c10438",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88f78ea-6f3c-4985-bad4-224a7d5e6b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b88aea6-882b-4b59-a30f-e94cd401e2f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a729ab84-c38e-4c7e-8306-39d07fe99590",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d170f038-0d7b-4e25-9f28-9279c1668894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "684494db-ce23-4a32-bc83-1dcc809742ae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e3b06b-ea57-404c-a1e3-b3b3d0a3fe42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f86aece-ab11-4cf9-83aa-de43e2065897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae6ddff-5d5f-4cf5-9cbc-79b7c4d4d764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5fd930-52ea-4ba1-be67-fe688517ccdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1dd87da-d021-4a1a-a58c-c8465d04ea4d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2de1133-b5a7-4f67-b3ef-e0752b8e6af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16b72e1-d6b6-4038-8bd4-6c4f2195a5a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07678ea-2ebd-4792-a314-7238923f13e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16c4143-15c9-45d7-b5c8-d0b70ae6f260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a1afb5-2eff-498e-bf9e-f5bf39afbd68",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c54322-cfcb-4a94-915f-8f210000f080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f63f21-0e60-47c4-a0b5-bb148142ff13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf38177-1ade-4afe-bff8-f21ea2b47538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a181e7e-82c3-4c67-a68c-b934199b1889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53caff2-80f8-492b-b52c-1e92aba82972",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f647e9c-3e7d-4ea2-af45-d68e13a01ed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a422f89-12da-4283-8173-6b7e994ea7a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7043799-5a0a-4147-8179-a4089a827a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f738692-ca51-44ad-9027-2fd58ed7cf89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e26fc462-d494-41c4-988b-fc1781149839",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59555c1b-4abe-40bf-9a90-4bee37f23b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55be1838-b561-48dd-8f37-82d76bbd7229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c1fb38-afb6-4687-ae24-9796e4f1bbbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45bfff4-d111-415a-b433-98f24d22b3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e02877-98bd-415e-a35b-ebfe67814def",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03bcb02f-c194-4a32-bf2c-ef2c5e88d052",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729bd4de-19e6-4337-8dc5-3b422271152b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dde0b2-4939-48ce-a1fc-a96f781d11ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f24584-d55f-4b53-9ea6-698d097ddf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9757edba-9491-4bc0-b91b-8f6d3a912395",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a2403fb-0796-4b09-88a8-657e519a1641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5eba550-0dd2-4ca8-909a-4e1ccf05c68e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fb4715-f2cf-4f78-baff-05a93e76b65f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd84f97-a405-4f5c-9c4f-a8e45001e7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c13d80-94a3-4655-b5d8-47d8213890ea",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442978e3-5443-4845-b949-dd30271d0d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec61aed2-865c-48a8-a73f-62430f16985e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8d01b6-5ec8-422d-8931-3fe132e8d431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b24b6375-478e-49aa-99bc-697510f3e049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ac03d0-b184-4792-95e7-9a312d903455",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbba0c7-343d-4087-ac23-6785c82dd8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8b1483b-b9d6-4872-8935-05d2159cfcd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55ec737-074a-4412-a7ea-e65fcc84252e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ecd555-f3cd-4437-9ebb-029d661df9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc34dc2e-c5b2-4df4-99bb-3f71a2859421",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb4a4775-8e13-460c-b4fe-59e5f100985b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5838d2b-bca5-47c2-b79e-7b534b100e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7e9999-a2d4-4070-9e41-43a93ed3dfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9254e15b-c330-4db0-84b8-871c4f455a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd654b43-9e4e-4971-8665-f032626a024d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "146a7c86-bf53-47fa-85bf-2b8c976fb280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf76bfb-54dc-4327-b769-62bc4b02f9a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55538156-6feb-44c7-a46a-fcd6f1b6dc20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2c3d188-7b51-4e24-852e-b4b40276018b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e528c27-69ed-4470-9bb3-7d78d3545f78",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3078b06c-f8b3-4aa2-97bf-497064af1009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0b2051-e40a-466c-8b3c-9b1e46f406e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f59a42e-a966-4c96-ad9b-fb8768883815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d89cf90-af25-4203-b6e0-63b5afd849de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8dc0b9-e096-4300-9886-e1be805311a0",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b466b6-4485-41da-9fb9-0d43356fd4d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2734c103-c615-4b14-b93e-ace4f8fcbe16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603d8e04-41da-4db9-ad94-9cc5060581d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecd50fe0-3293-4fc2-be40-2bf73081cb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be0272a-d788-4ae8-a839-c04e2b69460c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47742581-d2aa-4d87-a881-25c3c27aff9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f91aff-ae0f-43f9-abc0-83a0008e4cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e80a3e83-1edf-49ae-83dd-70ea023b0b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef30294c-b4b9-4eca-8d06-fb9bd059f906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4220b121-612e-4e2b-81e2-67115fd7a305",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f97ab1d-2d56-4578-91df-ae4b571c888e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c5b2e1-7423-412c-924d-cff5b88ba247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81704d3-07d9-4676-b695-767c5996ec3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b7f07f-9f77-4097-b43e-ca8a7ef62bee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c70e0d9-2304-4066-9d16-572ebd56d134",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a639f53b-670d-4787-ab4d-d157f2886ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a856863-27f1-4d73-b1e3-b580c29da67a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6765cdb1-c0a5-40d8-b8e9-cbbcadfde2e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879b861d-a0a9-497e-b805-289c5493701e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1028f5-8023-4bac-a962-fa6fc85bca7f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b951dcd7-7354-4700-a0e7-2c74f49f414e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6b77cc-214b-439e-b920-482eada4a701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7e2784-94c9-4840-b2df-c12a3c5464bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a671405c-4966-4992-aa4d-c92d2ec26918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da26cda-6161-4b0e-95a2-de2b3f8cf708",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8af9435-dc8e-4cc1-9217-6b0b5b22b4a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c4054a-35b7-4278-8578-e9dd982f0e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb37055d-1256-41ec-b779-ab6b5ca8e03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89bb2e69-9c2c-46df-8a30-3649de67b894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2973723d-f2c0-4132-ab75-c685ff272905",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ac671c-9e3a-4a9d-8fdc-0f9ae1ede6f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230fffe9-a663-4a5a-b783-eb01f8fe5184"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "858e9d1b-c0cd-4ead-9d31-07b1d1c7e988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae559b7-61cc-4c45-9617-2d8c78b122b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b74da4-cd2c-403b-87ac-6c57465f4c69",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bcf79d-60ad-457d-a0a7-359e0ccf1712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3005018-d9d8-4625-9ef9-f43adbd27842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33eb8917-f6a6-45d2-8f87-94aa05363fce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30e366bf-1578-4526-9635-a4ecefa7440b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcc0202-4463-41d9-9c0b-eea5bc7b2c45",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd49ea0c-710c-42c2-b962-6853f9a62f5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f997ff4-2364-4ce9-a977-f86ae50e7da3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4671f033-8a57-48ab-a7e1-acbbc661eaaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4521876f-0657-4155-bce3-4b73a86e4e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e4a427-7a9e-4f1d-803c-cffd80342434",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c05397-e336-4777-b907-4cece388ae7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdbad587-6616-4d18-88f5-0d75e32c5eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9452619a-0438-478f-a3af-5b4128a27d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b0b0aef-fd64-4fb4-9b9f-edb160c6631f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3b6357-2efe-4a34-8b12-53f6cfb55015",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1f9ec9-2c46-41d6-a9c0-1736ea426a23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "533c215e-e37b-4332-85f0-308b45d14eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d72328c4-e8a4-48a5-94fa-539ed19a7865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0124aa6-2529-4eaa-b1ff-887fe2188d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8816dd4-abe2-419d-a0b5-4728b9171525",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401dc3f8-6deb-4d6d-a3a6-2a4d5c0abaa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c2f69f0-d785-48f9-9e50-220cb76277de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce940df4-4c31-4628-b135-d82a8f3c1bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43ad136-489a-4cd6-80aa-e4bcae53c3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775056ad-9f95-42ae-af4d-7c4ffa8aa457",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63ed76e-2d1a-4b33-8110-a233e1174d64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f997b00-6ce6-4566-9691-9a09a6dc9e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf52d586-ccde-4086-b351-0bcac528ba22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff861274-6af4-4b62-85bb-3b0616e90a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ef9a64-e4bb-49a0-9496-007e80bea07c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6de48b0-bbe0-496e-bf95-13afbc09d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74185402-7aa3-453e-8a11-2a6d4841cce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "604b3d12-371b-48d8-b54f-4085f3b13aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ec89235-9432-4615-a605-52c0bcf8a23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98fe127-3b75-4051-be14-78f9bbafe809",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f289049-f0db-4011-b9c5-b8584557e75f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6200065b-d5e3-4d1a-a18b-99d39c01afbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56cc83d9-420b-4323-b589-db3f9b9db538",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40034619-f986-4619-b7c9-76952277ce3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015dfc12-6dec-43de-8aba-589df97af5e8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8361cc-719b-41a2-91a8-74ed79d6b382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db43a9ad-a260-4094-bdd9-6dc66bfb8cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b6b60a-e9db-480d-8388-3d386dafb696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e9913e-f4e1-4af1-8ad2-d6d05cda4da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1253bf2d-b56b-4067-a109-f12e25e9beaa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4313121e-907f-4ae7-b1f7-e417fdeef530",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2be30499-a029-40d7-b593-c94cda93a166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913a7c44-4c7f-4aca-8398-1f42abc01705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb63fcad-1eb6-4588-9e98-69176dcd9a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbb9e59-52a3-4fe8-af48-c7f5a9506dfc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c72127-2990-458a-ad22-f6997062c829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c99941f3-cecc-4a28-86bf-9f2e0add9c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761144ca-fc2b-4942-a159-d493977671e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df999429-4029-42de-9eb9-407a1d99ebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de786f43-9947-4067-b694-d4ce0a6e5f69",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f9c726-7ea4-4919-8e70-e6ce2430f39e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c85a8996-cb4d-44ba-8cec-7a201b7866a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f59bec0-1cff-49be-8b19-e7707a8fdecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa5cc84-798f-4737-88a2-e678234d9ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46c48be-f04d-4b2e-90ba-c8e0580d87ac",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb4f42f-78a7-416e-b271-1d873db1813c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af95bcde-671a-42b6-bb09-780c603c54bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeac2a6f-de40-449a-b3ab-f8b95fa7d728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e184e015-b6ae-43d4-a8a9-6eaf9272f2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ea47ca-be4c-47fd-b35f-1e8603ed2637",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a7355b-7a24-446a-b53c-5bac8fbcdd41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee23b012-1c32-4792-9b8e-1eca6ea9ba05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "485c5603-e928-4dea-bffc-d9acadb8d08b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dae1c4c-a896-45c9-91c5-50c9b5b32e4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499c5173-dfb1-4843-89ac-dcc135c1e8ad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365301fc-5ebb-4e21-ad3a-bef9058afb16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52cbb8e-cebe-4e6a-aafa-c1ff334ae39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94831e52-f8b2-48d9-8920-056bf2543539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7363b9b1-27eb-4b7d-8863-795641080474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a938151b-4888-4e4c-9a53-8d17e00b76e4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de97a9b1-693a-4a58-acb4-387e902ee531",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7de623c-1053-49a7-9cf9-1cf4009d89fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeb9cfb0-8153-41dc-9a00-a74b0fe5c80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1331d77-edd9-4d0b-a6f4-dfd581a8a434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee34bb7-0efb-4916-8965-36d00695985c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e5c6ea-f63d-445a-a8df-9164d6739f01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fca0f1cc-6116-480a-baf2-a68203bdba21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a42b110-cf7f-472e-a925-2e29fcc226fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "829e44be-c0c7-4cfd-98ce-2a1ea4d6b752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a588bae-fce1-4ded-acef-c856b680158e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce126cd6-f3b9-4f06-a1fe-5418f8efb8c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61851cce-674b-434a-b9e3-d90faf5e26e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0d0a3a-b308-4982-81ea-287bb617d0a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd47b5ed-d78a-4bf3-bd54-3d766b8602a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7886cb5b-4d96-4286-b440-84b1f015247a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ac4594-c5ea-4525-b4a8-7a526dd3fb57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8942e1bd-57ec-4ae4-8472-046100a1183e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "275c2234-4e16-4e02-8023-74744f9f8275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b0c5ea-15da-4ffc-b943-2eb75ce73393"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb8a926-edd7-4f26-a3a0-a3681ee1d189",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd994e23-0f73-4c0d-8969-29b56c3ad001",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418b1985-1fb2-43be-b35d-1c9e5f15a76d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c2b9a-3ff3-465c-a563-e02c55c27b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46fad1f9-9c74-4ddc-801e-45085802c914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1260138-d257-4936-a013-ca6c19450c7a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c781762f-76c8-47d4-b6bd-df82da7b77ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b7fb40e-0c65-4e16-9a0b-6e00abe35b6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2a82f3-4adc-411e-9921-a9640ec5a78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a89a3a-a452-4b7d-a8b7-d1ae5ca314a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1a19ef-e455-466a-9590-2ab2a1420ff8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e301bb18-c894-43f7-8643-62a20275c39a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07f22296-e1b0-4d96-bbf8-a47e89fc777b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89624be7-862e-4285-99c7-5adf2a36c14e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088086e5-ee73-4ce1-98d7-9bfdb638d37b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2885dc76-840a-46a9-96c1-f459e309b0e8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276d494c-8f34-4b7a-8a9c-89097e8c1d3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cc7c434-5bec-4999-8369-92f867a4a778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2873d56c-d5b8-4308-b2ce-c923fe1b3df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c978fea8-dcb1-4fff-9c16-8ffaa37960ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9467b358-8acb-4385-9f93-63aa5419c612",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd1de48-feca-4e48-aced-3e7243c368e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9520e185-9c9f-4880-8cfa-0da714b26788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b073996b-df7e-4b65-a1cb-b00208771b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69053388-b6cf-4431-a8c3-dd4c141688c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c13bd4-31fd-490d-bfa7-4bf67ff796b5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d98e609-cef1-4063-b75f-14043b281abe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa0fb4b-5047-47b4-8625-6436eb638e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d740c83c-0f13-4ff5-b0af-64ba655a3027",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b12b12fb-2099-4879-9223-9434287aae43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aa3f08-9803-460b-a165-39a495b99c90",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28b323c-ba46-40f3-aec0-02c6d424d9ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b1554d-0cb4-485a-9a2f-038056039596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d81c5e-21e0-4986-94be-ffedd8a6d521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75622266-442f-4082-b9ed-7494d3d4983d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f41d2b3-c9e5-4c8b-8af8-6070de680468",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8d3393-be41-43a6-a7b7-62126445a023",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f2082eb-6a98-4f0f-b819-c52a201fb733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2118ebb6-b546-4a0a-8ac6-c25ea3f9d09d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3ff957-4e21-45a3-a0f5-05cdb5b7359e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf414fbb-df00-4e83-90be-3fc33e0e12c7",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6acd6a-72ab-41dd-b42d-d0e0856cd827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c52521a-6a51-4018-a6d4-391b551dba98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf041f3-e9d1-47bc-aa36-03b2e2750df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62be5484-35f3-4b6b-ab85-53f1a4a6b7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53030131-f084-4a3c-b832-f86a8b0a0ba4",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f75cb49-42bf-4214-8b90-1ae949909dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07939e72-96de-410b-acd6-d9b92cc4b97c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d62152-1400-44c4-8cb4-d3083ebf69c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e48a1e-ecee-48a8-8ac0-e0c5a4de475d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1074a750-c48e-42ae-ae77-5f9e0dba1c38",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6addf07-e73d-47a1-8b28-556333085cf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e726424b-90cf-4347-a5f3-7450cd325957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18c6c1a-2bc1-4a97-a072-ac970e7e74e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf0c2ad-b62e-467c-bfdf-516c62ad0897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98298be1-2a89-4c16-b657-14f148353ab6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48e08c6-bca4-4a2a-940a-b56bf92afc93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3213d95-4cdd-4513-bc55-bd6cfb32a6fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0267a36b-9a87-4cd1-8063-9236bd94c30f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3502e58-1b3c-4640-9dd3-e4053d9ce428"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690f9e8c-d9cb-4904-9afe-84aa4e814f49",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bf634a-8587-4a37-bd45-1433223d037c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e366c78e-9246-404d-bea2-1e9de7fa4487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3761d194-688c-41d6-8184-bbbbb4db3be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9113f7d-cb10-441b-931a-800c0a7e3842"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40e36940-f7b7-4d6e-aaa3-2240223208a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74b13dd3-3be1-442d-850a-bfd92aee47d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52594525-55c3-4b7b-a48c-95ff2f439c35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "71259964-b62b-404e-a141-38b5c9280efd"
                    }
                  }
                ]
              },
              {
                "id": "66e0478c-3c17-4794-8d73-f57218c17769",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c30e8e1d-4b16-4b9c-948d-05722bda6dbb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61f988f-a69c-446d-83eb-4bb6b9b4ae84",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "89abbbd9-1583-4c56-b2da-d7eb47d9ef65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22b5466-720c-444b-8460-f362e0b1c9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4e136c4-fa6c-4b9d-b0ef-3f7dd510fd7e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "396b3544-2e3f-4486-94ab-96c7f4bcaae3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "59d0b823-9ada-4717-9623-f10d7f1f82ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdfe2107-4ace-4ef2-aa55-2b0f7b075117",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff37cb6b-1fc5-4f1d-8512-cee3c7316063"
                    }
                  }
                ]
              },
              {
                "id": "deefde83-d0dc-4130-8872-08c538e4faa2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3ef23371-7df6-4367-8c91-373c333b5dd7",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43580ea1-7513-40af-94fd-e33a62f6943b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "645ec5ce-5542-4cb7-aa9a-583601fe8ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa57c51-ac02-4b95-a6a2-8518d48b2a1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e128fed9-047b-4eea-a0ce-a717674b80ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "98105bcf-40e4-447b-ae2f-4b1a7949bda6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "996f45fc-5848-4fbf-849f-b75e45733915",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4535e934-2696-47bf-b8c1-f24cb1bd1ff4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fbc72de1-b538-42f6-b2b7-249722d79595"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb418b16-a702-40e7-9fc4-653130f88407",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce234f06-59dc-4ecd-a35b-2160d45bcbbc"
                    }
                  }
                ]
              },
              {
                "id": "74f8cc4c-07bb-47bf-b400-c3f774865480",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89b50e2b-7b41-43d9-8950-5533ea66274a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "93364190-568d-40e9-943c-228cd025db1b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c634fffd-ecdb-43e5-b0ff-0601d1602609",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71d56fa4-1838-48c2-b63a-6321594a3624"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c32a009-9e5c-4ebe-9b08-ecdfe5ca3039",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d9f34bc-46c1-4d4d-9f93-487249d7e311"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e34cad72-7a76-42c8-beae-705a6475e7d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f76274d-8f71-44a2-a519-f779459c7332"
            }
          }
        ]
      },
      {
        "id": "2fcc7622-b828-4533-8903-adca8afe7e3d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7989bfc8-0e6f-4036-8493-447885394f79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49b1e0db-cabf-40ea-8c69-d103cd9b9b16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c94ac24a-571f-4f14-8f14-4202d92c4641",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5990d0e4-b045-4208-b403-881894411fd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6cac8cb3-94c5-4d14-ba35-56cdb3df9ef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592886f8-8851-442e-a995-a9665a9357ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1a436d6-3ee9-427a-ba68-b0fbb6c9b3c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c495204e-ed9f-40e4-800e-9476f8dc5d3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20327206-010d-4d0f-b350-3571fd03b493"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7358e6f3-739d-4d70-815a-37d661a257c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88a044df-a115-4e94-8352-5fa5932b2033"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c910fdce-ee1c-469a-8478-3043d1065ccc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8fc3ace2-606e-44e1-8c3c-91532396f3a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97aa137a-8c35-4e01-964c-27f1bf44367a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "639972bf-c624-44d9-b9e7-f7cd91131846"
            }
          }
        ]
      },
      {
        "id": "701fba7e-654e-40ed-a3d4-8a78e7f1b859",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "67d9957b-47ce-4e82-a2ee-0baffd8324e9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ac3a9be-61cd-43dd-a6c8-d2aacfc98e0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd070abb-27c8-48af-8574-02c23385821d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e061f926-87b9-4e17-99f1-d70d9f349a19",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2478aa20-bc75-4d21-a4c6-89d04130b029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11521761-8867-4ad4-812b-8d773513ed12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee72cb5a-5e3d-4f69-81c2-c41dc727cc90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e355cac-ed53-4bb1-a7c1-c8d91650fdb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f21fe594-4a82-4440-98dd-bc0d3ac1c426"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58c6af13-5cc6-4628-8d0e-20cdf8c0275f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c2092c24-fee1-49ae-87fb-9f8f0b4f3924"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad98240f-0e3b-4202-a8b3-958dce4f3193",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6153a051-71a8-4b06-9e76-ae5d7c17b58b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "272e5b1b-53a7-45f3-b5b5-b9190b5dd447",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "06a12560-d839-45c6-85bf-aabaa0bf93f2"
            }
          }
        ]
      },
      {
        "id": "25f8407c-bca7-4440-9a5a-2863628cbd7e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "889f171e-fcd6-4745-815f-3e13aa7c0f79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa3b94ec-8fb4-4318-a1de-fceb70644074",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4fb96cf0-51b2-457c-ab83-964cb39bd718",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc2dce6-34c9-4613-8e70-972b2d75b308",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0adf433-1d31-46a1-8364-256f6b8ed31e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf25e61-9455-4bfc-a880-ab670014486e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "744d44cd-f466-480d-a6f3-bb88f5c6b2d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11edf550-72d0-4707-9c60-672df49f0471",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5000c74b-b15d-48b5-bb95-18f854feebc1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1aa7073e-8215-4d15-9dce-180bd2490531",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb4df4ca-710c-4be5-8eb3-4db096b0c8ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2415cb70-8f28-4718-9cbe-3343eb03a3c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "198a04f6-d5a6-41ee-9233-78aa3d7ed95a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6280c24f-41a7-4a63-9c9a-dfa1b9de6b7e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45c7f616-9ad7-4a09-9e20-3f749a462897"
            }
          }
        ]
      },
      {
        "id": "e8a45e7d-2d94-4d1e-8f37-29cacd2d75ab",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19998464-c446-443f-a7f9-17bd8b111be9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c464dce9-1f8e-4273-b3e9-fb5c281d05a8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8079ec76-85bf-413d-9596-12fb7905f768",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea862695-c034-44c1-a930-c5a956db2d4b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af63b7be-dfdd-4d49-8fae-7a758b498b1b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 128.65845070422537,
      "responseMin": 21,
      "responseMax": 4230,
      "responseSd": 360.01634288861874,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1695169992283,
      "completed": 1695170040501
    },
    "executions": [
      {
        "id": "e1cf37ff-9985-411c-8370-c8a19e0ca877",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "61f4397f-1883-43fb-9a6c-aff2a5be98cc",
          "httpRequestId": "ef3d5c60-01d8-4fad-a89e-9fa9b9867033"
        },
        "item": {
          "id": "e1cf37ff-9985-411c-8370-c8a19e0ca877",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "41d47643-9d89-4051-a224-f5e81d2b4777",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "5f33be30-1b23-43f8-b9a8-5afab7013b45",
        "cursor": {
          "ref": "86294aa6-c886-4872-afdc-faa099e291ea",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ffe4b4e8-ba3c-433d-afa4-f6388967ef83"
        },
        "item": {
          "id": "5f33be30-1b23-43f8-b9a8-5afab7013b45",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "647feaf8-cad1-4940-a5d7-7682b4c07fc4",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "8785d9d4-d764-4eac-9113-d143cb4f4620",
        "cursor": {
          "ref": "6aaa88be-90e5-44f8-96f1-a9ec55dd92b7",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "daf9056a-8cda-4db8-b620-212cbd94dafb"
        },
        "item": {
          "id": "8785d9d4-d764-4eac-9113-d143cb4f4620",
          "name": "did_json"
        },
        "response": {
          "id": "515f3153-a30a-4209-99a0-a5266a9c18af",
          "status": "OK",
          "code": 200,
          "responseTime": 443,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471c3d9b-5c05-4b3b-afbd-6d32c018f38b",
        "cursor": {
          "ref": "09c11a4a-d28f-4c58-a01e-531e3a6031da",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc4e90e0-c751-465d-b696-ba61abcfd7eb"
        },
        "item": {
          "id": "471c3d9b-5c05-4b3b-afbd-6d32c018f38b",
          "name": "did:invalid"
        },
        "response": {
          "id": "23ef1aa9-a856-484b-8e00-3f53bcc6c906",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1391,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "471c3d9b-5c05-4b3b-afbd-6d32c018f38b",
        "cursor": {
          "ref": "09c11a4a-d28f-4c58-a01e-531e3a6031da",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "cc4e90e0-c751-465d-b696-ba61abcfd7eb"
        },
        "item": {
          "id": "471c3d9b-5c05-4b3b-afbd-6d32c018f38b",
          "name": "did:invalid"
        },
        "response": {
          "id": "23ef1aa9-a856-484b-8e00-3f53bcc6c906",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1391,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fa05ef-a1a2-4d7d-ba9b-4de9f4a734f7",
        "cursor": {
          "ref": "4db76bae-cdc6-494a-80b1-7b0e816b71f5",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f3c52c9f-03a9-48b6-9b01-a96b15b924ef"
        },
        "item": {
          "id": "03fa05ef-a1a2-4d7d-ba9b-4de9f4a734f7",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "aedfe4fa-9766-4c88-9c68-ce0835a8451a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f922ee5a-cfb7-42a9-a74b-4afea8ac478a",
        "cursor": {
          "ref": "47bd7a3a-6b22-4bda-8745-55060bbc69d0",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ee5206da-6428-41ed-982c-2f7c355105c0"
        },
        "item": {
          "id": "f922ee5a-cfb7-42a9-a74b-4afea8ac478a",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "de1e9b47-8d16-41f9-b812-49701ea0e4cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 62,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9681cb67-3c99-4983-bc7f-16134deebb98",
        "cursor": {
          "ref": "e7009ac8-f2ba-4bf6-b149-2265769c63c6",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4881ada8-60db-406e-acd8-815f566e4926"
        },
        "item": {
          "id": "9681cb67-3c99-4983-bc7f-16134deebb98",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "136fe094-47f6-45cc-a955-6cbfe1b9175b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4311cfd-5a96-4fbe-933b-9cde6b7290ab",
        "cursor": {
          "ref": "235fe0bc-c5c8-4318-8622-01fdea9f7c03",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "996cc67e-7321-481e-ab19-0efe99e309c6"
        },
        "item": {
          "id": "e4311cfd-5a96-4fbe-933b-9cde6b7290ab",
          "name": "identifiers"
        },
        "response": {
          "id": "35ebd2cc-2fa9-45a3-a436-4cb792dae91e",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfea1a5-e8ab-4c52-a56e-12728f2627e1",
        "cursor": {
          "ref": "3ba74255-6795-4354-8839-a0abd0cc4ddb",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "70e619ea-5d90-4bac-b4be-4ad1caf16148"
        },
        "item": {
          "id": "5cfea1a5-e8ab-4c52-a56e-12728f2627e1",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6499adb2-c8fe-4cbf-befe-2b63269c1e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b83b7b-c7e1-43fd-94fc-b299cc192244",
        "cursor": {
          "ref": "be87dbf1-3924-4660-8e10-aa0b7b48d55d",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c7a21ae6-ee2b-4542-a8ac-9ce5b2795eda"
        },
        "item": {
          "id": "75b83b7b-c7e1-43fd-94fc-b299cc192244",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "02b58978-0e37-4e90-9aa2-fdd09193282e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb740f7b-568d-4121-8d83-f73f8a51bd37",
        "cursor": {
          "ref": "07f2f409-ae30-48b5-aee5-e0a7c0022b12",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4678c8e9-cb92-4d62-8434-bb15050eb08f"
        },
        "item": {
          "id": "cb740f7b-568d-4121-8d83-f73f8a51bd37",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "2a2d0b68-a6da-40fc-bbe0-9e897597432c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e553d6ce-fd05-4992-82e4-d1a5dab8282a",
        "cursor": {
          "ref": "e731fde5-8849-4b60-8cba-24814f6839e2",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f1fa9ef9-e2e0-42f4-a561-fc112ccecb61"
        },
        "item": {
          "id": "e553d6ce-fd05-4992-82e4-d1a5dab8282a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b8f5fe8-6e21-45b6-b63c-1d8545211c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0816eb6d-8823-4fdc-94d3-ddfa4623b394",
        "cursor": {
          "ref": "58642be8-ecba-47d5-90cb-cfe4487b8cf0",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "127869d4-3333-4d65-abcd-035fac00bfcd"
        },
        "item": {
          "id": "0816eb6d-8823-4fdc-94d3-ddfa4623b394",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "260fcac2-a84d-4d82-a8e7-266f8c906084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817b1dcd-9d4d-43ce-b1f6-37d6faf414cb",
        "cursor": {
          "ref": "7d0967c5-e469-40a5-8d69-f6c979fc2d90",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d7e6ebdc-126a-4f52-afd0-18f9514fd4d5"
        },
        "item": {
          "id": "817b1dcd-9d4d-43ce-b1f6-37d6faf414cb",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "db1f4d36-6bf6-498a-bac2-f070457f47e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fffd8a8-caad-41ff-bea1-35a95bcecc75",
        "cursor": {
          "ref": "ece34fe2-428c-482d-a842-db38f6740c68",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2b574b98-ee91-43f3-a80e-ed1c4427eda9"
        },
        "item": {
          "id": "9fffd8a8-caad-41ff-bea1-35a95bcecc75",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "14013f3d-8fe4-4e20-a830-ad9618da3aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbd1c4f-9dd0-48d0-aad6-508056a06c6e",
        "cursor": {
          "ref": "c334cdf1-681f-4afe-aad1-3ab88300e8de",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "3086c1c9-154a-4ac3-981d-9eb715df7af2"
        },
        "item": {
          "id": "9cbd1c4f-9dd0-48d0-aad6-508056a06c6e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b996a2c2-989a-4c8a-bf85-d9b446ba3e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e5fcf9-d941-45ea-9f8f-82e98969301a",
        "cursor": {
          "ref": "4b306d40-1b3a-4e41-9c77-1378b9ff7252",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "68358bd0-79b9-4ea5-8924-acca96d35c24"
        },
        "item": {
          "id": "13e5fcf9-d941-45ea-9f8f-82e98969301a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "ad4c726e-f281-4980-9d1e-ba29db877678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96388272-280f-4d63-ab7f-8a5c668758a1",
        "cursor": {
          "ref": "ba661ec0-a8b1-49b7-a439-c450f3df7bbf",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "59a54ed4-2e5d-4da5-a733-6ff702a1ee7b"
        },
        "item": {
          "id": "96388272-280f-4d63-ab7f-8a5c668758a1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "75007ff6-00e0-41c6-a70d-7f8d561636fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23486e1-b6aa-4daf-8350-bd88fa0c09ec",
        "cursor": {
          "ref": "8ce4e3bc-e4d4-44aa-8eae-b4824b7bf342",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "7b7040d1-857f-4406-b580-10745559a7db"
        },
        "item": {
          "id": "f23486e1-b6aa-4daf-8350-bd88fa0c09ec",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "94044a64-b367-4285-ab9d-f52e8dfc6a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bbfbe3-6d3d-47c9-a853-9549c2a65866",
        "cursor": {
          "ref": "76c23524-b76a-400f-9b3b-61ba9e502451",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c1815fb4-4aa9-4470-8855-77c89d7a3ade"
        },
        "item": {
          "id": "11bbfbe3-6d3d-47c9-a853-9549c2a65866",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "308974a8-d394-4882-8313-26c9c31987dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bceeed-c324-4f90-8884-db4fda56c8ec",
        "cursor": {
          "ref": "a4a6ac8d-7659-46e7-bf31-63aa464b595f",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "61483f02-aa5b-4fea-a497-c6b07252c6b1"
        },
        "item": {
          "id": "93bceeed-c324-4f90-8884-db4fda56c8ec",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "89464a19-0c85-490d-9fc3-309765c57c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e281cbc8-b65a-465a-9b04-b9258048097c",
        "cursor": {
          "ref": "891b8261-4ac6-40aa-a15a-cadd4febfcc6",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1c5d6dd8-8ba1-4b3c-a221-791cf53e82b9"
        },
        "item": {
          "id": "e281cbc8-b65a-465a-9b04-b9258048097c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "139cca7c-c89d-4ed4-915b-414d6e7874ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b5ebb6-081e-42f2-8be0-c869cbdd0856",
        "cursor": {
          "ref": "a565dbad-6047-41cc-b017-ab1368dcac04",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0c90afe3-3098-4f0f-8feb-7be8e725c0fe"
        },
        "item": {
          "id": "70b5ebb6-081e-42f2-8be0-c869cbdd0856",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1f1514c7-d1a8-4ca9-acf2-f4da277695fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd2d171-16a2-4cba-a2f7-090e7647900b",
        "cursor": {
          "ref": "e3fac569-9494-42cd-abc0-367e886e6a0d",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "11eef839-6540-47b4-8a77-d4c1df3ff01f"
        },
        "item": {
          "id": "ccd2d171-16a2-4cba-a2f7-090e7647900b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b6be1fdc-a30c-415b-ae6e-cff31a4b313c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2361610a-0abe-45b5-bc39-9e4877d4d389",
        "cursor": {
          "ref": "8961d4d0-ec3e-4222-b517-d25519b6121f",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "dc604f1c-68dc-4705-8c42-1a8edaa0ef33"
        },
        "item": {
          "id": "2361610a-0abe-45b5-bc39-9e4877d4d389",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "766111d2-517c-4e89-b1cc-839d8681bbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f815943-5beb-4e26-9a27-9efcc7c273a7",
        "cursor": {
          "ref": "01f2b2c7-a9b6-4cf5-a6e5-50bf5ccb6840",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "30e28d14-2823-4d98-a37f-43668c576816"
        },
        "item": {
          "id": "0f815943-5beb-4e26-9a27-9efcc7c273a7",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e3c04e21-1eda-4539-9abb-287dfae03b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed97df3-b6f9-417a-9a12-1b7ded0fa77c",
        "cursor": {
          "ref": "aeb1177b-cc95-4769-9c49-fcab028920e3",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5f72f3f6-a6f4-473b-b75a-fa08c671e279"
        },
        "item": {
          "id": "3ed97df3-b6f9-417a-9a12-1b7ded0fa77c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "23a9c2fb-c60e-4322-a7db-c20d339055ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205efdde-740e-4efb-be1d-cf3d2f733f20",
        "cursor": {
          "ref": "27ed039f-effd-499a-af62-392cb0490337",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5fc17939-843f-4413-bc32-125698417dd4"
        },
        "item": {
          "id": "205efdde-740e-4efb-be1d-cf3d2f733f20",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7fd0c0c1-2994-41d2-80ef-81abd0dc3525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac56ed3a-e8f6-438c-ba58-f46626aa9f9c",
        "cursor": {
          "ref": "0fcaf316-b19d-49b4-807a-5c9646399d4e",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "b6d00f1c-3f34-4e82-8b3b-2b1683cdc1c3"
        },
        "item": {
          "id": "ac56ed3a-e8f6-438c-ba58-f46626aa9f9c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9c5127b2-79f2-4d01-88db-71bcc7405163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1207335d-f58e-406c-8749-59583400c38a",
        "cursor": {
          "ref": "a7a9dc8c-bfab-49fb-b701-c809f8dde453",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "977f912e-c389-4865-9f63-677112525c61"
        },
        "item": {
          "id": "1207335d-f58e-406c-8749-59583400c38a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "fdecb49f-b769-4817-bad7-5ac222c768a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2214a09-46b2-4695-9bc6-22e406947404",
        "cursor": {
          "ref": "d69c63a2-6edf-439a-a219-16c79b41bef0",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "27c6737e-bdc4-4089-ab8e-7f0208642324"
        },
        "item": {
          "id": "c2214a09-46b2-4695-9bc6-22e406947404",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1e5de921-ab62-4298-9e4b-309e58976065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6c924a-d340-4aca-bba9-7c05141c599f",
        "cursor": {
          "ref": "88615174-a448-4e01-864e-220c049a875d",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bf2d3d60-cac8-47f6-b520-92cbd695a39a"
        },
        "item": {
          "id": "2a6c924a-d340-4aca-bba9-7c05141c599f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "202dcb21-cb2d-4632-9bce-fa24c28a778c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd00a3d-8c7d-4fdf-bf18-397d5ec5a29a",
        "cursor": {
          "ref": "f10f6c14-fcc3-498e-be31-8f413c5a563b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4fe6d074-c496-4223-b1e0-8942605f152f"
        },
        "item": {
          "id": "fcd00a3d-8c7d-4fdf-bf18-397d5ec5a29a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3760d84d-51ba-48de-8004-c7c0f283b018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87f2862-0217-48fe-8432-c00adefb2d1a",
        "cursor": {
          "ref": "8a359e26-3f89-4008-9080-072d727125c8",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "377de91d-757d-4146-90cd-f170cbe3c436"
        },
        "item": {
          "id": "b87f2862-0217-48fe-8432-c00adefb2d1a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "becc8348-75f5-4d07-b971-354ca31042c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20034f3a-59a0-40cc-a52b-ea96e8dd6d15",
        "cursor": {
          "ref": "3c692530-2e40-4431-b30d-24192077a8e7",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b236d9a0-d933-4157-b60a-0abc57de4621"
        },
        "item": {
          "id": "20034f3a-59a0-40cc-a52b-ea96e8dd6d15",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "99aa3ad3-3939-498c-89f3-9b33626558bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d3a01f-5def-40c3-9b65-d5d5fcc3f037",
        "cursor": {
          "ref": "a0aad510-f720-401e-bce3-0749b124d469",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c01eae20-8b73-455d-967b-d4c54feb083b"
        },
        "item": {
          "id": "d6d3a01f-5def-40c3-9b65-d5d5fcc3f037",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "39709194-ded5-49fc-a143-af62be30f7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e5e074-dfc6-430b-8377-a1834d3e51e7",
        "cursor": {
          "ref": "b209fc9d-f603-4915-acec-59493c02a484",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "433a90b0-dba0-4d0e-b30e-ab0025cea640"
        },
        "item": {
          "id": "56e5e074-dfc6-430b-8377-a1834d3e51e7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ba564ad0-9143-4523-9ac4-4e10a2737ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9822204-8dd0-466c-97fe-f2fd966d351e",
        "cursor": {
          "ref": "d5b3fe54-6804-4f77-beeb-a7d26f237615",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "2741a2ba-0182-4e0e-b1d0-a5983324a187"
        },
        "item": {
          "id": "c9822204-8dd0-466c-97fe-f2fd966d351e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9686ff53-e5e8-4164-ac40-a3d3aac82fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2292a57b-fd8a-4484-a1f1-7103d9beb1f5",
        "cursor": {
          "ref": "2c1bbc91-6eee-453b-90ad-d997d4514d58",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f9989d5c-f0e0-40d8-a93a-43d8dcde592f"
        },
        "item": {
          "id": "2292a57b-fd8a-4484-a1f1-7103d9beb1f5",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a0b6b8bc-a683-48cf-b0c0-b46a9d97178e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52040a29-6385-4934-9435-8422182974f5",
        "cursor": {
          "ref": "074c1a4b-8d52-4bb2-ba35-b2af8e11f466",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "da139ec7-99c1-4d3c-aadb-6f63c27c3034"
        },
        "item": {
          "id": "52040a29-6385-4934-9435-8422182974f5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "014511a1-ccbc-4aa4-9fb0-ed50e6657204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84f315f-310d-4190-9803-2d185888eebc",
        "cursor": {
          "ref": "bd9caa19-a15b-45ae-8534-caaa22f32f8a",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f55fe3fb-aa12-4d33-b535-0fe20365f5d2"
        },
        "item": {
          "id": "c84f315f-310d-4190-9803-2d185888eebc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f7bf926a-1714-43cc-bb77-516e4b39f1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68bbffe-e332-4813-9769-da5baa32ab1c",
        "cursor": {
          "ref": "840fb0cb-696d-43eb-a035-e64648e6624b",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "97516431-0911-49e3-a498-9e6fe2897abe"
        },
        "item": {
          "id": "d68bbffe-e332-4813-9769-da5baa32ab1c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a28a9907-fb69-446b-8429-ec11d5f9c16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd4058b-fffb-4daf-a0b4-a4233aa2a5bd",
        "cursor": {
          "ref": "e7eb5c99-306a-4864-b17c-de2217187620",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "98012710-fd16-4b74-b916-5d71620b775f"
        },
        "item": {
          "id": "fbd4058b-fffb-4daf-a0b4-a4233aa2a5bd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e33ffe68-c312-49f5-8e37-da0d83f3ed2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7832686-15ab-48d8-b138-8352acbf4c6a",
        "cursor": {
          "ref": "6138b12f-c0ff-4b89-abf0-6047afdc2d2b",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "99a31118-3d46-472d-bd0b-4bff386d8340"
        },
        "item": {
          "id": "c7832686-15ab-48d8-b138-8352acbf4c6a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "efcd46db-7940-464f-aed8-dc0624fb7659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cced2fa-842c-4a26-8f27-5b67a494b88e",
        "cursor": {
          "ref": "a3c1dcbf-e56e-4b3a-951c-50f8272d79de",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "28624feb-6cf8-4958-b903-c2ce01404ffa"
        },
        "item": {
          "id": "3cced2fa-842c-4a26-8f27-5b67a494b88e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "44f047c0-e2c4-4a78-bee6-57993aac0d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0832c03-ac1b-4de1-b7a7-491a9aa8aafe",
        "cursor": {
          "ref": "8f43a0f1-0bc7-4adb-9176-8a30eacb387e",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3a086482-6c66-49f4-829c-6e70a00df740"
        },
        "item": {
          "id": "c0832c03-ac1b-4de1-b7a7-491a9aa8aafe",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8b1b6b81-4313-45e2-b606-b39766f41879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f8bf16-2ccc-41b5-8d24-db75ac234194",
        "cursor": {
          "ref": "3e358f19-0ebd-4be5-9353-00316444762b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "96105c20-3054-4848-b43a-e1a7d695326f"
        },
        "item": {
          "id": "e4f8bf16-2ccc-41b5-8d24-db75ac234194",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "a3662b74-ad01-4cbe-8d35-4b1892dcdffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6804000-f79e-4a66-b2b4-7c43839d66cc",
        "cursor": {
          "ref": "dcd9f176-c903-4d99-8651-f024ca4d026c",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "638a87bd-30f9-4249-bd46-3929b9bc47ea"
        },
        "item": {
          "id": "e6804000-f79e-4a66-b2b4-7c43839d66cc",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "248a54f1-93f7-40ce-bd00-246f16e183ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d50d942-4b54-4acd-be03-2a21072e5907",
        "cursor": {
          "ref": "307f3520-f9f8-4147-af3c-2208b63f5648",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4797c255-39fc-4f5b-8839-9071376d6051"
        },
        "item": {
          "id": "7d50d942-4b54-4acd-be03-2a21072e5907",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0bff4095-a54c-4ecc-9dc9-b97c752178d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d9c5e3-c0f2-4ac4-9ad8-66f25dd3e97c",
        "cursor": {
          "ref": "07804975-1420-4979-a426-928aacdc6b19",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b67e307c-69d5-4c51-81df-076f767e97c1"
        },
        "item": {
          "id": "28d9c5e3-c0f2-4ac4-9ad8-66f25dd3e97c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "88ee108a-9c72-42bf-a64e-224db93fe3d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58cc0ff3-8641-4b19-9b84-ab3120d56dd7",
        "cursor": {
          "ref": "ed879914-7f70-4771-80b7-e7a568e6807f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56c4c235-4a53-4edd-be4d-4680fca41357"
        },
        "item": {
          "id": "58cc0ff3-8641-4b19-9b84-ab3120d56dd7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0371cd82-b577-4fac-a9b9-68bc3fe883f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3f1039-3a49-4a51-bb3f-5759983f1528",
        "cursor": {
          "ref": "020697cf-3dd3-47fe-9644-2d69e5e9b109",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f004c0d7-7d67-42cb-a624-efc155f13870"
        },
        "item": {
          "id": "de3f1039-3a49-4a51-bb3f-5759983f1528",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9372b06f-22c4-4d59-bbb6-0a125d469e7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad23447c-df73-4fbe-8bdd-dd334e6b5ef7",
        "cursor": {
          "ref": "231c7126-e055-4d98-8cf7-454b0b6d4d77",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5bb7d305-e767-42a0-954a-9cdfb732ebc4"
        },
        "item": {
          "id": "ad23447c-df73-4fbe-8bdd-dd334e6b5ef7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5a7ed3d8-8dd6-46c0-b04f-eabd92e45992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb9338e-1faa-4dde-9b44-8d933b467842",
        "cursor": {
          "ref": "31706923-edc8-4d2d-8272-c61408eca25c",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "346553f3-efc6-4340-b013-8a02f58f9601"
        },
        "item": {
          "id": "acb9338e-1faa-4dde-9b44-8d933b467842",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9f8005b9-d3ab-41da-b491-84ed1b61ae04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07da1312-1cf7-4be1-af1a-d30e7833af1d",
        "cursor": {
          "ref": "e4fd5b61-1f01-4879-ad92-f4b3a1efc7d1",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fa6f96ba-7081-40bd-8c08-b931c9028a19"
        },
        "item": {
          "id": "07da1312-1cf7-4be1-af1a-d30e7833af1d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3623e632-231d-434c-bfe0-a4b6661e9a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b329d60-7c5d-4031-bc80-10c1118c6ee3",
        "cursor": {
          "ref": "3b8ea4cb-e98f-45ac-8ac2-1379733a854d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "40f65250-3cf2-4a87-8eef-86d814498d40"
        },
        "item": {
          "id": "0b329d60-7c5d-4031-bc80-10c1118c6ee3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "09952ad0-778c-42c4-a26c-1e0c79db4d90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9390799-1107-4d48-b4c6-645528d400ea",
        "cursor": {
          "ref": "c26e17ac-9e72-49b7-a0ca-ab3ffda4a2f2",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e0defdf4-33ce-4608-a582-9e51e147d8d0"
        },
        "item": {
          "id": "e9390799-1107-4d48-b4c6-645528d400ea",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e2ea7f37-0a4f-4d5e-bdc6-6bfcc3fd7aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da874da3-fb30-49df-ad3b-5c8dc72dfd82",
        "cursor": {
          "ref": "e9a87377-f08c-4357-8c04-397ff64ee229",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2748f720-8904-4bbb-b023-b8030b3a4785"
        },
        "item": {
          "id": "da874da3-fb30-49df-ad3b-5c8dc72dfd82",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "df5419bb-8e0e-4081-9646-a49debcd32e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb60960-f9b3-456e-a2b2-35b85ca84de3",
        "cursor": {
          "ref": "7f42010f-374e-4f42-9e8d-6c9130431f72",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0dd0d2e8-fbff-4303-b966-7cb0c9c2055a"
        },
        "item": {
          "id": "9cb60960-f9b3-456e-a2b2-35b85ca84de3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f3646e12-39bc-4508-a7eb-efe48b3647fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41898f34-c073-4bb6-8a23-1057362b4fa7",
        "cursor": {
          "ref": "2f526e19-a773-44f3-b260-65db38b5492c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "38e63565-f987-4e6a-9d07-cd7ebc6b35c6"
        },
        "item": {
          "id": "41898f34-c073-4bb6-8a23-1057362b4fa7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f4d0a637-571b-483d-849a-9cfd8b2e6fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4e2179-a54d-4f7e-ac97-3ba50add9647",
        "cursor": {
          "ref": "1bf767bf-e555-40a3-86d2-540853525b69",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b59d8404-9991-4b54-b93c-810c725b800d"
        },
        "item": {
          "id": "5a4e2179-a54d-4f7e-ac97-3ba50add9647",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "bb4ffda5-91c6-4eae-9c35-d72aac645507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61728347-b275-4984-8f4f-eb1da5fa50e2",
        "cursor": {
          "ref": "1a65279e-d7ba-402e-b786-e7d414895563",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "73e58bdb-568b-43ce-b46e-77ef1df57278"
        },
        "item": {
          "id": "61728347-b275-4984-8f4f-eb1da5fa50e2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cc61a2ea-a5e3-4eaf-a336-710e8e6d5084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc0c06e-3553-452b-aef3-b5528f5d1deb",
        "cursor": {
          "ref": "e0d654c0-3346-4dcd-9312-554f609c6d7b",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5de61f5f-394e-47bd-ad53-46a48c0b50ca"
        },
        "item": {
          "id": "4cc0c06e-3553-452b-aef3-b5528f5d1deb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6494085d-1ffc-4cfc-847c-3b1febd9fe42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decbe9f6-6a27-48e7-b5bf-f19fad434543",
        "cursor": {
          "ref": "05b05918-33bc-4a81-9b57-7b2e33713789",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9e56b7a4-ba9c-41e7-a506-be3a637415f9"
        },
        "item": {
          "id": "decbe9f6-6a27-48e7-b5bf-f19fad434543",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c9a094ae-d296-4053-9626-5d3bbf5def25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf930ea8-830a-49ce-b32b-734c021414d1",
        "cursor": {
          "ref": "ea6004ed-ef1f-4aad-8f34-970569c2915b",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "82d53bdc-e56e-4d0b-8f1e-5bbac5824503"
        },
        "item": {
          "id": "cf930ea8-830a-49ce-b32b-734c021414d1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1322254f-4b89-4861-8bd1-3b2e02c34d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d49953-74ef-4cd9-9d43-5d29e9655fbd",
        "cursor": {
          "ref": "e8146e5c-d6d4-4a7d-a645-3329c50d8b15",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "322056e8-ed22-4671-be2d-a349e4f5f42e"
        },
        "item": {
          "id": "a2d49953-74ef-4cd9-9d43-5d29e9655fbd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e0b05a7a-3704-4c95-86b1-bd88f5a0b144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a5feb2-4c98-44ba-9605-2096ac734322",
        "cursor": {
          "ref": "aa7bfb10-edf6-4d08-8d26-e9d9cf336597",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e7996a4f-6874-45ac-afdd-79af1bc35b2a"
        },
        "item": {
          "id": "26a5feb2-4c98-44ba-9605-2096ac734322",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e29cc6c3-f3ec-40d9-94c2-8e2db8c0dd3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07944929-59c5-4420-8ba2-e8fc81bbee24",
        "cursor": {
          "ref": "659fa8ea-b6e1-4b46-b439-3db77b645ce6",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f747c319-a369-4b66-88ba-6db8a9c01fa2"
        },
        "item": {
          "id": "07944929-59c5-4420-8ba2-e8fc81bbee24",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d3630084-1486-4dfc-abb9-6c838ec2a0ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e91e01-f69c-44e1-8e3f-e2f8e3955f4c",
        "cursor": {
          "ref": "db477585-d1d1-4fe6-a003-12623b0c3063",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "bb899932-ccc2-414c-9814-b8f5506031c5"
        },
        "item": {
          "id": "e4e91e01-f69c-44e1-8e3f-e2f8e3955f4c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "85a25dd8-9ab4-48eb-b1fd-5752f5d70a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c24dd3-c98e-4a11-9268-6f0c259b5ec5",
        "cursor": {
          "ref": "57e7aa83-5206-4ce9-99b5-422855ba8c5b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c8ec399e-2894-455b-9954-ed7a121b8a4d"
        },
        "item": {
          "id": "76c24dd3-c98e-4a11-9268-6f0c259b5ec5",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9d734e2d-5956-4d8d-a816-245d459e153a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d11d46-fac4-4a21-8412-a5bc5e1a9d6e",
        "cursor": {
          "ref": "49e600e0-2ef4-4321-8352-7e62485f1734",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "364faef6-403c-4165-a09b-44cebfe4861b"
        },
        "item": {
          "id": "58d11d46-fac4-4a21-8412-a5bc5e1a9d6e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5567046f-b1ff-4bb4-aa36-0ec2a30c2f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7978fd00-d70c-433a-a46a-834ef8be3a6a",
        "cursor": {
          "ref": "4204b184-478d-4ccf-8cd8-2d17d8f3ecde",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6822b83b-010d-43e6-bca6-9bcbe219d088"
        },
        "item": {
          "id": "7978fd00-d70c-433a-a46a-834ef8be3a6a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a93c15fa-c839-43a2-9ed9-3ff1b280b9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbf3855-5627-4ef1-995a-0067d9de0d8c",
        "cursor": {
          "ref": "da21908f-26c9-44ba-b96c-26d486765b29",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3e42361b-f4bd-466a-b7b2-ee3fdb70b993"
        },
        "item": {
          "id": "efbf3855-5627-4ef1-995a-0067d9de0d8c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "748c109e-2cfc-48ea-8686-26d8e1f99344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92937c4-94d5-4185-97eb-e852030b0c9a",
        "cursor": {
          "ref": "fd269fb0-a3a6-4cac-8cad-d076a3d5615b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e3c6cdaf-a5d8-4233-91af-0ada8625577b"
        },
        "item": {
          "id": "c92937c4-94d5-4185-97eb-e852030b0c9a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8be1b7aa-5180-4348-9a88-8274c714f624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffbafa7-b310-4bdd-8e27-048e99e5476c",
        "cursor": {
          "ref": "cd1ac2c0-a715-4cde-b7cd-117ffeb470e6",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "6c75efcf-aae2-47bd-9b93-096b16835e20"
        },
        "item": {
          "id": "dffbafa7-b310-4bdd-8e27-048e99e5476c",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2a3c9f20-8982-499d-9e33-421c66270038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeebfbb0-e66b-4d55-898f-795b0a60d058",
        "cursor": {
          "ref": "159ef1cf-6065-48e6-91bc-7fbdbcf6e989",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "aab53ec3-7c38-4acb-8edd-9fac47572b46"
        },
        "item": {
          "id": "eeebfbb0-e66b-4d55-898f-795b0a60d058",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8b963596-c61a-4db4-b627-bca5cdbdd688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d82c8e-94cb-4486-b904-7b5d997b0098",
        "cursor": {
          "ref": "4d787473-15c2-4fc0-831e-5fcc98190625",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0c8e6efa-92bd-4427-9ce6-f38f730c0f44"
        },
        "item": {
          "id": "23d82c8e-94cb-4486-b904-7b5d997b0098",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6a55a0a2-b458-4e5f-bb4f-1912ce9391c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0aa3d2-2311-4a7a-bc95-6701308109cf",
        "cursor": {
          "ref": "6b6d8115-2fcd-4eb1-816b-4d3808de47b4",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4a33643e-446d-463b-bd8b-1b5a0fa92c34"
        },
        "item": {
          "id": "3e0aa3d2-2311-4a7a-bc95-6701308109cf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c6da836f-9af3-4036-bfda-c5bf6acd0682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358f5e01-6005-4c81-a69a-c8d4047032fe",
        "cursor": {
          "ref": "71b1d476-289e-462f-a2db-361b7eec970f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "cbad5921-80a0-4a5f-a6f6-555251d36a82"
        },
        "item": {
          "id": "358f5e01-6005-4c81-a69a-c8d4047032fe",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fcde7b82-84c7-4013-b79c-5f2f4970f177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f58c66-e031-4db4-a8ef-26ad9b6c377f",
        "cursor": {
          "ref": "61839831-655d-4cd9-9cac-e698eb459ffa",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7c87d514-b2ea-402c-a9b0-d8fc9f2ad005"
        },
        "item": {
          "id": "73f58c66-e031-4db4-a8ef-26ad9b6c377f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a29ea573-07ae-4993-9f59-8546ec7fd72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8fd425-2fc3-4cac-bb5d-12e70032c1aa",
        "cursor": {
          "ref": "fb26a219-2ba5-458d-959a-c6fabd337bc6",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "81bb7bd8-5924-4b27-b791-d0c753fdfdd0"
        },
        "item": {
          "id": "1b8fd425-2fc3-4cac-bb5d-12e70032c1aa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a26d707e-2462-4948-87a2-e9a369fe6036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c5df24-d299-45b1-8d7f-d63afd102ed9",
        "cursor": {
          "ref": "6092cd62-1f1e-4998-b2d0-9c30e5a7093f",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "be1f3ccd-6d24-4ae8-97f1-c72a306de9de"
        },
        "item": {
          "id": "73c5df24-d299-45b1-8d7f-d63afd102ed9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "988fa7ad-5dee-4624-af5f-b62775eebeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd19c2d-de23-46b7-a3c7-0c2f10add63d",
        "cursor": {
          "ref": "5b9f4066-4139-40b5-b2ec-ae3b13ea3a39",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "30aaae4a-0fa5-402e-833b-4e9b9f398990"
        },
        "item": {
          "id": "fdd19c2d-de23-46b7-a3c7-0c2f10add63d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8ec221ed-0341-4851-96d5-4019111a47c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5bdb9f-84fb-4786-a434-840ed2ea9d31",
        "cursor": {
          "ref": "98dda4a0-2a1a-44ae-93ad-96d2e677b0ca",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2a1bf9e5-623c-4719-8b8f-207789ac5858"
        },
        "item": {
          "id": "8a5bdb9f-84fb-4786-a434-840ed2ea9d31",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "51ea446f-a352-4cf4-9b2e-ceaa398ea6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3d19c5-99a0-44b0-9998-230750116e51",
        "cursor": {
          "ref": "924b8391-bcbb-4dc7-a41b-1302cc0a2581",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "16aba1de-3c72-4b50-88fc-4e73f8c3f097"
        },
        "item": {
          "id": "2a3d19c5-99a0-44b0-9998-230750116e51",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5369654b-63e0-4521-902e-b63feb64636b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "236f58c9-2b8c-4b2c-80a4-91f25d70164c",
        "cursor": {
          "ref": "eea57421-11ff-40d5-9d40-5624e11b6738",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "71143325-cebc-4b1a-9c45-bdd36ba3f50f"
        },
        "item": {
          "id": "236f58c9-2b8c-4b2c-80a4-91f25d70164c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "149874e0-c683-4714-a854-cec3b7d7b8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e1d84d-64dc-4f1e-b241-dee7037cebf6",
        "cursor": {
          "ref": "8a1e028f-45fd-4f4b-9e88-0ffd3aaef650",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "eb27cf59-9cf7-47aa-8200-0753c8d7be57"
        },
        "item": {
          "id": "30e1d84d-64dc-4f1e-b241-dee7037cebf6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "74638322-25ad-4b9f-9bc7-f0fe157d98c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11249a0e-2a7f-4fd9-9142-fbe86d95f95a",
        "cursor": {
          "ref": "077850d5-4410-4512-ab2d-52357cbb2608",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ae2d9da3-2221-4c89-afc0-b04e02538f3e"
        },
        "item": {
          "id": "11249a0e-2a7f-4fd9-9142-fbe86d95f95a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5cb85e7c-3509-4b0e-8d8f-1d56e1a04b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597037f2-1f77-492d-9bf5-656c40ee911e",
        "cursor": {
          "ref": "fc6fa83b-d115-453b-a7df-e3de44a06e21",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5b410b02-da44-4ab8-bafc-2c7b2f69fa30"
        },
        "item": {
          "id": "597037f2-1f77-492d-9bf5-656c40ee911e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4e42a7e3-e6f9-43e8-b5ca-a87a5f70d726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3031eeb-0549-40f8-9ed4-ac057e2b384a",
        "cursor": {
          "ref": "1d04411d-abef-4397-b1dd-f29de2b623d8",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "24eb8e1b-10bd-4c1a-bf3c-c0f69e3d15f5"
        },
        "item": {
          "id": "e3031eeb-0549-40f8-9ed4-ac057e2b384a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6c65c5ed-99fe-4c94-84be-7de376913ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884daf3a-3213-48c9-837f-347aa01bf83c",
        "cursor": {
          "ref": "ba693f12-76b0-49ab-9834-dcf181a8f224",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "60a16d35-83af-4ae6-8932-6d8740e7b588"
        },
        "item": {
          "id": "884daf3a-3213-48c9-837f-347aa01bf83c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4213af4a-eb49-4f21-a464-083b49b517d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e041c0-6077-4f2f-83d3-f91a0e491014",
        "cursor": {
          "ref": "db224b0b-5b90-4043-83ad-ec0bf8698b6e",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "5f98025b-f5fc-4538-ab33-b95d6c4e50f7"
        },
        "item": {
          "id": "71e041c0-6077-4f2f-83d3-f91a0e491014",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "577ea3e3-dfce-471e-921b-7e58c70daa6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 503,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa28cbd-5aae-4c94-9aaa-6fd2afa3f45b",
        "cursor": {
          "ref": "25b4c7ea-6371-4fd5-a430-e8702c140eab",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "674d0882-fb24-417d-ad2e-d5f52ec8f3a2"
        },
        "item": {
          "id": "daa28cbd-5aae-4c94-9aaa-6fd2afa3f45b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1f418dd5-81d0-43d7-acb8-3f18fb1cebf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca31aba0-3c1f-4e1a-af30-140b417ae47d",
        "cursor": {
          "ref": "8f3568e4-6053-45e9-bb1a-5d2bb51e23b0",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d91db38d-ace2-43de-b4b9-2815046796eb"
        },
        "item": {
          "id": "ca31aba0-3c1f-4e1a-af30-140b417ae47d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9020ed74-93fc-46ad-bd8c-4acca7a6917e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 208,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f978d63e-5fb6-4388-89c0-7e68900aedef",
        "cursor": {
          "ref": "f2802615-32f3-4ab7-9cc4-6d7c493ed6c1",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "953a77a6-fe79-47b1-ad9d-e9d049408892"
        },
        "item": {
          "id": "f978d63e-5fb6-4388-89c0-7e68900aedef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7b769ccc-b1fd-4f14-9668-b02ed49a90c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d7567f-8694-4097-9fe0-45093c70d976",
        "cursor": {
          "ref": "e06fcb53-3471-40aa-af08-84dada0061c7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e4361223-212d-44d6-903a-e6fa89eb2218"
        },
        "item": {
          "id": "65d7567f-8694-4097-9fe0-45093c70d976",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1efb3590-c887-41cc-be5c-b1f2002f2397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80bcd5c2-8056-46b8-a02e-f6222d18a0b9",
        "cursor": {
          "ref": "46843874-32b3-4cb8-93bb-ee2e15f562f5",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d6522737-f694-4478-817f-24717e4ffb0f"
        },
        "item": {
          "id": "80bcd5c2-8056-46b8-a02e-f6222d18a0b9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9503a06e-83a2-437c-bca2-53368c74e963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7198a97e-a298-4138-b48d-f60c1f65fb22",
        "cursor": {
          "ref": "ba64ad30-84b0-4905-a329-de6ee6cbe801",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c6f2d37a-e1d0-4611-a240-fd570e696c0e"
        },
        "item": {
          "id": "7198a97e-a298-4138-b48d-f60c1f65fb22",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "2cf936c0-8b8c-4d52-bb9c-465c1472c4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf58040-f17e-4b22-a018-621a18c432f9",
        "cursor": {
          "ref": "4a7d45d8-57d1-40d2-ba3a-144b96f40a44",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fb970586-c02e-4387-b75d-91c151663970"
        },
        "item": {
          "id": "6cf58040-f17e-4b22-a018-621a18c432f9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "35b0187e-20c1-4358-85c7-0dab1a8c20d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8943365-5eb3-471c-a9d9-95dde2cc605f",
        "cursor": {
          "ref": "cde512c1-6c0a-4451-a750-d8fa6f921bab",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3182ccd6-79a2-4aae-88f6-39146ff17413"
        },
        "item": {
          "id": "b8943365-5eb3-471c-a9d9-95dde2cc605f",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0f3866a1-4090-4486-8075-8bcb3fd42d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c600348-cc14-4141-874e-a4e52d11bf34",
        "cursor": {
          "ref": "da528613-b968-476a-88b5-f8653fc3959f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "864a6ca4-ffbc-4f02-9dab-6d9748eb5f88"
        },
        "item": {
          "id": "7c600348-cc14-4141-874e-a4e52d11bf34",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "64ee13ff-d4a5-4490-a933-01afabd3d8bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c34273-be2c-441c-be3c-8feaff0d4f6e",
        "cursor": {
          "ref": "0395fb80-da6e-439c-b490-fd34819f7a42",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b0f2e9e0-dce9-4306-aa94-4fb8ff88a7e2"
        },
        "item": {
          "id": "a8c34273-be2c-441c-be3c-8feaff0d4f6e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "9870706b-57b3-4e59-ab4e-660a6db00e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "a5101e0c-c013-478b-b49e-66562b542c80",
        "cursor": {
          "ref": "9d8836cb-68f8-4f0d-a57b-0a60415c0770",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1443d773-f145-4e22-9b9a-46256516c8dc"
        },
        "item": {
          "id": "a5101e0c-c013-478b-b49e-66562b542c80",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "da820e0d-1680-4601-833a-7838e6176057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "48100afd-0f5e-47b1-bab7-a49754ea55c0",
        "cursor": {
          "ref": "2880252c-233a-407c-a1cb-23c160931bbc",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6af77242-9f23-45ad-a35b-6a6cfa5871e9"
        },
        "item": {
          "id": "48100afd-0f5e-47b1-bab7-a49754ea55c0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "951326bc-9194-4494-a626-620f919c6f65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "315b1453-cd12-4795-8992-576e0379178b",
        "cursor": {
          "ref": "bea76579-7e54-49d2-8aa8-8ef8cafd4c7f",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "45f5d4be-c4ee-46f1-80eb-9eccf781ba9b"
        },
        "item": {
          "id": "315b1453-cd12-4795-8992-576e0379178b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "143f7ef8-3771-4b53-932b-ab84ab16007a",
          "status": "Created",
          "code": 201,
          "responseTime": 4230,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "012dbfa6-5f0b-4378-8f7b-779836981f16",
        "cursor": {
          "ref": "fe3296a7-5d49-4205-8768-7a5d564695b9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0972a1dc-051f-403a-9761-7b9506ca2d16"
        },
        "item": {
          "id": "012dbfa6-5f0b-4378-8f7b-779836981f16",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3fff70e7-e390-4bbe-92e3-482da00f64df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "ccbd6a0b-e57a-47f1-a3f4-13ab36775135",
        "cursor": {
          "ref": "de677955-3cae-4a97-8bca-3e389897cb1f",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9891a20f-559e-4594-b2a5-b82849c48b35"
        },
        "item": {
          "id": "ccbd6a0b-e57a-47f1-a3f4-13ab36775135",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ef6cbc28-246e-4029-a544-7c12583237d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "9b465961-11dd-49ca-b54f-55cedc0f27ac",
        "cursor": {
          "ref": "ec5fceed-3b8c-47ac-90d3-9475655d6958",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "da252b33-62ef-43f6-af75-52406a89b824"
        },
        "item": {
          "id": "9b465961-11dd-49ca-b54f-55cedc0f27ac",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c025cac7-786e-4b39-b147-b6cb4a7ad2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88638770-b06f-4085-a98d-86fe8250f2dd",
        "cursor": {
          "ref": "ac8db960-cee4-4edf-98a4-933df6023c1b",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a5ebbed2-72d9-4544-817f-fd19975d283d"
        },
        "item": {
          "id": "88638770-b06f-4085-a98d-86fe8250f2dd",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4a375a45-8a13-482d-9d6c-62adaca9a449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e64f90ea-7994-4fd5-88c6-7b2e2005c6b6",
        "cursor": {
          "ref": "fc1826c1-162d-4c2f-a449-4706ea4220ee",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "66cfdec4-afe7-40a0-a0ca-e4c55fd5e997"
        },
        "item": {
          "id": "e64f90ea-7994-4fd5-88c6-7b2e2005c6b6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f6b84b5f-d721-4e2b-83aa-57ee6293f44b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591cbb53-296a-4021-b325-616fbb7b3b60",
        "cursor": {
          "ref": "9ee341d7-b4a2-4baf-89f1-bf7690a9116e",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "cf73635b-d684-4ff3-982a-dda54239a07e"
        },
        "item": {
          "id": "591cbb53-296a-4021-b325-616fbb7b3b60",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "67bbfe30-4f2d-4e8b-a89b-a3bf5c5942d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73354c4-c376-406b-bdda-adc7ba532825",
        "cursor": {
          "ref": "894ea1d2-a26a-42ba-a43d-a5244a77de91",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e2e2e030-dba0-4c4e-b15a-c1417bbf10e2"
        },
        "item": {
          "id": "b73354c4-c376-406b-bdda-adc7ba532825",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a6555b19-b00f-4eb7-a40a-7b529f08e23d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b1143a5-cb64-44c3-b39b-c63f518ab78d",
        "cursor": {
          "ref": "e50cdcf5-5475-4ebc-8938-513c7987ced9",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4cdbb08b-a82f-4f61-9b59-96cec6bd1506"
        },
        "item": {
          "id": "6b1143a5-cb64-44c3-b39b-c63f518ab78d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e8b0d207-3506-4df2-ba38-1ee728dbc68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e590043-b96f-493f-b2ed-e07f07b2020c",
        "cursor": {
          "ref": "d6502ee7-60e9-4945-92b8-52ef1d05d3b3",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "51cec005-3b50-4efb-9e6b-5e366d87b829"
        },
        "item": {
          "id": "3e590043-b96f-493f-b2ed-e07f07b2020c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ee9cd0bc-63e3-413d-9a72-5e7543d7e9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5259db42-a7c5-44fb-b0ac-f4afc8f09001",
        "cursor": {
          "ref": "f224fdba-c3f1-4774-8496-4fe9ed0f24cb",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6cf11760-2d2a-48ac-886f-ea91301016d2"
        },
        "item": {
          "id": "5259db42-a7c5-44fb-b0ac-f4afc8f09001",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "14ee50e9-9f7b-4f9d-a3e2-6cd3f355f2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00c0510-fb7e-4300-8b8d-5be461480213",
        "cursor": {
          "ref": "7f6ae10c-9d74-42f1-9761-ea6a0c190da0",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3ad01e18-111f-451d-8dd9-20b25afc0c86"
        },
        "item": {
          "id": "c00c0510-fb7e-4300-8b8d-5be461480213",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3b537fcc-981c-4df1-a4db-c3670f95ea24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897e85c5-042b-455b-9e8e-9580c0ff36f9",
        "cursor": {
          "ref": "67949c04-4705-4729-9521-d66192ec99ff",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6ef6c145-dfe5-45a5-aaa1-e9e4bfad49a2"
        },
        "item": {
          "id": "897e85c5-042b-455b-9e8e-9580c0ff36f9",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c0b687d4-a24e-4f93-99b3-07b17b8787ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67aedcb7-189e-4fe6-a246-ce57c2b461e6",
        "cursor": {
          "ref": "552ab210-38d8-4ab3-8d1d-b5b6e46f38be",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "80f74f3f-f8a9-437c-a416-f5cb2b7cbe72"
        },
        "item": {
          "id": "67aedcb7-189e-4fe6-a246-ce57c2b461e6",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fc87ffb2-e749-4f32-9eae-abb6fe27ac63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2834f8d9-ed55-4b85-84b6-c14c7fc5cf7c",
        "cursor": {
          "ref": "c053630f-784a-4dce-88f6-b3a894c588b7",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "addeff5e-c83d-43cb-940b-c479ac2a2b87"
        },
        "item": {
          "id": "2834f8d9-ed55-4b85-84b6-c14c7fc5cf7c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "34b9a7e9-3600-4479-b3da-44a4d583aaca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1c7095-eb5a-4f62-a80d-d41dd5a72df4",
        "cursor": {
          "ref": "f3d747c5-d0e5-4a63-a3bb-8524db0181d2",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "28daebf2-dd64-4ae5-8f5f-b08cc73ba424"
        },
        "item": {
          "id": "eb1c7095-eb5a-4f62-a80d-d41dd5a72df4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "807552b6-98ec-4822-92e9-49f451adebd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37d4af86-6dc9-4a4c-8e7d-1b54da20a0ca",
        "cursor": {
          "ref": "1267cd1f-4365-4a33-b056-169062e6f51a",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "78ec3d77-a3f2-47e4-8bcb-7a8a565c941a"
        },
        "item": {
          "id": "37d4af86-6dc9-4a4c-8e7d-1b54da20a0ca",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fb0433f9-569e-4d6c-98f9-4bd5e58e9bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8ad0b5-5270-44ae-9051-71424c04d0cd",
        "cursor": {
          "ref": "e9dc1c88-49d6-4a20-8262-97eec204d6a7",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "46e78f40-bd39-4757-b588-638aa8997faa"
        },
        "item": {
          "id": "fc8ad0b5-5270-44ae-9051-71424c04d0cd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2df78707-0945-4a8e-a051-614bc27d6f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e230ade-551d-48a6-bb08-2787dd960fec",
        "cursor": {
          "ref": "626f4d36-0513-4818-acbe-a0b90c4f5561",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7f70bd6c-a438-4f0c-b11f-7ceb7b70fd5f"
        },
        "item": {
          "id": "9e230ade-551d-48a6-bb08-2787dd960fec",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9c723450-3216-4829-9911-42ae8d795210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e16729-95c2-471c-b636-003fd6f47da2",
        "cursor": {
          "ref": "30aa5feb-74ba-4f54-a7f5-18bdb061e100",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "fa43470f-c0a2-4334-9f42-8dec86bcadda"
        },
        "item": {
          "id": "07e16729-95c2-471c-b636-003fd6f47da2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ea9b0228-81ce-490a-8735-7bd3fafc454a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f649ab42-0c88-463e-907c-679d1da24bf4",
        "cursor": {
          "ref": "fbf2a536-6625-47a0-994e-cd28a81c7fd7",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "04b150b5-bed2-490e-846e-b2678b618c3f"
        },
        "item": {
          "id": "f649ab42-0c88-463e-907c-679d1da24bf4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "05f98eb6-2f81-46cf-a9a4-902f80171483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82338251-6f25-47af-94d9-f2b7fa6ee504",
        "cursor": {
          "ref": "db281cfb-1e86-4ca1-875a-c79512d621a8",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "530fd1e5-eefa-426b-adf8-ab9de5494079"
        },
        "item": {
          "id": "82338251-6f25-47af-94d9-f2b7fa6ee504",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7a859910-73f5-4e43-9e3b-ebed23d39fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a304e3-7446-4885-9152-a59885278b27",
        "cursor": {
          "ref": "894978cb-7679-4ab9-adf2-31cc1d0113b6",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "844b8e48-c046-4215-9fc4-e1b12fc33eb5"
        },
        "item": {
          "id": "62a304e3-7446-4885-9152-a59885278b27",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e8cf4253-a5f4-4e89-b88a-0ad7bce270ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d03d7b-705f-451b-aae1-9bfdf4badf8a",
        "cursor": {
          "ref": "5984799f-fc90-4bdb-8671-f17e7b2ccdf6",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "656d0cc1-3fe4-4581-9fbc-b08ed1404fa2"
        },
        "item": {
          "id": "14d03d7b-705f-451b-aae1-9bfdf4badf8a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6b38f9f1-a2e9-49c4-a23f-6195b0a35467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e41f2bd8-379e-4f84-95bf-6994b728ce60",
        "cursor": {
          "ref": "fca7403e-d30f-4218-a9a7-9f25b8d4d199",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "f9304cf3-cf33-407c-9711-a39e51788ac6"
        },
        "item": {
          "id": "e41f2bd8-379e-4f84-95bf-6994b728ce60",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fa7a9604-991f-4579-a1fe-178d99c9bd7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09cd2145-d260-4fb0-83f1-f69a25a0b86d",
        "cursor": {
          "ref": "b86ee4e8-6409-45e8-862f-a79f14709741",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "20ba5500-5565-4211-881a-99dcc00fc3db"
        },
        "item": {
          "id": "09cd2145-d260-4fb0-83f1-f69a25a0b86d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b5a2d8da-e157-450d-874a-2414808488fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599c8e44-aab3-4d0e-9924-41f6ddf28039",
        "cursor": {
          "ref": "327645ac-80f1-472e-b19f-fad772fcde0a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9f0317e8-cba2-49e4-8a98-4414f89f674f"
        },
        "item": {
          "id": "599c8e44-aab3-4d0e-9924-41f6ddf28039",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c6958963-d79b-4133-a0f5-514328d40e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e94abb-cd54-4bc0-9047-75e00a06b128",
        "cursor": {
          "ref": "aac19864-5dac-472b-b1cb-976ca1a20a8d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fdcd4d88-7c2a-42cf-a772-4640f4ec03d0"
        },
        "item": {
          "id": "11e94abb-cd54-4bc0-9047-75e00a06b128",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "19661e0b-dc16-47d0-99a5-f140a9ca0c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c48a0be-b243-4e37-8589-fed3994065d7",
        "cursor": {
          "ref": "16fca3eb-7cc6-4522-9a51-8bef6f3a7606",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "87ab5990-5885-4646-bd31-d91ef9a7b929"
        },
        "item": {
          "id": "5c48a0be-b243-4e37-8589-fed3994065d7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b5c37e82-f030-4aac-a20a-862db5ff8a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba801ae-4991-40cf-bea4-81544dd17fec",
        "cursor": {
          "ref": "be08ec79-20d2-4a1c-9c02-b1c0970d85ba",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a874b66d-dfe4-4f0a-a301-3cd59f2192c9"
        },
        "item": {
          "id": "cba801ae-4991-40cf-bea4-81544dd17fec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "16aa0ad5-5e6d-41b5-90f1-66ea83a73a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af913158-394a-44f9-ae4f-0331f394bd83",
        "cursor": {
          "ref": "e5e5ec47-a8ad-40ca-ab45-e9bf4598ad21",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2d92963f-39dd-4045-a909-2c7cf0dcfebe"
        },
        "item": {
          "id": "af913158-394a-44f9-ae4f-0331f394bd83",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "682deee1-0e18-4ccc-bee1-f6b111d77536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5958bba3-e88f-415f-a98d-34a6bda04bdb",
        "cursor": {
          "ref": "9a530b04-5d33-4033-a964-18dd890236a7",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0f2c7349-ffc1-4197-b918-f43ab0f737b7"
        },
        "item": {
          "id": "5958bba3-e88f-415f-a98d-34a6bda04bdb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "78f39c55-af8f-4cad-9704-634f0aca0f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2928ff-a783-470e-a02f-7b3e58443e2b",
        "cursor": {
          "ref": "e046010d-0767-4918-9ba6-01400ee2a237",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bd67b809-be58-4e09-966f-ca262bcad671"
        },
        "item": {
          "id": "2c2928ff-a783-470e-a02f-7b3e58443e2b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2a047617-c2c1-4721-a600-bfce0a66196e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266c8523-1ebd-48a3-9ba3-3a5f68784a1a",
        "cursor": {
          "ref": "7b105c94-60b9-4c29-b1c3-f0471f478ace",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "c4ee97a3-04e1-4103-984e-d21b7b08be39"
        },
        "item": {
          "id": "266c8523-1ebd-48a3-9ba3-3a5f68784a1a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "30aac603-7890-4fa3-8972-dbf9447b941d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e28aebf-6350-4054-a06f-8a30799da96f",
        "cursor": {
          "ref": "e31ddd5e-67dc-43ab-856b-1e98c64b8ca8",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "facc54b1-b73c-4e82-b6d0-5596134737d6"
        },
        "item": {
          "id": "7e28aebf-6350-4054-a06f-8a30799da96f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6677a75c-4f10-4ac2-aff5-0b82d5239926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89f8f2d3-37ac-47d6-af31-40a799eb4511",
        "cursor": {
          "ref": "df23770b-90f5-41ef-bb31-415ac477e2bb",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7300493f-f208-4b5c-b550-4a56ffcf7f1e"
        },
        "item": {
          "id": "89f8f2d3-37ac-47d6-af31-40a799eb4511",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "10cc3264-be53-488b-823a-6acb85701a23",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d5b1053-666a-447b-b2de-1f8e17b03e1a",
        "cursor": {
          "ref": "4fcd9d63-4505-440e-819a-5fbb05dfcd8c",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c995a215-b139-4cae-8c8c-4ca7a95bb8ee"
        },
        "item": {
          "id": "7d5b1053-666a-447b-b2de-1f8e17b03e1a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "49def580-3433-44e1-86e2-04195e29e92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8831d5d2-3687-4104-a9a9-52f869e6caf7",
        "cursor": {
          "ref": "6eb5ebd9-3ee7-46a6-a765-92348f1a80f0",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1b51e3d2-327d-42cc-b832-9c49572bdcb1"
        },
        "item": {
          "id": "8831d5d2-3687-4104-a9a9-52f869e6caf7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8a57d8a6-4b7d-4662-889e-ba5f69704281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bace02-ec9c-4af3-9aec-69cc4a76a1ed",
        "cursor": {
          "ref": "cf867df7-5de2-451d-8bb9-6c4fb14fa1f9",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "aa070d89-a6c8-4bed-8b18-2f52aa11576b"
        },
        "item": {
          "id": "b4bace02-ec9c-4af3-9aec-69cc4a76a1ed",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1808a2de-0657-4df6-aab4-edf6a8556081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4fdf155-a95c-4a9c-a166-a1c6bb0531a2",
        "cursor": {
          "ref": "a0093e91-e416-40b6-ad60-4f775a580017",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "535d7a3c-afb1-4244-81b3-f5379a80d7ca"
        },
        "item": {
          "id": "a4fdf155-a95c-4a9c-a166-a1c6bb0531a2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "be77d218-daa5-47c2-be0b-db60a0bd1937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e035b0c8-0653-407f-83f3-358e48905bbf",
        "cursor": {
          "ref": "ae3abac3-d6cf-4fc8-b8c8-836fbd4c7cfa",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "22408983-7621-487a-903a-17102552b129"
        },
        "item": {
          "id": "e035b0c8-0653-407f-83f3-358e48905bbf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cf819ac3-2993-45fd-aa75-e17f5cfdb950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad545d2b-c13b-47d9-a65a-f4aed619fc1a",
        "cursor": {
          "ref": "775a859d-7032-4026-92a9-2b80b515b693",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5231f979-349f-4349-8759-2f3289f0f581"
        },
        "item": {
          "id": "ad545d2b-c13b-47d9-a65a-f4aed619fc1a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2bcdbabb-3306-46e1-afba-e7e73029c841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7012029b-2af9-48df-8a7b-7dee1b3ace7d",
        "cursor": {
          "ref": "6ebc3074-bfce-449f-b27c-8c7d8b2e952e",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "41755c62-11c1-4fc3-b604-4869c6fd12fc"
        },
        "item": {
          "id": "7012029b-2af9-48df-8a7b-7dee1b3ace7d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "62e297aa-b0e1-4e72-8a2d-91da8c050592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49336b16-3a45-487b-9a00-bea6d07c80df",
        "cursor": {
          "ref": "cf116364-07f8-40d9-b5af-bc9a0a96d7f2",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4879f74d-f00d-4c18-bdc6-051ef79c5a45"
        },
        "item": {
          "id": "49336b16-3a45-487b-9a00-bea6d07c80df",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5310d88c-e4dd-47ba-bf22-497138c39c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb708a3c-6fc3-423f-a71e-2f3db15f0913",
        "cursor": {
          "ref": "33be24cf-7fdb-4bfe-9819-182afc7d925e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "b0d25727-f715-437d-b23d-e3b8cde3d8be"
        },
        "item": {
          "id": "eb708a3c-6fc3-423f-a71e-2f3db15f0913",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8157f1a6-abb2-4874-ae86-077d94c6a696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0f4ff2-d043-4bfe-a506-c04e7566aa5c",
        "cursor": {
          "ref": "3332969f-e4f8-43c5-a5d3-82c7ee09f947",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f019c95e-8c2b-4d86-872e-054e3cfd820c"
        },
        "item": {
          "id": "3f0f4ff2-d043-4bfe-a506-c04e7566aa5c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9fd57e14-b1ba-40ef-a147-89e3830e331f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74871a32-9bd9-4c91-bac9-2d1948c6f0d5",
        "cursor": {
          "ref": "18051300-dac4-45a6-a814-6466f0928941",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "887a13be-deec-4e5d-8de2-60d0f8af600b"
        },
        "item": {
          "id": "74871a32-9bd9-4c91-bac9-2d1948c6f0d5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c1f36785-a2a8-4852-9d16-01d82a5928b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d1cc87-1fc7-4127-8a85-3502cc07c407",
        "cursor": {
          "ref": "ce37924d-c797-4ed8-a99f-52a5e31d8f48",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "677b1d07-d0f9-46ad-87fe-f7a7524b6fa4"
        },
        "item": {
          "id": "b2d1cc87-1fc7-4127-8a85-3502cc07c407",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f3522cd6-5afd-454d-8011-88dc49397f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477714be-f046-461d-b1d2-856f5282f8a1",
        "cursor": {
          "ref": "fefa108e-b8f5-49a8-a4e8-fa7b46ff0668",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d75d1cf5-506a-447b-b9b1-d623b8fd751f"
        },
        "item": {
          "id": "477714be-f046-461d-b1d2-856f5282f8a1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "04f132d8-f80a-44b0-9632-36e031e49e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca6f075-1d99-43c6-b21d-257e17f532db",
        "cursor": {
          "ref": "65ee890a-0812-4e96-aba7-a7fcd61a0c8e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "54113dc2-2355-492a-a8dc-318baec4e9bf"
        },
        "item": {
          "id": "aca6f075-1d99-43c6-b21d-257e17f532db",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "94cf56a3-4382-4e83-bdf8-bbe319aaa1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87674e20-a156-4c50-aa55-a1e6e69b2046",
        "cursor": {
          "ref": "e47826be-4aaa-4e20-a910-c97e9637b340",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5d67e9a2-70a9-4e16-bee0-399114bb3a65"
        },
        "item": {
          "id": "87674e20-a156-4c50-aa55-a1e6e69b2046",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f6591bac-7850-4ff2-a979-689d658d4d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0efcdfb-499f-41fd-868b-6c4ce2b1c34a",
        "cursor": {
          "ref": "e4a5eeac-89d7-4560-b2b5-e63e56c75b7c",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c5571ded-6e2d-4793-aae5-9c83e1877ee8"
        },
        "item": {
          "id": "b0efcdfb-499f-41fd-868b-6c4ce2b1c34a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c0e30b5b-baa3-4cf1-9cbd-fc202b9b4f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 178,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85e309c-5158-44d9-bff7-a4ff154b068a",
        "cursor": {
          "ref": "55852ad5-0ca0-43d6-a8f1-f407882c586a",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "98be42b4-31b4-4ba0-9b62-77f600273794"
        },
        "item": {
          "id": "d85e309c-5158-44d9-bff7-a4ff154b068a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0c2381c1-3581-4dbd-8c9c-7fa558a5b3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d0ee40-866f-4d4c-bf89-3e5b10e15a81",
        "cursor": {
          "ref": "986643bc-99a0-4f82-9823-879df5ce579d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b866c5a3-73de-4583-befc-6d1ff995091e"
        },
        "item": {
          "id": "b1d0ee40-866f-4d4c-bf89-3e5b10e15a81",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "eee1f6f2-a8ca-410c-8d16-64e0cb1ce4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6cf748-bc29-47d3-b05b-9e3b9807b8ff",
        "cursor": {
          "ref": "b340da45-82af-4ad5-9657-c7dcf080cd57",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9117266c-f95f-49ed-8e7d-2a573b372256"
        },
        "item": {
          "id": "9d6cf748-bc29-47d3-b05b-9e3b9807b8ff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "21fe833d-ffca-4233-9110-ef37258538ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c270c2f-9f36-495b-bac7-68fa230ccb24",
        "cursor": {
          "ref": "1d761491-8067-4f5d-86dd-936e7ce17ad1",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c0eaf5a4-7c3b-4dd1-86e5-c46da693234b"
        },
        "item": {
          "id": "2c270c2f-9f36-495b-bac7-68fa230ccb24",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4de4cadc-10c4-416f-946c-710f729671c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1368324-2714-4cb3-92c0-bf9a64a4f3bc",
        "cursor": {
          "ref": "d91aad8c-858b-490d-baa8-2073c1098862",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "38f1a562-bf7b-4c7f-8079-ffaed96efe12"
        },
        "item": {
          "id": "e1368324-2714-4cb3-92c0-bf9a64a4f3bc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c0e879b5-2a16-4f99-af39-3334ab6aa056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5ce6e0-eb19-4b96-8c68-8bc4b7b3a764",
        "cursor": {
          "ref": "46d177f5-091b-4b3f-8c97-efc1bd86ea7a",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "676cb068-5e74-4c6c-b61a-3498dd8e09df"
        },
        "item": {
          "id": "ce5ce6e0-eb19-4b96-8c68-8bc4b7b3a764",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "75c8f099-9566-4287-8949-1432dbd827c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699c89d9-afad-4191-b31c-72911fd38d3b",
        "cursor": {
          "ref": "1ecb21e8-78d9-4ff8-b021-55f4ab032a6f",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cb384e6d-586a-48f6-b467-47aec159092f"
        },
        "item": {
          "id": "699c89d9-afad-4191-b31c-72911fd38d3b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2655fa18-543d-47d1-a033-d92448800e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 710,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132251c6-9e54-4032-95e5-66ad48ece8c8",
        "cursor": {
          "ref": "1844138a-041f-46c9-9d34-834ebf258be7",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d0e588e6-a705-4611-ba5c-0b7128789c1e"
        },
        "item": {
          "id": "132251c6-9e54-4032-95e5-66ad48ece8c8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1be29f25-16cb-4c27-8476-7c384fb486b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6790df13-43d6-445e-a635-bf61eaf51285",
        "cursor": {
          "ref": "13accbdb-54ed-4dd5-8f6d-63f46a04f78b",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "097aeb91-606c-4d2b-ab5f-f2cb74375def"
        },
        "item": {
          "id": "6790df13-43d6-445e-a635-bf61eaf51285",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d34d8349-545e-4f66-a9ee-587465d95804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd07058-f767-4ac4-bf70-d78f982afd31",
        "cursor": {
          "ref": "4527b2ab-995d-4fdb-8903-1f7db70a0e5b",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0d1aa338-9a3c-450d-b927-225f7871cede"
        },
        "item": {
          "id": "9cd07058-f767-4ac4-bf70-d78f982afd31",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7fcf27e1-c455-46a3-b99e-967d6a0ec1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb400ffe-10ea-4553-923b-2d1c5eb26e59",
        "cursor": {
          "ref": "f76fb189-dc90-48d6-99b3-39930f1ea9fb",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "275b819a-9eec-4e63-8aaf-6f5518435978"
        },
        "item": {
          "id": "eb400ffe-10ea-4553-923b-2d1c5eb26e59",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "11b1a499-c27d-4a4b-acdb-b35f7232c76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4bb35d-70aa-413b-9bc8-6fbbcc6ae203",
        "cursor": {
          "ref": "f82be378-f3c4-4b12-85b5-4502eccbae3d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "075501df-2c3d-45fb-ae86-03f4764661db"
        },
        "item": {
          "id": "9a4bb35d-70aa-413b-9bc8-6fbbcc6ae203",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6c98f6ba-61f1-4a5d-a6c9-3acfb6daa331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d544e6-abd9-4eb1-9d32-7b91174206a7",
        "cursor": {
          "ref": "938c03a7-9da1-422d-b989-caba8e353346",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4d0b75ca-0561-4e10-bfc5-c20c8024009d"
        },
        "item": {
          "id": "c4d544e6-abd9-4eb1-9d32-7b91174206a7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0bad5fe5-a0fe-4433-8a48-a4d7f6be1b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5578b851-e2d5-4d0a-8d37-00babaeb9008",
        "cursor": {
          "ref": "1388f01d-4ea8-42af-8c97-c5ff8bb609e4",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fa1ee7f5-7a34-4dba-b98c-21b3fe3b9c60"
        },
        "item": {
          "id": "5578b851-e2d5-4d0a-8d37-00babaeb9008",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c6dda628-fcbe-4d3f-b1c0-1633e00699ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa27c65d-b32c-4e64-bd4d-9f5935cd4fda",
        "cursor": {
          "ref": "54a4bfb2-be09-487a-a7f9-67c37e2f04a0",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0711b7a6-4cc9-4f8e-984d-ca54e778cc09"
        },
        "item": {
          "id": "fa27c65d-b32c-4e64-bd4d-9f5935cd4fda",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "36a158c4-83ac-4ce0-8a23-578f31405d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b68478c7-4e89-4933-9145-b99dcc38b312",
        "cursor": {
          "ref": "fd3c537f-a9b4-4cc7-a71c-a508bf11558e",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7cc1fdc0-b549-4bf9-a403-5f0807e620a8"
        },
        "item": {
          "id": "b68478c7-4e89-4933-9145-b99dcc38b312",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "73405f35-9c11-4ee8-976d-5bfb34ad8212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5839b4-6a5d-4cb1-93b1-0120f24f8ab7",
        "cursor": {
          "ref": "6d1cfa14-d946-4c77-9490-571ca357ff6c",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0bb63af4-c945-4b20-b125-97fb8debaa22"
        },
        "item": {
          "id": "eb5839b4-6a5d-4cb1-93b1-0120f24f8ab7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d149c025-713f-4e83-9ef5-b5d8d9c0725f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1db2403-939a-419c-91ef-667d759c99e7",
        "cursor": {
          "ref": "d3631663-0b13-4b82-8fcc-248499c4181c",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "51faf9cf-5c1a-4886-a053-c208bcd4c788"
        },
        "item": {
          "id": "b1db2403-939a-419c-91ef-667d759c99e7",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1918c8b9-30a4-4829-97f9-78927ce0210c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0857cf4a-f03e-4dde-addb-dbcd685782bd",
        "cursor": {
          "ref": "1a30c61d-0a82-4e92-b8bd-c28c8b8626de",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a635327f-54df-4bc9-ae95-f8389f49d885"
        },
        "item": {
          "id": "0857cf4a-f03e-4dde-addb-dbcd685782bd",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7c37b2e0-6ad3-46ec-b1b1-f9e6a8906daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0be3177b-3b46-4372-8fc8-ad75f29c6c64",
        "cursor": {
          "ref": "39d89183-1bfe-4bb3-a14a-9eb1a3f69e09",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d139282b-04b6-4ed7-b728-be1fa26c18fd"
        },
        "item": {
          "id": "0be3177b-3b46-4372-8fc8-ad75f29c6c64",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fa16099b-8159-4012-9c72-983704ef0890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb7a53c-4d24-4788-931e-8ea47e8f0a6c",
        "cursor": {
          "ref": "6845a640-7d5a-4e90-9236-b5cae21f6075",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b2304999-1652-4621-8126-d529dddcc486"
        },
        "item": {
          "id": "5eb7a53c-4d24-4788-931e-8ea47e8f0a6c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0e4691e1-9ba8-4bdb-bc8a-c625bcb12c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b857086e-13b0-486e-bcf0-247debc94f0f",
        "cursor": {
          "ref": "5b24cd7e-899c-4b81-89bf-f2162d8ca2f2",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a82492e7-2b2f-42d0-8727-93eaba5de7da"
        },
        "item": {
          "id": "b857086e-13b0-486e-bcf0-247debc94f0f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "00ef3707-8e98-40b1-a399-40511b985520",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b060bb4-15e3-49d3-ac58-b0de4a13f0b3",
        "cursor": {
          "ref": "6e9952ac-2d3f-4709-85e2-502c706c0834",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b8b5883b-121a-4fc7-acae-5f4bc43adffc"
        },
        "item": {
          "id": "2b060bb4-15e3-49d3-ac58-b0de4a13f0b3",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3ff14283-db42-4c55-a351-c22fefd95dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3429beeb-29bc-4acf-b1af-439f8e1447d2",
        "cursor": {
          "ref": "814a925f-3f96-4098-afba-5f03c4cfe03b",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "eeba6845-5236-4e64-84f0-10eabfbea85b"
        },
        "item": {
          "id": "3429beeb-29bc-4acf-b1af-439f8e1447d2",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "230a6a20-7940-4cd7-be97-2fe9a3d86b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f2c6fb-0c55-4682-b26d-7b492e7a1266",
        "cursor": {
          "ref": "1f434b1d-3d92-4920-ae38-d35d16985932",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3caa2aea-ab0d-4726-a74a-7300a47f361e"
        },
        "item": {
          "id": "f1f2c6fb-0c55-4682-b26d-7b492e7a1266",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c7e47566-b876-492d-b923-a0be16b5d4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45aaaec3-b845-4225-8644-b1fa7286b1a4",
        "cursor": {
          "ref": "2f887c42-0599-4b0e-bcb3-4fd488b5db28",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6ca9afb2-c763-498a-90e8-c140e82dc6ed"
        },
        "item": {
          "id": "45aaaec3-b845-4225-8644-b1fa7286b1a4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3bf9b134-4de6-4c0c-98a0-906cc947d76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f55fac2-e903-4ff8-9958-e27725bd4c7b",
        "cursor": {
          "ref": "e35ae9a0-199c-4831-ad07-05fc9d8d0ac5",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "eb81cb72-9c95-41f6-99a6-af5a16b78110"
        },
        "item": {
          "id": "1f55fac2-e903-4ff8-9958-e27725bd4c7b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "913ccf82-483d-4f5b-87d5-42c959cabcae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c43e3a2-2594-4f05-8f5a-c0499fe05a2e",
        "cursor": {
          "ref": "a11aab07-fc4f-43c2-b498-9183089447bc",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a169fe59-ec4f-4cef-a768-76f2df5ba36b"
        },
        "item": {
          "id": "2c43e3a2-2594-4f05-8f5a-c0499fe05a2e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "664ef0d1-f925-4314-8566-38f6e2d70d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a56242-d4b0-4f35-87fc-fe0e595c011f",
        "cursor": {
          "ref": "8ae95339-4124-4a07-b27e-90bd16b4238d",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d8950a12-a263-4694-ac89-0f6280bf9b39"
        },
        "item": {
          "id": "f3a56242-d4b0-4f35-87fc-fe0e595c011f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a8978523-e9bd-4a70-a8a6-3ea84a948fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09fccec-8036-418a-a5f2-44b9cc8f61d0",
        "cursor": {
          "ref": "74fde869-c956-4ec8-99ab-0117523fff22",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0279ffcc-b060-484c-86bd-7021feffb2fb"
        },
        "item": {
          "id": "c09fccec-8036-418a-a5f2-44b9cc8f61d0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8df788a6-0cf3-4e15-b940-bf790925bffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428ea3e3-92bd-479e-ac45-ae28f37dc38b",
        "cursor": {
          "ref": "38eb9b8a-0713-4ee8-a019-e64dc7e10481",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b92e1d44-93b2-4037-9fa8-18df4f644967"
        },
        "item": {
          "id": "428ea3e3-92bd-479e-ac45-ae28f37dc38b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dfd99adc-6694-413c-b3af-57e302277616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc1dfc82-07d2-4115-99ba-7196bb9c5bd6",
        "cursor": {
          "ref": "533fb49e-5ccb-4ba4-9024-968f4f4d569f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e26a78b0-27f8-49c1-8ee8-7c56f61e64c2"
        },
        "item": {
          "id": "fc1dfc82-07d2-4115-99ba-7196bb9c5bd6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "88d39e8d-4778-44ae-a80c-b9b127366573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0336bcb-8a2c-4b05-ab98-e6f41e2cb2ad",
        "cursor": {
          "ref": "309a5939-f6fe-41ff-8bb1-45e6618cde6c",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fd9b5647-e3c7-4610-a924-9c07e8f9f18c"
        },
        "item": {
          "id": "b0336bcb-8a2c-4b05-ab98-e6f41e2cb2ad",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ca9ac69c-2e66-414d-9524-7bb5a1f365d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a834b518-c1ef-4e1e-a33e-cf649bd3e965",
        "cursor": {
          "ref": "e4e225e0-d33a-4b12-9c45-5532fa378515",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "57cb529c-bbdf-485d-805d-1fc52ba0f289"
        },
        "item": {
          "id": "a834b518-c1ef-4e1e-a33e-cf649bd3e965",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "492489fb-9556-4b41-b59c-b7bc0d82a8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfd51fa-fa77-42a6-a5e1-1de9d65a4daf",
        "cursor": {
          "ref": "9942eebe-6c3c-468e-ad5f-cf9c32138542",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8f25b520-667d-40c4-b6e8-8bbe5e7c63c8"
        },
        "item": {
          "id": "1cfd51fa-fa77-42a6-a5e1-1de9d65a4daf",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "7ee92d00-d357-451c-be73-233402668d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3e4fd7-7b84-492e-832c-d3e3587f66e6",
        "cursor": {
          "ref": "3ad80289-76ea-4fbc-80ef-8ee091f49eb5",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "515b1ef1-4d7c-46a2-88ad-dd7d33287491"
        },
        "item": {
          "id": "1e3e4fd7-7b84-492e-832c-d3e3587f66e6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f3b76248-4444-42d5-adba-76e74dda6b83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d81111-9d99-4b20-8f30-f69310cbf76e",
        "cursor": {
          "ref": "3f551ceb-ee0c-44c9-992b-1a2e3cd0894e",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0cc202c7-ff72-4327-a10f-b78fa90c33b6"
        },
        "item": {
          "id": "12d81111-9d99-4b20-8f30-f69310cbf76e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ef45f99a-3175-423c-ad59-f1a50391c02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9b8670-e1c6-4e23-8777-de364a8cde5f",
        "cursor": {
          "ref": "2ca110d4-4cab-4bfd-90e1-c656249476c2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4612eafd-5a2f-48c3-807a-fb29f186704e"
        },
        "item": {
          "id": "8f9b8670-e1c6-4e23-8777-de364a8cde5f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c1509467-a4c2-4b18-989c-eb419cf157ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d12557-9704-4b11-a21d-bae156af5001",
        "cursor": {
          "ref": "ddc01d5e-7a66-44b5-aa8a-15f6e5448f1b",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "e473a43e-3e43-40b6-b373-4be72dff1641"
        },
        "item": {
          "id": "d7d12557-9704-4b11-a21d-bae156af5001",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c475624c-8537-411d-8c30-4784ef42cebd",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "b30b0fae-092b-4ec1-9339-ae7b58b38f17",
        "cursor": {
          "ref": "f3aaecac-80bf-4119-bc35-dd7205e5814c",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "16df78bc-700e-4315-a50f-3fc3f330baa6"
        },
        "item": {
          "id": "b30b0fae-092b-4ec1-9339-ae7b58b38f17",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "fd5168c5-0bff-4d45-beca-ccb591e315c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df3aa6a-dcf7-4062-a325-e1aef86ccb9f",
        "cursor": {
          "ref": "053eec7d-a314-42c0-91ad-36d40f1290ed",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "df781424-9b91-42d2-bad8-0f166ca42549"
        },
        "item": {
          "id": "6df3aa6a-dcf7-4062-a325-e1aef86ccb9f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d0d4e663-56e6-419a-bfb3-d294bdc484d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673f20ce-d9c1-4104-a6ee-f1f16070628d",
        "cursor": {
          "ref": "83fd6fa7-2f5f-4543-bbe2-19542d17be96",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9dede161-fe62-45b9-9f06-ce61ea27fc84"
        },
        "item": {
          "id": "673f20ce-d9c1-4104-a6ee-f1f16070628d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3d11b7fe-5c89-4ac7-9532-2ae6f78ec020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbee863c-7bd4-4af1-a81e-bd8db19e42ad",
        "cursor": {
          "ref": "cd530652-2524-451e-895d-0d730f3fbdf0",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d9649cec-73b5-4e87-b566-a684334c51ac"
        },
        "item": {
          "id": "dbee863c-7bd4-4af1-a81e-bd8db19e42ad",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "42c0afb4-97a4-41f8-b24f-55be32c3c9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "270a0970-01a2-4bc4-a1bb-96094081bc59",
        "cursor": {
          "ref": "d2b9eaea-542c-47dd-a741-2e6eb88768d8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4f72d7c2-85cb-424f-a1cc-4dcc39b30809"
        },
        "item": {
          "id": "270a0970-01a2-4bc4-a1bb-96094081bc59",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "422ec0ac-65c8-4835-ac8b-ef557a6a6083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc269f51-e88c-42a1-955f-29fc3e12df01",
        "cursor": {
          "ref": "3fac4449-1e04-4a05-999c-e271ac3f1c2a",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a7a9a5c1-6377-428c-b747-e4dc0da9072b"
        },
        "item": {
          "id": "bc269f51-e88c-42a1-955f-29fc3e12df01",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1c827d58-6cfa-4289-8080-738b9053e234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f8faab-92ae-4eaa-bf97-ba377c8175a4",
        "cursor": {
          "ref": "cddf4d91-c733-4b07-8866-3524e0a602ac",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fae51377-e19d-4bac-acab-40277267b9e3"
        },
        "item": {
          "id": "14f8faab-92ae-4eaa-bf97-ba377c8175a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "09078793-ee68-474a-a238-ade6fbde7e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e4b059-045c-40b6-a3c2-60b362db2b73",
        "cursor": {
          "ref": "701f27cc-76af-434d-bfc3-1bcea58a6715",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2cc7ec11-2be7-44fd-b942-2ba2b0fc26e5"
        },
        "item": {
          "id": "55e4b059-045c-40b6-a3c2-60b362db2b73",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d14b89a1-24c0-4150-b34a-da9980594938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfddcd3-bf97-43f5-8641-036bbafd15ec",
        "cursor": {
          "ref": "469f9291-d367-4288-a414-5d2a8e7cd4f2",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5a016000-77f4-4028-a3ea-85d5c2d3522f"
        },
        "item": {
          "id": "bdfddcd3-bf97-43f5-8641-036bbafd15ec",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "59c029af-6fa6-49dc-9ac7-33e1628ea7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a387230-72bf-434a-98ec-20e2e773c4dd",
        "cursor": {
          "ref": "9ef879cf-723e-4782-85bd-4b15cc3ffbe1",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8650b6a7-7332-476b-827e-21796c8128c3"
        },
        "item": {
          "id": "5a387230-72bf-434a-98ec-20e2e773c4dd",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a395f228-4072-434d-8916-bcf2d88c4439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0833f99f-9cdb-4f1c-9275-799561d35c53",
        "cursor": {
          "ref": "e0cfd47f-ab33-4772-a7ee-da0c365dae61",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3f54f34e-91bd-46ef-9b31-f4eeb538e214"
        },
        "item": {
          "id": "0833f99f-9cdb-4f1c-9275-799561d35c53",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3c61a9a4-14c1-4379-a868-175008694397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3f256a-7efa-4f3b-87a0-f5280b04f7a8",
        "cursor": {
          "ref": "4e56c361-5eee-436d-966a-a976634de075",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5d1f7a3b-c803-4811-8be5-3e2824b76460"
        },
        "item": {
          "id": "2d3f256a-7efa-4f3b-87a0-f5280b04f7a8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5a8204f5-8b15-49dc-95da-5b527e302049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3980a1da-a4a7-4dd7-92a4-7bc9ddf318f0",
        "cursor": {
          "ref": "c5c5bec6-7355-4a06-a099-cf281c40b27b",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "99e8d944-8c5e-48b7-9242-26d84a1cd845"
        },
        "item": {
          "id": "3980a1da-a4a7-4dd7-92a4-7bc9ddf318f0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6bf30fe6-646b-4c24-87b3-c2b426129668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d19664e-b0e0-4a0a-8e5a-d1564db81b8a",
        "cursor": {
          "ref": "72544ed3-6d79-4aac-8396-1637988e4dba",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3e7c615e-5c26-46db-82a3-a564731df15e"
        },
        "item": {
          "id": "4d19664e-b0e0-4a0a-8e5a-d1564db81b8a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "cb67074b-98d4-4d76-9b0d-916c86a91d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc13f456-9081-4378-ace3-ebd9cff19d73",
        "cursor": {
          "ref": "68f81fac-1e5d-47c8-828b-d32ccd10c182",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "8f646b1f-2fce-417e-ac4e-db5ba27df154"
        },
        "item": {
          "id": "dc13f456-9081-4378-ace3-ebd9cff19d73",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d8051427-46ff-4fa0-a94f-2eee2ed214cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad48bf9-edaa-4451-ab52-fce382a184ee",
        "cursor": {
          "ref": "545a60dd-4a3e-402e-9521-e1c0d39cf7a6",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2234c1fe-c371-4f03-84a7-d432678a7542"
        },
        "item": {
          "id": "2ad48bf9-edaa-4451-ab52-fce382a184ee",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9358c82d-e6d3-4405-ae54-1fe3add242a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ca5c3e-2102-4d7e-8fac-26dffd9bafce",
        "cursor": {
          "ref": "9cb85a1b-0079-4852-ba23-1bc0f09bc06a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "c962b93a-58d6-4579-8926-604c66fa52b7"
        },
        "item": {
          "id": "41ca5c3e-2102-4d7e-8fac-26dffd9bafce",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "addfa186-0900-4279-9977-d8373253a55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54263ada-20d3-4a02-8812-65e2d6d40f4c",
        "cursor": {
          "ref": "14c35f8d-a599-43ea-b889-90bb423328b2",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "120885eb-23f1-4aeb-8f26-3e2d251b3acd"
        },
        "item": {
          "id": "54263ada-20d3-4a02-8812-65e2d6d40f4c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fca29c9d-c4ba-4db0-85c7-779346a284fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45b753f3-63a1-4641-a8c8-8ecaaa62c38e",
        "cursor": {
          "ref": "240f84a6-a8b0-4fa8-99eb-761428a7bfb8",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "de6497ba-13fa-4222-aaed-d8f3367b15e6"
        },
        "item": {
          "id": "45b753f3-63a1-4641-a8c8-8ecaaa62c38e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f541edf8-83e6-4a47-ab45-a5eddb4e7f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c11b9c2-e3d5-4ff5-b487-93ceba5697ed",
        "cursor": {
          "ref": "61479045-f7f0-49d8-8ad1-b5f701d2416b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4186adbb-bfe3-474b-b626-5d37e2403e01"
        },
        "item": {
          "id": "0c11b9c2-e3d5-4ff5-b487-93ceba5697ed",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "49a89d86-034e-482d-9900-7e3b767ff819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13527a95-903e-4d6e-b231-9780a52d05cd",
        "cursor": {
          "ref": "8abf452f-f3f4-438d-998a-1e48dacb7054",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3954dd75-d313-465e-8b45-92a3fd2caeb4"
        },
        "item": {
          "id": "13527a95-903e-4d6e-b231-9780a52d05cd",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "79179b63-bf18-4b1d-99ff-ad66dca535fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d596d7e5-a554-4996-8b78-3bfe952690c7",
        "cursor": {
          "ref": "305305be-74f6-40e8-923a-e61d8134863f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a787273d-6b9f-43bd-90be-3eb2c9dba6ad"
        },
        "item": {
          "id": "d596d7e5-a554-4996-8b78-3bfe952690c7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4c9761a2-19db-4856-a6d6-e5f6ad22727f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ca19d6-c246-4ecd-a3d8-ae1c5b7cfd59",
        "cursor": {
          "ref": "1fd9588f-a753-4fc1-b5fb-a04528eb5b48",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "af520c32-e6ff-4949-9782-47be3d6d09a9"
        },
        "item": {
          "id": "70ca19d6-c246-4ecd-a3d8-ae1c5b7cfd59",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f003f987-bdfa-429a-80e6-c74be3ed6a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bee2e12-bdc1-434e-a019-5a2d09997fb5",
        "cursor": {
          "ref": "d922342a-8150-409c-93c8-75701e8529ec",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d36c9892-6d7d-432a-8a51-013b212fd726"
        },
        "item": {
          "id": "4bee2e12-bdc1-434e-a019-5a2d09997fb5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fa3c42ab-eda9-4935-9307-a243818e1d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85201b14-e640-41cd-a476-221c781ead2e",
        "cursor": {
          "ref": "6ae86913-bf44-450f-beff-31fe59e92f05",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c3d1a19e-b814-4efe-b8ad-571095b91f35"
        },
        "item": {
          "id": "85201b14-e640-41cd-a476-221c781ead2e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7c76eb1c-abcc-4d97-b0a7-dd14bfec3fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd38ff7-3ee2-437f-81b1-ce439e6197f4",
        "cursor": {
          "ref": "19d6981e-0815-4e70-9057-519912db5658",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2ceba954-1ea1-4268-9d4b-e6d5c5e37f7e"
        },
        "item": {
          "id": "5bd38ff7-3ee2-437f-81b1-ce439e6197f4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df58293f-27dd-4992-9ebb-e2c289c79e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386c9a95-5219-465f-818d-8d06b0dc8b64",
        "cursor": {
          "ref": "53108bd4-ea45-4d89-831b-38f7d84d5eb7",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7c5311d6-021f-4fe2-8c16-685775e6543d"
        },
        "item": {
          "id": "386c9a95-5219-465f-818d-8d06b0dc8b64",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "7e0b78b0-459f-4ee9-bcd1-37bc5237ff0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88fc418-0c0c-4a78-946b-cf9d638b1d2e",
        "cursor": {
          "ref": "19e4be4d-6a6f-4185-81c8-a16a347a1a62",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a369fe50-6ac8-4059-bbed-93b87b211d46"
        },
        "item": {
          "id": "d88fc418-0c0c-4a78-946b-cf9d638b1d2e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f5a11336-1a34-4c1b-b939-24bd97edabba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ac3de3-478e-4e34-ac35-a54c37c10438",
        "cursor": {
          "ref": "546e1f17-ef01-4b91-846c-c9e67a793b54",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "eaa9b453-1860-4efd-a6a5-85d6b58bb487"
        },
        "item": {
          "id": "12ac3de3-478e-4e34-ac35-a54c37c10438",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "143f7d70-db11-49cc-84b5-fe39fa4161e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "684494db-ce23-4a32-bc83-1dcc809742ae",
        "cursor": {
          "ref": "d8ecc95b-383a-46aa-a5a8-9a5b412bc151",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e0804e69-acf0-4a5e-a371-bfe677d3350f"
        },
        "item": {
          "id": "684494db-ce23-4a32-bc83-1dcc809742ae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "359b7d65-dfa9-4755-aef4-e13e56b24159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1dd87da-d021-4a1a-a58c-c8465d04ea4d",
        "cursor": {
          "ref": "f828221e-fc7d-43c7-b7ff-00ba4f365bcf",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5ceeb61e-f1c8-413c-ad7a-df7fffc59f0d"
        },
        "item": {
          "id": "a1dd87da-d021-4a1a-a58c-c8465d04ea4d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5790e9be-546d-49bd-8722-fa3ecdbedbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a1afb5-2eff-498e-bf9e-f5bf39afbd68",
        "cursor": {
          "ref": "c8c8ecd4-9e72-4aca-815a-553363d3584e",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "face2209-1995-45b2-b898-96a7b99174a3"
        },
        "item": {
          "id": "25a1afb5-2eff-498e-bf9e-f5bf39afbd68",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "1cbb013b-718c-4ea6-a101-08e8785d013b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53caff2-80f8-492b-b52c-1e92aba82972",
        "cursor": {
          "ref": "270b7581-0676-4626-a173-dae10c3adf27",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "599cf5ae-ebae-4e16-bd80-248ce7acde4f"
        },
        "item": {
          "id": "b53caff2-80f8-492b-b52c-1e92aba82972",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8fba6bf8-0343-4dac-816d-8abb9e34f7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e26fc462-d494-41c4-988b-fc1781149839",
        "cursor": {
          "ref": "e308c6b2-1856-4754-94f7-c7d541755bac",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d63293ab-5562-4d98-b6c4-e88a79b5a0ce"
        },
        "item": {
          "id": "e26fc462-d494-41c4-988b-fc1781149839",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "6e2e3017-0af3-462e-bff7-b9c830be9525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e02877-98bd-415e-a35b-ebfe67814def",
        "cursor": {
          "ref": "714462d4-4b57-4160-9ae6-f87184ebd15a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2e73cf30-d151-48a5-a81a-fb545577aeab"
        },
        "item": {
          "id": "b8e02877-98bd-415e-a35b-ebfe67814def",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a5e1c906-7801-4682-80e8-2f0b18889457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9757edba-9491-4bc0-b91b-8f6d3a912395",
        "cursor": {
          "ref": "d981e297-a5ef-44f8-8a32-b9f189f94a06",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c33d53e7-0a31-45c6-b29f-0ecd22f74d52"
        },
        "item": {
          "id": "9757edba-9491-4bc0-b91b-8f6d3a912395",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "5f973b22-19f1-4411-92cb-9b96ad6136cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c13d80-94a3-4655-b5d8-47d8213890ea",
        "cursor": {
          "ref": "251ca4ab-8a8d-4f7b-bdfd-2978f25cbdab",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "31d0ab0c-a382-48c3-a370-efc17262376a"
        },
        "item": {
          "id": "78c13d80-94a3-4655-b5d8-47d8213890ea",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0287ed41-d1c6-44ad-b0dc-4d4c535abc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05ac03d0-b184-4792-95e7-9a312d903455",
        "cursor": {
          "ref": "a673e889-fc18-48be-b6c6-b1420605b854",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0fde1653-a62b-4ace-a836-fc1b67a8f70e"
        },
        "item": {
          "id": "05ac03d0-b184-4792-95e7-9a312d903455",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0b475e15-7854-4aa9-890d-c359cc4799dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc34dc2e-c5b2-4df4-99bb-3f71a2859421",
        "cursor": {
          "ref": "10c1ee9d-0cca-46ae-ae7f-24ee6dc43dcd",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7cc92d5d-327f-4668-b94a-91cd1c51bd4a"
        },
        "item": {
          "id": "bc34dc2e-c5b2-4df4-99bb-3f71a2859421",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "9c55e3db-b9cc-4546-9623-232028bd963a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd654b43-9e4e-4971-8665-f032626a024d",
        "cursor": {
          "ref": "e259c2cd-f49d-43a2-85d3-84201bcb9405",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f4c6053a-e040-4a74-b3bb-4fc904d27160"
        },
        "item": {
          "id": "bd654b43-9e4e-4971-8665-f032626a024d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "df9f4caf-bc3b-4632-8034-c0f89fa47c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e528c27-69ed-4470-9bb3-7d78d3545f78",
        "cursor": {
          "ref": "c747581e-e67f-4704-a0a2-7aea66c35320",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7e28bc68-43ca-43e1-a8ef-fbb6f08b7ea1"
        },
        "item": {
          "id": "0e528c27-69ed-4470-9bb3-7d78d3545f78",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b11dca82-48d6-4875-8793-e462f24fd819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8dc0b9-e096-4300-9886-e1be805311a0",
        "cursor": {
          "ref": "775a18ae-ab44-4d97-9d3c-b726cea96640",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "28d98ff6-6759-44ed-941c-9999a2957422"
        },
        "item": {
          "id": "bf8dc0b9-e096-4300-9886-e1be805311a0",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9419375b-ac02-43ba-a5ab-c41fddda0f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be0272a-d788-4ae8-a839-c04e2b69460c",
        "cursor": {
          "ref": "eab06899-004a-4e08-a352-9ab0d81383f0",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "81f634fb-4a86-42fa-805e-fcea41e9c804"
        },
        "item": {
          "id": "3be0272a-d788-4ae8-a839-c04e2b69460c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c11a1900-cb74-40b7-bd70-e7712ceb85e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4220b121-612e-4e2b-81e2-67115fd7a305",
        "cursor": {
          "ref": "0086ada5-c092-4e7e-9cd1-31c144217afe",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ca28dc41-c1df-450b-a440-3cbafeecded5"
        },
        "item": {
          "id": "4220b121-612e-4e2b-81e2-67115fd7a305",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5598ea28-b04f-49b7-b02f-fac51f6b4036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c70e0d9-2304-4066-9d16-572ebd56d134",
        "cursor": {
          "ref": "8379db6a-0528-4936-945f-e249005c7ada",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0483c759-d401-4e4d-b035-1e8d66e6fe46"
        },
        "item": {
          "id": "1c70e0d9-2304-4066-9d16-572ebd56d134",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "8aca890d-1c3a-4d2e-b428-5db6aae24aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1028f5-8023-4bac-a962-fa6fc85bca7f",
        "cursor": {
          "ref": "f314a338-4114-409b-8788-6cfceda41ff8",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b55e332f-132c-4c7d-83a4-3b916ec34c97"
        },
        "item": {
          "id": "0c1028f5-8023-4bac-a962-fa6fc85bca7f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "30da0933-87ab-4a65-9c32-85643dd68b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da26cda-6161-4b0e-95a2-de2b3f8cf708",
        "cursor": {
          "ref": "745f6fbc-b27b-4bf0-a63b-c5bdb228d542",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4d779ec2-3429-45d6-9cea-edc98d9c3150"
        },
        "item": {
          "id": "9da26cda-6161-4b0e-95a2-de2b3f8cf708",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c64b92d0-c651-472d-9c26-10a9053d3fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2973723d-f2c0-4132-ab75-c685ff272905",
        "cursor": {
          "ref": "ea837fbb-fe08-4393-9661-a0fe7f54a47b",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6adedfd8-beda-452e-9c68-b69a7d46af53"
        },
        "item": {
          "id": "2973723d-f2c0-4132-ab75-c685ff272905",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b0aec2b3-8c1e-4f86-9231-c9b30195d163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b74da4-cd2c-403b-87ac-6c57465f4c69",
        "cursor": {
          "ref": "e53574ba-6a72-473c-900d-ee3afdf86bc6",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f2e8bec2-e8df-4c54-8f68-ac133121427e"
        },
        "item": {
          "id": "51b74da4-cd2c-403b-87ac-6c57465f4c69",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "557651e8-8366-4610-a218-767203337b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcc0202-4463-41d9-9c0b-eea5bc7b2c45",
        "cursor": {
          "ref": "f269bf2a-1966-4006-8511-a295e061fd1e",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e603f34d-73b8-4cf2-8f1b-e69044ed5d35"
        },
        "item": {
          "id": "2bcc0202-4463-41d9-9c0b-eea5bc7b2c45",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "260efce7-69e0-4ed1-a3b3-68d24697b4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e4a427-7a9e-4f1d-803c-cffd80342434",
        "cursor": {
          "ref": "48b64bd8-2b03-4bec-9544-c7184806dc3b",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e7075fea-5c19-489a-9b71-64f9588774fa"
        },
        "item": {
          "id": "06e4a427-7a9e-4f1d-803c-cffd80342434",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "045b326d-4984-4b82-8e53-d8b9d99422b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3b6357-2efe-4a34-8b12-53f6cfb55015",
        "cursor": {
          "ref": "1e8f7d8e-89c0-48d7-b15a-5f4c1256069f",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d6abe19e-1f9b-47bd-93c5-286f733d3bec"
        },
        "item": {
          "id": "bc3b6357-2efe-4a34-8b12-53f6cfb55015",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b21ed2bf-db55-4237-9ba1-c99459ac2b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8816dd4-abe2-419d-a0b5-4728b9171525",
        "cursor": {
          "ref": "17a95352-d211-41db-a036-8703b7f7d1a4",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "10346348-6e2b-49ef-92a8-3353544d5512"
        },
        "item": {
          "id": "d8816dd4-abe2-419d-a0b5-4728b9171525",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "facebebc-7cf7-4100-9b7a-e348d34e68fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775056ad-9f95-42ae-af4d-7c4ffa8aa457",
        "cursor": {
          "ref": "880abd0c-fd67-4a67-9200-e1d6e404f034",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "95c7de29-e328-4622-abf7-28bb01628122"
        },
        "item": {
          "id": "775056ad-9f95-42ae-af4d-7c4ffa8aa457",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1f75720d-b4ed-4965-bfd8-6bc91009200d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ef9a64-e4bb-49a0-9496-007e80bea07c",
        "cursor": {
          "ref": "836b8432-6d01-4866-a182-5a40b0634b8f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ffa45d00-f924-4616-b979-f3288b193801"
        },
        "item": {
          "id": "34ef9a64-e4bb-49a0-9496-007e80bea07c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "02b1a4bd-85fc-458c-966d-d92db79f1744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98fe127-3b75-4051-be14-78f9bbafe809",
        "cursor": {
          "ref": "e4d702e3-977d-46e9-9429-85f453dd7a24",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5b19ccf1-5296-46e3-8abb-c3c93a9b6ab9"
        },
        "item": {
          "id": "a98fe127-3b75-4051-be14-78f9bbafe809",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "21bf0d8d-508c-45c4-9da8-2af28d1ca951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015dfc12-6dec-43de-8aba-589df97af5e8",
        "cursor": {
          "ref": "a558a5b7-d46b-491e-aca9-aa01f465eb72",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a37ec872-5754-4906-bc5a-72e9967472a7"
        },
        "item": {
          "id": "015dfc12-6dec-43de-8aba-589df97af5e8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6efd0c71-7b33-4040-b855-1b52f9eb5475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1253bf2d-b56b-4067-a109-f12e25e9beaa",
        "cursor": {
          "ref": "af8612e4-ac71-44b5-931d-1ca258f1875e",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3c0e0518-fe32-4f00-97dc-ae51e6e3285d"
        },
        "item": {
          "id": "1253bf2d-b56b-4067-a109-f12e25e9beaa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "06fe41b3-d165-41a6-8d00-3d9128b988dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbb9e59-52a3-4fe8-af48-c7f5a9506dfc",
        "cursor": {
          "ref": "a5db3c00-caa8-4da8-a76c-360cb60d76ee",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "eae4ac7a-16ed-48e1-8a6d-7cc46c70f7f3"
        },
        "item": {
          "id": "ccbb9e59-52a3-4fe8-af48-c7f5a9506dfc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "9539aa8b-d672-4be0-ba2b-df97e2ff345a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de786f43-9947-4067-b694-d4ce0a6e5f69",
        "cursor": {
          "ref": "3eb2d4b6-d7da-4176-ad72-b6dc76eb0523",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "86133609-8905-4102-841e-a221d2025865"
        },
        "item": {
          "id": "de786f43-9947-4067-b694-d4ce0a6e5f69",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "71379446-885c-4eca-b672-810c074e1650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46c48be-f04d-4b2e-90ba-c8e0580d87ac",
        "cursor": {
          "ref": "b24d81bc-2db7-4ba9-b1f7-125b51b07ad9",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "939e4b18-534c-467d-ad6f-2c2b20ec50e8"
        },
        "item": {
          "id": "a46c48be-f04d-4b2e-90ba-c8e0580d87ac",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "da75156e-2b8a-41b6-899b-f283ad42d489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ea47ca-be4c-47fd-b35f-1e8603ed2637",
        "cursor": {
          "ref": "86c91137-cf56-4732-ad40-704072867758",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "168cb989-c2e3-47e1-a62e-10f6fc93c4c2"
        },
        "item": {
          "id": "21ea47ca-be4c-47fd-b35f-1e8603ed2637",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "88dbd768-8cce-4b93-8842-33158263f5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499c5173-dfb1-4843-89ac-dcc135c1e8ad",
        "cursor": {
          "ref": "03334220-4649-4ee4-a12a-2ff31debae9a",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9f14ac24-a37f-41ca-9a50-ac4f664312cc"
        },
        "item": {
          "id": "499c5173-dfb1-4843-89ac-dcc135c1e8ad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a37c68d0-2e82-4ad4-b2bd-377c9259e844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a938151b-4888-4e4c-9a53-8d17e00b76e4",
        "cursor": {
          "ref": "7dbad218-e744-4a7d-b700-f3479ca49295",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "4d3f999d-3ea1-4f38-b1dc-3817a05c29e6"
        },
        "item": {
          "id": "a938151b-4888-4e4c-9a53-8d17e00b76e4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aac87f48-5576-40e9-84dc-577af0f2f4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee34bb7-0efb-4916-8965-36d00695985c",
        "cursor": {
          "ref": "86618652-7143-44dd-a46e-39eb29446a25",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e8465db2-9859-4355-8463-b846f4918f6c"
        },
        "item": {
          "id": "8ee34bb7-0efb-4916-8965-36d00695985c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ef7ac578-661e-4fad-9df9-5864a48e3078",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a588bae-fce1-4ded-acef-c856b680158e",
        "cursor": {
          "ref": "c680fdfb-0ea3-46d5-8532-c01d751ccd11",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f758ccf2-630f-4db9-9e74-3120c1a795f1"
        },
        "item": {
          "id": "4a588bae-fce1-4ded-acef-c856b680158e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ff4e0f53-be4f-4bcd-9df8-cd2c45145c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7886cb5b-4d96-4286-b440-84b1f015247a",
        "cursor": {
          "ref": "207343c5-eff5-4df0-a805-840fc0d3f2e3",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5c337325-4f32-4c44-9c1c-7836ef749727"
        },
        "item": {
          "id": "7886cb5b-4d96-4286-b440-84b1f015247a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f28ec4e3-bdf5-47c8-9d5f-552e6a943cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb8a926-edd7-4f26-a3a0-a3681ee1d189",
        "cursor": {
          "ref": "2d3ea1ae-9d98-4167-83e3-954a798203d0",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e9c7c5c3-8409-4ce3-9c92-1636910d8e6b"
        },
        "item": {
          "id": "bdb8a926-edd7-4f26-a3a0-a3681ee1d189",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "643c4a19-76d6-4e97-8bb4-65e97e1b860d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1260138-d257-4936-a013-ca6c19450c7a",
        "cursor": {
          "ref": "51c68cba-07ce-47d5-8130-d2a2f2ea9677",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b438bfec-708e-452f-98fc-df2e90d5a057"
        },
        "item": {
          "id": "f1260138-d257-4936-a013-ca6c19450c7a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6a366044-792c-474a-b003-d6ae8c7ee512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1a19ef-e455-466a-9590-2ab2a1420ff8",
        "cursor": {
          "ref": "9a38bfc1-5f2e-4159-8540-86062cc2a214",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "860aa812-9b71-415e-bd6e-d14876f74305"
        },
        "item": {
          "id": "4c1a19ef-e455-466a-9590-2ab2a1420ff8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b35dde2f-b087-4671-9607-67db2f580a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2885dc76-840a-46a9-96c1-f459e309b0e8",
        "cursor": {
          "ref": "568a4ac0-0d4b-4ffe-bb37-bd5e8116cdef",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9ffb74fe-e32f-4023-8069-83366022e96a"
        },
        "item": {
          "id": "2885dc76-840a-46a9-96c1-f459e309b0e8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "18ca9670-5ea0-463c-a687-1c3d05367146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9467b358-8acb-4385-9f93-63aa5419c612",
        "cursor": {
          "ref": "d31c3568-5def-4309-afb4-8157e8d45ad4",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "93bae78a-8857-4c19-b421-c7579368d679"
        },
        "item": {
          "id": "9467b358-8acb-4385-9f93-63aa5419c612",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f2143520-6cac-45c9-bdfd-836c579a932e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c13bd4-31fd-490d-bfa7-4bf67ff796b5",
        "cursor": {
          "ref": "1c2f5d7e-4b64-4f5a-befa-555906712491",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "645371c0-38a9-427d-b76e-9ff9c881c5b0"
        },
        "item": {
          "id": "12c13bd4-31fd-490d-bfa7-4bf67ff796b5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f8abb9b1-661f-43f7-823e-e71d04878d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aa3f08-9803-460b-a165-39a495b99c90",
        "cursor": {
          "ref": "0645d8ca-bdee-4190-806b-38720e3a6d4b",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "21c87a1a-7b06-49a8-8dd0-1a1393f334fc"
        },
        "item": {
          "id": "a0aa3f08-9803-460b-a165-39a495b99c90",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a7d4abb6-c6f0-4e5d-9b4c-4fae4eaa8a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f41d2b3-c9e5-4c8b-8af8-6070de680468",
        "cursor": {
          "ref": "25c0eee2-3fe5-472c-b56b-aa71f08ea6bb",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8ac310d5-cb51-4dfd-9527-e89310264372"
        },
        "item": {
          "id": "5f41d2b3-c9e5-4c8b-8af8-6070de680468",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "673d48a4-f848-4275-9c97-fa851e6f07be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf414fbb-df00-4e83-90be-3fc33e0e12c7",
        "cursor": {
          "ref": "4a07e5b6-8a5f-4d9a-bd5b-a6eb4e60d651",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "09fc9445-2bac-4a76-9284-dabaac89fb25"
        },
        "item": {
          "id": "cf414fbb-df00-4e83-90be-3fc33e0e12c7",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "20ac28a9-c203-4478-8176-ccaf19faa0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53030131-f084-4a3c-b832-f86a8b0a0ba4",
        "cursor": {
          "ref": "e98faba9-b9e8-40ab-9c20-73db933f2ac7",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "813ea816-b7c4-4325-a7d4-09baa806fb1a"
        },
        "item": {
          "id": "53030131-f084-4a3c-b832-f86a8b0a0ba4",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2c13fe04-15fe-4c50-bcd9-0ad7d92c3cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1074a750-c48e-42ae-ae77-5f9e0dba1c38",
        "cursor": {
          "ref": "37b5f0af-69fa-4837-87b2-4998aba931e4",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "92c64c6f-a0cd-4354-8ebc-d3ea926939a4"
        },
        "item": {
          "id": "1074a750-c48e-42ae-ae77-5f9e0dba1c38",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9a1b3fe1-c13e-4995-9678-650991103f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98298be1-2a89-4c16-b657-14f148353ab6",
        "cursor": {
          "ref": "810355af-8d1a-4a66-9365-7036a2f987e8",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b0580446-1fc4-4e40-8dc5-33ccf285bd86"
        },
        "item": {
          "id": "98298be1-2a89-4c16-b657-14f148353ab6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5c06ea79-10ff-4c63-affa-16c4f1d2ee58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690f9e8c-d9cb-4904-9afe-84aa4e814f49",
        "cursor": {
          "ref": "78f1b079-aa71-4d35-8a71-345ab511f4d5",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "a08014b9-0709-4cf2-b5ac-3d2b176a80b2"
        },
        "item": {
          "id": "690f9e8c-d9cb-4904-9afe-84aa4e814f49",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "61e30f0b-3586-4fba-8d69-10b4c115cf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30e8e1d-4b16-4b9c-948d-05722bda6dbb",
        "cursor": {
          "ref": "e063b5db-67e7-480a-ab4b-3af0865416a4",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "26aed75f-f42f-4385-8188-946825db5b74"
        },
        "item": {
          "id": "c30e8e1d-4b16-4b9c-948d-05722bda6dbb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "36f48168-d3a2-418f-abd6-a8a23c3671b9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef23371-7df6-4367-8c91-373c333b5dd7",
        "cursor": {
          "ref": "38172ad6-39ec-43d7-8736-839cfedb28f5",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "974f5819-f7cd-45c8-bd50-767595feb5bd"
        },
        "item": {
          "id": "3ef23371-7df6-4367-8c91-373c333b5dd7",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "34af9abb-bdcd-4499-bf1e-e99ca57a3349",
          "status": "OK",
          "code": 200,
          "responseTime": 96,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "996f45fc-5848-4fbf-849f-b75e45733915",
        "cursor": {
          "ref": "bc51c5c4-a328-40fe-81e8-dea0a1faca3c",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "74628e76-7cfc-400a-ac32-0e929f0a6e81"
        },
        "item": {
          "id": "996f45fc-5848-4fbf-849f-b75e45733915",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5e3b6033-6154-4de1-b989-7056b2f13314",
          "status": "OK",
          "code": 200,
          "responseTime": 3144,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f8cc4c-07bb-47bf-b400-c3f774865480",
        "cursor": {
          "ref": "d847e1f5-234a-496d-8fa2-a5734adb61e2",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "df3af38b-d2e8-488d-b978-880ea631a3f7"
        },
        "item": {
          "id": "74f8cc4c-07bb-47bf-b400-c3f774865480",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ed69bb5a-405b-4e1a-8e6e-e349088615ff",
          "status": "OK",
          "code": 200,
          "responseTime": 2565,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94ac24a-571f-4f14-8f14-4202d92c4641",
        "cursor": {
          "ref": "d782e9a0-7206-4b94-a507-9ffd50f0b34d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fa22463e-b8f8-4c4c-8cd2-ad93faf3d00b"
        },
        "item": {
          "id": "c94ac24a-571f-4f14-8f14-4202d92c4641",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "12a0f29a-624c-46ac-b4fb-9d945d5c3c95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 105,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94ac24a-571f-4f14-8f14-4202d92c4641",
        "cursor": {
          "ref": "d782e9a0-7206-4b94-a507-9ffd50f0b34d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "fa22463e-b8f8-4c4c-8cd2-ad93faf3d00b"
        },
        "item": {
          "id": "c94ac24a-571f-4f14-8f14-4202d92c4641",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "12a0f29a-624c-46ac-b4fb-9d945d5c3c95",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 105,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd070abb-27c8-48af-8574-02c23385821d",
        "cursor": {
          "ref": "96472b87-f652-4b17-97df-a27a23d1f908",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "92164b81-14c7-4ba2-a74f-95ba78168bb3"
        },
        "item": {
          "id": "fd070abb-27c8-48af-8574-02c23385821d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6d53763d-cdce-4ae1-947c-e2cb2fa6b564",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 368,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb96cf0-51b2-457c-ab83-964cb39bd718",
        "cursor": {
          "ref": "a994fafd-7b85-4438-93b2-eeb7f176f6b9",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "edfec3c7-ef47-43f2-a453-0e617257e676"
        },
        "item": {
          "id": "4fb96cf0-51b2-457c-ab83-964cb39bd718",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e59d8a6f-bfad-48a4-abc4-5631bbe2673e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 372,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}