{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5246ef99-b5ae-447d-b374-a916e3072145",
        "name": "Clear Cache",
        "item": [
          {
            "id": "97ae40b5-0086-4e3c-952e-2d9149706542",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f694b449-d478-492c-947e-6f40e3188565",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4b41269d-0d59-4412-8b41-e1dd0841ff90"
                }
              }
            ]
          },
          {
            "id": "6fb7c35b-8835-41af-8edb-269a588dc779",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dc040377-9a91-41cd-a36a-8748fe3d89d5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0619b3a9-5b60-4f97-a244-648367761c54"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8f408b7f-986d-44f7-8c3e-b04c14c377c5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "361bc59f-39c5-41a1-95be-30976eae26a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0955a4c5-9ead-4c42-a7eb-275c52f27a0a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25040726-2bf4-49d8-801b-ae000148bfcf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7e4c501-1966-484c-84c3-56a525e34a42"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9588257b-36c1-4fd5-85e8-88885839be56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18975484-cc6f-4836-9855-756260bf3279"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1ee820b0-a398-49cf-86f4-2a2f171e1e54",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aeb40394-0a3a-4278-95af-aae8e7609a51"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6aaa1c8f-e83e-4c32-b933-b09c83dff776",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a6d1c517-299f-4e6c-bc29-2fc7fb7dc6bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc863753-1aec-4e32-8dd7-460cbed71fd5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ca862ba-16fb-4740-b983-114a17838a4d"
            }
          }
        ]
      },
      {
        "id": "79c9baab-ca81-492d-ae8f-f0dfc2a16a37",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "cc19451c-a0ce-4ffe-94fd-343c0e85af81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1629b964-d5ba-4c0b-97ff-8ada6ffe1aaf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a09b797b-2809-4691-b0da-2e986ace1607",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00430eda-2103-4456-8a68-8498f15f7f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a94f34b-052c-4d03-9b62-5e5f35982325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34f0ec1f-f115-4cef-8ff4-6887b2f2f76d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78271954-fb0a-4f50-9958-0a2d29a082c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f8c2436-de4b-4906-97eb-1a6add49c154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb25c7c6-5c3b-49e6-8885-742c95d62e91",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28050d1f-d33e-4b83-8e0b-806435b5806a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fac1f247-4a3e-4fa6-a434-23ddb7f6035a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "18dc7b7c-a07d-4bd6-b20a-6fa3694295df",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a059a07f-b4d3-4375-9852-3faabd01f190",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ad9d21-fee7-47ac-9356-3d04df6a4076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f6cdbb43-f73e-4c45-9536-417ff3ec6a6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd95af71-d869-4910-8e73-03182bc554ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc78a81b-3353-4054-81f3-625655ec5729"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8953f5ed-30db-4ac9-8a3b-ff348c301910",
            "name": "Positive Testing",
            "item": [
              {
                "id": "00a5f545-823b-4338-bd89-67c8eef4ce4a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "475b7e88-983b-4c8e-8675-fe440e165ad7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "171b3586-a63d-4c75-887f-56f77b5e6f71"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "141c7170-e0c3-4e84-9ec8-8fe3079cfbbc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e02413ba-1d7d-47d2-ae8b-1115a1046a0c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60811758-80b5-4f25-a7ee-45b640182a9c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "92a7acd1-c7e3-41d6-9752-c6119aa58788"
            }
          }
        ]
      },
      {
        "id": "6c4feac3-b566-48d2-84a1-7acb328ee6c5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "fcd18dbc-d93a-4e76-8d9d-e04c3c9de43e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bc1ddc1-21eb-4c88-aeda-502ebb33a863",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a1712bf4-323c-4b1a-931d-2a9908161d9f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5cbd6e0-d091-4b1d-b395-adfce13a20ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1bfd16-e95e-4bd8-a63e-2a0b1e87b75f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7669058b-10a6-45d8-9f63-41d20fc768d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6030fd1-bf83-45ca-a863-bcdaae2a8c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce011a7a-6371-47b3-b421-37d77ece06a4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9cabfb-8ace-4f7c-bcfe-77e67d663540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca3c662c-5422-46df-a017-d4c462c67258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe0997a-e1bf-4b9a-8d4d-aceb255a29e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed8ebe36-1e78-4ba9-9097-508509420277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce39e810-4cb9-4054-90c5-918419bcb2a8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3b20e7-d94d-46eb-a021-c6b553a2d2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41608c03-0fab-4e1e-b457-2305f1b6e777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f0d583d-df01-40cf-8ff2-e06944dbf461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2d8e1e6-b664-4198-9c59-4dd8d06150d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c245ed2-a800-4728-9e38-dffb82d5a39f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae47523-0b39-4a59-a4cb-82ae5a1ceb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa08be12-a68b-49f2-842f-ec7cbcb43844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f58d56-f8a2-4393-a82a-c18686db77de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa91fe1d-78db-41a6-aacc-2d896238563f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e45ffe-1181-4eda-9f14-a263bf18a5cc",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f3d1f9-b6ee-49f0-9120-ee85e81ebefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc2212c-2a32-428c-9c11-e89b48b4ab6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548ab334-0cae-4c60-9d3a-b04a6306ab60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "68b9d9e2-5042-4d0d-b0fa-3a445be6a732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a4fc9c-26ce-48d4-bbd2-8f18defc8266",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795a7fe0-8529-49f4-a75a-15ae24fec5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab58ef1-41bf-4475-8324-2dc5292043cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e51c002-9708-49c5-a412-10ec0dc87536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93b56073-2410-4702-a2dd-4a0ec95e3969"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b7edaa-f176-43fc-bf0e-0dc5db65b6cd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb47bf10-bf35-40a3-8314-17ec2265c59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6719f855-b040-47b4-b395-e071c0d31c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "200dbfbc-80e3-4046-af93-e27b73d189da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f3091cdd-ca6b-4150-bf02-5f2e5f22066b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34efbc39-245d-4774-8f2b-ca4bb4b08f24",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f2e1a63-faee-4512-85fc-bc75b7afd494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994c85be-721c-47d7-9b2c-d39df3b5badc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92988e56-fa3d-436f-99e8-3c7881d30611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de8d1acc-7e5e-4213-a28f-46ac81862878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1d7717-c309-4315-baa3-80ee7b2c6004",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed74b9dd-0fd2-4894-92f8-90267ceb55cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7a0015-6f39-4e69-a666-1bd54c0920ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "367e33d2-01a0-4167-9ee7-e37847b7a276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87c333f1-a4a0-4ab8-8153-770f03664023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab0e113d-3851-4685-b84c-849fce42bb7b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37be21f3-b557-49ec-b772-14c5a2d3d5b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3941e319-08e2-44f0-af2b-34eec787e93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd816b17-a353-4076-8a02-55162a8387af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "831687b1-c922-4539-871f-cf0883b2b5c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b2f1c8-ec51-43d3-a1cd-bcab9b452b78",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14a6548-ce55-4be4-b80b-eccd6ca06546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ac7a25-7335-4260-bfc2-b67403a81660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9425c00-be31-42fa-902e-78c4c7dd6375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b57ed43-5c5d-4234-b223-04d3321bac93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c8051a2-b9e8-49b3-b143-04469ebc16cb",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1148d8-5481-468c-9b40-1d49fe410625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a3695d-3625-4c83-b2ae-c36b564905e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a017ff44-904d-4fdd-9341-de41cf860ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "900cdb1a-866e-45e4-a678-e08e2ee06100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b284197b-f4f5-4171-af9c-95fc4dd203e8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a570621-9f54-4f85-a244-c206281ee3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5989a356-a09b-469f-8f4a-59626804a2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77401f64-b7d7-42dd-bb43-3a8dd65c6d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ef508cb-6737-4dd9-95b5-10697b95993b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4345eace-03e7-42f3-9e93-ebe7439b95b8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68c4c80-b471-41a1-bae4-c0ef258aaf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7186f1-760b-4568-8927-0376a2e84502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e268a5-c334-4fbd-918e-b3dca76ed63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "755d598b-fc6d-422b-88f6-8876ec3c7bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c511a27-b76a-4f4c-a058-be7cd1220918",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c2dc05-4d5b-47f8-b6a5-dcf4ef498654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21bd3c2-56d3-4883-bf19-213739fa7ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb9d8ae-0b2c-48e9-bf91-85b742fa668e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fb48a81-2592-4d25-b62d-04c84a658bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc468b33-ae6e-436b-91d3-55d589afd050",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4dc294-271b-47cf-b78f-2190130b91b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bbdfbb-11e5-4188-b261-fa34e1744fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a82132-fa42-4e65-95e9-e9f80c8302cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c6d699d-a2b2-4a77-b4c2-eebaef89e991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a24c746-731a-420d-9de6-fab6627e4f2a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5296334-6490-4ecb-bb11-4b9855c506dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38932dd6-975a-4a47-b13e-e434f37b2f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e2a409-15ca-4767-b5ab-d76934c20578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6e8a8b6-f59e-4335-a6b6-ee1ac4fe331f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c70f92-f3dd-4af5-ac18-a6dae1955d5b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e860c2-475b-4de9-b236-a523619a7646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0210cd6-6420-4c96-98d2-a2803492d0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84de2e47-fe0b-4335-9d22-632ac7e100d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0c725b-4d03-4b6b-9592-b72e0c5f2d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207018c4-9fe0-40e5-903c-d89c6df76ba0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194d0f61-ae76-4e59-a725-346471ba91ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c9a510a-4a3e-4d78-8c5f-8410b581031a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595052ce-1d16-4a17-8eaf-f82f7b7d9935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8153b1d8-9abb-4985-b0b4-47d330f6e7b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36c44d9-7dde-4998-950d-f625ef88bada",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a973e51b-a7a1-4495-9107-398cc91d664b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce504157-cf2a-42d1-b153-d9ae92637a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10de6b4-7b3c-4c7c-ae64-1673f56aebc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0b3287e-9d24-417b-b4cd-9dcbf185df2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1aee4e-e7a3-46fe-b964-d1e2bd587475",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3753c5fa-8eba-447e-9b91-9b3d915bfe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e411f69c-7b98-4e66-bd56-c263119e0f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8d03a8-6c3e-43c5-a90f-224266f12759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a38103-a9c6-4740-8976-1308bd813fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f30e582-129f-46a7-b7d2-21a912cf6e3a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0cb7ae-f323-46ba-93f5-f5512403ce25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702b6e82-6e0d-44ac-9f9f-1591166b6464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c85759-17ca-4f68-8c7d-4d852bd747ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f30b3d-bdba-4866-a419-26f03168b536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d437a13-8c60-4895-9c11-cf01c3ea1f0f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3dfbf4f-dca2-4058-b34e-fcba88acc3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fb864c0-db80-45ba-878d-51d8c83debb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5bf27f-841c-45cb-a708-fb291e64b31d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d2576e-9e26-43ce-a928-78d38f6e0e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296b7821-6044-4454-80f9-69acb4c75856",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da46e33a-5849-49e5-b8d0-4b17e52f3c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a01fa4-80b3-4f0f-8c23-dcd7b7d1784a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c491a4c-8f06-4656-a6fe-447d6bc9cfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c0922e-7f0e-47d0-94a4-5a9fe4602900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f95ac0-2452-4150-8fa9-58fc42bc02fa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d27a588-c62f-4811-828b-da3c42555e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37680765-e0ab-4ae7-a796-441a7c61c98b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84566202-ec77-4f21-9fbb-ff62ec5a2590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5441a2c2-41fb-483f-9d5c-5c9b919d1cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c7feb3-1184-4ef3-8ede-73b62ba803fb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc14a0e-b5e7-4af2-9e52-68ca99664a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea646433-1909-4bbc-8265-f409ca3bf66a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed335ea5-cb04-4b76-baae-1ab9c87ed885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "280bde6f-8eb2-4067-867e-0442cac13666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffdb72a8-7c11-415d-a4b7-4aacbeba5a68",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff11458-42b0-4bd3-99e2-57867bffbea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265b5ada-1a84-45a9-9cbd-b9706b55a5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8111b00e-49c1-42a1-9f78-c31b5fec6064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08c76798-cab4-4166-b0c4-b937550a15c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ca1e34-dceb-45c6-961e-ef262aee8647",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d2be97-bfbb-491b-9b4f-498578906776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec61b26-e77a-4d6f-a954-8c3f1e7eb333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac50438-e1f5-4234-beee-be6e7844b6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fad0e6b1-98a8-4d02-92d5-a27ae4931b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c821e21d-23b7-4973-ae94-bc6f88ac8ee0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383a6132-3879-4730-9e77-fa033ef9ca5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c3fcbf-59ac-4248-8140-c45af59e35ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cdbf4dc-f7d7-4d3c-b9e7-1b5efd0ef8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb118ab-f342-4d9c-b996-25fb415021cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc801fe-011d-4e66-bcac-ec69d2ce9750",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fca4e6-0322-4491-ab30-a5a788e0674c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d1af94-30d2-4499-98c8-233c741595ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2741d545-8eec-4523-a4c3-4d37d1b81675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c044c53-3695-4ea5-bed3-ad5cd3eda1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd582ec9-12bc-4aa6-a59f-7743acea593d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c71fcb8-7299-48c9-b0fe-adf586d9ae28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "990b077e-ecc4-420e-b2a1-fd4b14d1fa49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afbfff9c-8540-4f86-af9e-6671e2cc39a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2db9e70d-777b-4b91-8a70-8d4a85f1c9c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3311119-60aa-479b-b35f-02d32b8f853b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc477a77-d58a-4d47-b77f-5a803522d7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6681e0ab-78af-4dd5-96ca-54f57a93be07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d00162-5f3c-46ea-b241-dd0058a902cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4063fdc1-e9f8-4785-9519-92d7c247ed17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd989c6b-43ef-43e1-9ec0-d45fa9bc1e89",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7c85a0-041c-42a3-8d2c-abd62cb0a9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dd5047-4200-4914-b0b3-69c9bdf19115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ce5bf3-0c0f-4efb-b456-402fb48a3770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0c5d29-05b3-44ac-8898-20153c1225a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa2ce4c-fc35-4060-8d94-d9aee08927ce",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af7fec3-950b-4176-98a1-e3f869b6dffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eeacf65-098e-4467-9be9-04b09c7a22aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260f1109-f96f-4e61-a91f-eadc0f1c14c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d9dfe14-2b48-4c3a-8468-6df4b9875b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae99353-8b6d-4530-b20b-8817da84f63e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a00bbc7-2d94-44e7-9815-14a7d9ded0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3260c061-3d3c-4ab3-9907-53044a87691e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8df5b576-16a6-41e9-9dff-a691fc5cf1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "55e2747f-2f5d-4568-8d6f-c31bd9e82b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27399c5c-38fe-4e88-8fd7-e5bd5a9e86e1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba85b14-5e4b-44f7-b1cf-a725cce4f8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e49a0a3e-9a3d-4514-8da8-e97c8db576b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a4b22-f0f1-4faf-b06f-e8f649a1e4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "309baa22-1931-4a38-b332-bb6c66698304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9946e7f-b50f-446d-aa0a-8f1e5b445f7a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee915b4-7c29-4878-a5dd-3c1cec59acda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dde1889-0d5b-40e1-8ecc-0e7636bb81f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c550b609-0aba-418a-906f-49d72126a6ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c23fb3-abdc-4ceb-baa5-0375daa9898d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63f7a0d-f6f8-4fdc-9011-9c820ade420e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4a95fdd-cec2-4add-8eeb-054fe9c30da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a677fb04-582e-4719-bf2e-a1d79bf9d9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24a1a142-7fce-4172-97f5-e0f31813d259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "236d1fd4-ef63-46dc-a10c-d9d467b84874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c979bed-7bda-42ff-9c0b-0cab76c59dc2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ff7e64-6669-4a21-bb01-5e46326afe8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31144768-9cc4-476e-815d-9f7b5450a146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "407e2641-3a22-4139-a512-42b4b038eea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "36be6698-3c1e-4a93-80b7-05b03f1026f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef88c37c-c025-45b4-9128-1aacf8010a6a",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c028d0-9d2d-4cd9-a773-4e629d182787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716d4311-b448-4f3e-a630-15198ae35d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cc35eb-632c-4699-8a27-87439c8fbcb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "dda3e10c-593b-4c93-9a89-95817e8445d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c1f0be4-91d5-4549-b7c0-7cb9c2d593fc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5373d0-3baa-4743-ab84-c0e0e3950db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d426e2fd-0bb2-4ca0-b595-85a3f77c9a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d204101-3635-48f0-8625-a30f7863b034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "829ca5ac-9fb5-42f7-9051-bbe35ab8066d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cdfe7b6-02e8-427f-9b2e-22ec30058d0b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff6f376-f995-475a-b65f-c222c9b25edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489991b2-e230-40ce-ba03-9659e91d1547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18892117-9882-4ee2-b40c-980cbce2b712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fc6c638d-df2e-4d03-9732-fa935126d6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "323531fe-7fa0-4ba8-a9e1-bc71898a5dc1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15e14720-fc86-4499-a078-bf8ef8fbfde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd31bac-cbf7-4d3a-84e3-cd43cada3951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b94247e1-d147-4482-a387-c341393d1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "37425816-1d5a-456f-867f-ad5a35dde3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bc41f7-18c9-4e8a-b6cb-4b68612eb7c7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c49b47-69c8-458a-936c-9bc935d2cf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982eea9e-38d9-48b9-94fc-c070eaa787a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76985f8-ceb9-48d5-94a4-d148819919f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c656ac-e38d-472b-a214-da4c50e8901a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e038c64-222b-4be9-acd1-8bff6196da32",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc811c92-a1dd-48fe-8ea0-23c261997592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14450170-f526-49d7-8af9-ccd00849b229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5407cb50-87b2-4f86-a763-8f30116e0910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8598653-6e2b-425f-ad04-e38663d57e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e767ce7-1b54-44af-b13d-03e656f19ebf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d381d2-a977-4196-8496-4aeb515c8b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4354ceea-b332-47b8-a0a0-93ca596f79a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3562d80-f492-4398-86fb-2340bbde451a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "826edd23-03f4-40ae-954b-3347d428c217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9516f6-887b-495b-b331-394c1f7c6d94",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d70f61-4138-4fed-96aa-47d025d15678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9146a2-a3e1-4456-878c-4939febc5448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310dd765-779e-418a-971c-17cbdb02472b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "176e6cec-cb18-4996-94f4-210ac747f3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f27f9e0-51e1-48f3-a78c-4909af14a9fb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8f3c79-6793-4dbf-b5cb-e39916620852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25c6ce9-ad51-4390-9e23-d4eea033a895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced99ad8-d0e0-498b-b03e-96b93f03d4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c49e1b5f-321e-4a19-809d-c94c96ffa0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a796fc-e03d-4a0a-ba72-69858db0121c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89aeb724-4038-49c4-b817-fe0926c7b0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76672eaa-d376-4622-b12e-15f51a4b6de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ae719f-0feb-4593-87d3-c5554d6f8105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37418b14-fac2-4a13-914e-0477a63d1853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d700ed-641f-4b4e-8526-aaedf5bb618c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21df1aed-5257-45b2-8167-dd2718d8c611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71367172-5fb9-41df-92cc-ea226638c874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd61ea5-0dab-4941-a496-96c6b8528a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "031cb9c2-996f-4f04-be28-13d3f171ac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263960e7-7c87-4772-b9bd-d71eac9d8d67",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d43393-5509-4730-a1c3-94720bbbca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dff1aca-e208-4b60-b985-88387e6039ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c92129-d703-4968-bcd1-f7eb66558cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9263ee39-06ac-490c-8dfe-a175be973bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85efa41f-b94c-4f1a-b507-cf84969c46dd",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153f9391-cb2e-428c-afb1-c661dfac3f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdf7a130-a808-40b8-bdb7-0b932574186f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6931de9f-fb0d-49e4-8db5-a60ccfc58015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b95c0d4a-99eb-44de-bdd5-7e44c7d33709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d9a424b-beb7-4a65-a3b8-3f625350df97",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff7f382-84e8-43ef-a468-296f99290a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d50e83-42ec-49d6-84a2-4fb7cfff090e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e419b7-3d51-4f87-a84f-12b6f6626afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4289b45-5bc9-4818-98b5-e38b48a8cf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d14f711-1351-4619-82a7-3c54d9654357",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3421f1-dbd3-4d9b-a656-deb740f46f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ebd399-a76b-449d-9c56-1863f5c7fa77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc1871f-2fcd-4116-99f1-8fa370664f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4534cd2-36d7-4093-8ae7-29cf813f4590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e1574e-a811-4661-8368-2a7de280f02c",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9db65a5-87b5-4308-bfb8-de143dc1c878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b152c1ff-ecf6-4fa7-8285-ce35331b18e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f675e06-efbb-4edb-8e21-aa6f7fdee5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32c428c5-4082-407b-a79a-d840238203cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0abca1e-8834-4613-85ce-71ec0b00773d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d126d6d7-694a-4d1d-a4cf-931bbdd56cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0d64f4-96ef-4bcd-bb12-8fba48bc9c38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3ee2f9-8272-41a6-aba8-bd69b3f24621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8d6415-8d09-4d9d-bb1d-267b2a5082db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992614ee-9201-4944-9584-aeaa1ff24ef8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d758ad1-f709-4dc9-b5b0-18a8b7e9db9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "811fdbbf-e29a-4c95-890c-70b2f17fb321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec37438c-4880-425b-8121-95aa506496bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39a20360-1a32-4f9c-800b-20c4be9472ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aad9ed-f335-4df6-9bee-8647097cccdd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946cbd95-fae8-4e37-adde-2734e135ab5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb4209f2-d742-4c80-9dba-e24ddd0a119c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b713b6a-c0e7-4160-99fb-b660a0c569dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47004804-5c8c-410e-8ec1-16d8eb99ef31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd4f0df-fbc5-4abe-9c46-c9d5e9837a53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1c8cd9-28d6-41ad-81d5-f353fdd964c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cc31ebd-d3a8-425b-b3f5-545d6b925445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573e57c9-1854-4581-a47d-8463f975d3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c37f8b50-5216-4157-b601-70116b1a0276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93da10f0-c8b0-46a9-beeb-e590a6843101",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80feab56-6b63-4856-a9be-1c82af8ea967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10010562-35bf-4f25-bfba-b4e61f879928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d02558a1-258f-4496-87ad-bf092beece6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "558097a2-c863-49d8-bd82-5e7f8711713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff166bd-b8df-4d22-bdf2-0e15d336ce27",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4daa11-0abc-4260-9eb2-09c7d7ed1d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "287e4c1f-3488-4909-a5f5-37402587ac48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c162dd4-30f0-439a-91d6-96f4026204ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8351dad-488b-4936-8501-31345ab5652b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b070daf-5dae-4f96-bc43-a4013192b35c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1446e81c-7324-4d2b-94e2-e4e6779f6409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc98bda-465a-40ef-afda-152fdfeebaf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd748a4-3239-4a64-acb2-f4ed99a08a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2829ef7-c59d-4dcb-b081-44bef2bf3b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb86ccea-17eb-4b06-8c95-7bc80875d46a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ba9272-0fd4-4e93-8950-c89558f1daf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40e61a84-d4b5-45ab-9f5d-c552393b916a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cba257-a7ff-44b1-8cbb-5a6482ca4683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7587b8bb-fa24-4398-93f0-99e9e278f21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9780530d-e10f-4fbd-ac6d-9566e831d1ce",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc29fbd0-a3c6-4787-8318-0fcd30bbd5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad91e849-39ba-4253-b04f-39fd06fa543e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9ca3a6-5c83-4d8f-b462-ea40de21d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "58fd5fa6-18f4-4091-9056-e673294f59cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f42068e-d333-4e22-98d5-3ecb271cd35e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba47256-4249-4007-8598-0dc50aa83485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72719d6f-c2ea-4ea6-a2b2-d976351adf9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30745f7d-6742-4075-9434-d4ce1703405f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6d9859-dd93-412a-9f91-3d7fd024d2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd0f891-8d0c-47d4-a2a4-a378fa2bf071",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec697571-e07c-4c7d-ac5b-bc6f742b6666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3211c179-8b9e-4f85-b851-ce16df139bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1d736a-c3a3-4401-a7de-553df1bd8868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "beac34ef-3748-4296-aed3-e4072f8f2853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede3b34d-be24-41a9-841f-4f3e055cc417",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f83204-205f-462b-a90f-6f0589623462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98843e5-1dae-42e3-96f8-c437b189446f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e6a11f-4e79-4054-a0f8-630867081925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8cf294-6152-4d82-91e1-5dd1b49b29d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4e2858-0eed-4cf2-a403-1ff9664690f5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a05310-2996-4762-9fb4-995bc1827bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5c66cb-64cd-49a1-9563-4930c110191f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d08c5fa-dc96-4d77-a72f-28dabf2784aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2686924-4970-4132-bce1-9da48a27dd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ece228-bff5-4a1c-9064-236b64e52708",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bc3608-349c-4349-ad4e-9e8b470042b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b73fb1c5-77cf-4d17-97c3-1b062c2f9cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d70be648-7d98-4cda-9f1a-8b3e859b34d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72d73273-06f8-4155-b98d-028b4da71ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f17fdd-98a7-4e45-9409-db0f48fa3721",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12e906b-71c3-4da2-9c5b-15fcc49d0736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c91b593-e04e-4e7e-a439-3616029b3c5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93d8549-5a46-4202-bc4b-4509754ee660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8363c58-b59a-4b5c-8784-a28c1418163a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500775bf-5955-4232-b99d-0ffc341e22ba",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c2fec3-9c8c-4f0d-a30e-bccc5e560b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64c19554-b556-46f9-bb48-3f389ec1060e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "646d7e8c-b925-4c98-9a47-02d67d7471de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7b79d9-f14c-4ed1-a0b0-c9bf40d40ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21b01d1-8e92-44ae-875c-c7805268606c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a05a87-da96-4d7e-8232-3315257355b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ca59ed-e059-4e2a-ae88-babceb7afb84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726d4628-1d58-4eab-b618-ede164ece173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "941648f8-272a-4270-9742-1622fccd51d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e78fdf-27a0-4297-8dd3-3af1ef1d0484",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2ccf48-e934-43e4-9339-f058cab4fd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2099cd69-556f-47de-824c-da8575ca071e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3437c7-2641-4408-8080-62ed2cd48652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "696d4142-5ca7-4766-925b-d35d78be49df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05f27a5-9cda-4737-9d21-9e5c5fa298cf",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9cba24e-9da7-4436-b731-018abf572f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5cfeb8-fee0-43a1-8b07-1bbe509cbe7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03203d4f-4009-4434-81fd-decbb77f42b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b140e4b6-a070-4a5f-9d95-e6103fb8f130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78066ba-d341-470a-b7d0-cf9d30846a8f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d61826e-dc90-4ba1-bc9d-f981031a05f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c8696f4-48a5-4159-ac4c-b6c219356827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9a10ef-ce4d-4899-a47b-fd1beeb20310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3975c38c-d514-436d-a297-0fb6463ea12e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3622c6b-9d43-4544-aa1e-be5c3183790b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ed2f58c-db47-4cd7-8ef3-b129034b8244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bf45a0-2be0-4ce2-85a3-188ab123d511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cfa5acd-307a-43ab-851f-1d82ce97dfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "427240ff-c196-4b08-896c-360fbd11bdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25ddf40-7ffe-4a4f-bce1-2d5fa0b79ad8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed22e18-e311-4687-ab75-5980bdfbde57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25fd6af7-71b8-4517-912c-fcea34394261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a716f8c-0b90-43d4-b746-7c11976207d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffb0812-f9d3-4b24-b997-15959bbd3ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e440797-0892-4a69-bc71-420cae05f45e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34157bb3-9f8e-4bba-94ec-e1f5168df681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fe0ef8a-1c1c-47ec-8a56-4aeda52a594a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6cea098-8e58-4d72-b86b-e4e973d7308d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "873476e3-f891-492c-8111-c8c56b01b6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146be747-5405-4dba-a089-6988c6da13aa",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49531025-7f1b-471b-8b08-f5a5e22ee965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4db6d16-8e4b-4b23-a9cb-aca42c79f49d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c3018c-3d10-4357-93ba-31f714f339c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "438c2e2c-4bb9-465d-b586-27ee536aaba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2838b695-0499-439c-8383-62df269cf028",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d752f6d5-8f96-42c3-b44c-83bf25b65042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01fc4d27-d41d-463e-825e-3309b981e566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c3ffc4-8251-4af0-88e8-41d039f69d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2898b5-7eec-4272-99fa-1d3d8c7ef4f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536be880-90fb-4ebd-ae2e-36b04d53a642",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fe4796-cb61-432b-864b-1f664f208820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a20a01-a1ed-43db-8e2b-ddfae900fca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b20cf2b3-f45e-4ffb-9a6a-87ba7371dbbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d73d0a5-6e6f-427b-82d0-5285fc98d09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b29017d-8ab1-45e1-a648-15729fc60a93",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5c3ca8-fe4e-421a-9a37-cc03cf8d36ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b67da2-5b23-46b5-ac7e-d275b36c0c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d2680f-8eba-4498-a33a-f06cd30ca349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d1d99d-1ccd-4280-9a92-6392a2787051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbaccaef-dbca-40a7-a282-c427a1f12d83",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ec26db-5581-48c4-b253-931e52c725a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7699785e-ebf0-4297-9014-6f992a694894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3fa6455-294f-4d1d-bb6e-a83c58a7bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b996a4a6-ac62-44bf-8b9f-c78fc50fb97a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3996d2b-3f3b-4169-9fce-98e398b1e7eb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fabdef5-ebb0-4c60-bc02-bc861565d042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15fa38a-d7d8-4f88-9412-ef05095be71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45f2054-f14b-4994-8de3-4d1c1430cc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bccde202-df93-4d5e-b366-6022ef01a76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde31cab-07c2-44fc-bca7-1b010c9d8ab4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba716b6-3df4-458e-96cf-0bf6f81b066e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99255a23-df5e-4b29-a5bd-302cc8d24f08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b2bee7-1419-4da4-83a2-41b0616e8a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c10c880c-d78f-445e-8613-438e1debae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f042c33-fd77-4b36-98ec-155779215691",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1835e9-44a3-47d2-bf1e-9eec230f2b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8efecb-cf90-4998-8605-672b47165297"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad64bdc0-5b26-43a7-8404-d4ccdb8e888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "349a1f2b-4977-4db0-867c-58b382f011ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902f037b-553d-4964-895c-79d5f84ec296",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1717afd5-79a6-4927-8b13-d131027adc43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1594cfb7-957b-44e7-a010-a0b7623a7a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b27228d-f956-454d-85d4-52703a4f578c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e722fff-28e0-4d25-8479-42de7d13c922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02509a8c-2ca7-4613-8d92-8d50614a2f54",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe1117c-154f-4cc1-a6fc-d70ca9fe15fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956c3369-9c94-4987-8bd2-79164b02904d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805406a9-4ba2-4f1c-a162-b46f18b7d1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d16d97b-3d1d-473e-b0ee-8ff515054e86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ad370b-8e7d-498f-864f-779c129fb6bc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4af834d-488d-4a4d-8a2e-71bf475fa16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "736d1486-9f16-4d71-954d-09a2357c3728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bef7e35-095d-4953-9467-2df7987f9fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "580fbeea-4edb-4111-9661-7e5b9e8fe4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3621e243-93ed-4660-a0cd-018c9cdcf38c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc43eb87-c1a7-44f8-800c-e13903773b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9204e2b-d817-45d7-b14f-7cc31b19fac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a6b3a3-acbd-4137-88fa-67149d2410d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f23bac51-8c6a-48d5-b02c-daccb0755d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a894faa9-8137-4d9d-bb07-89ee0fa1b7c4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36a5c47-84c3-43f2-a543-e2b60565ca4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd1a5d4-1c1b-4f74-9a4b-f352af562f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32bd2f2-758a-4331-aa84-e8a5fbf1d85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6cf45d-efe0-4f55-aab5-3687fd946865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530c9a78-9dff-4a64-8155-a95d6df9ebb0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34498a28-d6ee-4d76-a286-d9e08b496966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6b3ac72b-f8f5-448b-9fc7-8abfbb6a5f69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ae26fa-18a1-4c26-8c60-fc738078b49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b28fd554-d770-4ada-9c8f-6e6ea2700b9f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "55b3f216-c9d6-4435-abfc-cf2917579ffb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af146e61-27e5-4def-a531-e007ec6019fe",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afba51f1-1364-4955-8835-2fa6e039e24b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28ada2ef-47bc-4798-8e78-59ce054b70d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05ab80bd-1184-4952-970a-f241447d11ad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81b8c2a2-918f-429f-86ec-4484a43bec6d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31594e65-93af-4f16-ab3c-2dfaef3ea7cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ef8c0c3-5c0b-462d-837e-107249fabe45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "415b96fd-76ee-41ef-ac45-86be06d58dc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31d9ddad-1051-4898-83ad-a8a7e44f2dda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4355d9c-0904-411f-88c4-6b7476bf452c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67807670-ec2e-47db-82c6-3c6ea4ccbd22"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6282fcdf-14f2-4b93-bb3d-7b6a2c46b474",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47f89bfc-d738-40ee-8046-13a223e52a32"
                }
              }
            ]
          },
          {
            "id": "ea006af8-caaa-4e1c-8b64-3d57f6bce320",
            "name": "Positive Testing",
            "item": [
              {
                "id": "249a1528-513c-4abd-823b-6997846acb05",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b932d00c-60b8-43da-8313-9383728e4630",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53fc6da2-fe76-4aef-851b-667f80622f7c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f382711b-66b1-4fd4-989c-910c826e7b4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83b7915b-81e9-41e7-9ad1-3bf225e34684"
                    }
                  }
                ]
              },
              {
                "id": "7ff2e358-e996-4292-88c4-0601b3809e1a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa73e226-f869-416f-9426-123ff5824e34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c67c3f8b-97ec-4128-8328-66ec055d8156"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aed89275-879e-48aa-8e55-424357b5e488",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "de5e32c1-ea52-4f90-8fd3-63054e3fe787"
                    }
                  }
                ]
              },
              {
                "id": "07c7b62c-79d8-451a-b40d-ee9f4d1cbb17",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32c1ad18-12db-4226-87c3-88abe19c14cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4019458-08f3-4718-bb5d-4666e0ac53de"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7929854b-9bda-4d67-ac51-0b283ec34f42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1469fad9-a3c8-403a-8058-c30e4331dbb0"
                    }
                  }
                ]
              },
              {
                "id": "3f9fcbc1-2325-4c6e-8118-59b53703df47",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abb3b69f-356c-4a5a-8688-dc044da048eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5cf05d11-ddef-4089-aa2f-05a8d6dd2e4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a708ef0c-28c5-44b0-a4f9-32b08df3f779",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f02cc37b-a1e1-456c-9eb9-4d1d74a76334"
                    }
                  }
                ]
              },
              {
                "id": "4b3c592f-11f8-4e07-9300-27ed82025049",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "419a428f-5d7f-4bbe-bdce-13d1f153dc8f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4bc74c72-fdd8-4a6b-92c1-f82bc037b8e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfad6283-04f7-462d-957e-1337b4ca0fd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c13ca224-9423-42e2-be9b-26724b0b995f"
                    }
                  }
                ]
              },
              {
                "id": "5d673553-e3a4-4e9b-8101-8f5685ba3274",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80de0e99-4cbd-4e8f-80a0-f70b10f13e73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e408183-b0c8-49c0-a47a-4c96860b2959"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e1f8ea4-139f-454c-a457-e1b43a879ff3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cb442467-9e40-4946-9139-0c8ff51480f0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56ebb768-34db-4ce2-9d9e-dc3907da9d12",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "867c5741-b8c1-41c2-badc-5fb7fa4a8921"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b7380dc8-6eac-442f-a5e5-2464dd3ca9b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9d37bca-c6e1-441d-91db-2a0447c1f9be"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac974339-603b-4856-a616-8cda661d8bfb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "aeebd917-d236-4e25-9624-aca4cf802ec8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4bf85ce0-b490-4a49-a82e-b2baef6f560c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "245b6bc1-e47c-4fdc-804c-f499b99061b1"
            }
          }
        ]
      },
      {
        "id": "ea02ce82-dd3a-4bca-a0c6-3312e2b4dbb4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5488779e-5eb3-40f5-86ba-85380879e64a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "72b79988-21ec-4064-82f9-d5c9bb5b8c46",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e70a4485-7dc0-4b67-8421-fbad55bd4cec",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "733dbbdc-9a42-4924-a6ce-0b43506bd26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecca8b86-5f00-4614-887f-9ec79bfac592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3897881-c05a-4198-b0df-d3ae348a37a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "20a7b90e-c7fb-4ca6-8d78-2752ed2b9743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1d46db-033e-440a-9e1e-4eadd4bfac27",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678dee42-f7a4-4ecc-bc5a-aeb8f8fa647e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfc68405-c772-4339-a16d-b774a25d6e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afda9185-40fd-4a9f-ba65-77297a085f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae27c7b-a519-4a6e-a36a-46cabc49eec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c6f7c1-d786-47ca-9e0d-5e4febcc84b9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905c2de9-9171-44cc-8872-082047a8c99f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197e3c9a-ed7d-4866-b0b5-a64745bf9fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46ee0f3-0361-48df-a04a-2a29e4810039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b818863b-d177-4e2d-9126-b243d45094aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed21dc7-6f30-4c86-a53b-1685a25add47",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead20556-6338-43cd-8df9-b722fd614b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3342dca-7feb-49d6-8934-948f9c729d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910e3aef-51e8-440f-aa2d-56463b015518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14cdb038-2afb-45bf-b0ec-b91828223cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c585267c-08cb-42b8-9515-4dceec743f00",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df3e7a8-09e3-4c04-bd21-ced27451aa0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdc32c9-5152-495d-a9aa-231e8ea1257f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbab7d62-0d5a-4988-bf8d-dfe8678a13d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f0de7d3-b8d4-4986-9591-4288dc20acc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c34ee4-f4b2-413c-9bd5-bdeecb27877b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3051711-0927-4cd6-949b-b7ceef17a325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9711699c-f27f-440e-b414-8bc64c8c6345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33239198-1177-47c0-bacd-94c4cc6bf308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a1e151-dff7-4ee2-af46-04af8df8f3f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460a852e-99bc-46cd-a937-87893e35169e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca59a1f0-cea0-42ae-8a4a-a3ea1199092b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a6a2ac-0958-4dbb-9d64-f0714b2bedf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3bbefdd-dfba-4e10-8990-0963868eecbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b8ca00-e363-4819-9171-4b9e14ab8e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb04eccc-af20-4841-af6b-a6345aba07e3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19da406-e96e-47e1-8b8c-fd0bd6b9a185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646d3d93-c946-48e5-979f-7cf0e8d1ad81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef41bb0-08f7-4483-848b-7ecdf17604ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dae9809-0954-40b7-bf58-72dc77904c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa247cc2-c067-4ef8-b510-bf4426b6ac20",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de503318-5999-41cf-a1d8-12eaeafcd04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a28607-1d96-44aa-88e0-380cf37456f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d96ae9a-3223-49f8-bdab-84302cb4227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a936998-8ed5-40b5-9441-6f68b61a26f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992a1698-8b26-4320-908c-9703f1c7baf0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5b8a5b-8720-405e-8273-98a444e343df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62ea7870-1148-4646-b4b5-263458719b59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ff278bc-e165-4227-a7b0-76de441717e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fdc83bd-177d-44e7-a4a6-d664ea5856e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07f87a5-8d02-4fc8-aea5-dcbe3bdaa9ce",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b786d1e3-221e-4b9a-9a23-9307ef8b61d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42a0d22-9e55-4e30-8123-cf43c93c69fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d50704d-1f84-4463-90f9-ea3aaa143252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "39e0c1db-c195-4c5d-9326-88078471844f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939186f8-cdd6-489d-a48c-756eb25d9101",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0571f148-9c98-4673-b5ee-c96527665d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eceb3281-fbc2-4952-8969-591d2c59cbc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a19cf1a-2140-4066-b325-cb2a68bac79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb776ab-5a39-4233-9b93-8340e0b9278c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f8aa9d-0d49-408b-8bef-edd73a918372",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17230205-56c0-466c-bdb6-f8e93723d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a6d2a5-0799-49ba-a4d5-1f0531bcd88e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5767c0-52f1-4028-bd8a-b416ab44e772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51184418-897b-4c91-a21d-40df0f833cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad82b22a-dabf-485c-9fe7-e365cbbd4a2d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1713536-c234-4d4a-8c87-c7abcd3dec68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab987b51-4197-48bc-b15c-49bbc5f659a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01870936-ded8-4f3b-ac61-9830032dffd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c6dfd49-ffa3-4528-bbf7-419d3de169c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c243af24-a006-45fc-8ff4-cb1413bac102",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f72cea-7403-48e0-b7c9-67970d644557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ea4ad8-cd8b-45fe-a7bd-ae5d83876d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99810fcd-c762-4813-910f-49b972fe4574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7433b5-51cc-44ad-a75d-7b4173475bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d380f71c-1b49-4319-a952-c75f71203cc4",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad216a9e-73cf-4cfd-962d-d97b48697dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d22a56d1-3d2f-417e-94a4-7902aaf95695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ccb9c0-0e15-4e9f-8c41-f3e14a2721be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5689e5d3-2ad5-45aa-ad3e-16c33adb7fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593f8f99-b8ab-43d4-ba33-abd7edbac197",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae80eb2-bd01-4773-9410-fe918056fc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baadbb3c-9ef0-43c3-ba3b-5e42788e406a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b0d2ff-b7a9-4906-a9d6-c50898c46676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b06286fd-57ad-4d57-a934-b1b2202590dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7301b5df-f69b-4021-adc8-4d098f515208",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead6489a-081a-4d61-99e4-caf98d74c76b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0153aa96-a616-4d57-a4fd-fef6ccc8ff3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985a1737-fe86-472e-a217-0f329563b660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "73714656-29ee-4bf5-ae82-ee922e819193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edf5ad8-5b7b-4071-b1fc-e56c116e3a91",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd5a41a-82d8-44a5-b2c1-e1720edf5961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaaeb4b4-58b2-4252-929e-f55b73ac1ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d07310-64ed-4984-8415-916b967caefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "986d5e04-2df2-472e-97fa-4351e2673c3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccecf72-32c2-4670-b6d4-5a3af292877e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ace260b-d05c-4523-ba44-9e33ee72466f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3355fd64-c995-4587-8598-5a24b3e844bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fb484b-b8a9-4002-b9cf-f159d1338358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c960249-31fc-4c92-9588-4b2e5a1f59e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99dab8b0-4ac6-437c-8bbd-f9be5d1cd76e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ece725a-76a4-4ef9-8f23-39123549b355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d209a0-1cf4-46d8-ab7f-bebcdcab7cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c03c15-4bb3-4598-b12f-ca6aac931d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22477bc4-6a4e-4499-872e-f068a486e329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6472585b-6a49-4f5b-8692-fc6bf820616c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e823ebb5-1096-4a8c-a52e-6a24998079ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0126ddc4-9133-4999-a8f2-d5dd40c128b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b68295-9b77-4d10-b8e4-862186db9163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10505b8d-3a99-4ed5-87ae-a1b2b58583c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706a5fb3-f969-44b0-baa0-685d6d51d2ce",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea97a5e6-2f61-41d3-b488-7182eb9602f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574a6d9e-a81c-45e1-bb16-1a48ca1914d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d2d125-c2c2-42d0-afe3-3d0168a8e9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "701a3cac-c370-4f52-a7e3-d5e7b1b0e752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fe60c5-7f7c-4d87-96af-ac9fa9ebcf23",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22eead6a-e6fc-4c41-baad-3a842132f762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee0e8652-e104-4742-8fd0-6a36f43aab3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f8fef3-26b6-4466-b47c-c25dda36732f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1fb79d-209c-4ecd-9a84-b93a1cd191bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bd4132-9aa8-49eb-94f0-364f7920c737",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265232d6-820f-4b97-b22d-cea277a3d57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757ea7a8-ed9a-4ab7-8095-422235513c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3efc6c-2366-4bf3-91af-8cae21775ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b31866c-c81c-4971-93ff-1494615ee812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "317ad7af-b856-4d80-b289-2905018b19c3",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0203d2b2-69d7-4728-98a2-b4cc36febf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c77d0d-6ed4-4f51-81b1-82706ec65c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a905a23-8e12-40df-ac7e-5f7d04cb7436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57f85c70-a445-4b47-9ecf-728ced8c8ba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17d5cc2-0ab5-4909-8083-60319ac78c4d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8ddb78-9b90-4168-ad32-ccc1d0746a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce01e97b-8d02-487c-a539-48c9dfc1254a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "731f14b3-3fd7-412a-b2c8-242f063f5742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "125a9993-1f82-4668-9039-2de5d088b380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68265adf-50a8-4891-8377-2781f4ed523b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6601ce-cd4a-48b0-8b02-f4303dd4a02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc8347f-5842-4307-9989-cd8e78b2ec33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94384473-bb20-48a1-ab43-cfb68979d206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d31ce97-294c-411f-8b54-2d332e7ef44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7728f4-19a3-45b7-bdec-559527d9a4c8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f24abb76-1e17-4c15-8a85-8b2bec7d9bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ed78380-7184-4614-9411-6d01351518bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d179448-6c90-4384-bd96-16599b1f63fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "737d5afd-3e8c-4401-82ca-e22dbf56f29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65737ec1-f8ba-484d-bf96-270d9602a40e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d57420a-82f7-4f5e-9129-2f04fdaf20d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc9c895e-77dd-49ec-978f-b2aec4b01e63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae063a9-5297-4d07-b5f7-c6c7f99acfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38743ee5-0003-4258-baaf-0e43bf9a7da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d47eee-3f0f-46d5-b713-4a0403e26d84",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3a6726-0e71-4a89-b86c-a0ca3273420f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273e1be2-47c3-42c3-9999-1abb80a6a43a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55fbc698-d9eb-4b34-a7ee-883c03aeeb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c53a4861-32ad-4362-a139-70ba3f26d30e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d04929-3520-493c-911e-50d7aa549cb2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d838a8d0-d768-411d-a967-b277767b4fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "171aeb81-3d3b-442b-846a-e2149333307c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d1e1f29-33e4-4b3f-afa4-5216c1db1f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e83cf33d-7117-4739-8a54-99857dc678a7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca7cc8e4-72f8-4464-95c5-b5ed076026f0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4438bb3-b19d-4c3d-80b8-05b6d62ef240",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0770ac-c582-47e8-ba5e-868c71882dd3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e2d9e0-b6fb-411a-98f7-495c3baa4b83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ae1df-abe6-4d3a-8cf5-13b821539711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d190f4e-dee4-4493-89eb-5b27bf051dc7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d779ebcf-662f-44d2-8d51-02c7c0505134",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f94a488-38ff-4d8a-b3f1-4ff4bdaff734"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5d5d8bd4-9617-48f2-b1ad-593acc042c89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2606b46a-a400-48b1-925b-d358e4d66e37"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ebd76345-567b-4089-9940-e19f441fb049",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c52b97f6-9148-4696-b682-40165e122934"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61a79544-a361-4cb7-a551-3fc2e6751c6a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37a4f77d-1579-48b5-adaa-c61a3aa9b831"
            }
          }
        ]
      },
      {
        "id": "775b7190-c710-4945-aa4b-80e09dc69474",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "db61951e-8365-4c95-a415-eea09b29b140",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a6ef8c0-b69a-4b90-b808-e171b07fd2db",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ae8fe79-d4c1-455c-8d73-337bfee25ad6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8f08e5-dfdc-4317-a677-d9863dffa29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e5c761-6368-43fd-bbd3-e8691bdd4b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f14c18a5-d518-470b-ba4b-c78e8a4c1fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4df03c5-e0c7-4093-a03c-2d37fed41310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60650128-c4db-46d5-9446-0b7cf3abc24b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f54f83-82d3-46ce-b27c-7c6b0c5e6d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0858ae1a-bb50-4faa-b608-3def8b883b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c807a16f-47fe-48a1-a614-614d1389fcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e73d16-d68e-4807-96c8-1aefb974b378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f532f16-0271-42b8-b77c-cd695f7cf886",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309b2321-1263-44fd-8694-d08bb13099f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6a42b2-027a-47cc-b903-004804ec41bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace9f24a-08dc-43a5-821d-f36f968ce05b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b4991f-2be9-4109-afce-9c431763ae5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2168b671-e73a-4e9d-9870-f3e48998c38a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abf6910-b574-42ee-9750-5d421481bb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c92e2a5-0876-4a8c-8e74-811e05550f86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8537701d-81ef-444e-a0aa-63e650e7998a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8bbf304-398e-4163-bfaa-cfd792afa02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b993392b-6794-454f-b89b-ddb3958dd86c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b85698-3ed7-43f9-a8be-4453e7ba75b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df9974d-6166-4737-af61-0578011a159d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc31b68c-c93f-4ea5-850c-c134af5ede04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a0a6372-db2f-48a7-b412-1e95d6ffeaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e40456f-5c12-4e26-8430-27d59a075e80",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "957138cd-96c8-4b13-9e41-2de10a7be039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfa4f07-7090-4405-83b2-ac1e50ead60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40242b9e-5608-47f1-9078-cced7e39cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eac09e3b-eac8-4a86-9527-54ae7e0369ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b194e06a-6b85-4291-ac44-dc684580c890",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d03899-0182-49dc-8b08-e267e420ac03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4479606f-4475-44bc-960d-34720a690524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad03ff6f-6215-4efb-a814-0d2263ae1fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3a3c8c-62ff-4c11-ab06-420685b2d6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f451578-2550-4cdf-9000-163af29b0a82",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d210e9f9-75ee-4c11-aa0d-dd34d2487f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7ed9ee-bbff-4c81-b08e-b720523f8238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e11409-f715-4b29-96b3-20991f3fbe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "55514db8-b7e4-489d-a06d-be59f4b8c950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25a773c9-8fe8-47d7-8d81-416ebb5c14a8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a413a0-a94d-4dc5-9223-6d36bdb5f971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af792a9-a3d5-4bf2-bc84-046dd6da2444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c126431c-a927-4924-aaeb-e2d7fbd5a3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81be4544-40a0-460c-a508-c8f79abb446c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6868754-6507-4200-8c67-30b5b8549ab8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab4a667-c1f8-491a-8b21-06cbdb7070ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21802e15-5e57-4788-beb5-813786682dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ac04d9-a5d4-4006-95cb-ae82c18b3e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a7c5a0-f302-48d2-b0d9-728fdb444b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bb51971-e9a6-44c5-8b6a-d8e428d25cf0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7fe991-22b6-4706-bb5c-d3eea03f1c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fadce9b0-bc68-43f9-a4d1-c5f1e04fbd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f060a7ed-1df8-4b31-9be5-9dedc209d85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f6748433-375a-4698-9786-386043fcbf70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7d9c04-465e-494a-8a0b-d64c5b192609",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a9c5f9-0e07-4908-97eb-df2220acaa82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf2329e-461e-43dd-b599-a3102af9fc67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f84c80f-efbe-46ad-bcf7-c4d93b4fb875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69af4b99-7594-4b8a-9619-e3ee826f5993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be92ca97-f481-4c62-b720-76d121a9d14d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a2daec-7a4a-4af6-b48e-eb482e474c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d58aa77-8ac0-45d7-b596-9a04920acb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a114020b-cbef-4315-90ee-c96fcb3df92a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9074f063-a926-4783-a89f-79fd37b5e2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f258ca17-46dd-4605-b910-44e5a53ff71c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e8de25f-00f3-461f-b659-25e2a7b6c2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a88b300-f2fc-4d63-ab87-b0176a23125c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01dbe29f-4b99-42be-9450-06ecdf13de77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ee7926-68f7-4660-98da-dbd0f4c4fe82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97fff69-4201-4e80-bbf0-187dfcd1f5ad",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c2ffed-19b5-4b7a-9ed8-b04354a972f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4cbd10-28e3-4cdc-9fbd-1f514fc05ea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64053caf-f124-4a68-9fdf-b5b4826a336a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "53d63f5b-1a8f-4685-ae9a-f7dcb1b4ec0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba09ec97-a024-4409-af88-dc13881090fb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71d7061-87a9-4f36-aaa0-eae7ea91a484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ffe8ec1-d6f4-4654-8794-5e35898b9a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab83cb37-af9b-4a68-9d38-410f2a581998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f535a3c8-0b86-499c-a0f7-0a0f4cf957ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c88341aa-bbd9-49b0-9fa4-80728f7f1690",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d7cf71-cbf9-407b-8a3c-e03dba122f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae7fca9-c565-46e2-be52-574718d343e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee55427d-3716-4261-b476-c841500bc789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "78444832-35e2-4c80-a722-729ae22b6279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bcd9aa-22a2-44f5-9532-aff37a614b4e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c69e4f-6513-4160-97c2-a80927a1da3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00741fa-ec11-43e8-821a-4d808224efbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a89198-67ac-4ff8-a050-a82f25e63a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6844b50b-b47d-470b-be48-7a3abc9bcb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb4328a-9dfd-45b8-8951-ee5e7068eeb6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43668e59-f280-4836-b9aa-50e35ed39f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3175ed-ca1a-4bc1-b3aa-34492cef31b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6329a386-85d0-4f20-8ba9-8ee4408ee9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3d78a21-cc8a-4ea0-aac3-47c7a29dc8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9640a890-ddc7-4a64-932f-863955575bef",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eba6b54-5201-43e6-a110-371c8a32b8e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e36f76a-aff6-43aa-8b07-4f3a24a393c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3139d20a-f598-4050-9a21-359248561468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf181ed-d6f9-4ec9-bd48-8281ebfc93f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4334473-faf5-4a6b-9aba-c4a2ad690bd4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2c2d4b-d7c4-4ff1-aa7d-2ecd75ed92f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0efd1368-e45b-48dd-be85-b4b6eb932b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c10e6b2-d887-43e3-ab9b-2a6426909aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5df1b6-2530-4d97-93fa-6c720bb50eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd973036-bdaa-4402-9249-7d074cb9c4f0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd2ce36-e12b-42d9-9403-65adebfb497a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df19be35-d9e1-4473-aa57-50ff72d74447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849c460e-a5c2-4e42-a56c-997c3daff5d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a42785f6-10f7-42c0-9eac-1705a65b87a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92808052-7a8d-47cb-a8cc-efe592ad5e01",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc38f821-b44a-4326-995d-7489792f7ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "968637df-37cf-4193-91f3-998b0c040f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54adbf59-847c-4b92-9ad4-17b921626808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6c2d2d-3468-43a5-90b1-e10b935d6194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6062c8f9-86ab-4487-b0ed-063dde3c262e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee97a4d9-9825-4e45-98b2-61e3b48025a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46b5954-9cff-49a9-9232-527c71a2a925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897d99c2-9f8d-485d-b90c-ed316f40ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "401edfd3-af17-4497-a2f3-72312303d720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b040516-8259-4ca9-b175-6c4a50705d68",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16cf59f-b5ab-401a-85b2-b970a6f65cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8643e93a-fb9d-44f1-9409-628c34250b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7a7293-bc6a-4229-8c31-5788bd27c2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "849de793-cee4-40cd-8673-aefb08e459b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585bf46d-71e4-484c-b031-efd0ddea0b96",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c73833-0a9a-4ba1-b94d-80f149b14df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3931c942-5799-4b44-9f5d-2417c088032a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c1e4be-d032-429c-9a66-ef2057b3946f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d92017d6-9344-4eb5-a027-77dc1b27f62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3cbfb6-153c-4333-a417-b02247e2909e",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54ad6a2-3884-4b44-886d-738ffb8cbced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7258a71c-9e87-417d-ad53-ef389074812e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc82a5fe-e1a3-4a6a-8e1d-b2625144ddf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8437bae-9dc5-4209-887d-f5b7e86be7f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80515530-0555-466d-bd7e-7f8f906feeb7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d30889d-5381-49fc-a476-01403dfd0847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85155975-f327-4c20-a272-3cc1c4d2b669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab1f24b-145e-4105-86f9-00ce8bfe36ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05197d8e-e94b-422c-898f-791bebb24790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa66d49-4e9e-4208-b56f-b2a950e119a2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad929860-850b-427d-a927-e8d51d5a71e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6241254a-83d5-48b0-ab7a-4e889925059d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e13f84-b27c-4946-a169-9d8f4f128c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85a98061-1081-4f02-96e0-7a4ee941b221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6c2456-e920-48ea-944a-ccb534d9b147",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abb750e-75fb-4fcb-a319-81faee10ac64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e768642-bad9-47cf-b1ff-9d3351e5c6b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd479fb2-4e97-4efa-b516-c3b5698cc690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "073f0463-d00c-4b59-a92e-ddcb001a8138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb4d179-3615-4b68-b797-19b1726b9996",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a484439d-7260-473c-9463-95b921ac3f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5664984f-afa7-40e9-81c7-5bf848411c50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da3b7f9-e347-4979-a2df-795f3023d610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8699a91-3042-4e2a-8e7c-e3455157a347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfea9c8-ec9d-46a1-a54a-64bcf711fe13",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9a7a98-9edc-44f3-8558-00cd4613e25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b253a5-5f97-4571-b5db-9a96a52769a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e90845d-7b62-49f0-9472-a0de2c6d24f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f5d26b-a86f-484b-9382-90b11571d660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39ca619-b3a4-4b40-9b1b-a8aa6ab14654",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb931c8-e0a9-4f5c-a48a-80e5acae6e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c666b50-9a86-4f9c-a28d-f52d22611e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a907d98d-cc36-4234-a344-aeba764f5fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33a26e7a-55b1-4f75-8c0a-98260a0e426a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e180b107-3780-4fc0-add3-2fec64b86ff8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285ae067-8e0f-4f2f-af18-437cd021c618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07fe9e1f-0591-4c8a-8acf-9ae488e9339e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef895e15-ad41-42ea-80c3-91ea4847e803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af2fe33-ecda-47e0-b5ac-ce3e8e2cecf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceadaaea-f406-49cc-bf9a-4aee94c1d9b0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c3727f-2bfa-4d03-a865-e4801af79198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "553c2450-d241-46bf-acd5-e4924530c4db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24bc3f2-caf0-4731-b87c-443af3445eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce402825-5f0c-4872-9e4d-4df207573caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e77446-e261-4b30-a60b-809a204ed652",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38877c51-b2bf-4652-9427-749730ce28df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d0e6e84-3e08-48de-b32a-b52e19166278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a4b1d6-5a5a-4114-9445-0aebf238d6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6acadaec-249f-4576-96b2-24cac1b899ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9c6cb3-867d-4a57-9a41-39acaf127b4d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9164b79e-5d14-4468-a1fe-32e66de68db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86387c46-c50e-4e70-95e8-b24b3a7f8c47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d209d66-57d2-4ab7-9ed1-15dbd8f52f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a6b108a-56f5-4d6f-93a5-dc12b248a9d8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4902122c-7724-453b-8f77-2421409748ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16c8d670-29de-4734-8d2e-5c7840b15c54",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662d6f65-fe53-4f56-9910-efebde1b7296",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3eddc05a-be82-429f-ae46-97bb30483e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "238335b9-b2e7-4f5b-ad27-ea7497d2a806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "692bfbd2-106b-4709-a800-8d9aec5b0453"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34668446-6af4-4dea-9a80-109a9214a956",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70fde06b-aaaf-48dd-8f30-eecf270bdba0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "069118b8-8aaf-4463-8e57-f052c7397ddb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5a25cdb-7181-4f4a-b0be-ade63eaa36da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73c7db03-efac-4ccf-b3bc-afa62ad32ef8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "13c0ee08-6866-4e9d-b735-0fd692496629"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cf9f046-4454-4beb-a7f5-f4ffdc98c5ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4be6b389-fe45-4561-af38-1b0e69f8c49b"
            }
          }
        ]
      },
      {
        "id": "e202d846-7be8-4bf6-afc9-e2e37ed2f6e4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c4569b6c-83c6-483c-a2fa-1ce499774d45",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e37cdc7f-f387-48df-a390-51e508b70be1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "91bb9b43-ef1e-4ffd-a0cb-8cbe3279a94b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe113c0-adf4-4337-a945-a2f994f52ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f50b69-7720-4350-a189-22b889ed3c28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0495e46e-b58e-4604-935f-b4609a14382f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34491f1-728c-477c-9f98-d56198a6c6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3e775b-5b1e-4fdf-bed0-72168a99733e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32282b8b-1873-4ba4-b693-90ce5e0d5931",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03edc7a7-1dbb-408f-be9b-e5d22a3f0a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481ce938-014c-48d7-a9c7-61c7419fa2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c20de4-fe7f-4ef8-91aa-b35361fce110",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393624cf-3140-4002-b67c-16b23a8ca20d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690ba7ce-6f91-4c0b-aaf8-1798a8f97cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eac6286-f45e-4444-86c9-064ab1a4f268",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f185d8e-cc61-4f26-bf28-08145e604b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32437a7e-fa93-49bd-a9f3-053aec2e66f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3389301e-7ba1-4fe2-b00b-d4a3d1b30f67",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4010afa9-d4b1-4b72-8d2c-8df39e1f3b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfbba1b8-8e69-4d89-87bd-00efd1b2fa28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abeb3f44-6a26-4497-a6ac-5d6df70e598c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ece428-27a1-4547-8b37-8d69b3622945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e771e423-bd01-4905-b9d9-16dabc857012"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8852ee56-b243-4136-a20f-9a508b303ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e14453-8d5f-4286-a82e-04f28f508802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f280a8-ad16-4307-bd7e-81a12ea06a30",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a87a219-6ba0-4182-b2bb-4230f2d7d1cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "600cdeab-7a7b-4e81-aa96-0993693abcfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f999176-e297-4deb-ba8f-c13818af1b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cae0a5-5837-47a5-bb5c-da34c84cea31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e7313c8-1df4-4e32-a9bc-bd292a0364be",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b288cd-0e3d-4145-9690-3c84a3979ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68aae235-00be-48a0-b783-47bee0822b50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17f9b9a-5ddb-43fc-9dbf-197f0e92f77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7c08dc-c585-4ebb-a1ef-6f5f5a4c915c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "805b5226-11f5-491f-b6b4-05aaad56ceee",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d17ef38-64b0-46cc-b779-a12d536af3d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d73802-8f2e-4680-bf9d-ff1f335a7ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96db2b34-20f8-46c0-ac6d-03f8a7824b64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fb5d16b-cd90-429e-a269-134dd999d657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fba99e-aa8c-41ea-a0aa-4706818956ca",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7d4dd6e-883f-43c2-8e2e-c6506900914b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e9fde6-fa5a-4307-a340-6adec5b23b0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "667adda8-7e0f-4e5b-8b08-4b98b72f64d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15004e1d-044b-4fee-9aa5-c2962877620a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e247b52d-c342-4f4a-bef4-4456b6ebaf3d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000ea1a9-843e-4004-a2bd-a731bee0a9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d253ca-0eea-442e-b97f-556613e1244b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfeab75-060d-4726-a16b-c78e9122933d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "875f7960-39ac-44a9-b901-d404eec6ca9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ee341b-41a7-4d6e-adb7-2d15e97d0451",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7dc90c8-b0a4-4668-b97f-fc22f9fb8bdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2db107b7-b79d-471b-93f2-2734f9d05fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad50cd5-8f0d-4b9b-a3d6-b85180295511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1d7805-0cc1-4a7f-bd3f-8514e5fc45ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80416ea-fbc0-4e95-be8f-4594c293ab01",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260b8e8a-b327-4db4-9e03-34986eca9058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e69e5b4-5bf5-4316-91d7-f88d480ce7e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88dce14-50aa-41f4-a27a-2a6f0c2c9e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27dc6023-21f6-449d-a730-856183d5bca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e3fc7e5-9213-44bf-bc07-063c4eb790d9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63ed885-2a18-4b39-9de7-686952e5140c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46fdea82-cd61-4d78-bf65-12c01a4169a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af6ef3a-6a30-446d-b0ec-2c95f605a317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb18d7bb-36f5-48f1-8bd9-1ca3e3b9dc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8258a2a1-531e-44d0-a660-64d3b9e09ad9",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f698db-b945-4551-949b-1499c92b67d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18577890-ad80-428b-9feb-a07e5766e80d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeed6ba9-3545-4ac0-a257-c1e2f9fe2adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82fbfc7a-ae35-4334-8f93-0e2b2cb27e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56ac39d-69c4-4b92-b002-ee84c96987a0",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab23397f-651f-4be2-af78-b62216e76bc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aafc2f9b-75db-41e6-881d-a63b9f9b1244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64818fe4-f090-4ea7-831f-3b67fb9dc21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e4f21f-0c77-4bed-bec6-f6f5b367d256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7951d202-6757-4bce-8d70-7598176896f8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3696e4ba-5050-47c1-bce4-4eee6ff88870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2d71597-c7f6-4faa-8389-c13cc1647216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "939711b9-b675-4fca-b354-04da724c84c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5464e5e3-0d37-4246-be52-a80c63d25b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10182366-fce7-459d-886b-f3a18d01ae62",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03195faf-f32a-4a93-baac-73145305ad6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94502f6d-5cbc-4ff2-ac29-497971069945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074346ff-5ab2-4a3d-9fce-852da69f4889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5bee85e-cbc9-4ddd-b095-1618a1fea2bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58364291-d625-4285-bc68-3ccc69b048eb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6f441a-c371-4313-815b-bfb7836104fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae442d1d-e99b-49c0-beec-2c9c8908fa7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef9061d-b4c6-44d2-8666-483d253a3253",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93932898-7304-486d-a88e-997c0f96d7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52dd9fa7-e0fc-4665-8a35-df6145a4acef",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85051ca-7434-4ae5-8deb-0ee425a98b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70674524-e071-44f5-bf79-c5f8a5509ec6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f80014-b87b-44dd-a690-e1ca7615501b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0318d406-d365-423b-85cb-9d419ebd549e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a1f4aa-8789-4198-8c9a-ac70f9790c9f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08913bbc-6522-466c-a7dc-f914670dd9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62cd37e7-7214-48d1-8e91-fc12828112b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eba71b5-1c6d-4354-b69c-d4d593c23681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778774e6-5dbf-4cf7-ab8d-8b5b77cb0047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13551801-ab9d-4630-a372-cfe1b1457243",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2d6f3d-5974-45e4-af4d-cff7515427de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8958d0-bd67-4bb1-8771-a71a005018a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacb5fb9-e865-4a0d-881c-48030ca1b814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa68144-291c-4c1d-b0c9-167114b22f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594afe81-f94a-41f5-a4c7-bc3c90f70bec",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1b5138-5c22-4ae4-bf05-23d88c452684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1303005a-57fb-4b42-95a5-753f118ff4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a84e98-4f94-404c-8604-4f8d7a8bc04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c97aaf-49eb-4181-b490-ff13f9f4a2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2709790f-d7e5-488b-9401-9d4f152c3286",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8de20d-4fdf-457e-a0cc-fec552e199a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f214a5d7-98d5-4725-b054-ac0bd6bf62b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3878e152-3c13-4a5a-98a2-01fed43223e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861a1f2e-dee2-4706-8edd-122d487194e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32e1b05-6b43-4815-a141-8294d38f6d4f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57191db5-fe50-437d-b630-ee9a488fecf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc802394-5ccf-4a72-a73a-dbc9fd84ef42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c813ba-797a-4d3c-ad2b-6ebf9f424a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dedd60-ae44-4cca-8be7-7fb938d980fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b97614-c8d1-43a4-8732-8f413f442caf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebb17c9-b966-4477-ad87-d4e80c49655f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcc3a679-cb84-4701-bc08-17fe8138dd90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8575d728-6d24-49bd-91b2-597cb965b129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2067f60b-02a5-4ca2-aed3-938a6b1ea35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2bb0a6-befc-4c22-8309-5015a9901b1c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd390e9b-2a27-4412-a81f-4ba22063e528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a319a177-b675-4f41-89cf-4110f8764e4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3bdd4a-ab26-4ac9-ad5e-7214e6ee664d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8640ba91-d836-4deb-82b8-8ad5f9d80fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fc8d8f-e0ad-4e0b-9fe5-45806dc4ee6f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06a211a7-3bf9-4ba4-ab6b-714a08937ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ac50a7d-f597-4cdc-93b2-a2e1624e39f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3864f6e1-2627-4f57-bb7f-b4861496490d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4ad52b-4fb3-4fa5-855c-f45209fa09e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8087a84-a4a2-4ff7-bba8-674836b57835",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09812a1-3c0f-41ea-980f-3aeb6a724b3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c538745-714d-417c-93ff-1fefad32e233"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08aabc6-aa14-4ff4-882f-38147d97d096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27157f1f-06e2-484b-9fad-4720771c45f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f69d2d97-c050-48ae-88a5-6111a1ed3d44",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb16fac3-4d11-4d1e-8dc0-e456158eb943",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c46cc18-1eb1-47b4-93da-449ee460b548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "733917ed-baaf-49d9-84f0-ac8661d239cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58887a5-84e1-4be4-84e2-8014f5f9be34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "606ef07b-9f7d-45d3-bbb4-2fb8652a0d9c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca40616-fe93-4100-b4dd-90f1f2883dce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b82cbc4-0821-47e4-a620-a04390f6a66c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1b6957-b697-435c-a94d-e1a8e7b389be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d605598-a351-41fc-93b2-89cabb757311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70679562-a7d4-471c-9914-fac53b43270b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e906a649-c2ac-4fc9-a2c8-5806952ae060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53434889-1d41-414b-8f11-6ebc6099e69c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9041f86c-5316-491e-a320-b0c74d2885f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f5ad0c4-dd87-433f-8c54-401af23785de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a9a25a-bb01-4cbe-bc88-e588a2c34391",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff145ae6-ddd6-4411-a9d3-ca5b77b85579",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cbe44b7-ce80-43ae-bc57-75f875186e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4d676a-fdf4-405e-9ea2-807c951e43c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5313a63f-0cb2-4499-aa57-8ad642a90c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cdb023d-de58-4696-870f-b1dcb0eab524",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b973a408-f0b6-452d-ba72-0d188cfb39b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31080546-0d7e-4322-b8bc-cc7ca8292e5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4969b49-abcb-4da1-b38d-667c8507f9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344fc744-5c0e-457d-a0f0-eacfc58b0461"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b5a821-642f-49ff-aba4-0cfaf8ea21de",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c25dd40-1ce2-4172-a46c-bd2585201423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "523b2bc3-b157-4d55-817b-eb1024caa171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b455380c-3a90-46c8-828d-64515b6d6003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d24fe7d-7bff-4126-aade-67b4868ba79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990240cc-395a-4ab3-8d1c-c86950082e23",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3b38b0-9a2c-40ce-8e2f-4c108c565244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adc38ed3-6ae4-47a6-a430-4a7676fc08b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053042a9-454d-4546-a140-f45fff235ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc9849c-5b1a-41bc-ba06-7704815cfeae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045102ac-d9e1-4493-9b4c-4629169fb027",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875041c8-68a3-4789-bc96-11a2283afec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22618968-f549-4322-8e56-5d8199f57eca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33267828-562b-4da5-9577-fc33c5ac2fe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48385d2d-6d5c-47b5-8726-94a98648819a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dd40129-fc4c-40f7-9407-afda21447429",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bff0875-bd68-4f32-b22a-8541a9b5614d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71db787b-57db-4bb4-9999-82c13441eb66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "593b1057-0424-4ffc-8b76-f29545287274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efa0432-a603-42d7-a24c-0949ac0a1253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d37c56-22f8-4143-b546-a9b57ffc8038",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a0f531-0a99-488d-bf53-106982df7280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536ea4b9-c4e6-4a6e-8a9d-5cf71c2be430"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc83c72-d344-4141-8827-d96ac78454c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4149d3c8-e6d1-4d53-a525-256cf057f468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6c0a3d-c0e7-4d2e-a5b6-b675ab284927",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f89142e-4cfa-4295-a3c1-b8bc59e4ebe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c48075-0260-4328-81b8-f1062b34a013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "244982d9-e92d-475a-8ccb-fa5ab4f7b5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e2f2cb-61b1-487d-9ece-eb3e0a85943d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ba17c4-098e-43bf-aee1-503aa032d9d7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff5903e-e26b-45c7-b5ba-271bbea27e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308008c7-cc7c-47f4-b196-c500cabbe472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2991648b-0825-4f28-96a0-49db9e17ab60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cadc66e0-e1e4-483e-b39d-2e1d63714308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0febb76e-ecfa-41fd-9ecf-b42dc70f35ab",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12f4909-8c20-45b0-b502-1ed0b77abf62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d164b24-8f37-4f85-a06e-ac69f2e92273"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ec0c7e-71eb-42d9-ae8b-75eec8c4acd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22223f75-4a51-49a6-ad15-0c5d5228d578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22565a11-f110-4b75-96a4-53a91f950124",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597edd08-4ec6-4330-a51f-fb9d20e1cde2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec4d36f-d888-4bd9-8b41-cdebad9b6a96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeae7e36-5bbd-4a85-9ed8-6283af3bbfe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f8caad6-d5c7-4255-987e-cc2e5f72652e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6617d36f-af77-4c41-894e-14bd53b698ad",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066ee1e1-aa98-4a49-822b-5dee5bb51541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161193b0-060a-463c-8249-652bebebf3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d158328a-2d75-4939-9df6-946e9b5bd55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82e9190-2e12-4446-b117-9edbfdfdfbcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ada694-0e47-49fe-8b9c-da564d2c4027",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc22e270-70b2-4c7b-865a-c985deb314c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc5e6d66-29b2-4fdd-9fe7-c03618f203ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad68337-ed17-4f2e-850c-b0591d52498d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3322bdca-1ef7-4505-bca0-fb364ab5ca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "757c9f6a-734c-4199-9b3b-2fbc3cf1e5a5",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "467e987a-d2a3-4bab-8521-cd00fe3a59f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3771c15f-a5f4-4d0d-a8e4-1ee56657e12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e769606a-bc03-45ac-b051-83bcfe22ac14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17994880-7339-48ed-9568-5d8108870e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50dd19ae-92b6-4134-b159-a5e315d2682b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e783fc-4cd7-40bc-adcb-0fa0a8a921cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aa3888e-3347-4b8f-890a-98b477e65339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed78df5-28a3-4d97-a6e8-a043b02fa85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dce5d24-d21e-484d-abff-2f59c0d7f909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767604c7-c2ef-4e41-bcca-c4ee5ffc8dfd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfb458a-0d5d-4d71-b567-98da56954d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2c5f69-07fb-496d-b957-8a55aec36dc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "456c6e24-a9d4-4408-be91-4434bcd72291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1dfc369-94b2-4786-a963-9316f043278b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465a25aa-0598-4519-82c6-3d4da3cbf866",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443cf4c6-c31c-4e42-abf6-64a8b338849a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb42506-bc20-489b-b0a2-49846ee8a2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7dee355-23ff-4228-bfdb-14a18d0b0ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8104f6-dbb1-460a-8ab0-cb496e1ef875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d78e975-7419-491d-b04a-1e34ace7c213",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736df86c-fe04-4acc-933c-eaedd5c6761d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa356390-c5fb-4450-afc6-f94711f40919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2140156c-c13d-47b7-a9a0-645ae08ee11b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4ee333-13bc-43c8-a617-26cb4b1b8ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3b5d31-4a4f-4975-9c31-d0d539888abf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584f9efe-383a-4226-ab91-eea2a5ba79f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f79163-3c8a-4b3d-be95-a0ec69c55246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "278981f0-9b82-4d29-8803-6addb21af3b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26b2099-f0a5-41e7-bfe2-7d22b2a50450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d601d1a-9f98-41e1-95fa-8ada95576a4a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f99fab9-40c6-488d-8902-4da4908a1449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6f3a87-066c-474b-8bd5-0c79c2ef8d43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc3132d-5a3c-44f8-836d-29627ca5044e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e8981f-3eb4-45c3-b7bb-7f27106350ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b0d2199-3edf-4c9f-a8dc-ada87fb1b2ba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a546f36c-7be6-48ae-b629-51e8ec462996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "178a27fc-5e31-4eed-93d5-f5df324d62dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeb491e-a42c-4bec-a614-3dc12f4fa8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42fcba82-e784-433a-ac8e-ad025034ca0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b2d6059-e027-4c1e-98be-dfe73e49574e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60dc2c0f-8877-45cb-a7e8-d6a0544e7391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d5df86-a4e5-4859-8e34-0d7026a317d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c5b496-c0a6-47b9-a72a-a1a267321a45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "015767e1-50ad-495e-9d26-ae3156081863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7839d0-b3bb-4671-b5de-3cc9bcc3b954",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddc5d48-ceeb-4a1e-9168-20d48a67d040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92da4f26-5120-4afa-a316-03d3a3fc0803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9624bd08-cc2a-4935-9a38-f0495d91c629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad086370-f2ef-42a8-8e36-a0edfe7bcb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a336d54a-e029-40d3-ac9e-0d9cfea5049d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21414d69-3681-4690-9533-bf167c184c3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16337bdf-0288-43d6-bb88-0ab3ae290502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb67f5dc-2321-418a-99d1-46904887447b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed151238-48b1-42a0-97ab-fcafd273083c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bd152c9-0d4c-455d-94ae-a18b0a26953f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0547bf-970f-44bf-8bf6-d31563a70261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac2bef9-0434-43a3-af17-f2462b2d643f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66842a4b-1b15-4a3f-a515-086293cea2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac166f15-3a6a-4c2b-ada0-86fff6308137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df12220-dcf0-41a5-8e0f-1d8aa98c2940",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086a24ee-4b16-45ab-b738-7408e8d5d78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d32bad1-3ad9-4f10-8e58-064f462ccfcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3591ca42-82f0-4d76-b677-116f4b02333f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e999bcb-72f2-4549-aa10-3017a43f9761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c12ab6d-5054-440d-a152-bece1b1c6ba5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4b7870-9082-4404-9de8-032ce360b7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66aba714-eb76-4038-bb69-42b9b64fb7b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1549ffa1-ddd0-4f89-83ac-0634f72b3f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f3fc4cb-d313-4c88-ad2d-d0d5b6700435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24109a90-329e-42a5-9ce9-f651eadccea5",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e92e6c-f461-44bf-bfd5-5c2e5e28d491",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb26688e-232e-4569-ad5c-be150b9ff14f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0671e3cb-0d4c-432b-ae19-d833a24d7117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "631517c9-c67b-4a15-97de-80ede0590f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0380589-704a-4b2c-855c-4383670f0fa5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f6af4e-7429-4ee2-98f8-7ed10544fbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925284cf-f5ad-403e-b939-3e74f72ba8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19da1435-3825-426f-8db6-7ca324746a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5cb865e-62f8-4bcd-a160-f90434ab81f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e94636-65e7-4cab-8ccc-a86c1d85752a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96e6778-8c60-4af3-835d-96c1dc3e1c4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d26be2-b76d-4376-8db5-bc91b8f90068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ecdd0c-7691-4a08-87b6-6622c0f576c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abbca4a-3ad7-40f8-9057-e5c54a6fbbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfe2b94-bc39-4df4-a8d7-f455ac817d04",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271bb85e-29c4-46ab-87ff-989098e46ed6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac38b08-5dd5-4a9d-ae8a-365db7f493ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7150576b-43b1-4651-b530-dab1650816cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2d826c-b54b-46f0-997c-0ef2250acff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b0f9cb-7012-4e1c-930f-f5c6c8bb4cc3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80cc20f4-10fe-4a53-8da5-db7da88a6b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ed24778-1f6f-4457-a1c3-43470447cc23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055f6b35-4f48-404b-b5ce-23867ab69d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b60d08-7aa0-48a9-8942-f8cd877d301c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1387f19-c236-409a-8198-6d8d6566afb9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f321b7-e27e-401e-925a-0932358d0518",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a7a8b84-fe87-4abd-a7fe-9b940f2e535a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ced2d92-0bc6-498b-b9cd-9cf25155f221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7070ca3b-1ef0-4e94-b345-f84b4167b0da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51edba95-dd1d-438a-b444-c9808010c0ca",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaac4a50-e3d4-430d-b416-d45137b3b912",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64afa7ce-3742-49fa-8e88-3a6e82a33eb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ef1f51-ef21-4fd7-8506-9f9b89885904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a789b6f5-5bfe-4bfe-9806-541e09156203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67075bd-4ce0-4383-8b6d-9614d6b9af26",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28be71ca-bb2d-4405-b4b0-0aec9a1c43c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff3fe871-f80f-44a7-9ef6-ace592360872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eab905c-c27c-409d-9307-86d8400b1a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1532a7bb-4155-44e8-95b8-0ef82970b606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf193203-07ea-4339-ad43-833d0c7345ab",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65fb78c1-7aeb-4a62-8e2f-d257424af10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b855e78-8abd-4a95-8622-9a927974c4da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe394bcc-0baf-4d52-83d4-9bf51874c7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe15217c-e250-4113-bcd5-8426ab8eb6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522da9c6-6b03-46e1-abe4-e11dfc5339e6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1438e8-9785-41d5-bf9b-1537a5e90d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2454410a-a2fd-4e6f-a2b8-c6dc8502975d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b598e8db-19d0-4d7e-a8ca-9d43e2fdc364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8210793a-97c2-401b-9865-9678cad8e073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18173446-bee9-4fa8-8620-5f5d15745c54",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea2410b-119a-45d5-903d-4bcc2609af7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dacc4c81-372a-4c99-8d3b-5e89ee2b8326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2d56dd-6222-4167-964b-e57f5545b118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbb400e-7b33-43c8-bfad-d058d139e79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d628b6-0fb3-4b35-bd0b-b4dcf7609004",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ec9567-4966-47e8-ac50-06aecbcbbcdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b869144b-ea82-48bc-a22e-da3320baf0b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbebd2d-59a9-4739-9158-c016f3621747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adad2f0-f35c-484c-a133-8ee48214a33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555d5cd1-2b95-4261-8551-e4ce1b5549dc",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0bc66a-1ce9-46f7-a9c8-3f36ce06f25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4da535d-1c51-4dab-8af5-f14045b638f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a8ea5f-5071-47ab-9fd3-1ceaeed284af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d0026f-aea1-4db6-afeb-9037a99757f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12638d12-ba6c-40e4-a0c9-5ee3cd8167bf",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3f42f3-e1ec-4769-96f1-94900532e17d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4060d8f9-69aa-4094-887c-3cd4067f7e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcab883a-89b2-4ee4-949c-ac856afacce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4112c1-6c1d-4392-859e-0cb18adbe1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a036f49-79ad-413e-b759-7e6965c45ba9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697e9135-9675-48b9-8e1d-62160a0aeec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb7be19-b147-4005-a152-ee5ae7095526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34d0f52-44e7-4b87-a39a-9d7b024479b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d21a7d-91fe-47c4-82f0-42863654ed36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c59f7777-0782-4063-ae31-108fcb3844fe",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc087c97-1cf1-4419-a56f-c4103397c74e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e9284d-7f1c-45e2-98a9-f9d3eabfc556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c94863-1428-4140-a608-0ebaf0ce806f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46282a49-25e1-42f3-acfe-da92580b71da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb18ea26-696d-4998-ab93-b38f5fddffec",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f1dbdb-fa7c-44c5-8353-1ff353c6eac3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3658206-fb59-4d14-a310-d123a6186be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded94405-3c32-4540-8ccd-1c66d6741f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a955cd60-f316-46cb-af5e-a7c43c60a394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3957dd2f-aa94-4376-af90-ff4b6fc2bed5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68ae035-00c6-41e6-8adf-62398157ec13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85a3c39d-4b81-4baf-92d6-fd6346eeb1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3886cbea-7c1c-4eb6-82ab-6bb41da9d6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544a641c-b6a3-49fc-9982-391e65d34935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79954f83-e9d4-4d83-8136-5ced2adff3ae",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbbb4e1f-0b8a-4dba-85bf-5feb4620351b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34c81f6-ee3a-4cbc-acba-ff1b618e8402"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17e2e36-5231-429d-a91e-8ec3c3ac8f29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a8dc62-6bd1-4caa-89b6-a4a99895b462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1ed39c-50d5-4fd3-8419-bda9efa68c5c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d707b4-af9c-4655-8d78-2a3c3172171d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2faab92-eacc-4103-977e-f793f528ecf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308b4b98-942c-476d-829b-b5b9c8db9bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "475663f2-4d5e-48c9-a0a2-42406baec091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5ee3a2-84db-4f39-ae2d-ddb5cc873d7b",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d7ed91-2063-41d4-85e5-cd81060c01cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7de8c81-f78b-4f41-88a2-24556f29b643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b423c1f0-7a5d-41bd-a26d-c73e94db4141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594ba38a-3e52-43e3-a83d-33368b0d1822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c744ded-cdbc-4a42-8118-9feb69880991",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d10f12-3194-4a0c-93df-b8c05d51c116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c104527e-c7ec-4ae5-a53f-de8fec6c6a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56877045-7634-4efb-a387-2ac5c70ea4af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb196aa-0317-4756-a538-80daaeac174e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e245bc-2de3-49c9-9d22-60c45c1e6497",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de8fc04-cbfa-41a0-9b3f-026340f082d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba702123-2269-41f5-b718-7b8ca4b6cbe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a045850c-755a-4b56-8e5d-cd954f665937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f5395a9-5dae-4626-aa06-944486c9ff12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461912ab-d3fe-456c-b258-94a44bf0f2ba",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c48fe4-5ce9-4af2-a83e-bb34d28da0ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bef96ca-3a10-4b3e-b86a-866580d908ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e04d9d-85b7-45f7-ada1-92e4a6d5e06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ee6151f-f9ee-4c8d-bf92-ae1d060d35c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8636eb40-7310-48f0-911e-59224f8306cc",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649488c4-a815-41ca-9e56-3921ee643b65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d794953-01cb-47fb-9f1f-bbeba24f5153"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26f5bfc-bdaa-4971-aeec-69211bbdb313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "812a92ae-e2cd-4921-8401-0a99a8068eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca44f5b-8486-4aeb-8ce9-ec72f6b0e42e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b5de39-c013-4f29-93e1-c8ee6c92de9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528841a2-d495-45b4-b608-f2d4035b0afc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc83202-643a-4ada-8888-7f740a0311af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9924f2fa-c979-40c6-93b3-1bb147e386d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5ed112-271b-41af-bc5d-bda8af2663a7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3ff6f6-4e22-45e6-a648-b77020298d12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3d44af5-d5bc-4920-b10d-5fdb9830e5cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9445b10c-b1a4-4032-b94d-7186626c5248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "068a5f94-01b3-44e8-a84e-192676948f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3575e66-6143-4682-ad0d-2242603d82da",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2df5b3d-e56e-4706-9e6c-379af26864d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04f9de0b-d013-4fb2-8be4-e3bffe6af9dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e621cd93-8b68-4c32-82c6-9d55e785cd19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed07bf32-f867-41fd-97f6-53f6b8ae6be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e326f8fd-3862-4981-870e-dbc25d362220",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9151df-7fae-4d28-b8ff-9e6e131f534a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a72680a1-0d40-4e13-9731-54d321e9057c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17abc341-c84d-45a8-b1d0-667a84680d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b2a313-4527-4abd-867f-9cd73414cdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcf36168-399f-49e4-9403-4010f30e7250",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb7dba8-530f-4e69-a248-b8825ce25b84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ed7baea-41ba-4dab-9dc2-118750f3863f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd780d95-cbe0-4f3b-a421-6802ad8fba47",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1af4ce-a2a9-4458-ab63-8bac24f19123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c55c7aae-5e17-42b7-8fa6-3066d9031546",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39002450-e250-4101-ae68-4c527c792a1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ac45ca-1f98-41f9-aafa-c48f138f8840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a053d2ba-e2ba-4356-9f41-6f0a98b196eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5734ff9-03c3-4a00-8177-26904104f164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecac737f-cf85-4dc5-a1cf-952b8df96143",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bac6215-91cb-48af-a674-af485b6acca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c48a67f7-db73-439c-8958-efa1729cde2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749d9d90-e2fd-403e-ac83-bfa124a1c527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5544f9d-d541-4427-b572-a533d202c647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0cfb3b8-fbb3-4652-b82e-2d3e9d56c6ca",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1261987c-87ff-49d2-ad61-b60a52f4d6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c73a755b-d546-4d02-9e68-794e60108f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d26d19-cabc-4661-a396-e4fda83b47de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640e491e-2ff6-4136-be82-d9cfb204f554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ef04e4-5de2-4963-a07c-49093f89d09f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516960a1-8c3d-43bc-867d-13d0bcf4bf4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb46bf7e-2651-4530-910e-97f5d417488c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6071d073-8e89-47fc-8b58-252fc3f70302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8961f1f8-1f0d-4036-907f-f26ae922f622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50b73efb-cdeb-4f53-85b6-757ca7680a81",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c6d081-8864-4a21-a4e9-e1dc4238abd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25aebd9b-354a-460b-bf16-901f362d38ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564a3176-8a31-44a2-ba2b-0476c4ee6a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f72d74a-5298-43ee-977e-e2a7b80b6454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7935f2af-a1cc-44fd-a3aa-7053b42fc6ea",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998118b7-81f7-4ced-b9fe-05f3bc072602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1450e5db-17b3-4b24-9ad0-343527a1236a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0204736-1174-439a-981f-494e818412ce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00b43d7-696a-4443-94a5-035eb6df5053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7500ebed-5b1d-4973-aea5-f4a6516ed245",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d491db4-99df-4319-b825-0facae2ab0af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703ce654-984b-43fa-91cc-a638b0054246"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6f1e6-6720-494a-9de0-cbb9e223ee3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc6a6834-acde-4aae-a392-89e1c8b30fb0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2040c0e4-56d5-4b58-9f3f-e70f8343a5af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "334efff3-1264-4672-b3a0-da11666dcfe3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ab13f10-cc2b-45a1-a9e0-e586e5502c82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7099d7f3-105c-40ad-89fc-a40e3d3639e7"
                    }
                  }
                ]
              },
              {
                "id": "4eb86e41-2b94-45ea-960f-2528da670cc7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40e1e36a-3da2-44f4-8297-9295806237c1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5778a2-7428-4ff7-a77b-5d8d3225cb34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8122b25b-ea4b-4191-99f2-9f42f6ef3978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91836d24-fc76-4b8a-aa57-4871d239e25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "466df057-f424-4166-b2e0-a4edbfa14b72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcac0b0f-3097-4551-a75c-0c0392e53442",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf9e61e-d768-44b0-9869-029d2f45d4d1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3f0faba-bb4b-4c23-8ce1-c908c369c855",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "230a0dd2-6fbd-475e-b8a0-8a80d80e4a06"
                    }
                  }
                ]
              },
              {
                "id": "6cca3387-1d83-4578-ae51-f880d63aac07",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "128b380a-7259-4067-8b7e-a6b3e2c0017c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4308fd74-9e0a-4715-b88e-ab4c6f3cd70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "83ac9de4-e5ff-41b0-92b3-86800f852e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896713c2-9b98-4689-be57-0233ec75c78d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89818394-94ff-449a-b1bd-5896c7b0c7ea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b63cb6f9-6d09-4336-b7ad-f4db0a6b9548",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e5944235-42d4-4357-9d40-11976b834720",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "131c857b-edd8-42bd-82d1-6ed2719fbc41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "09b0cf86-33aa-4144-a209-a1f7b55edbe6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a5ab469-a3ea-4ef3-b2eb-07155c503672",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd7940ac-db55-4ab4-98db-fe852527da69"
                    }
                  }
                ]
              },
              {
                "id": "5ed5eda0-b689-407f-bca0-03ee0844c097",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d97c14b-f02e-41d8-83ff-b5eecb0f8f28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d8ff81ed-0b0a-499e-9490-d1e1760d2ae4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd3c0ab4-3d29-4cad-80b9-8e57e82521ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba0dd8bf-b8da-4c0e-9da2-446cb50eda6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e946b92b-fd9b-44b4-a040-77c17b49bb83",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3b3e6ed1-f22d-4fd8-a6a9-95226576bef9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be92cc74-2410-4bfb-ad6f-d48eeafbd344",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4e784fe-4ad7-407c-ad69-b89ec2f46e1f"
            }
          }
        ]
      },
      {
        "id": "ada4ecb5-9df0-46c0-81bc-0b3573b32b39",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "59c79f51-2b7a-46cc-98b3-7997c2ce1ab0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b34f2774-9616-4014-a74a-31ea619dcb8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1e003e4-6f63-4905-8bb6-203f2d457c23",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe92943-5070-4804-af27-d68ae9a27413",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1d56b205-3584-482c-aec6-c9e500230894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b42b391f-48ac-44f3-9a8a-4cf2c7d04546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8efafc43-c4ff-48a3-b058-b284307b924c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cd375a3-c350-4aa3-8522-6758b6ee72c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3bf077c0-4674-42ef-975c-55c5f54595b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d80071f9-2666-48f8-b0e7-8327f4700450",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd3529b6-4c72-4866-82fa-9c2b0b283b21"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af3abbe9-eb85-4f7c-811d-730c4b6db6ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "944ce146-9fd0-476f-811c-d2faae2eb210"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de25246e-5809-4892-ac25-98db518941cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91e6c98a-a4e3-46dc-884f-d9fa50f159a5"
            }
          }
        ]
      },
      {
        "id": "d545ec28-0197-4813-9935-dd553daa991d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e2d7a2ed-6e4d-4b99-bc80-7e94483e9b4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d142b9e1-f994-472a-960c-aafd300556b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "40128ad1-0f67-4a5b-ae35-7b2a78a6bce8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d41344c-fcd7-49d6-9217-fc992469a75c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c76b8010-c342-40a9-815f-1b63cf105107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63353830-ba32-4a03-842c-874f0e4484a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77cb12d5-e47d-4bfb-bcb5-0a186d6ed4e2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14db2b70-c052-4804-896e-a5493b5a96c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "667138f5-d4c0-48a4-9715-f013d3d3937b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4aa9c02e-fe6d-4914-9f17-9840386d78cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61fe2fad-1e27-4e00-bcde-8e6d02c43e0a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "afb91092-938c-4966-af5e-23476f3859b5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f1db95d-2231-4d13-b1ba-0fa8e2a5a0a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f4b12e5-274d-4148-8e27-c416bb5ffaf9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23430b49-a5be-4d42-a167-713ae5c1d516"
            }
          }
        ]
      },
      {
        "id": "0d749af9-8b74-4a67-8a21-87219d9bbbf7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8bcacaa8-f590-4837-9496-0348556352e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6348d4a1-c16c-45d4-9f62-b1b1d5b18a78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "658bcfb9-401f-443f-98bf-8d0963947afa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a72a2f-6d69-4200-bedb-f916ddf7612e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6264aa1e-bca4-47c9-aefc-68b03f506553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698e1876-2130-45f9-bc54-08a43ed70cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "336f087e-cbda-4913-9ef4-d8e18cdaf9f2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1553b6fa-f038-4dc7-9bc0-ae8d4c50e11c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c9f49b8-f5dc-4f4a-a463-31e5222bbde4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "61afa45f-5d60-4d90-a965-4cbfa011c80e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eaa45e4a-ee59-4779-8fa9-94429cdd386c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be9ca655-1d85-44b8-bcaa-8e77f1f7ed60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4f31b1d1-5967-4fa5-b01d-69c60f74b0c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06b72fdc-0644-4eaa-8a2b-fd80c87c64eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1380d1d6-0d88-4408-a88e-12378ebefbae"
            }
          }
        ]
      },
      {
        "id": "6f524f61-978f-4f94-88a5-db4a4613d78d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddc3e291-2768-4f58-93e8-6dbf300d7939",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ab7b327-1992-43fc-8e86-67ca225e6dbd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3ffeb82b-319c-48a3-92f1-19ffa3e5f7d4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddabf6ad-c973-46aa-9fdc-11536f502609",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7c238dc-40ab-492c-8dc8-69753c2bf438",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 329.58802816901385,
      "responseMin": 22,
      "responseMax": 6936,
      "responseSd": 793.173765660924,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693269159412,
      "completed": 1693269265027
    },
    "executions": [
      {
        "id": "97ae40b5-0086-4e3c-952e-2d9149706542",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9def92de-ac36-4666-add9-0d0b1364321d",
          "httpRequestId": "3b5c7f6b-cc7d-429f-9c27-1c5d17f175a6"
        },
        "item": {
          "id": "97ae40b5-0086-4e3c-952e-2d9149706542",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d37d168d-2f81-4866-8ae5-eb0c9b44ce97",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 0
        }
      },
      {
        "id": "6fb7c35b-8835-41af-8edb-269a588dc779",
        "cursor": {
          "ref": "1cc139b5-f51d-4c20-b4d9-4a261b1b47b4",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3f434548-ae46-4fd4-bde6-c93f0f5fb0dc"
        },
        "item": {
          "id": "6fb7c35b-8835-41af-8edb-269a588dc779",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "cfc2e55f-92d5-4f92-97cc-1c3a59f912da",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 0
        }
      },
      {
        "id": "0955a4c5-9ead-4c42-a7eb-275c52f27a0a",
        "cursor": {
          "ref": "3ce02e32-e2d1-4d55-a849-3cd451d8d31f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d291e882-f398-49d7-adf3-1717bea4e86d"
        },
        "item": {
          "id": "0955a4c5-9ead-4c42-a7eb-275c52f27a0a",
          "name": "did_json"
        },
        "response": {
          "id": "e65567a9-d3fc-41df-bad8-14313aa9d8f7",
          "status": "OK",
          "code": 200,
          "responseTime": 1125,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09b797b-2809-4691-b0da-2e986ace1607",
        "cursor": {
          "ref": "c63e8e18-47a1-4832-95fa-b3ffb4af1585",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3b4d0dc2-670c-42a3-b13c-d4a4ccd627ff"
        },
        "item": {
          "id": "a09b797b-2809-4691-b0da-2e986ace1607",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f9ce5a4-be4d-44f3-9af4-4044a61de052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09b797b-2809-4691-b0da-2e986ace1607",
        "cursor": {
          "ref": "c63e8e18-47a1-4832-95fa-b3ffb4af1585",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3b4d0dc2-670c-42a3-b13c-d4a4ccd627ff"
        },
        "item": {
          "id": "a09b797b-2809-4691-b0da-2e986ace1607",
          "name": "did:invalid"
        },
        "response": {
          "id": "4f9ce5a4-be4d-44f3-9af4-4044a61de052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f0ec1f-f115-4cef-8ff4-6887b2f2f76d",
        "cursor": {
          "ref": "00105e4e-f76f-4164-b870-6c3b136b0a82",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a17dc719-8373-4ecf-b3d3-4a613d92d185"
        },
        "item": {
          "id": "34f0ec1f-f115-4cef-8ff4-6887b2f2f76d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "2d4704bc-0388-4715-840a-9b929e0baf4d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 394,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb25c7c6-5c3b-49e6-8885-742c95d62e91",
        "cursor": {
          "ref": "46cfc565-33d1-4be3-9ce8-4fe0e684228c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dabf9e38-1320-43e4-a816-d306dd323b9f"
        },
        "item": {
          "id": "cb25c7c6-5c3b-49e6-8885-742c95d62e91",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "3ec62efd-ce2e-4ee9-a0f0-192000788be8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 271,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a059a07f-b4d3-4375-9852-3faabd01f190",
        "cursor": {
          "ref": "ce8e1a78-c0d2-4dd8-be5d-efeab4b3fc4d",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b6729bdc-4ab3-4a5a-916f-0a6943d36e74"
        },
        "item": {
          "id": "a059a07f-b4d3-4375-9852-3faabd01f190",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ecbd471a-8614-4d45-a028-bbe551cc6204",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a5f545-823b-4338-bd89-67c8eef4ce4a",
        "cursor": {
          "ref": "918d4b0e-4b02-4b2a-8b0c-9c9acfd08719",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f2558063-9a4c-43bc-b4b9-4ffc410b08be"
        },
        "item": {
          "id": "00a5f545-823b-4338-bd89-67c8eef4ce4a",
          "name": "identifiers"
        },
        "response": {
          "id": "9226c23e-1790-406b-a438-224bba5c996e",
          "status": "OK",
          "code": 200,
          "responseTime": 1045,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1712bf4-323c-4b1a-931d-2a9908161d9f",
        "cursor": {
          "ref": "21e7f017-b222-4d9e-9c06-d45e64c6c65b",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5415a39b-caa4-4745-8406-abe0e6902234"
        },
        "item": {
          "id": "a1712bf4-323c-4b1a-931d-2a9908161d9f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b7af27ec-2596-4280-801f-6ae429bd71c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce011a7a-6371-47b3-b421-37d77ece06a4",
        "cursor": {
          "ref": "457ce38c-21e2-49e5-9180-f59b3cc567c5",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "281f20b5-df5b-4d77-aaa4-bfb6545d5603"
        },
        "item": {
          "id": "ce011a7a-6371-47b3-b421-37d77ece06a4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "5ab8b432-c0fe-4c7c-b673-6be2ca5b0d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce39e810-4cb9-4054-90c5-918419bcb2a8",
        "cursor": {
          "ref": "ae163083-4787-416e-9c08-b74746352de2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5fbf64b6-affd-4924-8b7e-0097731dc1aa"
        },
        "item": {
          "id": "ce39e810-4cb9-4054-90c5-918419bcb2a8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6ef6769e-31cb-4110-a4c0-1a7af3a5a0e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c245ed2-a800-4728-9e38-dffb82d5a39f",
        "cursor": {
          "ref": "e099b449-814f-4749-89db-d6e69a99774e",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d7f2e0cc-94a1-483a-929c-ae5253f5cadd"
        },
        "item": {
          "id": "9c245ed2-a800-4728-9e38-dffb82d5a39f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0292abb7-f0a2-484e-ac53-98ae7da411e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e45ffe-1181-4eda-9f14-a263bf18a5cc",
        "cursor": {
          "ref": "a640a379-3dfb-40d9-8ebf-2639b1c23775",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "57c16de1-bc65-428b-8abf-893c8c502a69"
        },
        "item": {
          "id": "61e45ffe-1181-4eda-9f14-a263bf18a5cc",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "388b5684-bc51-4d9a-9ef3-a5984d8ff434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a4fc9c-26ce-48d4-bbd2-8f18defc8266",
        "cursor": {
          "ref": "6af6266f-f57d-4c93-ba46-2eedecab42f9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "31b31876-5e8d-4f1b-a64f-e2d91ab3ee2a"
        },
        "item": {
          "id": "b8a4fc9c-26ce-48d4-bbd2-8f18defc8266",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6a30ef7d-ed5b-4a1b-9a2f-08741e4e60e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b7edaa-f176-43fc-bf0e-0dc5db65b6cd",
        "cursor": {
          "ref": "9045e20f-0b23-41b5-9e12-3c4958a32204",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "84c669d6-c517-46f2-aa43-dd177b6c530a"
        },
        "item": {
          "id": "22b7edaa-f176-43fc-bf0e-0dc5db65b6cd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c9b93268-d1f7-4422-a221-f1838d5bc058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34efbc39-245d-4774-8f2b-ca4bb4b08f24",
        "cursor": {
          "ref": "c560520c-c4d3-42bb-ac5f-eea849f8abce",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4901d325-22c7-4eac-9353-80dfb60eefe8"
        },
        "item": {
          "id": "34efbc39-245d-4774-8f2b-ca4bb4b08f24",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "a84e9300-51cf-47ae-a3c2-d8dab3aa5e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1d7717-c309-4315-baa3-80ee7b2c6004",
        "cursor": {
          "ref": "bddbf50b-5083-4381-956f-a34607d5f411",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "eb394d52-4c6f-43df-ac73-0767d93174e2"
        },
        "item": {
          "id": "3c1d7717-c309-4315-baa3-80ee7b2c6004",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dd8fb553-b542-40a6-a8df-abb2b53e02d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab0e113d-3851-4685-b84c-849fce42bb7b",
        "cursor": {
          "ref": "13ec4c4f-fe1e-4c0c-8227-3ed1adcec636",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "13579d88-7329-40bd-bc38-55184f640965"
        },
        "item": {
          "id": "ab0e113d-3851-4685-b84c-849fce42bb7b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "058574d0-df89-409a-b1dc-436261e533af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b2f1c8-ec51-43d3-a1cd-bcab9b452b78",
        "cursor": {
          "ref": "cb0a6a9b-410e-47e1-b057-5b796f47336b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "630d8e8b-fdc5-4da7-8582-a68d524f81ec"
        },
        "item": {
          "id": "b5b2f1c8-ec51-43d3-a1cd-bcab9b452b78",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "fdd6f0f1-6fc8-4a34-9a8f-7ed579d4a748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c8051a2-b9e8-49b3-b143-04469ebc16cb",
        "cursor": {
          "ref": "835ac1a4-bd44-43f7-bfb7-5f550eff8246",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7c7ed7e1-6337-4360-b28b-a588a033b572"
        },
        "item": {
          "id": "5c8051a2-b9e8-49b3-b143-04469ebc16cb",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "16d03da5-20e7-43ea-84bc-550d8857c9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b284197b-f4f5-4171-af9c-95fc4dd203e8",
        "cursor": {
          "ref": "9941f8ee-1903-4ce8-974a-58397941f58b",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b86a867d-b048-4ae3-a4b7-5dd697fc320b"
        },
        "item": {
          "id": "b284197b-f4f5-4171-af9c-95fc4dd203e8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "169a5547-6811-40d4-bfc6-46309c150337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4345eace-03e7-42f3-9e93-ebe7439b95b8",
        "cursor": {
          "ref": "327abc9c-4447-4e68-8752-fee20f1e890d",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f2d2679f-1947-4c35-b5dd-e32e86fe7dde"
        },
        "item": {
          "id": "4345eace-03e7-42f3-9e93-ebe7439b95b8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6cdf367e-af54-4890-906f-0e165d65b6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c511a27-b76a-4f4c-a058-be7cd1220918",
        "cursor": {
          "ref": "f6877514-b5dd-4b45-8cab-242c5d2b820c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e91a2187-67f7-4164-abd2-cbc50ceab8d7"
        },
        "item": {
          "id": "8c511a27-b76a-4f4c-a058-be7cd1220918",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "229b8e58-6b12-4863-befb-57962274fd88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc468b33-ae6e-436b-91d3-55d589afd050",
        "cursor": {
          "ref": "5a169875-eddd-4799-8c27-ce66b9c09083",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d4ed7711-8bda-4f01-bd41-1a6d61e43913"
        },
        "item": {
          "id": "fc468b33-ae6e-436b-91d3-55d589afd050",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b3764fec-e55d-4b4f-82de-5693ee659244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a24c746-731a-420d-9de6-fab6627e4f2a",
        "cursor": {
          "ref": "e4b7a823-c47e-4cde-88f8-268049b17f7a",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "313935be-24fd-452c-9a13-c0ca45771df1"
        },
        "item": {
          "id": "8a24c746-731a-420d-9de6-fab6627e4f2a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "97017f9b-1afd-4f53-85b2-9c11f736b1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c70f92-f3dd-4af5-ac18-a6dae1955d5b",
        "cursor": {
          "ref": "078beb65-128f-42e9-b22d-8fd00d71876a",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "0035edb8-694f-43ff-8f70-2ae168ab318b"
        },
        "item": {
          "id": "d5c70f92-f3dd-4af5-ac18-a6dae1955d5b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5d8d8d27-287a-498b-84dc-0c47a1bf8eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207018c4-9fe0-40e5-903c-d89c6df76ba0",
        "cursor": {
          "ref": "621927bc-e9d8-4f8c-aa2e-50db82a2d00e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4b764438-37d0-466a-bea2-a4308a019b32"
        },
        "item": {
          "id": "207018c4-9fe0-40e5-903c-d89c6df76ba0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "36b915ec-85dc-4dd5-88fc-673e7c72a8db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36c44d9-7dde-4998-950d-f625ef88bada",
        "cursor": {
          "ref": "e452c8fb-c556-4164-9969-bbd6f3790d7c",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "b425824b-cefe-4a65-8b86-80b358fb6907"
        },
        "item": {
          "id": "a36c44d9-7dde-4998-950d-f625ef88bada",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "fd277854-e371-4f7f-9986-f02175363883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1aee4e-e7a3-46fe-b964-d1e2bd587475",
        "cursor": {
          "ref": "bb00bd9c-5f8f-4930-a212-458f81688208",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "25c8f849-f81a-4b9c-92db-7eee450aaa1b"
        },
        "item": {
          "id": "bd1aee4e-e7a3-46fe-b964-d1e2bd587475",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e3da6af3-9e2a-4583-b7b8-81211a09c5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f30e582-129f-46a7-b7d2-21a912cf6e3a",
        "cursor": {
          "ref": "435866cc-a649-4986-aa56-bd5190c93f93",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "79db206d-fff8-4f81-8185-52fc2004c9e6"
        },
        "item": {
          "id": "1f30e582-129f-46a7-b7d2-21a912cf6e3a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "eb367bca-be02-49f4-a165-53d8d788165d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d437a13-8c60-4895-9c11-cf01c3ea1f0f",
        "cursor": {
          "ref": "43a5c458-667f-419c-8e43-b467274ea56b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1c310e84-da85-442b-9f4b-6124613b2950"
        },
        "item": {
          "id": "6d437a13-8c60-4895-9c11-cf01c3ea1f0f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "954a6484-6769-43af-abb8-9332f6f4effd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296b7821-6044-4454-80f9-69acb4c75856",
        "cursor": {
          "ref": "ff44ec60-4460-4814-84e2-4f653692f626",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "72959557-5886-4da2-8a0b-89b7cbfe8b08"
        },
        "item": {
          "id": "296b7821-6044-4454-80f9-69acb4c75856",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "137ab3c9-f861-45bc-b254-ad86584268ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f95ac0-2452-4150-8fa9-58fc42bc02fa",
        "cursor": {
          "ref": "5700f17f-a751-4a2a-870e-eb209f3abc1d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e08383b7-3df3-442a-9ffb-1931b8e0349b"
        },
        "item": {
          "id": "63f95ac0-2452-4150-8fa9-58fc42bc02fa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "181a8764-748e-4969-979d-40eb4ebb2061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c7feb3-1184-4ef3-8ede-73b62ba803fb",
        "cursor": {
          "ref": "0943387a-ba9c-4e42-8688-f2f68bf537fd",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "4b544f13-c8a9-4bee-8a2e-afca56eff3f6"
        },
        "item": {
          "id": "a0c7feb3-1184-4ef3-8ede-73b62ba803fb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dfea6797-28e2-406f-9dd1-c8b7e8f17127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffdb72a8-7c11-415d-a4b7-4aacbeba5a68",
        "cursor": {
          "ref": "7e1c0412-e833-476b-bcfd-73931a687c92",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "17997962-d721-4e5b-ae0b-4157fce29159"
        },
        "item": {
          "id": "ffdb72a8-7c11-415d-a4b7-4aacbeba5a68",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0e6c5676-728f-4981-ad18-34a571b7e987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ca1e34-dceb-45c6-961e-ef262aee8647",
        "cursor": {
          "ref": "55bb9aab-e523-4620-935d-82350459972f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f0c6c216-5956-44ce-aba8-5c29d6ff71ca"
        },
        "item": {
          "id": "80ca1e34-dceb-45c6-961e-ef262aee8647",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "51595ad1-1092-44ff-9d70-dc1719e1d8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c821e21d-23b7-4973-ae94-bc6f88ac8ee0",
        "cursor": {
          "ref": "5e9f7dc9-7071-487b-bf5d-6049fdf24f28",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3b89dc82-9671-48c3-b794-c7be0ad017b4"
        },
        "item": {
          "id": "c821e21d-23b7-4973-ae94-bc6f88ac8ee0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "50a82805-b417-42e3-84ff-2e92581e3559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc801fe-011d-4e66-bcac-ec69d2ce9750",
        "cursor": {
          "ref": "9600f189-c32c-49f1-9903-cac1ef1ced6c",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d4fdad3a-3a2f-421e-9851-bf9bfb51f9fb"
        },
        "item": {
          "id": "dfc801fe-011d-4e66-bcac-ec69d2ce9750",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ddb3eb2d-ce39-4986-87dd-303e8e77fcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd582ec9-12bc-4aa6-a59f-7743acea593d",
        "cursor": {
          "ref": "48971248-7913-41b4-a1cc-649fe339fa58",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8b5eb85a-2c4c-4753-ac52-824b7806671a"
        },
        "item": {
          "id": "fd582ec9-12bc-4aa6-a59f-7743acea593d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "07107206-fcc1-48a8-a822-9def80f61828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3311119-60aa-479b-b35f-02d32b8f853b",
        "cursor": {
          "ref": "052107c0-0f48-4687-9414-fa2ea12ea468",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b72036c7-e491-44fc-a86f-a8bbe5640d40"
        },
        "item": {
          "id": "c3311119-60aa-479b-b35f-02d32b8f853b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0231bd76-9c46-4792-960b-8066a0a5ab2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd989c6b-43ef-43e1-9ec0-d45fa9bc1e89",
        "cursor": {
          "ref": "8f35fb31-6e82-46b0-af86-c85cd16bc4d8",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c7797ca4-2a96-4ee2-b6a8-072b2b9ab343"
        },
        "item": {
          "id": "cd989c6b-43ef-43e1-9ec0-d45fa9bc1e89",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a083ae6e-41c3-40a3-a63d-f3de7db117ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa2ce4c-fc35-4060-8d94-d9aee08927ce",
        "cursor": {
          "ref": "16f5dcf6-cc12-462c-8962-1a733c2561e7",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "dd6f5419-9021-4859-94dd-5867cb0fc9aa"
        },
        "item": {
          "id": "6fa2ce4c-fc35-4060-8d94-d9aee08927ce",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f41fa359-6705-4525-b7f2-f67ea03ca6cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae99353-8b6d-4530-b20b-8817da84f63e",
        "cursor": {
          "ref": "8c1045a9-ae59-4dcc-a5fa-044a7dd40bf6",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eed35505-c91e-44b8-9c87-162ab13582b0"
        },
        "item": {
          "id": "bae99353-8b6d-4530-b20b-8817da84f63e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ac762d0d-ce9d-4950-a20e-0fcde8530002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27399c5c-38fe-4e88-8fd7-e5bd5a9e86e1",
        "cursor": {
          "ref": "ef7e72dc-c4b7-4690-891d-ca84353c1e68",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4e4b4c94-118f-4422-a9e1-65d0b5978d7d"
        },
        "item": {
          "id": "27399c5c-38fe-4e88-8fd7-e5bd5a9e86e1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "eb0eb732-a536-4abc-b557-4b12b412cfc9",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 599,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9946e7f-b50f-446d-aa0a-8f1e5b445f7a",
        "cursor": {
          "ref": "be927050-f89c-4b2a-806c-2958e138a72b",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "14465ff6-49e6-4bfa-9aff-e08dc03dcad9"
        },
        "item": {
          "id": "f9946e7f-b50f-446d-aa0a-8f1e5b445f7a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7db9e189-b3f5-491b-a2c6-15c18a137abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63f7a0d-f6f8-4fdc-9011-9c820ade420e",
        "cursor": {
          "ref": "4c8126e9-f40d-4b0f-857a-cc4c17da3674",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "28658fef-8331-4c3c-a195-b27839286807"
        },
        "item": {
          "id": "e63f7a0d-f6f8-4fdc-9011-9c820ade420e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "37818eec-ecb1-4b7d-8aa2-7c2628b423d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c979bed-7bda-42ff-9c0b-0cab76c59dc2",
        "cursor": {
          "ref": "1f797667-c0d1-4428-8e8f-45a9516bad12",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d7f500f9-e73f-4ac4-a99c-c8139893616d"
        },
        "item": {
          "id": "2c979bed-7bda-42ff-9c0b-0cab76c59dc2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5ca55726-6b1f-441c-b0b6-07cd8d53875c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef88c37c-c025-45b4-9128-1aacf8010a6a",
        "cursor": {
          "ref": "0d34557b-195d-42b5-b827-82dc122b9c48",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d3a48628-b4da-4083-ae4a-564f086b06c2"
        },
        "item": {
          "id": "ef88c37c-c025-45b4-9128-1aacf8010a6a",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5679c9dc-fe8c-4093-9b3d-e821cb8d744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c1f0be4-91d5-4549-b7c0-7cb9c2d593fc",
        "cursor": {
          "ref": "d57000ce-46d6-460e-894a-f4ba8048d5c6",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a93813d4-6729-476d-bb33-51b3650d85b3"
        },
        "item": {
          "id": "6c1f0be4-91d5-4549-b7c0-7cb9c2d593fc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "8e8538c4-f737-4fd1-8de8-c4c717e806fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cdfe7b6-02e8-427f-9b2e-22ec30058d0b",
        "cursor": {
          "ref": "65ca9a4d-6e45-4b20-9c36-a40d8b8a87d3",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "369cbd6a-ddb5-4c3d-9dd8-f7910cc4ed42"
        },
        "item": {
          "id": "9cdfe7b6-02e8-427f-9b2e-22ec30058d0b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f16e7e22-3632-4e9c-b221-561389ca12d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "323531fe-7fa0-4ba8-a9e1-bc71898a5dc1",
        "cursor": {
          "ref": "80334c0d-dbbb-4395-ba3c-f4036293fbfd",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1e6d2959-acdd-43f7-aca7-6a8936d71161"
        },
        "item": {
          "id": "323531fe-7fa0-4ba8-a9e1-bc71898a5dc1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "033cf7cb-f603-4a3e-a939-48bb4e024e86",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 605,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bc41f7-18c9-4e8a-b6cb-4b68612eb7c7",
        "cursor": {
          "ref": "f0903366-85da-492c-becc-a3bb11ce8463",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f4ca105c-c281-44b7-8ad2-4c2e82f05c7d"
        },
        "item": {
          "id": "08bc41f7-18c9-4e8a-b6cb-4b68612eb7c7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "feca7430-f2fc-438d-8367-c75f9ff79597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e038c64-222b-4be9-acd1-8bff6196da32",
        "cursor": {
          "ref": "a5970a7e-91f0-4380-ba56-578cc6240f89",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dcc1e4e9-8547-43f9-b001-e6954eb4e072"
        },
        "item": {
          "id": "3e038c64-222b-4be9-acd1-8bff6196da32",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "3bd34888-a0f4-4175-b960-b995c7b2970a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e767ce7-1b54-44af-b13d-03e656f19ebf",
        "cursor": {
          "ref": "c315d53f-60a6-4d9e-abb0-db9734461fe0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2df02c56-025d-40ad-8847-47ec538640af"
        },
        "item": {
          "id": "5e767ce7-1b54-44af-b13d-03e656f19ebf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3e1b5192-0c64-450c-ab48-542e4ca76f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9516f6-887b-495b-b331-394c1f7c6d94",
        "cursor": {
          "ref": "ff5a112d-fd89-4639-9eed-8b2dbab1b4fa",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "24306e6d-5434-402a-9766-9d42d53693f3"
        },
        "item": {
          "id": "dd9516f6-887b-495b-b331-394c1f7c6d94",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e9d2906b-6dc0-4761-a3fb-41370ae21f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f27f9e0-51e1-48f3-a78c-4909af14a9fb",
        "cursor": {
          "ref": "e4866931-c921-466e-ae74-ca970af179a6",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "279b3c14-04ca-4b2e-a679-0bc26be818d7"
        },
        "item": {
          "id": "7f27f9e0-51e1-48f3-a78c-4909af14a9fb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "6a1f79c8-c7db-4cac-be34-d018f47e9a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a796fc-e03d-4a0a-ba72-69858db0121c",
        "cursor": {
          "ref": "4e91feab-a3f2-42a3-a816-63f4fc709e2e",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "24e98158-789a-4f60-9e24-59ef9bf4e525"
        },
        "item": {
          "id": "68a796fc-e03d-4a0a-ba72-69858db0121c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "39ef3126-287a-44c8-a7db-5035df027a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d700ed-641f-4b4e-8526-aaedf5bb618c",
        "cursor": {
          "ref": "a3657940-56df-4894-810d-b0b2fb997b44",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "753d4178-a6d4-45c8-a5ff-392bf4afba3d"
        },
        "item": {
          "id": "62d700ed-641f-4b4e-8526-aaedf5bb618c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9d19d4e7-ec0b-41a6-82ff-5da36cf5bd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263960e7-7c87-4772-b9bd-d71eac9d8d67",
        "cursor": {
          "ref": "c6ae1dd2-3c3c-4987-8601-a1e7ebf5dafa",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c73c25d5-ba67-4227-862b-e91e50d2d1e8"
        },
        "item": {
          "id": "263960e7-7c87-4772-b9bd-d71eac9d8d67",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9056e5df-9da3-45c4-b17c-e47c7db111f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85efa41f-b94c-4f1a-b507-cf84969c46dd",
        "cursor": {
          "ref": "6b2f7aad-809a-4a6d-8f63-6f8b62eb7ada",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c9d9bfa8-5da4-4988-a6dd-c880305b3861"
        },
        "item": {
          "id": "85efa41f-b94c-4f1a-b507-cf84969c46dd",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d705698b-6e2f-4e63-87b4-88168bd87e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d9a424b-beb7-4a65-a3b8-3f625350df97",
        "cursor": {
          "ref": "94d0539e-4a3d-46d4-9ac7-ad0775a684ae",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "21c50183-53ae-4b38-9a93-e11bb486f632"
        },
        "item": {
          "id": "0d9a424b-beb7-4a65-a3b8-3f625350df97",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8c3d7ad8-be13-482c-bc7c-e290bff7cd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d14f711-1351-4619-82a7-3c54d9654357",
        "cursor": {
          "ref": "8ef8e37c-37c0-47aa-baa3-df3005a76397",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1119a6f3-23fa-4827-b8d5-a57caa4f759f"
        },
        "item": {
          "id": "8d14f711-1351-4619-82a7-3c54d9654357",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f4eb3a2c-e988-432a-b08a-c884e79bcc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e1574e-a811-4661-8368-2a7de280f02c",
        "cursor": {
          "ref": "1717ac42-f497-49c6-80b7-4d8d85c1f5a0",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "9eb0d570-4d54-4b91-abec-7036fe1c5587"
        },
        "item": {
          "id": "93e1574e-a811-4661-8368-2a7de280f02c",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2f38679b-4799-4024-957c-a9d9180cdbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0abca1e-8834-4613-85ce-71ec0b00773d",
        "cursor": {
          "ref": "ed281262-cc30-4a48-820f-df83f11fbe43",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "49e1f0d2-271c-44fc-98ab-b2785b33f240"
        },
        "item": {
          "id": "d0abca1e-8834-4613-85ce-71ec0b00773d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1a355947-ad40-429e-8e3e-f9a675ca9845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992614ee-9201-4944-9584-aeaa1ff24ef8",
        "cursor": {
          "ref": "9529d6c7-9c6a-49b1-b9d7-c21e909de26a",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d61f29a-3304-4dc9-af91-9d4e53116142"
        },
        "item": {
          "id": "992614ee-9201-4944-9584-aeaa1ff24ef8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e011b131-58ba-4eab-bd61-b225f8e521c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aad9ed-f335-4df6-9bee-8647097cccdd",
        "cursor": {
          "ref": "6855b62d-11e9-4fff-9e32-f6fde6c6df0c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "542e821e-9646-4fa4-9a40-1185e63cb89e"
        },
        "item": {
          "id": "d4aad9ed-f335-4df6-9bee-8647097cccdd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "2327a23e-4703-432a-b090-f34bae087fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd4f0df-fbc5-4abe-9c46-c9d5e9837a53",
        "cursor": {
          "ref": "3d53e943-b00d-4003-9836-e60f18c31a40",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "11e485f2-908b-423c-9a2a-63426aa1b4f6"
        },
        "item": {
          "id": "cfd4f0df-fbc5-4abe-9c46-c9d5e9837a53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "4591a0e6-c90a-4e1f-94cd-38ad698af43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93da10f0-c8b0-46a9-beeb-e590a6843101",
        "cursor": {
          "ref": "743d2bc7-8a01-42cf-a945-864d7325af1b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8d4919de-c102-4462-9f11-33f2fdc68c30"
        },
        "item": {
          "id": "93da10f0-c8b0-46a9-beeb-e590a6843101",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "361a7308-73cf-4c0a-84a9-120cc9a59938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff166bd-b8df-4d22-bdf2-0e15d336ce27",
        "cursor": {
          "ref": "dad01b00-9a33-45cd-9e7c-2520569babf5",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c43bcbe9-6971-4cc3-8539-6e1e88a99f01"
        },
        "item": {
          "id": "cff166bd-b8df-4d22-bdf2-0e15d336ce27",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b90abd85-10b8-4927-82f3-a06f5b2c7eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b070daf-5dae-4f96-bc43-a4013192b35c",
        "cursor": {
          "ref": "2092786f-c67c-4df6-8e0b-c74c56bc6b4f",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9c172ea6-a8f5-4f9a-95d2-80c8193037ad"
        },
        "item": {
          "id": "7b070daf-5dae-4f96-bc43-a4013192b35c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "57189b85-fdf6-4679-9692-08fbd137b7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb86ccea-17eb-4b06-8c95-7bc80875d46a",
        "cursor": {
          "ref": "06146565-c904-4457-8eb2-29526df923ee",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6cc28595-817f-4bab-9730-7f67b604a8d9"
        },
        "item": {
          "id": "fb86ccea-17eb-4b06-8c95-7bc80875d46a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "cca3c4b7-e934-4a73-a1e5-e1eefafadb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 298,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9780530d-e10f-4fbd-ac6d-9566e831d1ce",
        "cursor": {
          "ref": "1e76d3f2-eb0b-497b-923c-a6421eaf60f5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "dd266d10-674e-489b-b49f-f32a3e1f99e6"
        },
        "item": {
          "id": "9780530d-e10f-4fbd-ac6d-9566e831d1ce",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "98d1ca52-8e2a-4ee7-a616-718cfbd7b741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f42068e-d333-4e22-98d5-3ecb271cd35e",
        "cursor": {
          "ref": "2fe8d67a-9750-470b-9178-aa254410561f",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8f2d3e3f-a586-44a8-a90a-5ac4e8f98a83"
        },
        "item": {
          "id": "6f42068e-d333-4e22-98d5-3ecb271cd35e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "46923c4e-fbd2-49f3-921a-6db7c83b27c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd0f891-8d0c-47d4-a2a4-a378fa2bf071",
        "cursor": {
          "ref": "d0e7fe36-a6bd-436d-8ad5-dd6c9ab5e318",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b2953d3f-9668-4fc4-95aa-275739ca17d4"
        },
        "item": {
          "id": "6bd0f891-8d0c-47d4-a2a4-a378fa2bf071",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "79ab8753-aa09-4212-b522-a4f25c300c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede3b34d-be24-41a9-841f-4f3e055cc417",
        "cursor": {
          "ref": "9ec5e6b6-d5d7-4a40-b2e1-259a75c514c3",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fc47b837-7fcd-452a-93db-963a2608f4aa"
        },
        "item": {
          "id": "ede3b34d-be24-41a9-841f-4f3e055cc417",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0f3e1cd2-ea94-4c55-a787-594416673755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4e2858-0eed-4cf2-a403-1ff9664690f5",
        "cursor": {
          "ref": "53b4c581-44f6-459c-b466-4e11373872ba",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c6683b8b-c3f0-4296-8304-ae75f96f1333"
        },
        "item": {
          "id": "1c4e2858-0eed-4cf2-a403-1ff9664690f5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "366d183e-2369-4d42-9366-906525e32e48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ece228-bff5-4a1c-9064-236b64e52708",
        "cursor": {
          "ref": "710c66fa-b841-4aea-98df-bb36cc89d0c7",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e75d5f18-dc14-4092-8f99-e283a00bdeaf"
        },
        "item": {
          "id": "e8ece228-bff5-4a1c-9064-236b64e52708",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "38450b49-ee3e-4039-a861-4c7ce3caf3ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f17fdd-98a7-4e45-9409-db0f48fa3721",
        "cursor": {
          "ref": "af62b21d-80a0-4e73-84f3-4da0bbc42205",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4b86e5ee-5803-4244-b750-ab163b870d17"
        },
        "item": {
          "id": "b6f17fdd-98a7-4e45-9409-db0f48fa3721",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "5479f315-103f-4fcd-bad6-13ac9f9f8c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500775bf-5955-4232-b99d-0ffc341e22ba",
        "cursor": {
          "ref": "e3e71e69-8d8e-448d-914b-641dbbe772a2",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "63b7bcc3-2275-43cd-ae04-d09cfcbeaf34"
        },
        "item": {
          "id": "500775bf-5955-4232-b99d-0ffc341e22ba",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4348bd06-9815-4d68-bc6b-eb83992f6295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21b01d1-8e92-44ae-875c-c7805268606c",
        "cursor": {
          "ref": "3a1eeaf6-770f-4451-9a90-e669ad17e820",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "eb099011-a173-4fc8-8c2a-9bc26e039eb3"
        },
        "item": {
          "id": "c21b01d1-8e92-44ae-875c-c7805268606c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f59ad204-cf16-434c-979d-031c881d6eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e78fdf-27a0-4297-8dd3-3af1ef1d0484",
        "cursor": {
          "ref": "bcaf5080-6834-41e8-8cfe-585ab24cb74e",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "119957fa-8d84-40a7-9e76-13fad9f0bb62"
        },
        "item": {
          "id": "a9e78fdf-27a0-4297-8dd3-3af1ef1d0484",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9cd7e1d5-2253-4f67-8f9a-53d33e020e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05f27a5-9cda-4737-9d21-9e5c5fa298cf",
        "cursor": {
          "ref": "ef953777-81cf-47c9-bf4f-314a637a6d1a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0d57c5a2-d011-464d-8287-a0b5ace5d0b9"
        },
        "item": {
          "id": "e05f27a5-9cda-4737-9d21-9e5c5fa298cf",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "44344ae6-d6da-40dd-b4e1-c79fce6e22d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78066ba-d341-470a-b7d0-cf9d30846a8f",
        "cursor": {
          "ref": "f6ee19af-7cd2-46b8-a687-0df8c8b3ffe3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0029ed62-0545-417d-af19-a376e4b1c8ae"
        },
        "item": {
          "id": "b78066ba-d341-470a-b7d0-cf9d30846a8f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "670c1de4-2828-4309-bc8d-1b1334ec67b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3622c6b-9d43-4544-aa1e-be5c3183790b",
        "cursor": {
          "ref": "deaba6d4-e4f3-449d-acaa-2c4604fc8903",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "89be0a1b-b31d-48e2-b322-64c8a7e7218a"
        },
        "item": {
          "id": "c3622c6b-9d43-4544-aa1e-be5c3183790b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "54350071-5e66-43b7-b30a-449f737a1e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25ddf40-7ffe-4a4f-bce1-2d5fa0b79ad8",
        "cursor": {
          "ref": "a3912a0f-71af-4b6b-a1e3-db89a8ef4531",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "830bace9-28a6-49f5-8cb2-8ed62fd8fd87"
        },
        "item": {
          "id": "d25ddf40-7ffe-4a4f-bce1-2d5fa0b79ad8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e3e4e911-84f6-4914-9fe2-5ea0d844bd3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e440797-0892-4a69-bc71-420cae05f45e",
        "cursor": {
          "ref": "a02979b3-9ee2-4c45-93e9-16bb0dded75e",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1f3c1d75-3070-4702-a8ee-b71afb457461"
        },
        "item": {
          "id": "1e440797-0892-4a69-bc71-420cae05f45e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "25baea04-b02c-45ea-9e8d-148a73a9c3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146be747-5405-4dba-a089-6988c6da13aa",
        "cursor": {
          "ref": "0f182937-9824-49e6-9e64-4409f9517ed0",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1fa3de34-ec10-43aa-a69b-3b0c7849354d"
        },
        "item": {
          "id": "146be747-5405-4dba-a089-6988c6da13aa",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "04dfbbdf-3de8-477b-94bf-fba11c241557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2838b695-0499-439c-8383-62df269cf028",
        "cursor": {
          "ref": "1f261d78-3f5c-49cd-bc87-29bbb9b42e62",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ab7fb3d1-4857-46d0-a200-5676f956e179"
        },
        "item": {
          "id": "2838b695-0499-439c-8383-62df269cf028",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e9178a14-7532-462a-9566-26a271dd9fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536be880-90fb-4ebd-ae2e-36b04d53a642",
        "cursor": {
          "ref": "786297eb-5186-42a9-aacc-5dfe9cc0e1b7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cd2279d2-1171-4380-86fc-97a18331343b"
        },
        "item": {
          "id": "536be880-90fb-4ebd-ae2e-36b04d53a642",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0adbdfd-b9b2-4abd-b833-2e6913565605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b29017d-8ab1-45e1-a648-15729fc60a93",
        "cursor": {
          "ref": "7e86a4cc-41bd-472c-a448-da4ef3cd047e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "edd5096d-e9dd-4331-9e93-920b246adcad"
        },
        "item": {
          "id": "6b29017d-8ab1-45e1-a648-15729fc60a93",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8d2d9dbb-2a93-4586-a152-fb56b5bd9b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbaccaef-dbca-40a7-a282-c427a1f12d83",
        "cursor": {
          "ref": "f8a3c50b-affd-43dc-97a7-323568d770a3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6169533c-e5c9-438a-891e-5687f4aefd48"
        },
        "item": {
          "id": "bbaccaef-dbca-40a7-a282-c427a1f12d83",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "170d95c2-2422-4636-b339-e7aa9da3e85c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3996d2b-3f3b-4169-9fce-98e398b1e7eb",
        "cursor": {
          "ref": "2fe2c6a1-c9ed-4a21-952b-666cb7a59e76",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "242bcbcd-0d14-4736-8caa-a21214146270"
        },
        "item": {
          "id": "c3996d2b-3f3b-4169-9fce-98e398b1e7eb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "92ee7607-f5ed-45b0-9866-81532e4799af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde31cab-07c2-44fc-bca7-1b010c9d8ab4",
        "cursor": {
          "ref": "27ce9f7e-957c-4346-af1a-c0e652ff00fc",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "26dbeea7-a163-4c8f-8579-cc816d73482d"
        },
        "item": {
          "id": "cde31cab-07c2-44fc-bca7-1b010c9d8ab4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fbe9ab07-01f2-46f7-ba90-4e3ed006903a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f042c33-fd77-4b36-98ec-155779215691",
        "cursor": {
          "ref": "35bc568d-37fb-4a6f-8e8e-c0903238d1f9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "377a4bcc-1783-420d-b65e-6f6ce0db3652"
        },
        "item": {
          "id": "3f042c33-fd77-4b36-98ec-155779215691",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b5bcf5a3-2e72-439e-b921-a465e2b00e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902f037b-553d-4964-895c-79d5f84ec296",
        "cursor": {
          "ref": "1f45bc8e-d939-432c-a49c-26555ccd79a3",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ddc6f7b7-3630-4d7f-9f6c-d4bb0c33a24e"
        },
        "item": {
          "id": "902f037b-553d-4964-895c-79d5f84ec296",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "cbaab4ed-88ba-47d9-8805-e7f969e407ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02509a8c-2ca7-4613-8d92-8d50614a2f54",
        "cursor": {
          "ref": "64152f72-fc0b-4331-bc02-bfc11824a06c",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2fe5550a-1353-446e-883d-22acc64bc138"
        },
        "item": {
          "id": "02509a8c-2ca7-4613-8d92-8d50614a2f54",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8cf38905-d876-4676-9de8-17d9ac7c87f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ad370b-8e7d-498f-864f-779c129fb6bc",
        "cursor": {
          "ref": "a2d6ec1f-743c-421c-9849-23fac9c4c6a2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "211a0618-2b18-4da5-9a31-8397ebc4c012"
        },
        "item": {
          "id": "72ad370b-8e7d-498f-864f-779c129fb6bc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "61225c0c-3e9f-424c-901b-3ec91c8dcbc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3621e243-93ed-4660-a0cd-018c9cdcf38c",
        "cursor": {
          "ref": "24f708e0-9ea4-4738-956a-bb3ef123dc68",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0ccf72d0-3bc4-41c3-babf-18dbb6b11bae"
        },
        "item": {
          "id": "3621e243-93ed-4660-a0cd-018c9cdcf38c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3439752c-e956-48e5-a3bd-a1bf1fdfe7a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a894faa9-8137-4d9d-bb07-89ee0fa1b7c4",
        "cursor": {
          "ref": "38e7f08a-11fb-403b-a3c1-adbda260ef77",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "96e26687-8971-44ef-b5e4-8249ef9007d8"
        },
        "item": {
          "id": "a894faa9-8137-4d9d-bb07-89ee0fa1b7c4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9797c5d8-c29a-4207-8823-d71180c5e964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530c9a78-9dff-4a64-8155-a95d6df9ebb0",
        "cursor": {
          "ref": "7be35e50-ff0a-46e4-8cb5-41f8b96c0763",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c002fa33-238c-49c9-a49c-fc6460e9fd38"
        },
        "item": {
          "id": "530c9a78-9dff-4a64-8155-a95d6df9ebb0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a789c8d3-e1bf-4dde-a68f-2f67862ec0b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af146e61-27e5-4def-a531-e007ec6019fe",
        "cursor": {
          "ref": "bab95a8f-eaf9-42d1-8d38-bc22bb4a1399",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6e9ba337-0724-4fe4-b702-20ac2b342613"
        },
        "item": {
          "id": "af146e61-27e5-4def-a531-e007ec6019fe",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "336a263b-a8a0-46b5-b157-4ea4d6bbffef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249a1528-513c-4abd-823b-6997846acb05",
        "cursor": {
          "ref": "9e067fd8-cc49-48eb-a16b-ee2822494c33",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b8ef8201-8942-4e13-924a-7913751649ca"
        },
        "item": {
          "id": "249a1528-513c-4abd-823b-6997846acb05",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bc82ed7c-7499-4c61-94f4-e4a5eddcd87d",
          "status": "Created",
          "code": 201,
          "responseTime": 6936,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff2e358-e996-4292-88c4-0601b3809e1a",
        "cursor": {
          "ref": "856b4c33-4c45-4769-b692-d9d48c938449",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "e9d46ea7-4d0d-4673-810c-dbcb5b4b4f93"
        },
        "item": {
          "id": "7ff2e358-e996-4292-88c4-0601b3809e1a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2bb4f0e1-a3a0-413a-9af5-263ef58c04aa",
          "status": "Created",
          "code": 201,
          "responseTime": 5904,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c7b62c-79d8-451a-b40d-ee9f4d1cbb17",
        "cursor": {
          "ref": "43039828-5199-4033-b046-c4a254460473",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b2dfab92-83f8-4f49-be95-58be39134524"
        },
        "item": {
          "id": "07c7b62c-79d8-451a-b40d-ee9f4d1cbb17",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "679cf67b-8b17-4fe0-94ac-5165c835de6d",
          "status": "Created",
          "code": 201,
          "responseTime": 5689,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9fcbc1-2325-4c6e-8118-59b53703df47",
        "cursor": {
          "ref": "ce7b8d7d-8c25-4265-8b20-bbc7928edfb5",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ad85898f-262e-4af4-8ff9-5e4dd4e836ea"
        },
        "item": {
          "id": "3f9fcbc1-2325-4c6e-8118-59b53703df47",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c3e5bf06-b0ed-4450-b294-e48c9a4be2dd",
          "status": "Created",
          "code": 201,
          "responseTime": 5631,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3c592f-11f8-4e07-9300-27ed82025049",
        "cursor": {
          "ref": "845e3cf7-2e47-45ce-98dc-b212040db938",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6a204dd5-622c-4244-8aa3-bcbfc646cf3e"
        },
        "item": {
          "id": "4b3c592f-11f8-4e07-9300-27ed82025049",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a5b1474a-2406-4b83-9d2e-93943e9dcc30",
          "status": "Created",
          "code": 201,
          "responseTime": 6181,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d673553-e3a4-4e9b-8101-8f5685ba3274",
        "cursor": {
          "ref": "e58cef80-0ab3-4053-ace4-60c62e7e68f6",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a4959aa4-a090-4c1b-a54c-cf0afb9767c1"
        },
        "item": {
          "id": "5d673553-e3a4-4e9b-8101-8f5685ba3274",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "12e4395e-5f49-4271-b22c-777c603312e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "e70a4485-7dc0-4b67-8421-fbad55bd4cec",
        "cursor": {
          "ref": "471d7849-73be-402e-9cb3-bb3d3f482541",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1ae6819b-f70f-4517-ac52-98576b214f85"
        },
        "item": {
          "id": "e70a4485-7dc0-4b67-8421-fbad55bd4cec",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6babf995-3417-4137-a99d-efd42bc0bca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1d46db-033e-440a-9e1e-4eadd4bfac27",
        "cursor": {
          "ref": "7c3bc059-f0bf-428d-950e-f503ad6c3971",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a76d8cb1-6099-473d-98ad-fd2c5d99a6ec"
        },
        "item": {
          "id": "ca1d46db-033e-440a-9e1e-4eadd4bfac27",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ad88f229-9016-463c-b8ed-36c7b23ee2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c6f7c1-d786-47ca-9e0d-5e4febcc84b9",
        "cursor": {
          "ref": "6b4e6582-3a53-4f35-ade3-e660e08437ab",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0640b21d-eacf-49f1-8bb3-b64ef6d56aad"
        },
        "item": {
          "id": "62c6f7c1-d786-47ca-9e0d-5e4febcc84b9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "28efdc10-5a62-4d6a-9bfc-92f68e923353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 312,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed21dc7-6f30-4c86-a53b-1685a25add47",
        "cursor": {
          "ref": "19a5c00c-464a-4d0e-b791-5a4f5f294628",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e9bc9e39-39f6-4104-9db0-e61e01ae2247"
        },
        "item": {
          "id": "5ed21dc7-6f30-4c86-a53b-1685a25add47",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "29a259e8-3480-49c1-9042-0e2a99ecd731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c585267c-08cb-42b8-9515-4dceec743f00",
        "cursor": {
          "ref": "29a876ec-43dc-492a-995d-49f692989e10",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "db53b1f0-c718-465c-ab6b-37b1ff1814ee"
        },
        "item": {
          "id": "c585267c-08cb-42b8-9515-4dceec743f00",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3ecbca1c-781f-4291-8d0e-2ef07c06f213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c34ee4-f4b2-413c-9bd5-bdeecb27877b",
        "cursor": {
          "ref": "2b618aa2-f35a-4cd1-9651-2c689641cfc0",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "76373717-95a6-48cc-a8c3-3846e1028766"
        },
        "item": {
          "id": "14c34ee4-f4b2-413c-9bd5-bdeecb27877b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fec2d03f-2a95-461f-9b87-7bff215bd163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460a852e-99bc-46cd-a937-87893e35169e",
        "cursor": {
          "ref": "b9b28b22-b947-4391-99f4-2a1b48d710b8",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4b4fcb56-1433-4483-ae59-b2e2b9612198"
        },
        "item": {
          "id": "460a852e-99bc-46cd-a937-87893e35169e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4062f0fc-5713-4328-8dc5-83bcb8965618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb04eccc-af20-4841-af6b-a6345aba07e3",
        "cursor": {
          "ref": "15868f4b-1879-4789-8df5-38f422b12432",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0cd0ef61-78ba-4a48-84dd-075b451a4ada"
        },
        "item": {
          "id": "bb04eccc-af20-4841-af6b-a6345aba07e3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "be01131b-6d3e-4686-a605-cd0a12935a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa247cc2-c067-4ef8-b510-bf4426b6ac20",
        "cursor": {
          "ref": "4cd4617f-ba69-4cb5-8aed-f973fdb4a5f6",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "214c3f61-ccfa-4134-9da1-369c9350abf1"
        },
        "item": {
          "id": "aa247cc2-c067-4ef8-b510-bf4426b6ac20",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9efa78f9-fe84-47cb-b236-8753a3378ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992a1698-8b26-4320-908c-9703f1c7baf0",
        "cursor": {
          "ref": "19b32f1b-5770-4a92-a102-21d54f98364a",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2652a4ff-baf6-4b98-afad-56bde269dd5e"
        },
        "item": {
          "id": "992a1698-8b26-4320-908c-9703f1c7baf0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fde9e0f5-e80b-4b31-8654-460a636abe59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07f87a5-8d02-4fc8-aea5-dcbe3bdaa9ce",
        "cursor": {
          "ref": "73280bf7-a93b-4bc7-a566-4cb1688e0fb4",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c9db036e-135f-4f27-86a4-791a1a64de95"
        },
        "item": {
          "id": "e07f87a5-8d02-4fc8-aea5-dcbe3bdaa9ce",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9daaf83-1770-4798-a222-cfaafe3bbebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939186f8-cdd6-489d-a48c-756eb25d9101",
        "cursor": {
          "ref": "4231824c-e664-4cbd-8693-5e02e34b928b",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "36bc9982-af8b-4a73-b941-1c1b7dfd4b68"
        },
        "item": {
          "id": "939186f8-cdd6-489d-a48c-756eb25d9101",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "276d5e17-48ec-4c77-ab84-3ade656f7908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f8aa9d-0d49-408b-8bef-edd73a918372",
        "cursor": {
          "ref": "6ad2eb0b-42b8-40b7-bcf5-169122510e1e",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "558c2fff-869e-4191-a5ef-cd319838ee88"
        },
        "item": {
          "id": "78f8aa9d-0d49-408b-8bef-edd73a918372",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6310275d-68c3-4925-b4d9-9dfb004de179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad82b22a-dabf-485c-9fe7-e365cbbd4a2d",
        "cursor": {
          "ref": "199af5f2-a263-4b82-9ae3-618196b2b574",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "a583f782-6e94-49f0-ac0c-4dcb21fc23d6"
        },
        "item": {
          "id": "ad82b22a-dabf-485c-9fe7-e365cbbd4a2d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bec37308-ff47-4c10-990f-9676f5ac9cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c243af24-a006-45fc-8ff4-cb1413bac102",
        "cursor": {
          "ref": "0ca62245-491f-4f22-8a87-a156653d3e85",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1e23957b-85e7-4ab5-b48f-de848dd67715"
        },
        "item": {
          "id": "c243af24-a006-45fc-8ff4-cb1413bac102",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1903a049-01b9-4b48-8da6-840dc60bf729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d380f71c-1b49-4319-a952-c75f71203cc4",
        "cursor": {
          "ref": "5c02f833-9f29-4aad-945d-779f5b9ce76b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3301d403-7606-4bab-9b0a-7afe0a1a0fe3"
        },
        "item": {
          "id": "d380f71c-1b49-4319-a952-c75f71203cc4",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e4ced473-8a7c-40b9-828b-09bb4fb09a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593f8f99-b8ab-43d4-ba33-abd7edbac197",
        "cursor": {
          "ref": "165aedde-dc79-4f73-98cb-7fa95140b778",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3926b7b7-4377-40e7-af65-e197ee84453d"
        },
        "item": {
          "id": "593f8f99-b8ab-43d4-ba33-abd7edbac197",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "af1e8d87-7af0-487b-bca9-c6e52b3a95f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7301b5df-f69b-4021-adc8-4d098f515208",
        "cursor": {
          "ref": "062831e2-fac4-4ed3-9835-8066b8858ac6",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "74b9805b-e784-489f-896a-2e83f5b8fd40"
        },
        "item": {
          "id": "7301b5df-f69b-4021-adc8-4d098f515208",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7ad4c599-cce5-4085-8008-eb4c7f2ad2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edf5ad8-5b7b-4071-b1fc-e56c116e3a91",
        "cursor": {
          "ref": "a49fa663-7981-456b-824c-b4141ef07296",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2a81048d-51fc-49f0-a3d4-70a61b13e26d"
        },
        "item": {
          "id": "0edf5ad8-5b7b-4071-b1fc-e56c116e3a91",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3ed189af-72df-4fcb-b726-22be19d061b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccecf72-32c2-4670-b6d4-5a3af292877e",
        "cursor": {
          "ref": "d1bfae0b-5479-483a-966d-70d0f7c109db",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9ae8fdd5-fa23-465d-b5aa-905bc6a34788"
        },
        "item": {
          "id": "dccecf72-32c2-4670-b6d4-5a3af292877e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ab0317a7-57c4-429f-911c-57576029b9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99dab8b0-4ac6-437c-8bbd-f9be5d1cd76e",
        "cursor": {
          "ref": "2201a89f-dd7c-4e8e-8b84-a7c9b26c96eb",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d9e79a17-211c-4605-ba9f-c074ccadfe3b"
        },
        "item": {
          "id": "99dab8b0-4ac6-437c-8bbd-f9be5d1cd76e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "80e89663-d7d4-4bbd-8eb6-8db6aae0d5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6472585b-6a49-4f5b-8692-fc6bf820616c",
        "cursor": {
          "ref": "7f646b22-f029-49cd-84ac-602299558af5",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "54688aa6-7f8c-48e3-8536-35e844b2aac8"
        },
        "item": {
          "id": "6472585b-6a49-4f5b-8692-fc6bf820616c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "27a87b91-87c8-4e73-aa51-327afcfa453b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706a5fb3-f969-44b0-baa0-685d6d51d2ce",
        "cursor": {
          "ref": "80f7cc51-8769-4f78-a5dc-b956acedfb43",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4687d55d-8230-4da0-8aed-e340c19ec5e1"
        },
        "item": {
          "id": "706a5fb3-f969-44b0-baa0-685d6d51d2ce",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "87c1933a-3dd9-4252-97ef-6cd8ad3849ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fe60c5-7f7c-4d87-96af-ac9fa9ebcf23",
        "cursor": {
          "ref": "ff68d040-db7b-4d77-ac44-726c04ca8300",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "63b4155a-783d-49b2-b2af-63b699fd5c36"
        },
        "item": {
          "id": "b1fe60c5-7f7c-4d87-96af-ac9fa9ebcf23",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "57c08b8c-e1ca-46ee-8964-899440871e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bd4132-9aa8-49eb-94f0-364f7920c737",
        "cursor": {
          "ref": "cdab32a3-e910-4a29-9e7b-35f1d2313eb0",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "01366b28-a75c-4228-b708-0cc14a6b3119"
        },
        "item": {
          "id": "08bd4132-9aa8-49eb-94f0-364f7920c737",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f03e30d1-2a7d-43da-80b5-a5ea57b38a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "317ad7af-b856-4d80-b289-2905018b19c3",
        "cursor": {
          "ref": "4066df0b-27b5-452c-a1b9-e4e015284dc9",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b1b1b134-f36d-4345-b8b6-96bac0912596"
        },
        "item": {
          "id": "317ad7af-b856-4d80-b289-2905018b19c3",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cdd9a396-8771-4928-b58f-e8cf5b25de37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17d5cc2-0ab5-4909-8083-60319ac78c4d",
        "cursor": {
          "ref": "35b90dab-e148-4096-9486-08c66bf5a45b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1ac23816-ba69-4c1b-babc-6b2875a98a0c"
        },
        "item": {
          "id": "f17d5cc2-0ab5-4909-8083-60319ac78c4d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "00a15139-a23e-4b21-8c64-7fcc09b2a200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68265adf-50a8-4891-8377-2781f4ed523b",
        "cursor": {
          "ref": "0c61a61f-7eb7-48b5-83b8-44391479b913",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "95dd152e-b3c9-4964-8bee-c7da1ccaa563"
        },
        "item": {
          "id": "68265adf-50a8-4891-8377-2781f4ed523b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6e27f185-818a-438f-9e68-64b16f47f86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7728f4-19a3-45b7-bdec-559527d9a4c8",
        "cursor": {
          "ref": "5ba22168-840c-4fde-9d20-9498c3cfee14",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7a56e53a-ae81-4751-b928-b90c461cd1f7"
        },
        "item": {
          "id": "fd7728f4-19a3-45b7-bdec-559527d9a4c8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e65b1521-66e3-4fef-ac26-abbb922fbcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65737ec1-f8ba-484d-bf96-270d9602a40e",
        "cursor": {
          "ref": "5eae0736-5e27-4798-a5f6-77460e562662",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2df3a494-6756-4945-8f96-918056c5b4ee"
        },
        "item": {
          "id": "65737ec1-f8ba-484d-bf96-270d9602a40e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2baa5f9a-b3b9-4069-9ac8-2146e90ff738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d47eee-3f0f-46d5-b713-4a0403e26d84",
        "cursor": {
          "ref": "b1c63fa9-cbf4-4fee-a1cd-4bcb1ee06f45",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9f71e3ea-247a-4ffb-8aa2-c25bbce6d628"
        },
        "item": {
          "id": "36d47eee-3f0f-46d5-b713-4a0403e26d84",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b9b60d29-4a52-4c8b-8a01-2e532336f251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d04929-3520-493c-911e-50d7aa549cb2",
        "cursor": {
          "ref": "0dd7f06e-31b0-43b1-a5fe-ded812e13c65",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "75bcfb5a-c376-40fb-8b1b-a984b6fb49ac"
        },
        "item": {
          "id": "53d04929-3520-493c-911e-50d7aa549cb2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a33b4ad6-a5c2-4ab5-bbc5-659022320245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4438bb3-b19d-4c3d-80b8-05b6d62ef240",
        "cursor": {
          "ref": "818be621-4a50-4601-b463-68e27584b30c",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3017a985-f1e3-44f0-9ec6-34976c60b5a1"
        },
        "item": {
          "id": "c4438bb3-b19d-4c3d-80b8-05b6d62ef240",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9e771039-2f01-40da-bcbf-6b21f5365ddb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae8fe79-d4c1-455c-8d73-337bfee25ad6",
        "cursor": {
          "ref": "54c0315d-6679-4e44-8137-0a5856aaa7df",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c0dcad6a-37cd-4d26-bf2e-9c52c45e61a6"
        },
        "item": {
          "id": "7ae8fe79-d4c1-455c-8d73-337bfee25ad6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "34d19824-b5da-423c-bed6-6b9b9cd04295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60650128-c4db-46d5-9446-0b7cf3abc24b",
        "cursor": {
          "ref": "7027eef3-be07-4b83-8737-74ed87ac850d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d141428d-d3fe-4e04-9678-b93dc184f2d3"
        },
        "item": {
          "id": "60650128-c4db-46d5-9446-0b7cf3abc24b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "594b0ee9-d6bf-4688-b793-2215579c3b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f532f16-0271-42b8-b77c-cd695f7cf886",
        "cursor": {
          "ref": "6fce729d-cd7a-4bfb-b8ff-89130fa94cbb",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6ae8079b-dc7b-4d5b-91e9-6eac9a71724f"
        },
        "item": {
          "id": "6f532f16-0271-42b8-b77c-cd695f7cf886",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "396aecf6-1aa4-47fc-8acb-4f7c84c846c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2168b671-e73a-4e9d-9870-f3e48998c38a",
        "cursor": {
          "ref": "4eb8573f-e26a-4631-800d-2452ec9fa225",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5bc14bd6-006a-4cc0-8e1e-7b0cbd124568"
        },
        "item": {
          "id": "2168b671-e73a-4e9d-9870-f3e48998c38a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d3d5eb57-219f-40e7-8538-be5c34253629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b993392b-6794-454f-b89b-ddb3958dd86c",
        "cursor": {
          "ref": "9d8515b0-3ae3-4f83-bf73-58014a00753c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "be3d97bf-4d46-4240-9c00-5a005a4bb651"
        },
        "item": {
          "id": "b993392b-6794-454f-b89b-ddb3958dd86c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "45022f70-0f07-4d13-b27a-11ab7354c3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 309,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e40456f-5c12-4e26-8430-27d59a075e80",
        "cursor": {
          "ref": "efe10a60-bff9-4ac2-a910-77fc8bf40b7b",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6eedd2f3-2208-4e6e-a962-9a0588317a06"
        },
        "item": {
          "id": "6e40456f-5c12-4e26-8430-27d59a075e80",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a085b884-7574-41e0-a7da-daedb9c821f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b194e06a-6b85-4291-ac44-dc684580c890",
        "cursor": {
          "ref": "04faecbc-b5c3-48d1-b145-83eaefe6cfee",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e3523644-cdda-440e-9e12-f8e61ba8a677"
        },
        "item": {
          "id": "b194e06a-6b85-4291-ac44-dc684580c890",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "de4790d5-2ecd-4447-82b8-7d1745447f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 281,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f451578-2550-4cdf-9000-163af29b0a82",
        "cursor": {
          "ref": "b56c86c3-8d28-445e-b7d4-61d88f1e22c0",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7a325def-8fcd-4900-9678-3f30eff85976"
        },
        "item": {
          "id": "1f451578-2550-4cdf-9000-163af29b0a82",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "95775a61-526c-46d0-9225-3fb25b858f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a773c9-8fe8-47d7-8d81-416ebb5c14a8",
        "cursor": {
          "ref": "e3956cf9-299e-43a0-a66c-3f3ef552cd7f",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6d451d9e-28b1-4179-940e-b24e68954311"
        },
        "item": {
          "id": "25a773c9-8fe8-47d7-8d81-416ebb5c14a8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2cfa8f52-90b3-4dbf-8ff6-75abee441a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6868754-6507-4200-8c67-30b5b8549ab8",
        "cursor": {
          "ref": "efc7f316-ca7a-4411-a631-5a482afedc13",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "130b67ea-592f-4472-a410-1422856a057c"
        },
        "item": {
          "id": "a6868754-6507-4200-8c67-30b5b8549ab8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6b0bb0a7-a052-4ecc-8d45-067367d5a334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bb51971-e9a6-44c5-8b6a-d8e428d25cf0",
        "cursor": {
          "ref": "dc87c002-c70f-40ff-90d6-369464c5b2bf",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "72f34453-f0dd-40dd-9e43-d27041eab313"
        },
        "item": {
          "id": "8bb51971-e9a6-44c5-8b6a-d8e428d25cf0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "370a5d2d-fc21-4c41-985e-fecb38c2a99b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7d9c04-465e-494a-8a0b-d64c5b192609",
        "cursor": {
          "ref": "074e02d8-019c-4e9a-a17f-7486c175eb11",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "26e6740e-13be-4c71-8dc3-79bede2f7df0"
        },
        "item": {
          "id": "ad7d9c04-465e-494a-8a0b-d64c5b192609",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dc6c36f7-347c-4a05-8521-9f6c73d2355f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be92ca97-f481-4c62-b720-76d121a9d14d",
        "cursor": {
          "ref": "34b78dee-0f2c-4bbc-8a4e-9051b7999c18",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7a48b3c0-2d15-4777-8516-1513a9ab3393"
        },
        "item": {
          "id": "be92ca97-f481-4c62-b720-76d121a9d14d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "dee98f9a-4694-443c-8290-fb030f2d6022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f258ca17-46dd-4605-b910-44e5a53ff71c",
        "cursor": {
          "ref": "9e32f584-fce6-4a46-8d04-cf9f706eceaa",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "621bbdd4-520d-41c7-8e47-097678653dc4"
        },
        "item": {
          "id": "f258ca17-46dd-4605-b910-44e5a53ff71c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f25b2519-3110-48dc-ae78-3b1ae53b0112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97fff69-4201-4e80-bbf0-187dfcd1f5ad",
        "cursor": {
          "ref": "d14e21e8-e2ad-46b3-bb45-d61ebe225c3f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f5c7797f-9cc1-48cb-95dc-07981ce224ab"
        },
        "item": {
          "id": "e97fff69-4201-4e80-bbf0-187dfcd1f5ad",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0923de82-2b39-43e0-bef2-5f08c16eb0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba09ec97-a024-4409-af88-dc13881090fb",
        "cursor": {
          "ref": "231b2b31-1338-4c9d-848f-e24bc5fa5110",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cbfd84fe-6935-4ffa-99d8-80426a234f0d"
        },
        "item": {
          "id": "ba09ec97-a024-4409-af88-dc13881090fb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "14633d29-4361-4841-8b90-40e0aab2f310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c88341aa-bbd9-49b0-9fa4-80728f7f1690",
        "cursor": {
          "ref": "87d75948-50f2-4057-aae6-938494ec97fd",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "376c2af5-e859-4fd8-8664-bcd7e2c08e16"
        },
        "item": {
          "id": "c88341aa-bbd9-49b0-9fa4-80728f7f1690",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2f0b27c2-d09d-4270-b6ec-cd2f984c08ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bcd9aa-22a2-44f5-9532-aff37a614b4e",
        "cursor": {
          "ref": "4eb1cba4-e870-44bd-a4a2-5a5711f9a49c",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "180e0bf0-f3cc-4493-ab38-d3cd359c8899"
        },
        "item": {
          "id": "07bcd9aa-22a2-44f5-9532-aff37a614b4e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3587d8b3-f14d-4c81-8b20-af31453e51af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb4328a-9dfd-45b8-8951-ee5e7068eeb6",
        "cursor": {
          "ref": "edfb5a1d-bcc1-40ce-8a83-40b9a8be58c2",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "127d4492-5470-421e-8eb2-d87353d24b7d"
        },
        "item": {
          "id": "ecb4328a-9dfd-45b8-8951-ee5e7068eeb6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7d741b8b-894e-4f55-b73a-e011e8356589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9640a890-ddc7-4a64-932f-863955575bef",
        "cursor": {
          "ref": "f9d0309a-21d9-4e6c-b759-4a8adb2d1601",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "782af2e4-e5a2-4247-8f65-660c8a50586d"
        },
        "item": {
          "id": "9640a890-ddc7-4a64-932f-863955575bef",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5f4aca9a-a161-4304-8dff-4024803d6061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 300,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4334473-faf5-4a6b-9aba-c4a2ad690bd4",
        "cursor": {
          "ref": "6c629857-8724-4b53-9671-63b79b9df510",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "45399e5d-b313-4540-9a3b-a21f1cd75b53"
        },
        "item": {
          "id": "d4334473-faf5-4a6b-9aba-c4a2ad690bd4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ba8bb33e-28dd-4ced-825b-1882ef34f1c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd973036-bdaa-4402-9249-7d074cb9c4f0",
        "cursor": {
          "ref": "730bf69d-aac3-44d5-8e8f-1d9c225f0b60",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1a03e3c4-d8bd-4c62-8b88-5ef332e1803d"
        },
        "item": {
          "id": "dd973036-bdaa-4402-9249-7d074cb9c4f0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "132593b2-4853-4482-9cd7-1de882e536a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92808052-7a8d-47cb-a8cc-efe592ad5e01",
        "cursor": {
          "ref": "4cfda5f6-5e64-4e03-b127-a7ba3d853761",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "60dff48f-3b52-4898-8d60-b7deadb4c844"
        },
        "item": {
          "id": "92808052-7a8d-47cb-a8cc-efe592ad5e01",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c51a15d2-25d5-45ef-a446-551acd4a4940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6062c8f9-86ab-4487-b0ed-063dde3c262e",
        "cursor": {
          "ref": "12b0f807-6fce-4e4d-a2d5-dbd51422e92d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "581cbdb3-7c66-43ca-a46c-bdc4bf56316e"
        },
        "item": {
          "id": "6062c8f9-86ab-4487-b0ed-063dde3c262e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e4eb7336-00a6-48cb-a454-7d317dc2be88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b040516-8259-4ca9-b175-6c4a50705d68",
        "cursor": {
          "ref": "c4064e1f-34c0-4dcd-9ce7-481c6212656e",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "de9d6e55-4a45-4222-925c-d6a32a8ea36f"
        },
        "item": {
          "id": "5b040516-8259-4ca9-b175-6c4a50705d68",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f46d7ba9-c5e8-44d8-a851-ec0fd1faa98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585bf46d-71e4-484c-b031-efd0ddea0b96",
        "cursor": {
          "ref": "8cf5b734-bcec-459b-aee0-18b5a5ae940b",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "a58a7a43-3cd1-4ee9-bd7d-acea274b3ef9"
        },
        "item": {
          "id": "585bf46d-71e4-484c-b031-efd0ddea0b96",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f6d68099-c122-4401-8970-28abe565198d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3cbfb6-153c-4333-a417-b02247e2909e",
        "cursor": {
          "ref": "3f0ff2e7-b0dd-48a1-aa77-22462afe1d88",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a6d99377-909b-4175-9d65-518409661111"
        },
        "item": {
          "id": "9c3cbfb6-153c-4333-a417-b02247e2909e",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "18f320c7-6a30-46ce-bee1-178b3b8617fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80515530-0555-466d-bd7e-7f8f906feeb7",
        "cursor": {
          "ref": "83b85543-fdbc-401e-81d7-869bb462404f",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4bf2016a-628b-4e81-9b3b-267279b0c0c3"
        },
        "item": {
          "id": "80515530-0555-466d-bd7e-7f8f906feeb7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "713f7d64-aaaf-43ae-b7f1-1a729db0a277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa66d49-4e9e-4208-b56f-b2a950e119a2",
        "cursor": {
          "ref": "c12917a1-6318-4d80-9c1f-c0c26dd4b111",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0a643b03-302e-4724-9f81-9595e13fd7b0"
        },
        "item": {
          "id": "8fa66d49-4e9e-4208-b56f-b2a950e119a2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e4c02fde-9034-4fcc-a8a5-68f5525c5dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6c2456-e920-48ea-944a-ccb534d9b147",
        "cursor": {
          "ref": "4b2f355b-b2a6-41dc-aec5-258522f1986a",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1f63d59a-1cfa-422f-af9f-8c257bcebb6c"
        },
        "item": {
          "id": "db6c2456-e920-48ea-944a-ccb534d9b147",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "924336a0-e713-4b0f-97a5-ac3c84e16cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb4d179-3615-4b68-b797-19b1726b9996",
        "cursor": {
          "ref": "387b82ac-d4e6-43ca-abec-e370a33046b7",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "83fe902d-53ca-40a5-b14b-28951f56e1e9"
        },
        "item": {
          "id": "cfb4d179-3615-4b68-b797-19b1726b9996",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c4622157-e132-4d0d-ab60-b7bdb7d511a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfea9c8-ec9d-46a1-a54a-64bcf711fe13",
        "cursor": {
          "ref": "ef4f789b-f765-49f7-957a-5ecc1b7f98b4",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "62cbc7a3-6087-4093-8165-2ce051ec8088"
        },
        "item": {
          "id": "0dfea9c8-ec9d-46a1-a54a-64bcf711fe13",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ada94dd8-3806-4935-b2df-4a33f83d6f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39ca619-b3a4-4b40-9b1b-a8aa6ab14654",
        "cursor": {
          "ref": "22768a8e-aadb-407d-8832-bf745d86d59b",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8215d531-ad07-4835-8761-5ee6a53c552d"
        },
        "item": {
          "id": "f39ca619-b3a4-4b40-9b1b-a8aa6ab14654",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "579090eb-a55d-4732-961c-e5311dab46a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e180b107-3780-4fc0-add3-2fec64b86ff8",
        "cursor": {
          "ref": "d409ae12-0ac8-4034-ba5c-9891e71b0210",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "722835bd-9049-4639-b2bd-fd4310f1b0cd"
        },
        "item": {
          "id": "e180b107-3780-4fc0-add3-2fec64b86ff8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c2bc9ed7-447a-4aef-9007-2ac6da52f85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceadaaea-f406-49cc-bf9a-4aee94c1d9b0",
        "cursor": {
          "ref": "7e767b7a-5b3c-4110-9ead-fbac2cb7086e",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "33bfdb9c-351a-4ae6-ae3e-ad5f2b5e31f4"
        },
        "item": {
          "id": "ceadaaea-f406-49cc-bf9a-4aee94c1d9b0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6114f5e2-5b4b-4cc0-a561-a483c6967148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e77446-e261-4b30-a60b-809a204ed652",
        "cursor": {
          "ref": "88c5d045-c15f-4eb3-8d6c-1446339cf2f5",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "dde315cf-33c7-4acc-860e-eb7e24d41a35"
        },
        "item": {
          "id": "52e77446-e261-4b30-a60b-809a204ed652",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "6d0e49ed-3ee9-465d-a0f9-a72fb59d6575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9c6cb3-867d-4a57-9a41-39acaf127b4d",
        "cursor": {
          "ref": "88a26ef4-ff3d-42d4-9df4-e28e00522dc3",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "52214d8e-9c5a-4681-ae2f-0b0034a4bf2b"
        },
        "item": {
          "id": "5e9c6cb3-867d-4a57-9a41-39acaf127b4d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "029ee11a-c4e7-43fc-bb2d-aaa0d6a3301b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c8d670-29de-4734-8d2e-5c7840b15c54",
        "cursor": {
          "ref": "555c6eff-ae20-45e2-abf0-18c346698327",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8368ab61-07d8-4baf-8b2b-c7f256830aa2"
        },
        "item": {
          "id": "16c8d670-29de-4734-8d2e-5c7840b15c54",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "15f7caa1-7e70-4ef2-909f-489bf4c4be0d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bb9b43-ef1e-4ffd-a0cb-8cbe3279a94b",
        "cursor": {
          "ref": "d1fe510d-0494-4747-9ece-1354b9ce87c8",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "267ad24b-f480-48b0-ab57-afe63ab8e1f1"
        },
        "item": {
          "id": "91bb9b43-ef1e-4ffd-a0cb-8cbe3279a94b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "16d240b8-900a-4b16-b4f4-1412b6431242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0495e46e-b58e-4604-935f-b4609a14382f",
        "cursor": {
          "ref": "f9217c80-7312-4ecb-9b66-013bf00da452",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1c80209a-397c-44fd-84eb-2288e302930d"
        },
        "item": {
          "id": "0495e46e-b58e-4604-935f-b4609a14382f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "7cc7d20b-93c7-4281-8b94-5338ab7f0cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32282b8b-1873-4ba4-b693-90ce5e0d5931",
        "cursor": {
          "ref": "15fff695-8fe1-4eb1-ae08-1d02a68e7f4a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "16c19437-a620-48db-a854-f227871d2347"
        },
        "item": {
          "id": "32282b8b-1873-4ba4-b693-90ce5e0d5931",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "254e9ee5-ca94-419f-82ba-5ec96cb27648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c20de4-fe7f-4ef8-91aa-b35361fce110",
        "cursor": {
          "ref": "db169e23-15eb-4f22-9452-84924cc21580",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c60b250d-286d-4f21-9d0a-07e66518bf27"
        },
        "item": {
          "id": "17c20de4-fe7f-4ef8-91aa-b35361fce110",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c6b6531f-d1ff-4014-a3c8-2ac8e5479ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eac6286-f45e-4444-86c9-064ab1a4f268",
        "cursor": {
          "ref": "4006c04b-0478-4321-831a-e893e98f4c94",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2b636378-4336-43b4-b876-c9d48d2b0fe6"
        },
        "item": {
          "id": "7eac6286-f45e-4444-86c9-064ab1a4f268",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b3d47fe2-21df-4e28-a238-7fd96a4d3d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3389301e-7ba1-4fe2-b00b-d4a3d1b30f67",
        "cursor": {
          "ref": "2d656d75-083b-421b-8e4c-6b73d98fb615",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "6199b8f6-9d4a-48db-9512-3b66f930c2f4"
        },
        "item": {
          "id": "3389301e-7ba1-4fe2-b00b-d4a3d1b30f67",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "03aaa15d-89cc-4576-bd19-8b3c3d8589fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abeb3f44-6a26-4497-a6ac-5d6df70e598c",
        "cursor": {
          "ref": "22ec72c6-1788-4788-a39c-d96fbed2e44a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c2d00fd2-7107-42e9-ba0c-3d6155070c43"
        },
        "item": {
          "id": "abeb3f44-6a26-4497-a6ac-5d6df70e598c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c542f568-5c73-4f64-89e5-fa168b1948c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f280a8-ad16-4307-bd7e-81a12ea06a30",
        "cursor": {
          "ref": "e14544d5-8227-4349-8f54-72232eb9b716",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3b987372-ea5f-436c-aae0-2d2e4e48e875"
        },
        "item": {
          "id": "f3f280a8-ad16-4307-bd7e-81a12ea06a30",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5cdc1605-350c-49af-af53-852f4441accf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e7313c8-1df4-4e32-a9bc-bd292a0364be",
        "cursor": {
          "ref": "add65e39-5d7e-4255-8dc5-3a645b77d06e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "781a7d7a-f408-4ae6-bca3-03335e1edb3a"
        },
        "item": {
          "id": "7e7313c8-1df4-4e32-a9bc-bd292a0364be",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5118e7b8-3f24-4928-8812-48ce541b2219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "805b5226-11f5-491f-b6b4-05aaad56ceee",
        "cursor": {
          "ref": "fc573fa6-a534-40dd-8c75-eb3daef5a9e3",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "62202868-1643-440d-8d76-ae4796c97c69"
        },
        "item": {
          "id": "805b5226-11f5-491f-b6b4-05aaad56ceee",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "04d8d31c-e5e6-420c-9d2d-530439fcb0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fba99e-aa8c-41ea-a0aa-4706818956ca",
        "cursor": {
          "ref": "9612d473-928c-4d95-a677-c7b0bc804128",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "581ca398-870e-4c9d-9811-b31e6d716721"
        },
        "item": {
          "id": "f5fba99e-aa8c-41ea-a0aa-4706818956ca",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8da4b74a-485b-42ab-9f12-fcce5ac7827b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e247b52d-c342-4f4a-bef4-4456b6ebaf3d",
        "cursor": {
          "ref": "4ec9a308-3950-46c6-a4ba-9fb8b4b33d29",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "80396875-4b06-424e-bb7b-75090e0cd3c8"
        },
        "item": {
          "id": "e247b52d-c342-4f4a-bef4-4456b6ebaf3d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6d45e016-0b9c-46b6-b540-4cf2ee927e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ee341b-41a7-4d6e-adb7-2d15e97d0451",
        "cursor": {
          "ref": "e9423af2-3ae7-48cc-b52b-b0e69a9e41f0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3cb915ca-1132-48b9-85d8-dbe1abdf0724"
        },
        "item": {
          "id": "29ee341b-41a7-4d6e-adb7-2d15e97d0451",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5cad1656-c90e-454e-8075-fbd3bbb47e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80416ea-fbc0-4e95-be8f-4594c293ab01",
        "cursor": {
          "ref": "d0fbb896-87c1-4bf3-99b4-c02a5a131b72",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d6410008-3be4-4580-8b48-eb61e6beb28c"
        },
        "item": {
          "id": "c80416ea-fbc0-4e95-be8f-4594c293ab01",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f79afb17-6816-4938-a90b-ca84e0b2d565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3fc7e5-9213-44bf-bc07-063c4eb790d9",
        "cursor": {
          "ref": "28852b8a-bdc1-4bc7-9131-c7595e7ae248",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "55076f7d-0639-4343-ba24-68274e6cc6c4"
        },
        "item": {
          "id": "2e3fc7e5-9213-44bf-bc07-063c4eb790d9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "30100025-2ede-45b5-904f-1c158024a628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8258a2a1-531e-44d0-a660-64d3b9e09ad9",
        "cursor": {
          "ref": "5533e090-2186-4181-bd8d-5de6bb409629",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "03da4d7a-613b-418f-8ccc-b4649da2f4cf"
        },
        "item": {
          "id": "8258a2a1-531e-44d0-a660-64d3b9e09ad9",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7f8d20e7-cc2a-48c5-8488-c140e96566ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56ac39d-69c4-4b92-b002-ee84c96987a0",
        "cursor": {
          "ref": "cf8a9290-6af8-49b4-83c1-e42dd9971e5c",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dbd17b18-2cc1-4b19-89ce-52277f7b65be"
        },
        "item": {
          "id": "b56ac39d-69c4-4b92-b002-ee84c96987a0",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "88c87ab6-0d2b-44f4-af36-54eaf1018292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7951d202-6757-4bce-8d70-7598176896f8",
        "cursor": {
          "ref": "55c60fb0-e6ae-4464-99d3-807f926a322d",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ab5f168e-fb6e-4e39-a120-165719716d4a"
        },
        "item": {
          "id": "7951d202-6757-4bce-8d70-7598176896f8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1b714841-686d-4528-ac15-787279b61d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10182366-fce7-459d-886b-f3a18d01ae62",
        "cursor": {
          "ref": "a7610c95-e2f9-4ea0-b050-74150647ecca",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a08ea1c2-8cd8-4843-92fb-152ddc11d77e"
        },
        "item": {
          "id": "10182366-fce7-459d-886b-f3a18d01ae62",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "acb77012-d7ab-46d0-9b88-0b9d74c9cc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58364291-d625-4285-bc68-3ccc69b048eb",
        "cursor": {
          "ref": "ab7b2b13-819a-466c-95c7-06d9ab34f99f",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b8622eab-83c8-4d86-b9eb-fe8d6b32bdff"
        },
        "item": {
          "id": "58364291-d625-4285-bc68-3ccc69b048eb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b14256ac-85f4-442a-ad9a-d4f17ace0e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dd9fa7-e0fc-4665-8a35-df6145a4acef",
        "cursor": {
          "ref": "1c2123ca-ab69-417d-8abb-8377006a2314",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "96844c32-db90-45bd-8080-0e1385188b69"
        },
        "item": {
          "id": "52dd9fa7-e0fc-4665-8a35-df6145a4acef",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "d77ded38-20a7-4245-a648-3a3633f0c19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a1f4aa-8789-4198-8c9a-ac70f9790c9f",
        "cursor": {
          "ref": "3e5c6702-f998-4ed3-bbbc-3973d7bab6e8",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "49a9bf74-e28c-4f04-853d-3af4d2832de2"
        },
        "item": {
          "id": "e5a1f4aa-8789-4198-8c9a-ac70f9790c9f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e47c3cf8-a869-49d6-bdca-d911956e58c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13551801-ab9d-4630-a372-cfe1b1457243",
        "cursor": {
          "ref": "6302a8e3-e5a5-4a68-91e7-eb7dd0fdd139",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b862856c-a841-4887-b07e-eef335eda7c7"
        },
        "item": {
          "id": "13551801-ab9d-4630-a372-cfe1b1457243",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "875bdd27-9913-4f4f-8763-7f2410d75575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594afe81-f94a-41f5-a4c7-bc3c90f70bec",
        "cursor": {
          "ref": "3f98f4df-d40d-486d-a28e-3945cb997918",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "066bd4b7-074e-4c2c-b747-450a33903e48"
        },
        "item": {
          "id": "594afe81-f94a-41f5-a4c7-bc3c90f70bec",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d2bffe6d-6d34-4e2e-a232-5e72287724db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2709790f-d7e5-488b-9401-9d4f152c3286",
        "cursor": {
          "ref": "67407c0c-72ba-44f4-9055-7d49902c0bfa",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b71db535-0a3c-4070-81d2-de29f51e31ff"
        },
        "item": {
          "id": "2709790f-d7e5-488b-9401-9d4f152c3286",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "416fdf3e-7c33-4fdb-8c70-21fe3954e46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32e1b05-6b43-4815-a141-8294d38f6d4f",
        "cursor": {
          "ref": "759592e7-a1a3-4e0c-bc67-bf199a978e73",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ef60f1e4-c640-401a-9d63-3c525d275e2d"
        },
        "item": {
          "id": "d32e1b05-6b43-4815-a141-8294d38f6d4f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c0252639-dca4-41f4-a00f-d43622972ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b97614-c8d1-43a4-8732-8f413f442caf",
        "cursor": {
          "ref": "7988f103-54e2-421a-b728-a44c6f53c301",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "089b744f-c493-4b9c-a2de-e4305e340c84"
        },
        "item": {
          "id": "a2b97614-c8d1-43a4-8732-8f413f442caf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6da8c787-186f-4064-b512-d595a122be5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2bb0a6-befc-4c22-8309-5015a9901b1c",
        "cursor": {
          "ref": "943716a6-112c-4b91-9682-371f08a89526",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "48431274-ff7b-4ad6-85e9-5c96bab7b297"
        },
        "item": {
          "id": "5e2bb0a6-befc-4c22-8309-5015a9901b1c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b58007ea-053e-4979-9e97-1123f752d788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fc8d8f-e0ad-4e0b-9fe5-45806dc4ee6f",
        "cursor": {
          "ref": "267e9df9-21a7-4fcd-a809-95287429ba23",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "f18115af-67c6-4497-bff1-e7d07c7a5f2a"
        },
        "item": {
          "id": "c3fc8d8f-e0ad-4e0b-9fe5-45806dc4ee6f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d84197c0-4263-463b-aeba-cea8f3dd4f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8087a84-a4a2-4ff7-bba8-674836b57835",
        "cursor": {
          "ref": "807835c9-5e61-4b84-8c64-450f9c252273",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8b1897c3-0ea6-477c-9cde-15f2d559d90d"
        },
        "item": {
          "id": "d8087a84-a4a2-4ff7-bba8-674836b57835",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "298798b2-4c53-4466-9552-a4fba22abc1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f69d2d97-c050-48ae-88a5-6111a1ed3d44",
        "cursor": {
          "ref": "d2774acd-db81-4613-b180-ec90473d7f56",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c9c9d4a5-7f5a-4434-ab2b-1e2e512ba65c"
        },
        "item": {
          "id": "f69d2d97-c050-48ae-88a5-6111a1ed3d44",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c9d85c37-3ad4-4feb-a69c-667f0322d203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "606ef07b-9f7d-45d3-bbb4-2fb8652a0d9c",
        "cursor": {
          "ref": "6709236f-a750-448d-ad54-0439d9679dad",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "68658ff8-49c8-4fb1-9ca4-cefafe5d0b9e"
        },
        "item": {
          "id": "606ef07b-9f7d-45d3-bbb4-2fb8652a0d9c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b8b12683-c691-4c07-bc73-8d0493780b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70679562-a7d4-471c-9914-fac53b43270b",
        "cursor": {
          "ref": "a98afc7a-f17d-4c50-a2c1-82e702d28b24",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a82a5198-5c54-473f-821a-50319ed65c95"
        },
        "item": {
          "id": "70679562-a7d4-471c-9914-fac53b43270b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4ceafe08-cd80-4f9e-b624-be6e11af4c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a9a25a-bb01-4cbe-bc88-e588a2c34391",
        "cursor": {
          "ref": "3313db05-45cf-47c9-be32-2d226dcecdb3",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e0573623-8973-4acf-8b73-ab4709669062"
        },
        "item": {
          "id": "c6a9a25a-bb01-4cbe-bc88-e588a2c34391",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8feb0e23-6a55-48a6-96b0-8ea9f8240a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cdb023d-de58-4696-870f-b1dcb0eab524",
        "cursor": {
          "ref": "bbe77603-0bcf-4678-8d7d-c8531e3404c7",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "72b289a5-f8eb-412f-90f6-08c2eca6bcf2"
        },
        "item": {
          "id": "8cdb023d-de58-4696-870f-b1dcb0eab524",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "892385ee-6360-4807-98ff-ba5b9239b151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b5a821-642f-49ff-aba4-0cfaf8ea21de",
        "cursor": {
          "ref": "71a9ae7b-5e39-4a7e-ba43-52160e05dc28",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "2979215b-d120-4123-9da2-340817ff643e"
        },
        "item": {
          "id": "31b5a821-642f-49ff-aba4-0cfaf8ea21de",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0a5f5418-8baf-46e0-a67a-133cbc5b1a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990240cc-395a-4ab3-8d1c-c86950082e23",
        "cursor": {
          "ref": "48ec4b0e-b0b8-41ed-85dd-960f7a9488b4",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a3a013c4-ec09-4006-bbe8-75281e0bd4d1"
        },
        "item": {
          "id": "990240cc-395a-4ab3-8d1c-c86950082e23",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c540296c-980c-4ca8-9f39-d1fa2a36a2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045102ac-d9e1-4493-9b4c-4629169fb027",
        "cursor": {
          "ref": "08c7745b-4373-4f40-b59a-1314bf66946f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "43474e61-1f00-4855-8cbd-06419ece6376"
        },
        "item": {
          "id": "045102ac-d9e1-4493-9b4c-4629169fb027",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f21e2a04-25fb-489d-944a-b7fdd42720dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dd40129-fc4c-40f7-9407-afda21447429",
        "cursor": {
          "ref": "e3041716-a2f1-45c9-981b-3369acb1fd87",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "91c083b8-ebe9-4b2d-a687-c2770bad6f87"
        },
        "item": {
          "id": "6dd40129-fc4c-40f7-9407-afda21447429",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "2c69a7b1-1801-41c9-b369-0a5013f9a4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d37c56-22f8-4143-b546-a9b57ffc8038",
        "cursor": {
          "ref": "f006739e-4819-469e-aabd-a6698377d5a9",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a340ccac-5bf7-488b-8c62-829ef39eca24"
        },
        "item": {
          "id": "e9d37c56-22f8-4143-b546-a9b57ffc8038",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5e54e058-9db0-4468-b602-113e38e16579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6c0a3d-c0e7-4d2e-a5b6-b675ab284927",
        "cursor": {
          "ref": "613f15a4-2345-4e97-9117-fc3472b478ee",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bc0f159a-93d0-4fb6-8397-df8086639c75"
        },
        "item": {
          "id": "5c6c0a3d-c0e7-4d2e-a5b6-b675ab284927",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ef717318-b5bf-4f84-b626-72a707153f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ba17c4-098e-43bf-aee1-503aa032d9d7",
        "cursor": {
          "ref": "13bc61d3-521b-4052-a84e-ebcb93e41bdf",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "75a87ccc-eacb-4fcf-ba4e-20284c2ea83c"
        },
        "item": {
          "id": "b7ba17c4-098e-43bf-aee1-503aa032d9d7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5216bb4c-183e-4cb0-ae76-e0eed45ca141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0febb76e-ecfa-41fd-9ecf-b42dc70f35ab",
        "cursor": {
          "ref": "8db9dd12-1159-4fcf-b25b-3b805ca88750",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d6290ff6-07dc-4e70-8dda-acee8a7abfad"
        },
        "item": {
          "id": "0febb76e-ecfa-41fd-9ecf-b42dc70f35ab",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "31509fe6-50f2-4896-bcd5-c28c47162dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22565a11-f110-4b75-96a4-53a91f950124",
        "cursor": {
          "ref": "a0edbd99-6cc8-41ce-a097-42001f57bd03",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2831c114-bd9f-4be7-8a26-e47bb001de19"
        },
        "item": {
          "id": "22565a11-f110-4b75-96a4-53a91f950124",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ac6e8e4c-32b8-42d0-8c3e-6f22d061e161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6617d36f-af77-4c41-894e-14bd53b698ad",
        "cursor": {
          "ref": "81a7b6a9-bcb8-437d-9688-cb8c14e87bbb",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "ebc75935-ffe4-4e3e-bd85-a00dd3179ab0"
        },
        "item": {
          "id": "6617d36f-af77-4c41-894e-14bd53b698ad",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a1cdfdd7-8cc4-4dc3-9b2b-c1a8a5941459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ada694-0e47-49fe-8b9c-da564d2c4027",
        "cursor": {
          "ref": "f34ce0ad-94ad-4274-a467-1ba6bb31f0e2",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "157449ab-8000-4d1d-83b7-96e2057572c6"
        },
        "item": {
          "id": "a1ada694-0e47-49fe-8b9c-da564d2c4027",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6aa1be57-660f-4688-9466-e4c2d7714cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "757c9f6a-734c-4199-9b3b-2fbc3cf1e5a5",
        "cursor": {
          "ref": "53e679c0-8b32-4483-ac39-976cd13580fc",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "71b8895f-3ca9-4819-892a-6e1e83e7350c"
        },
        "item": {
          "id": "757c9f6a-734c-4199-9b3b-2fbc3cf1e5a5",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0b54fedf-befb-4a02-88db-a986fa622b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50dd19ae-92b6-4134-b159-a5e315d2682b",
        "cursor": {
          "ref": "9f31ab09-0135-4b83-8228-121764fad996",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ec3d3bc4-7c97-4be3-88ee-1af9b22aa7ea"
        },
        "item": {
          "id": "50dd19ae-92b6-4134-b159-a5e315d2682b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "addae594-27c9-456b-a7f0-c9253d09d8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767604c7-c2ef-4e41-bcca-c4ee5ffc8dfd",
        "cursor": {
          "ref": "239ec7ba-9a55-4d21-a92b-b0f3a604077f",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bbcca8a2-420b-451b-b090-e3673e4e61a8"
        },
        "item": {
          "id": "767604c7-c2ef-4e41-bcca-c4ee5ffc8dfd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f6cf365c-2e4e-4203-bc42-ca922fe15ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465a25aa-0598-4519-82c6-3d4da3cbf866",
        "cursor": {
          "ref": "e0f9ddcd-a519-4bbe-87c5-236fc4ee3d06",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "60c6ff85-1fac-4363-a10a-460b182c0d88"
        },
        "item": {
          "id": "465a25aa-0598-4519-82c6-3d4da3cbf866",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1df465a8-ecf9-4d48-8774-44835ec88d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d78e975-7419-491d-b04a-1e34ace7c213",
        "cursor": {
          "ref": "45a9987b-e1a5-499d-8bb3-cb5657292037",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "640cfb48-1d7d-4c20-a0da-135e34564314"
        },
        "item": {
          "id": "8d78e975-7419-491d-b04a-1e34ace7c213",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2ae7b49d-f738-4ba0-ab3b-66ffe258eb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3b5d31-4a4f-4975-9c31-d0d539888abf",
        "cursor": {
          "ref": "d9448ab5-8b9d-4341-9140-4d54197165b3",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "332a1924-de39-4da6-82b8-b6640f9b5ae7"
        },
        "item": {
          "id": "6c3b5d31-4a4f-4975-9c31-d0d539888abf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "17f86ebf-b266-4c9f-a6df-60db921bb98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d601d1a-9f98-41e1-95fa-8ada95576a4a",
        "cursor": {
          "ref": "4580b9cf-14af-4896-9c0f-1f297505415d",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "add2966c-27eb-49f8-a3d6-1291b4991b80"
        },
        "item": {
          "id": "2d601d1a-9f98-41e1-95fa-8ada95576a4a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fed31a9d-83b3-4437-9797-3c67c63ea635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b0d2199-3edf-4c9f-a8dc-ada87fb1b2ba",
        "cursor": {
          "ref": "dffa64fa-151a-4609-95bf-f0ea6be8d5c8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0f36838e-fd85-4fcb-a69a-31bcb6ba0dc6"
        },
        "item": {
          "id": "2b0d2199-3edf-4c9f-a8dc-ada87fb1b2ba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cb347f5c-520c-46a0-a897-563b78ab0ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2d6059-e027-4c1e-98be-dfe73e49574e",
        "cursor": {
          "ref": "0f353c31-439a-4b73-922e-134a8c0317a9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "26ac0792-e506-4871-9078-a6c04741b31a"
        },
        "item": {
          "id": "8b2d6059-e027-4c1e-98be-dfe73e49574e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c5790a7e-c2cd-424a-a432-4ceebf48f9c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7839d0-b3bb-4671-b5de-3cc9bcc3b954",
        "cursor": {
          "ref": "b5d316d2-8a47-4a41-b671-a2f66e088d80",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1b624d3e-05ca-4e2e-ac3d-881a38a7a912"
        },
        "item": {
          "id": "ba7839d0-b3bb-4671-b5de-3cc9bcc3b954",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e74fbedd-5bb6-418f-bd67-26fd9f2ca85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a336d54a-e029-40d3-ac9e-0d9cfea5049d",
        "cursor": {
          "ref": "913a1534-4423-48ab-8291-067d65722d2d",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e00da799-6634-446b-9eb6-070cb8036b1c"
        },
        "item": {
          "id": "a336d54a-e029-40d3-ac9e-0d9cfea5049d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "18e9150d-0536-40ad-ab39-ecf05f15f8ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bd152c9-0d4c-455d-94ae-a18b0a26953f",
        "cursor": {
          "ref": "b869acc1-0282-4b08-b952-26dd3cd04bb5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5358f78a-bb8f-4ba7-8fc2-aedc70d5c837"
        },
        "item": {
          "id": "5bd152c9-0d4c-455d-94ae-a18b0a26953f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0630becc-f889-4aa2-8972-6c94ce26c471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df12220-dcf0-41a5-8e0f-1d8aa98c2940",
        "cursor": {
          "ref": "0fa86ee9-6d76-4697-8974-8c2010587265",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8c994b38-c9fe-442a-8a36-a7dc54d4290e"
        },
        "item": {
          "id": "0df12220-dcf0-41a5-8e0f-1d8aa98c2940",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8bb6d3e3-8105-4adc-91ec-59aee902b222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c12ab6d-5054-440d-a152-bece1b1c6ba5",
        "cursor": {
          "ref": "4f22893d-11fd-4dc5-81fb-4ad3ecf7d751",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f8369177-28df-4fd6-b176-1bbe4b4cd200"
        },
        "item": {
          "id": "5c12ab6d-5054-440d-a152-bece1b1c6ba5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fac7baff-f035-457a-a5ec-3cf563c02b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24109a90-329e-42a5-9ce9-f651eadccea5",
        "cursor": {
          "ref": "79dc19c8-4cd0-4364-8b99-193439df1f8a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1c097ef2-de3f-44da-961f-d9c0cb8e969e"
        },
        "item": {
          "id": "24109a90-329e-42a5-9ce9-f651eadccea5",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1a6cd844-22cb-46ee-ada3-458fbc12868a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0380589-704a-4b2c-855c-4383670f0fa5",
        "cursor": {
          "ref": "da7f968c-4142-4837-b74e-4ec11c6300ef",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "da3aee98-7f46-45cd-a233-4ed7f4744638"
        },
        "item": {
          "id": "a0380589-704a-4b2c-855c-4383670f0fa5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f82d1a94-e2f0-4294-8547-935de7a7b0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e94636-65e7-4cab-8ccc-a86c1d85752a",
        "cursor": {
          "ref": "f47fe4e7-6bb6-40f8-9b38-e382f730a8f8",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a1c0df61-7905-4a5d-b332-db17fe914f54"
        },
        "item": {
          "id": "30e94636-65e7-4cab-8ccc-a86c1d85752a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "65638387-5e47-4ae1-878d-a770a2a709ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfe2b94-bc39-4df4-a8d7-f455ac817d04",
        "cursor": {
          "ref": "c4d7c07b-74c2-4980-afb8-8d1db7c84b91",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3f2ec461-403b-4544-b759-e093de1b40e7"
        },
        "item": {
          "id": "3dfe2b94-bc39-4df4-a8d7-f455ac817d04",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "441051bd-f342-4060-99ed-885b57826e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b0f9cb-7012-4e1c-930f-f5c6c8bb4cc3",
        "cursor": {
          "ref": "56a8fd4f-791f-486a-9b66-3040f680d800",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1a4b0c2c-430f-4d4e-964e-34bdfdae5395"
        },
        "item": {
          "id": "34b0f9cb-7012-4e1c-930f-f5c6c8bb4cc3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4320b189-7f9d-4ec7-a4a7-6e67be91f9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1387f19-c236-409a-8198-6d8d6566afb9",
        "cursor": {
          "ref": "b9b4ecaf-f3c1-43ec-841e-008e9879e46a",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "a9237443-7ae7-434b-a639-7eb7105f537a"
        },
        "item": {
          "id": "e1387f19-c236-409a-8198-6d8d6566afb9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "17b77069-06d3-405b-b3a1-dd8a70dd88e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51edba95-dd1d-438a-b444-c9808010c0ca",
        "cursor": {
          "ref": "4b941d26-b17d-4b48-ae78-1828887d99db",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "99d260ae-78d3-412e-a491-898bdef06caf"
        },
        "item": {
          "id": "51edba95-dd1d-438a-b444-c9808010c0ca",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2cffcb87-06dd-4eeb-91c4-4cad4d41b82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67075bd-4ce0-4383-8b6d-9614d6b9af26",
        "cursor": {
          "ref": "ab645c3b-c1b8-4b27-b6e4-b975dc95aa16",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "842a25ff-a937-4da4-9bb4-e1215b4868ce"
        },
        "item": {
          "id": "f67075bd-4ce0-4383-8b6d-9614d6b9af26",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "5ff200bc-bafa-498d-b7f2-c6e63c9a26e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf193203-07ea-4339-ad43-833d0c7345ab",
        "cursor": {
          "ref": "6ec7b855-5521-4165-a9ba-660a9746dae9",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b11efd45-11b4-4c27-84ff-70d7a189581f"
        },
        "item": {
          "id": "cf193203-07ea-4339-ad43-833d0c7345ab",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "89e92ca7-cc14-4886-b00b-0129ef736366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522da9c6-6b03-46e1-abe4-e11dfc5339e6",
        "cursor": {
          "ref": "609a8ee1-558c-415e-9751-95bd7c3ddeb9",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8816945b-4899-496a-8537-92a13863420b"
        },
        "item": {
          "id": "522da9c6-6b03-46e1-abe4-e11dfc5339e6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "767dc038-67c1-44cd-878e-f33d7af3d04d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18173446-bee9-4fa8-8620-5f5d15745c54",
        "cursor": {
          "ref": "3fb636c1-db4f-4d6c-aef5-827d2bdb00be",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "27121118-a02e-46c1-b9af-946ab519ffc5"
        },
        "item": {
          "id": "18173446-bee9-4fa8-8620-5f5d15745c54",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "521ce541-6853-4a69-ae8c-2352aadda16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d628b6-0fb3-4b35-bd0b-b4dcf7609004",
        "cursor": {
          "ref": "d5fa38c8-2c59-450d-aba5-cdab4ada30f3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "416bf33b-7cfb-4a8a-8133-88d6606bc5cd"
        },
        "item": {
          "id": "87d628b6-0fb3-4b35-bd0b-b4dcf7609004",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "999b54f4-d30a-4a0e-9d18-e7b3fcdbb462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555d5cd1-2b95-4261-8551-e4ce1b5549dc",
        "cursor": {
          "ref": "d5b8a9a0-b384-4b02-b201-8094a41ba9cc",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "86ad7e5b-12b9-4f62-adc6-a193af74627d"
        },
        "item": {
          "id": "555d5cd1-2b95-4261-8551-e4ce1b5549dc",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "21e76ba5-fa3e-42b7-932e-1755b9d1974b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12638d12-ba6c-40e4-a0c9-5ee3cd8167bf",
        "cursor": {
          "ref": "c5f2d0ae-7aba-490a-8252-57f232ebe8bc",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e3678b85-1fec-4caf-9718-4cbcd100a4d6"
        },
        "item": {
          "id": "12638d12-ba6c-40e4-a0c9-5ee3cd8167bf",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0de26b67-7918-4ab6-9eb0-62f033b94d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a036f49-79ad-413e-b759-7e6965c45ba9",
        "cursor": {
          "ref": "82fb5daf-07a2-4105-93b9-af1343a4eeaf",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4ac6cc92-72ff-4de4-96e6-ebfb02406667"
        },
        "item": {
          "id": "3a036f49-79ad-413e-b759-7e6965c45ba9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fc477e1d-c66f-46ce-998a-c61f241cd0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c59f7777-0782-4063-ae31-108fcb3844fe",
        "cursor": {
          "ref": "2272b570-a7f7-4eb6-9828-a09250d0da6e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ee28ea63-6308-4f88-a177-e9a09e41fead"
        },
        "item": {
          "id": "c59f7777-0782-4063-ae31-108fcb3844fe",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ef2aea02-a3f2-4270-99e3-ed3d7ec967d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb18ea26-696d-4998-ab93-b38f5fddffec",
        "cursor": {
          "ref": "6eb127a2-15c6-431f-a80e-d963d61af042",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "0ad4d820-763a-4b71-a613-b8ae88a48646"
        },
        "item": {
          "id": "fb18ea26-696d-4998-ab93-b38f5fddffec",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f85ad17c-9265-42a7-b7a3-c86b79171f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3957dd2f-aa94-4376-af90-ff4b6fc2bed5",
        "cursor": {
          "ref": "53e8a1e3-5c26-4908-9bbb-8aec70103849",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "6ae20668-df17-45af-a774-41b44e6a5289"
        },
        "item": {
          "id": "3957dd2f-aa94-4376-af90-ff4b6fc2bed5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9cf47634-a570-4123-ae72-7f59d19f6d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79954f83-e9d4-4d83-8136-5ced2adff3ae",
        "cursor": {
          "ref": "918b24ee-5848-4023-93c9-5587ad59e482",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ff5d5b42-adc7-4b37-ba9b-0ee248daf8ee"
        },
        "item": {
          "id": "79954f83-e9d4-4d83-8136-5ced2adff3ae",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f1a4eb33-c437-4adc-8ee3-8718723fece3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1ed39c-50d5-4fd3-8419-bda9efa68c5c",
        "cursor": {
          "ref": "35dc63a2-6a2b-4448-a4b3-59d2f644922d",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e69bd3a2-397f-444f-bb21-acb12741768d"
        },
        "item": {
          "id": "9c1ed39c-50d5-4fd3-8419-bda9efa68c5c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "968a9aab-c410-4349-b96b-38181d3776aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5ee3a2-84db-4f39-ae2d-ddb5cc873d7b",
        "cursor": {
          "ref": "149887b1-b408-44f5-b58b-942dd85466e7",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c3e95290-c48a-4be2-a7cc-42195b20b1ea"
        },
        "item": {
          "id": "1b5ee3a2-84db-4f39-ae2d-ddb5cc873d7b",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1e9db7d1-546b-4f50-8762-669a177c15f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c744ded-cdbc-4a42-8118-9feb69880991",
        "cursor": {
          "ref": "0ad61185-39f2-4dc7-8d2d-f918a5385a4c",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e830032a-c2e1-41e7-a0cd-aaa167c5377a"
        },
        "item": {
          "id": "1c744ded-cdbc-4a42-8118-9feb69880991",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c755bfa7-d581-45e2-9929-d9221d1764c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e245bc-2de3-49c9-9d22-60c45c1e6497",
        "cursor": {
          "ref": "8c732be7-16f8-4837-98ae-304475983e3c",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d43afb99-5b45-4a23-9832-edc07f3bb159"
        },
        "item": {
          "id": "59e245bc-2de3-49c9-9d22-60c45c1e6497",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "2193c9a0-8a66-4e0a-a559-bad118383994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461912ab-d3fe-456c-b258-94a44bf0f2ba",
        "cursor": {
          "ref": "d7dedd0e-b462-48b8-b93c-4abd9ede9029",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e275e895-e43e-4f07-b4fe-a3ad69b55f7f"
        },
        "item": {
          "id": "461912ab-d3fe-456c-b258-94a44bf0f2ba",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "64cf0480-e89d-4c7e-9297-63079355c965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8636eb40-7310-48f0-911e-59224f8306cc",
        "cursor": {
          "ref": "87ab228e-55e4-421f-8efe-1866231ef01e",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "98c1c1ea-bea3-4117-9e1d-1c27d99a9039"
        },
        "item": {
          "id": "8636eb40-7310-48f0-911e-59224f8306cc",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "869f4a4f-d826-4a4a-8933-7ffd1a6d3928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca44f5b-8486-4aeb-8ce9-ec72f6b0e42e",
        "cursor": {
          "ref": "332fefb3-c266-4eb2-961c-7c6a6796bd66",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2297af2d-3dff-493f-ab34-6110e9325f12"
        },
        "item": {
          "id": "aca44f5b-8486-4aeb-8ce9-ec72f6b0e42e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "aa4c98dc-844c-4433-b1d9-0f716a5be5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5ed112-271b-41af-bc5d-bda8af2663a7",
        "cursor": {
          "ref": "85aef4f1-2189-4428-8764-a01dfb6f6fda",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1faba30c-0a03-42db-b5d2-b63886eac5c9"
        },
        "item": {
          "id": "5d5ed112-271b-41af-bc5d-bda8af2663a7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e8f465b0-b0b7-4e83-8931-7e0e97eb3e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3575e66-6143-4682-ad0d-2242603d82da",
        "cursor": {
          "ref": "0cdaa944-ccc8-4344-be24-d422e8c9354f",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "bfe8f71c-c4c1-4740-b94b-068a0a66e096"
        },
        "item": {
          "id": "a3575e66-6143-4682-ad0d-2242603d82da",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "11ea429d-1ec3-4b3e-a0d8-821d0944a9c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e326f8fd-3862-4981-870e-dbc25d362220",
        "cursor": {
          "ref": "4b11d5d4-85fa-4bae-9823-2ebe6fb7a939",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "aad427ca-f1c3-4aff-aba4-74abcfe5765b"
        },
        "item": {
          "id": "e326f8fd-3862-4981-870e-dbc25d362220",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1647c5ee-c16c-4e53-8ef1-adedff18f567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcf36168-399f-49e4-9403-4010f30e7250",
        "cursor": {
          "ref": "dc4a3689-2046-45a9-97fe-e5d2c3e6afe4",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "82a6c6d5-e268-4f7b-a588-7d9d1ca90d73"
        },
        "item": {
          "id": "fcf36168-399f-49e4-9403-4010f30e7250",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8fbf1c4e-a244-4196-982e-d8f540d7365b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c55c7aae-5e17-42b7-8fa6-3066d9031546",
        "cursor": {
          "ref": "bbfc7cea-f2fc-4bdf-83b3-865ca27e0251",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "1d01b8ae-0b01-4072-8338-9815f2290d9b"
        },
        "item": {
          "id": "c55c7aae-5e17-42b7-8fa6-3066d9031546",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0da6e6ec-3873-4d38-b0ad-ec053f49517a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecac737f-cf85-4dc5-a1cf-952b8df96143",
        "cursor": {
          "ref": "0690f07d-7d90-433d-85d4-ef8f9ea590b9",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "9e560fa3-d0ec-44cc-ad77-9156b0c7ff87"
        },
        "item": {
          "id": "ecac737f-cf85-4dc5-a1cf-952b8df96143",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "c77e58b4-db40-4d09-89ee-19d05445027a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0cfb3b8-fbb3-4652-b82e-2d3e9d56c6ca",
        "cursor": {
          "ref": "cdd29b25-9853-4360-ae41-1fdb824bbe07",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "7b673b28-aa4a-41f5-9fef-75216fe251b9"
        },
        "item": {
          "id": "e0cfb3b8-fbb3-4652-b82e-2d3e9d56c6ca",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "98f09edb-3df7-4717-ab52-02190e0f2aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ef04e4-5de2-4963-a07c-49093f89d09f",
        "cursor": {
          "ref": "12ceb983-019e-420d-9509-7ac14431eab0",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "c94a2da7-68de-4e03-b8d3-edbfadd0d4b3"
        },
        "item": {
          "id": "e0ef04e4-5de2-4963-a07c-49093f89d09f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9f52a1b0-6227-4a25-afe8-a5a9e3097979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50b73efb-cdeb-4f53-85b6-757ca7680a81",
        "cursor": {
          "ref": "7d9bfd46-147f-41d3-80d3-2a59078eba06",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "4b7ecc93-2040-47ca-9cd4-27d128957cf1"
        },
        "item": {
          "id": "50b73efb-cdeb-4f53-85b6-757ca7680a81",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5185a1cb-0b8f-4a6e-b45b-8e9369540c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7935f2af-a1cc-44fd-a3aa-7053b42fc6ea",
        "cursor": {
          "ref": "d1f49d7c-f271-4692-8e22-6f6be3cde817",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "b8237656-6310-4c90-bb6e-ef2f6ec95d4b"
        },
        "item": {
          "id": "7935f2af-a1cc-44fd-a3aa-7053b42fc6ea",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "097052bf-e2ec-43ac-9581-3837ac4ec169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7500ebed-5b1d-4973-aea5-f4a6516ed245",
        "cursor": {
          "ref": "b5a2d720-2a1a-4dd1-8a5e-9a2c15ecb443",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1bac65fa-5ef2-4195-bf18-84a98bcdbb61"
        },
        "item": {
          "id": "7500ebed-5b1d-4973-aea5-f4a6516ed245",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "30ad19e6-a5b4-4d3a-ae03-761ac501934e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e1e36a-3da2-44f4-8297-9295806237c1",
        "cursor": {
          "ref": "94c4a79d-6734-44d0-b2f6-f2adb8921894",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "509ee6b1-8050-4ee3-9e84-9526eaaf9150"
        },
        "item": {
          "id": "40e1e36a-3da2-44f4-8297-9295806237c1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "09eed158-9607-441a-b391-35704fc1e3e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b380a-7259-4067-8b7e-a6b3e2c0017c",
        "cursor": {
          "ref": "5528200e-35ec-42ba-84f7-49329f1e7a2b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "1a694464-d1d4-437a-bf19-903f4c4bc4bc"
        },
        "item": {
          "id": "128b380a-7259-4067-8b7e-a6b3e2c0017c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "15ea47f4-9583-41c6-bcfb-fed2d993313d",
          "status": "OK",
          "code": 200,
          "responseTime": 146,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5944235-42d4-4357-9d40-11976b834720",
        "cursor": {
          "ref": "30161f5c-7719-4663-9e7c-b763c48034d2",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "da5502eb-1b5c-47e1-8901-0e16f7df24b7"
        },
        "item": {
          "id": "e5944235-42d4-4357-9d40-11976b834720",
          "name": "credentials_verify"
        },
        "response": {
          "id": "25f5bb1f-d730-4c79-b9bf-b32fb54ba26f",
          "status": "OK",
          "code": 200,
          "responseTime": 1560,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed5eda0-b689-407f-bca0-03ee0844c097",
        "cursor": {
          "ref": "0da564a7-0e11-4591-946a-ea2bd4a9c60e",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "48bdf644-1c8a-48e0-8e40-fe3e27d48818"
        },
        "item": {
          "id": "5ed5eda0-b689-407f-bca0-03ee0844c097",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "31cd79d6-cd48-4fad-880e-c14784ad0562",
          "status": "OK",
          "code": 200,
          "responseTime": 1966,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e003e4-6f63-4905-8bb6-203f2d457c23",
        "cursor": {
          "ref": "db5f858f-1301-4cc4-83a8-3075494ba7a0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "157f42f6-eac5-4b97-8242-d1ffd0c8da3a"
        },
        "item": {
          "id": "c1e003e4-6f63-4905-8bb6-203f2d457c23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "979cb755-4b78-41af-9e80-27ab25aced9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e003e4-6f63-4905-8bb6-203f2d457c23",
        "cursor": {
          "ref": "db5f858f-1301-4cc4-83a8-3075494ba7a0",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "157f42f6-eac5-4b97-8242-d1ffd0c8da3a"
        },
        "item": {
          "id": "c1e003e4-6f63-4905-8bb6-203f2d457c23",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "979cb755-4b78-41af-9e80-27ab25aced9b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40128ad1-0f67-4a5b-ae35-7b2a78a6bce8",
        "cursor": {
          "ref": "8ace7171-1340-4179-af42-1021fcdb4f3f",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f1418625-3551-4d74-9479-01080462a2cc"
        },
        "item": {
          "id": "40128ad1-0f67-4a5b-ae35-7b2a78a6bce8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f7696804-1224-4501-b2c3-a72c18e24413",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "658bcfb9-401f-443f-98bf-8d0963947afa",
        "cursor": {
          "ref": "5f9e2b97-e629-452e-8188-e5e2d23796a5",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ec6fe0d8-0ffd-40cc-94c5-f7c3baf58622"
        },
        "item": {
          "id": "658bcfb9-401f-443f-98bf-8d0963947afa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fd5a7b41-29d3-4f0f-9b6a-f6b0fe0cea36",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}