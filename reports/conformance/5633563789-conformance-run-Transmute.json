{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a33df04d-7083-465b-9633-0f359f9f32da",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8f9bca73-6a48-4d23-a91c-a56a5ddceb88",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ad7f7d8-9138-4294-9454-bd62a657e8b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "677a3089-19fe-4fc6-9425-72fa23abd071"
                }
              }
            ]
          },
          {
            "id": "7f0f60e8-3ec9-46f1-9274-91292b2c2a88",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "da8c5b3e-0d6a-4093-99f4-495a64f55afb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "10f0f6e9-824b-46b0-a1a9-70c69e042b58"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "d612c332-f933-4e10-b647-224eb19990ee",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "39f0e749-3a11-41b0-9386-cba5f2873c23",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d57c52a7-ba57-42f4-ae18-b574f24f4356",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e89eb2e-024b-4edb-8881-8ffe1124a22f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a51e3e4-3a48-43b1-9b9a-f53af9cc91a9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5c7c198-d61a-4b5a-ae21-de322c56fc97",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aa97dcf8-1dcd-4135-97cc-1ded13853653"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1d8f644b-7e6c-46bc-b622-d1704bd4ef9d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5d045e3-a9ec-4286-94b9-dac3e4eadc8b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed77ad5e-1d2e-4613-9f05-454dc5706ee1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "323438d4-7b8d-4d03-8b9f-3245a54f8c43"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9a3a3f76-d7cb-4cb0-8ad4-e4a2e3b80302",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4fd4958-6757-4061-b485-c5463f109d9a"
            }
          }
        ]
      },
      {
        "id": "11afd5a8-43a7-415b-bd2b-7b95d44e2d9b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1f6db1ab-3fab-4b03-9b2c-dd82dc7c9494",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f2e42c23-30fc-4a5e-92e4-bba2ee507f5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "875c13c2-4bca-40ae-83e0-ad24deb26cbc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17d0af7-0657-4fc5-8b12-cc05cadcddd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23842064-7aaa-483b-845f-6e9ceab83ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4685a76d-e6c8-437d-8ac8-443d2b8c8c8e",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d4406e2-2bf6-4451-bee3-361272b81471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "303e6317-2ee4-46ed-a76c-17ae323b16dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad118f0-1d64-4904-88e5-764d96859cbc",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af672bc6-d385-48d2-8ae2-06ef6ace16c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36c16cb1-f195-4665-951d-2baa3f239118"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e5099412-a844-48fb-bdf6-5a8ed2843536",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a38d688-2e35-4a17-be27-3e06f0e54b1e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d991d8bf-3200-4ccc-91d6-c8e12bbcaf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc602137-3f97-4ab5-bc41-824b2986506b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69de992d-2255-48a2-bef4-a00b4963c29b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97fdf78e-0fc2-432e-9e3b-859510a56281"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f68d02ae-cc28-4437-aafd-ff605dc57778",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6ddf33e9-e54a-453e-a5ad-94068508bc37",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c003eab-6f33-45f2-8735-19b80d55ec0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "acc57c12-08f7-4622-9f28-bef8b552e012"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "456271e0-9abe-4537-98a7-a3b60fd957ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0b6cc65a-cad5-4f02-bc13-faaeaa5d4c0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d96e7a8-25d3-400c-ae39-063ed17f6573",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25169158-946a-4422-bcc8-4370f866a1aa"
            }
          }
        ]
      },
      {
        "id": "e89d52e4-e8a1-4ae8-afb9-e896ab914eea",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a9e6a3b1-99aa-4a0c-ad40-6e0c7f357fcc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa0cb251-f12c-4923-b797-10caac65cf46",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5f26d036-fb56-41fd-8c05-960191b3174d",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69d53ba-f42c-47b8-9f92-8f9a7fdfd78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb4a54e-95be-4789-b020-52ad97bb2df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc137667-7886-46cd-ab83-2df85e29ce4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22160263-a74b-4ee5-b291-832b7e349be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea171e03-8b59-4ee5-ad84-02899a0511e6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9b68dc-4ea0-438b-9ed4-503f71fb8f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16995283-764f-41f0-9ea2-33646c2ff5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47440f30-6c7b-4bab-a2e9-57752b3bb536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bed2e8c-c0ec-41c8-a209-5765641759d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d7ae27-ada5-474a-a114-a85709763a93",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b50d5e2-f89c-4bfb-96f0-d1989948bffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894384ab-1a00-4d64-b59d-251611734741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5109aea0-bcf1-4e5e-a952-d22328446992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b86f156-166f-464d-a7ea-70cd309a560b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae43df40-2557-4d2b-ab11-66749b8c58bb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c442ac-8c23-483b-a0a0-8bcd5fb50e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5f728f-1d69-4ce1-9e56-d3960681ce59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1956b3b9-a0e1-4882-a313-4fb5d7493bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe398f0e-c525-47f4-8846-c81e5311fde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d21b74-c5ad-4f84-88be-85cd226a550c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddb939f-678b-4e7a-958f-c5fce89c507f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808e9a44-621b-4f5c-ba4d-75fb51611b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc6015a-bbdf-437a-a9a8-fc335ddf936e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99d3ca10-ead5-43f6-9b25-a9dcc2d70e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3db0035-57ca-4f57-b4e1-9b7a1a5cfb42",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d92fac-7e30-4aec-8666-073c69d11ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a858aa-3384-4c69-b7c9-3d8e7a4d47ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cce76c9-eb94-4865-9543-ef0fda429b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2180af6-a1b1-414c-ae06-ea2dbf75386e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f20591-4610-46f9-abb4-f904d4bad0c2",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b9a407-3c7f-400e-949f-fc5acb168e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9552fba0-bd14-40fd-8a77-1becd33a944d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfceecac-ddfc-4f9b-91dd-79355f581551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64ae2701-0037-42bb-acd0-aab5f1f4d630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483bd9aa-0b61-49f2-9dc8-8e05c8799cb5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1621d1-7a59-426a-826e-54f1eed6d247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f0feb6-d3a6-42a3-9fd5-3c4a7b009929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2606f939-47a9-482e-80df-c8dd392e4b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d07a199-fc7f-4bd1-af77-c87fb9b9fc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f946c019-be10-4f35-851d-4225f4a70b75",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2db781e-b928-4d29-a28b-f9334d8d23d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9081caa-64e6-40ef-aa35-e89d3672320b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2886ecc5-f73b-40ed-a272-fa9264f50292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bfb612fc-9f69-4938-9ce3-b338ef774b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420d98e3-45fb-4235-85cf-3f71796b109a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8bb8b49-f815-440b-bf77-51221a4c2ef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e37f1d3-4907-4e95-b712-7d4582b9de44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0a5abd-c675-453f-a180-ef8013e9e77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86f97e5e-7503-4c01-b682-15799588c858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fa39b8-4378-4a2e-967f-d3a40df31a60",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c7a99ce-327e-4c42-b64e-c7c3f68306b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb04902-f158-4ad7-babc-238299c676f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b70866c-834f-4cd5-884b-1127d087327f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "706175fa-e3e8-4241-a6d2-3b6477cc8085"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19918042-a00e-4972-8ccc-0a68ae1cb227",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c934175-8527-43d3-a67e-ae6bb24f02b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7c2411-adca-4489-a280-5a418a8c997c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f5c77c-b069-4aaf-83b4-0a9653dbc1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0347a4f5-f64f-4d34-bc8d-348e380d4ca8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f742aeb7-d310-41b9-8eb3-1fc4b3f88b80",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2cb4fe4-0ff8-42df-be69-e4fa4c9d4f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50370ecc-9e22-4207-ba90-14909a973ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68758faa-4c93-4e8b-858d-203334f139ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6531985-e21f-49a7-96fc-96d522894f26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa0767c-b49f-4d7e-b0c9-8d976c94499e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e520eea-f2d8-41a4-81a5-3c244f3fa0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f6dc547-0947-4042-9917-f1dace9e6bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ed96c1-8fca-4e87-998b-125e120ad776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b100e79-49e4-42d9-a73d-5fe703a6fa26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdc152b-f2ac-45c2-a147-2ae5d241f21e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1e4d28-edd8-4044-ab35-c05fdefb23f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8bb5a4-dfbe-425f-9d6a-4e686f69ff17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0769cd39-eae9-4cbc-9d5b-ea60950b6614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ea4655d8-e202-47f2-839c-9f10fe23aeac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6910bd41-9bb6-4aad-95f7-e27e649d8d5c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "748f0e07-8243-4179-9b84-9ecf4071279a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5668f11-e45c-4e9b-825b-4f9af5049ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5d80e9-a437-43a1-a00c-7a1102d5575e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af72269e-c696-4be9-b4ab-6fad3bb8da3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5443b484-5763-4a45-8e2c-84d5940fd953",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b09e6ec-a4ca-4881-8419-043cf0768697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4acdc1-cf82-4e11-a074-bdcabaa7de3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b9ade4-43b1-4b48-9924-98550b492119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddcd9112-1a3b-45e6-bf97-2f2d076c27ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dbd8eb-f127-4df1-9c5f-d5861c4752eb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd521da-7c31-4ace-afe2-41a074654c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "261bc3a2-a7b3-4aff-b8ec-399c8c1b5965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514a8bd4-b857-43d1-acf0-3017886020b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8688be6-218a-4de5-9717-ce325e2b11fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5348ba76-29a9-48c8-be47-dc318118fe58",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f09da6-bbc7-4528-9482-6246054780b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f63f13-8a13-42fb-bb42-abf7361e6b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d892947-9f7f-46b2-9005-fa637e9b216c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8f6c76-c4ce-4733-8bad-53a880bbfd1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becf3db1-54ef-47b0-8719-2710fdaed2b4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d9c238-73bd-4bf5-afd5-5e77a9ab10dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23136a66-6dab-4b12-8fd6-ce37122c7ee6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5540a1b3-abe8-45f6-9b55-cdeac8867625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03011681-4a4c-40d7-925d-7be5cf852fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1ce668-dab2-46e2-ac01-e2a7cfc86643",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23edcef-70b4-4566-8e75-314a869f90e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850a006d-80ab-40cc-ab26-ac05e34ae708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27cb07e-a716-4014-88ec-5748a7e5408c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e13e4ed9-d9e9-474f-b7a1-5c18fe87760c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36411824-67d4-444d-933f-c578aac65269",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8c50f3-f3b4-408e-8dba-0649271037bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c228880d-b593-4142-b481-e213b502067c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93959374-2d8a-4a7f-9a34-929353ed827d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b296cef-9aa0-430d-b3ce-db7c86e57823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c09533c7-73db-4027-aa27-4330e1ddeb01",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f419cd63-b5be-4c3e-8233-48e51b8e0c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59a9781-fbd3-4b0e-884b-ce3be0bbc9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45ace32-eeb5-4c70-974d-b0534a356449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0a5fd7-63f8-42f6-b730-61f23f9a15d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949b81a3-5aec-4ab5-b4a6-60c903ea57ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca746af-8158-42ab-82b2-9a1400175450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa454f76-f443-44cf-83f7-eba6c3fa743c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732f6972-8592-4a9e-bd0b-e1686d8e997f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2b4b8c-6f55-4d95-8e50-dfe17f5c325d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e31ed9-768a-464d-be96-4869466efde4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e4db50-e76a-4b82-a1f6-5cf2e2ef31a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c7b5fd-793a-4233-b5e8-bd82c287a259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20338a04-094a-4ed1-9e3e-fa6b21d233a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf77eeb-fd8e-431d-98a4-f629669999c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20459180-336c-4184-a765-23e78e454659",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d080859c-cf37-4931-838b-c36039fe17dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90e1d7f7-949c-4c60-998e-a808faf79e67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511690b6-5382-44df-a91d-fec8e67e07ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1cfb88-4fd8-4694-bdfd-59b935ddf3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffc7564-3b26-49c2-9684-d0fb75d8ee14",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0a341a9-4ef9-4d01-9ffa-2969a5f0d8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0ad1fe-5819-46d1-8adb-dd349af150e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd2954b-6bb1-448f-a742-265894dd8075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47bc6dc5-c46c-463d-9cc4-db21e9168b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35dcdd65-27b9-4c2f-952c-44be9cbc47ec",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05bda644-5d35-4617-a4c9-1bdfd4ec2b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aefaa563-e331-4722-a150-e6758ec8bd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf270e6-37ba-498c-a3ef-6f2a192a2a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "893d377f-e5fe-431a-a0b3-dd3d9a1185cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2707ca85-2371-4722-87b2-d87a51c63ac6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e983b6e7-9eab-4adf-a7c2-5ba56bde2907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4227ad97-178e-42a8-99cb-d569b4f7237d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bfc495-176d-496d-a86f-b52f5fbd2e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bffbbcd8-5190-4e34-a413-2fca76dbc235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab59d71-88a6-42ea-b540-7c95b67509b8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d49e27-bd29-4d14-8db9-3049bcd4e39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3376ce9e-ae35-478b-816b-1670c852f7f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843d5043-29e3-4134-965b-e22780a0ca13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d30e8fe-61dd-4082-a36a-37da1dba6017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f14454-039a-416c-b512-c15cbceed9ee",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4e14ed-924d-469c-bd29-6313511f6262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e365bc-8237-4585-8d55-0cf125e6f6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ded0994-898c-41a6-a23d-dd0ea19ac4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f039b27b-fb2d-4902-af3b-c0ba93ed64b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960623a7-7a73-46b5-a950-e9a056d9d3b0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d959e6-26ff-44f5-9bf0-2239f45f4a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e61deb-2648-4268-97cb-e2bbddba80ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2a8768-12ad-46ac-83c0-f7bfd914a9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54a69b7b-7e76-4182-997b-2df520d79c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b8bba8-4a8b-49bf-967a-15bc58b4703e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859cd61d-784d-410b-abb3-2ce72ed49136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37e8c585-80d9-4294-92c0-4bee7f826560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec4379c-ec5c-477d-b768-4e3b189a0f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1026965d-0873-4c0b-8a0e-a1be1e2deb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85c45ae-31b5-44f3-9354-01819510f672",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5ea23c-57b8-4bff-a6d5-5bc0a4a583de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f17ada-450d-447f-8419-4b50021160de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a52301-d795-4905-80bf-d1ba805a6a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d1b84a-3f82-4db2-b4a8-e6b743116942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3644851-b7c7-440f-97f7-e3c8ebc9637a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914f0dbf-eca0-40c1-be65-4e09cf7fe2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed96b747-9c87-47cd-853a-171398c07f64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9d84d5-5caf-4ca3-b77c-c47753996c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "38b3219d-a1b4-49ef-bbd3-1f52e3ad59d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e9ff1a-f361-4487-8a1d-32e9a5ad9bc2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b20b34a-6c13-46de-9c1e-ff278d81d2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "865011d2-1608-4b10-bff7-e276de106b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0b43a7-67e7-4c74-a728-0c98f6ee1cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1867e196-009c-406a-a572-4695c3c470a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3879a1fa-3d09-4354-a78b-f9ff2b673e94",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59605947-e647-47dc-a69c-ff1e96ba8194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "914dafc6-e1c4-4f24-9c90-55e1584264ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae4b97b-586b-40df-a83f-010ec8344e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf801b7-8562-4ca0-9d90-266d0df0fad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "922cb19e-f5bd-4314-890b-17a44229fb40",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57afac94-cf4a-43a1-9c95-da5c563313c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2d39adc-225d-41ee-9afb-1a97c59c3b8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd94c775-5d4a-4657-bdd9-716e94b41379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f37eccee-490f-427e-afd9-8b620fec1d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f768a6-6b58-4b0c-bbbb-6c019f6e835a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776db385-ff91-4e6a-9a1e-9988d9ac4391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81446c8c-a108-405c-9fca-6d4a151abdc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2b65bb-74a0-457e-a32c-38e6b39699b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a23abcd-a406-47cf-b423-034cdc82d5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dac9e9-ce3d-4100-928e-b18d3657eab5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414cd395-9978-44c5-b5f3-5cb5615f4c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcca023e-8702-4731-8a76-f2a64c20dfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7ac6ce-b85c-4880-b607-35b6c7b84192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9715d141-ad39-4f8a-a9bb-422f10fd8976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d12698-93da-4d8d-8cf0-9737aba5eeb5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae90d060-09a0-49d1-8cd5-ce1118b49893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bb8ae9c-27dd-4dcd-a61e-235099012677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e877569-88cc-4d46-9d35-3828ed8320e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c770f9ea-175b-4dfb-8ac2-36ec309ec56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c98b83-5243-46ef-a4e0-5134dea2fc0b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51313100-55c9-4525-aa62-0d09c3b4b38f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32836a4-7e3b-4649-8d11-82c91b5a911d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ac34b5-2f24-49e4-acbd-75bfafb6a8b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f2576430-301a-4b10-8378-4b70abf9b206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d62d01-373e-4afc-afda-67a03ee07283",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48baa439-2e9a-4077-851d-f2d8a6370502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0aae32-45c8-4faf-843e-6b63d177838c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a82b324-b411-4dda-ba98-bc1bdf8ea904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4d66a5-5708-404d-b4b1-996034aee164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dbd54c-ba0c-42c7-b8d3-acd15fdab449",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0909846-f617-4ce1-81c9-7fb9cf166f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15635274-6231-42d0-b03f-ad3af638a083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84956eb7-74db-4229-a535-797f76ad3167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "76d4b8e1-8f49-41c0-87ef-afcf5b406f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6359893-85ae-403b-8b31-712d3898b693",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ea87b9-8283-439f-9e9a-b04ba42482d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dfc1c4-8224-40e8-a999-1ba4c7686669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86d1b4fa-b64a-4590-8e00-68a329af6a80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec56f07-a07a-4f12-8614-15b3c06fc4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1797af3c-38ae-4bb4-82b0-06273445d8a2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1dd67f-3f5f-4c4d-b826-6894928d3ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8337880d-6291-4b2d-b53e-1541a9b99b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20cb9690-ac41-49d1-be58-9b1439eacf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b97a39bd-481c-4766-806d-7d711840cd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d0d3ca-d198-4329-b6e8-b7f814421e4a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23d0eae-c447-4d9c-9321-5f2e6878f66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d8034b-73dc-4c98-95c8-a32bd1b5ebd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b38e5fc-bb2e-40ea-a826-d9ddd5acab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea09d14-ffee-42ea-89d9-70443607ff65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ab6f74-42a7-45b2-bc3c-93e18ca562d2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe65e29-32c2-490f-9f7d-d84a62b463bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518d483a-c05c-4726-a8c1-468c523f18f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea9e26ad-4276-4a16-b880-3ae64a85b20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43cc7449-57bb-4e14-b163-a2ae51af8062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6b8298-1246-4562-a6e6-5d10916a3f20",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9316e8ec-0213-4b8f-8955-3983c52c83dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8f14e6-5fe9-4053-addb-27dcfe8d9e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903eefc2-1d79-427f-b07b-c29c084ae689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc05c83b-af36-4c61-a256-7c7e88eab42b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b9c95e-feaa-437f-bfed-04b6cd62b90a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73a23e7-b82f-4eb7-a1fc-f4f59f9c5d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111c462f-b2bc-422c-8c52-34ac7d7a87c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfb39a5-bd67-4aef-b371-3302c78abcf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8479a11e-1301-4f96-b7cc-7dc7824fbf1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9014857e-5a7c-4c72-93f2-788e649b74f0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a30cd79-d926-484e-a1ee-349aaa99bf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d23b1f-cafe-4c95-811e-5b8bc696920a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5e943f-c4bb-45bc-8d61-f90bb4c20876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "49e1e574-5980-4d25-93bc-ad8597323971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db449766-4215-400d-ad22-b0299d436e3b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d9d48c-fbc3-4039-a6d5-4a4286f856a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38b8d64-b00a-4dc9-89c6-0b94f79bf483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d42c236b-8f6d-4345-9aa3-9a14f5396479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d1fa71d-3f01-4257-b9b8-74fa77d581da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784ceef8-465d-4098-8260-2e23dd32c3ea",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "182913dc-55a0-476c-91ce-84542d174991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd96ace-150d-4bdc-b426-02bf847c69bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202f2d11-727f-45cd-abd6-2fc8c634d548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db5217dd-84b7-4eea-a388-ab4e0e6c36ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9871ff89-625f-435f-9c40-e9326c9cedf6",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cc3a1fb-046b-4b52-af22-4dad5d47c11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4fa1d7-a1dc-482d-8134-2e3d6836d678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cabc54ec-7fc7-47ea-9c34-e75c349a81e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42485eaf-3b02-4e6b-8113-89a92afc4319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4a0cd6-33f8-4568-a3e3-42d9858d14fb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d933adf-14b1-4c4a-926c-d704660766fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153800a3-ea42-4473-a881-ad4dfefdfa9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a3d4d7-7ecb-4bb9-a744-4575d76c8632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83224fce-f633-44b1-b22d-d822ee69e0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd0a880-fd4f-4707-8a25-d6675d743101",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c905be6-210d-4716-a810-fa65646d51f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1df81b2c-f694-43bf-8b65-d18e334250d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6d45a4-f44d-4f31-96e7-9f7533a96a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2dd52277-492d-4549-9408-26e24309d2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aa4497-e067-43ed-a660-8e0c5fa0f695",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3881d3f-4f4c-45dc-ba19-8ac53fa09712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cacd27f-2c0b-44a2-8f6e-484ad1cd4840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba8936b-3f5c-4089-ad8b-9b13325d7616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1ad1a6c-4d96-4730-b279-dfecab9240c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac943136-bd6d-4fb9-af6f-e6dc8825ffdd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f300abcd-341d-47a9-9564-51b465b2e6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2184d98a-3506-40a1-bead-9cba6cd5d234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb39b3f5-8b04-461e-8df2-1216ded74910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f0fade7-c3cf-414a-8e19-0dd833121d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551aa73d-3571-42db-977c-b7914749447a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411530a3-47a2-49c6-be98-d75e0540ff37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "170c1f6f-2ac9-4882-a43b-80fdc3543ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea456610-047b-4501-a6aa-a3b01e4c6592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecaf073b-03ce-4132-8e9e-46f9b93c7199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b9f4ba-26e2-463a-b95c-801a047022db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5700b98-9e94-4a92-9571-9b5c1e0c6ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49f1395-61c4-41f1-a2f2-0bbcb6f7b096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75144ca-4f35-4a7a-bc29-374682ede4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc1e6a7-29ae-4f1d-ae7f-c869cfd1ac85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc2d1b1-4b63-4cf8-a252-b23561f4e984",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df322b8e-f8b1-4fd7-98e5-ec2886effc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7732f70-9e2e-4745-9daa-ef1f70fd9dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f61afd-ba58-4d46-a338-1a580f8c5210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb64802-d900-4a78-b965-18e5f8760e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215fb73a-e78f-43d7-bf3c-0f2518c2ed84",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0140e528-6f31-44eb-b659-45b3654ed9f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1fed372-1730-436d-8637-226e0067a71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae04859-105d-4964-ae41-a8359835dc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "86703b40-7cd4-443e-a1da-bc0d2bb7a5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5e109d-919f-44ea-9578-3fd0510062c9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e5399a-e606-4c1d-ba1a-5745eee6dece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0169508-2640-4c80-91a3-7a92235da29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58971cb-af3c-48e0-93ca-dd5087d2fa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a28d2ea8-ff42-4345-9998-fee50af0fc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913076c5-213a-4053-a82c-12107ec530ae",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c196c3f-14d4-4626-9aa3-cc870dbf1246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348884bc-558e-4f03-b409-58995b601757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dae1d11-69e6-4aa3-8088-4faa475a2c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87726e3c-97f9-4228-a8c7-d8f473585d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3972bd3-3751-4ef9-8ec5-395d1f176099",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d7321a-422d-40af-bef3-1d26cb1ff81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dee20567-cd75-4c3c-bd02-e00c16619380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33af5be2-7dcf-4000-aa24-979edcada38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45acc5ab-e494-4ea0-ab27-9b9a326d43c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d99450-b7f3-46e1-a78f-7557734b7e1e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71c82b5-65ec-40c3-80e0-3fa96b75bdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4608479-8d5f-4278-b3af-b7f1b662db0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132ddb90-2fd2-4f53-b1cc-b81b11d9e2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da7174e7-878c-4115-865c-18c7688ae1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5696d001-99c2-4b92-8ac4-11d3bdb48a79",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27874909-1916-4170-809e-11738fc7f0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512b70a0-9b56-42cf-b004-ac2a4d71b0a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8e16e1-a2bc-4ff0-87f4-8f8a3c6dd0c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6c6d23-de15-4367-bc02-7127cdc6d3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4805ab60-a3a5-4920-96e8-7cf7b7288597",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30656f84-7e60-477c-8e8d-3e00e7ecb098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d912740-5408-48a1-b562-ba5c4547a260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfecbb0a-d4e0-4f05-bc38-b9830c4a6c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c065b5-f577-4770-8f5d-75934c57d29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9315a359-274c-478b-9f36-6d23eb6c346e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bbf866-954b-4d5b-8ac4-56591c42c391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22ba27d-88bb-40fc-8aae-c7dc69e0d34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d43e3e-5fdb-46c8-908b-7ad884f71794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d13db60c-1509-49ca-9fc3-aed4f8a65cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "561884e3-0828-4880-abb4-a483fe0045b3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd4c548-782b-4121-a32b-64c160ad8211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2175e267-4121-4286-ab0a-961a9c86bef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7d80eb-a7b9-4130-9684-14b8c97473e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e70cbe2-866e-45a4-8efb-27dc0cb916d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d8e3f8-e658-4a32-94ce-ceb2f2551b56",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cbde19-19ab-44e6-a081-c1737221129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48286043-4b34-46f6-bfc6-5eebc027e3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc3c697-7113-438f-b701-1da64a8c58f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c930722d-a76f-446e-9d9d-844dc05aeda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131f3e33-7af1-452f-ab74-32fa6ded01e6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d1d58a-0aa8-4178-957c-d619d13471c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "388aaa02-6619-4f44-ae18-14b7321a4a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b037199-0f60-4de6-9b25-3d32a3f4f842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd42214-7f6a-4dc1-9281-fd56fad304ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f9b1231-f8e3-46ff-bc23-fa5827d1e4ca",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf44024-3d9a-48c8-b3cc-87900112323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67f32e9b-2f9a-4bce-bd78-0fc720629183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612a0545-3cfd-420b-9933-257fd1b83e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "952e8c08-66b8-4dc7-8baa-3a55eb3b900e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867d8853-1521-4185-93e8-52d4f883995d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf72919-bffa-4740-b2b6-097c627f53e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44dee213-1b0e-49a0-8469-133e9a5a276a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc88a3e1-665e-4dfa-93ac-9f948ed4cd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2a752410-6352-464e-81a7-73bed9bb013d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89dd73b-8888-4022-b73e-983abd000506",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9834f00-556a-44b0-a8c3-93026fe18cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "802bfedc-e12a-41fa-80e7-49b9d2105db6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e6aa1b-f804-4a51-9f06-ebcf51379724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3c6640e-befa-4e5d-89fa-f1ae7a04b3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259129ac-d832-4ed3-a100-41d7dc2670b3",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471cc77d-0528-47ce-be42-f479e092cfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cca1a103-9d2e-4058-8b97-455baa42f750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e043a5-0de2-4fb5-8cad-f82c837d0ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3adccd6a-ae0c-49d8-b69c-96ec376448e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb50ea9-8f02-40a5-8515-d0704561354a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6899d631-94d1-4188-9654-41cbbec6bf16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84cf00ee-a5bd-400b-a705-ef653a77648b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eba5f5c-c456-4504-991d-58ce269476ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "313d4a75-9c0a-45c5-bb6f-ebfb4ffd624d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c31f60b-49af-4e67-a20c-919249f85869",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d06b42-5865-4ce6-9296-b4487d9cdcc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcaa056-b028-43e8-9a70-0a58ef5dea33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ff8799-0b38-4a7e-b965-13b4b24abc53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61aa78d8-247b-4f64-a4b5-2b5d76b65d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60b58b9-fbbf-4bc2-93ff-c8031523fe1a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b566c71-6a48-46f9-badc-4c3dc8294ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f8d925-b409-44ac-b239-01a5f44cfea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb9ea8d-c9fa-4fae-b7c2-c7f5ec76ce1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9874a715-69a1-4428-b8cd-7b4d6ffdb053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a91aa10a-8fb9-4e07-836a-abeaa56150f1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20d6643-902b-4c54-bfc2-a64456ae9bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b2a48d-9e50-4819-be52-d917ce4b1b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "254662a3-cd42-4f55-a2ab-292b4a6e31fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b235f0ed-e0d1-4d0d-b891-7c08de43529a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb21471c-3e3d-4b52-a8d2-723742d2b3be",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efce2d9-def3-4211-b307-720168f95cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22223cf6-7a1d-463f-aa6b-b8c2255b8c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a3fb51-e751-4407-a9fd-f56688f2330f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2f1b12-a9b5-4291-9efb-8f012a73a9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524fd43c-e361-4e03-b50b-dd60dd0a5499",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8a8c7a-d0f7-49d2-9ede-46aee9d65d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53c2d190-cb7c-4bf9-b36d-c72da4c7c395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9712a842-2472-4672-8581-48097df762cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e959a292-1238-4e8b-acc5-b420aef97a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30017bf-c3bf-4008-a4df-88d6e1d2d177",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f514fbb-b874-4305-a5b7-d51722416cea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f01bb6-6be8-43b9-ab55-7a1c36f06f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f71058-f013-4579-86a8-0e13a519da3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62dd6aeb-f5c8-4d6f-be93-1a5c63bdc905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f42fe4-e870-4591-9092-84cb7293d8d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2e2d13-1c43-4a54-9ba7-e9c6aafcbc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049cb293-0017-41dc-ad50-2bb1ab34464a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21bb489a-46a0-419e-a27c-552cef6ab54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54648a41-ace9-4430-90b9-fa0e62a370ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9266ce-d8fe-4cba-9156-28c1a3d33101",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5818423-082e-46ed-864a-f6b10509f212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b993346f-505b-4b7c-a198-a5c10d53792c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843e3b98-92c8-4bcd-b115-67bd809222c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35301da0-a571-4f22-8bc1-a676c0e55760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b18a883-7469-4880-883a-1c7183de811d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7207c8ec-86f4-4224-be38-a3abe0b63e1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd89c3e-6b99-470c-87d1-7f31c154a4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f821466-2c66-4acc-aedb-c0231dda59b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba804ba-73e1-4d9a-999f-fa4e085db40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4085f1a9-b606-4222-9738-6e2219615977",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f59b59-908e-45e9-9d3f-1a52587df56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a57341b-be0f-4050-9bc0-f1549b8bad17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e980df19-53ef-4fb5-8491-ab95d4e205c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1871bd9-7f87-446e-bb48-f9b22b60ebab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570cce31-7ecb-4fbb-aa2f-53f271bb2d92",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64c37dc-21ce-448c-9c6b-8ba5370c7c4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db85149-845a-4aa3-a64c-944495c72826"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b43d91c-8bfc-4ebc-aca1-24b7bcadc0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e68bd0b1-7c58-4edb-ab11-48a9fb72e39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bca95d-7e85-4e5b-af7f-d57c535a5595",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7c8444-5b41-4524-bdf4-6fd6c99f4b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e659dfd-ec10-46cf-97b8-f7ca278e9d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adc22e7-f91f-4dff-88b5-ab082e4088e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1d3873a-94bd-499c-8888-209a53333bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6aa8ba-161e-4596-a553-332b29be804f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b935b7-c3fc-47ab-85e8-7f4bd6a6296f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548dbfad-be40-4023-ba5f-6b047b7e6941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc556cf2-0296-4e81-9454-e9974f149b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "af1cd3c8-6d9a-4c9a-a44f-4ca08dadb51a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbf2b51c-b89a-4482-92cb-b3bfda7d3d34",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d0845d-e2dc-49d5-a88e-18669ccb934c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92161132-3410-48b1-91e4-7f25de0c6a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d244c93-c4d8-42dc-b6a5-b47a930bdd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d85835-c0eb-448a-ac7b-c3d6d15371c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c79363f-8dcf-456b-a8ab-147ba5042759",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2bd9a2-a95d-4a81-92b8-56f7b6482802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8a745a20-2272-4aa1-be07-fa55d93a88fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e006af56-e34b-4fd1-a3d0-d4cbcbc1d71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "791a48da-5752-4259-9256-f06fcecd2c1a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a42aa5d-c9e3-436a-8d30-bcbf44544500",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65091ceb-0f99-4471-8b8c-e18be3aa2abd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2dc56b-f2e2-465e-883b-d23b371f9c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dce5b7d3-5539-41f8-be91-3f55f034d084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92d9770-7735-450e-9dca-713696be746e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "170b1676-1c79-4f69-a0bc-7d8869dd8921"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cd5ed35-2acf-43b3-baec-47dbfdd9df6f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "18b4ba8a-a10a-4ae2-91a9-14dfe6358ca4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f5988ee7-8669-45e1-a2c8-89e325d366d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a8b38a7-d675-4df2-9aa5-ed079c9f57dc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f89590fc-87bf-4b3f-be78-483e2df7c717",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a346c06e-1563-4d77-a1c8-c090d7f47a0e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "28e0a459-4802-4327-a066-9e945be0c370",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "eb660ac2-dce3-42c0-8557-ed11b29e2793"
                }
              }
            ]
          },
          {
            "id": "705ce497-893e-4e87-ba2b-5ac7f84b5b5b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f622301-3b22-4421-a5a5-211c1a3b67ee",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25938506-b86a-4490-a3a6-e719ce428185",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ad927266-5054-4c58-b5c0-3f279ea346d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4961fb43-a29d-4413-b2cb-13c22dda3a50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9dc5542c-8261-4621-b4c3-d57e04959f0d"
                    }
                  }
                ]
              },
              {
                "id": "cf1136f2-f7bc-4695-8788-0910be0f2ffe",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e3e78b6-e509-4f4c-8c9d-d7a32af95d92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7cb412ce-e56c-4cf7-8c6e-3000d168f61a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a67b409-5bd3-43fe-ac8f-c64d8df23a1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d39e9642-60c9-42d5-af1a-dd6b04f22939"
                    }
                  }
                ]
              },
              {
                "id": "1e76a213-1c16-4573-960a-0b21ff36849f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2903cfc-b638-4f9f-b3c2-82be33c80ac3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d54e3f2-f43c-4cb1-990e-42aeaed268a1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "758da920-072c-4496-9895-02f47a2924bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7881d61e-bed5-4d8f-a62a-fc4e383d041c"
                    }
                  }
                ]
              },
              {
                "id": "d464ccd8-144e-475b-8640-9994f8db8328",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf69be2b-a32d-464d-aa6b-e8b1401e92f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b9dde32-2c7a-4b7c-a70b-86895ccd06c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0160a1ce-18bf-4c47-ab15-6eb3d2104d9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d917873f-923e-4c47-935d-283105fc3f88"
                    }
                  }
                ]
              },
              {
                "id": "1cc63414-28f4-4b85-9c0f-b63e49c9585f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "054522ee-78e2-4d9b-af5c-3377ef3437e5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b294c61-7c07-4611-8551-074a88bd91c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e205d8d-877c-40b1-ac06-a9e7ee20fa08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "86863baa-5db4-4fd9-928e-b6c84399b8c7"
                    }
                  }
                ]
              },
              {
                "id": "792715f5-181c-4d42-8688-b84c9f64f1c7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28a44bf3-c935-4198-9e65-7740b6ee55ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3a7254b0-c398-4fbd-b2a4-ef9e02a212ff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "361283a6-0814-4043-bc25-745b3dcd9aa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "915d7afc-9c65-434f-993d-24368ea11cc5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b37a03df-f28f-4884-9209-5131b6ca286e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df7a4805-5bfc-4056-b7ac-f460d2f2d8bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6e0c1b77-304a-43d2-a842-48722b3bcdaf",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9cb029ad-01bb-4c1f-81a9-eeb8a5b3064e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9e0b8498-b894-4304-aa93-a19dba94610a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "83a5d504-4c7a-4b83-9d98-16364abca782"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8035432c-69e5-48fd-9d5f-542ae420d5a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55a8325e-6ca7-46e2-a72b-525b7a06655b"
            }
          }
        ]
      },
      {
        "id": "79d5a55a-e4ff-4feb-8399-b4d3c4f884be",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "df1b8959-2be7-4e8a-a7df-2b332e2706c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bc8b4b06-49b9-48e2-945c-f7237e9a7d28",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b42b05da-6047-473a-8d42-74a4c1446ad6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c487843a-c006-43bf-ac8e-5289751703a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdb2dc3e-1761-4c3b-9462-ed93dca89ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cd94c1-694c-484b-8089-d4c5117173ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1453bff-b741-403f-a001-7a33264e60f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1253ac8-a249-4f19-8d8f-69c3e365fc53",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b01959f-c2de-4fe0-96e7-708ce2327f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c9b155-1fbe-4223-9a71-84249ed0727e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046f6150-c8b9-4a96-b1cf-787be1517bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e15456eb-af5c-48b3-82fd-d51a01ce9123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc11376-48df-4bc4-a9b1-de8b9d612c2f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "facf03ed-bda9-4b91-a370-6b6b30bb9aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d05788d-be74-4af1-91fb-3316142edf97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31aed8b3-0ebc-4bdb-95ec-5c70f944903e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2ce230-a7c8-49d5-90b7-fca7300c0f14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e28df35-7cc3-4e74-a5d6-9634bc6429a2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a014d837-9db0-4ded-b624-3e815fca6394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f16ada-fd98-4cd4-b494-916b0f863eb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3007182c-0df0-4362-914a-193ea9aee180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c20de80-14ad-40e8-8938-d412c4b3edb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7501c0-669d-4ce0-85ce-47c4ab9938b8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04566e88-e45b-46ca-bf8e-0cc67a6eaaeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3796211-a4d1-4c88-8615-a741a8ef4866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8de969-6615-40cf-b859-b8d3e3651eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d66adfc-bdff-4dc1-a6fd-76758a1c193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bb8de4-603d-476d-9b40-e586cc2db3d1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b061374-8512-4d05-9488-c98bfd3abfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c1e0af-f5b4-4830-a0e4-bdeb9dff46cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bc072b-83d7-4b52-a1bf-0611e4e5b85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44a9d696-8e70-4d6a-a791-16c416f7a21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cae4c8-ebae-4b5b-8dd7-3377435516a3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2773ab-165b-4723-acee-8a2322afcd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2548e82-4815-483e-9f4c-8d730f12c48f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4e69a3-547b-4f57-aeb9-a9bd9d0ce13f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73addc72-4f05-4995-add0-355bc44b2879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fbbaeb-a7ef-40ab-afbd-df4629ae4254",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619ceb50-ea0f-4573-be47-5ea72c245861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd3667d-3a57-403e-aa7d-022f6b3888f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ef6afe-02a2-4fdb-b6f2-4a994a7bb292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c95c76-7f7b-4f75-9a65-74b0d2341c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58fdebb-296a-4b87-839c-29d650699442",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f84ae4-29e5-41cb-b1cb-a3d677f8dec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8585313-9324-4e3d-9e50-9d129822c163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878cabbd-1385-4531-8905-71ad20bec330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7840b632-60ac-43ff-a30b-00de871baa9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c057f37-e5c0-4425-9af4-d354b5743da2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb597485-2a85-42a1-bd7e-24856266959d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0bb5409-fbcb-4b63-a58d-e10f5b3fafdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00d2e95-de5f-423b-9785-91b7db1ae9ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8548a8-242a-4459-bf39-da60427858b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c42adaf-8502-467c-ab91-a4d674ed409a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b991cd5-5cbd-497a-9185-77426a24da33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a5290b-2347-4a04-9f96-936a1b8c4997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5234660-3bb6-48fc-977d-4584bcb2fd8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e048a129-debc-4343-bf10-e95a9e73304c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cdb924-ad67-42f6-86a2-ca6371db9763",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab0f44b1-7f7e-4ede-bed8-a89ae275852d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e887cc3-97ad-404b-b2ba-a8ae3e5754bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be2533f2-bce0-4123-a63d-19a8b506df81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbde98d3-d8d5-410c-b0a6-61734e036972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a5fc1e-7455-439e-9be0-f5c50044cb03",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa062391-3003-4814-aa16-b5a972771ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29fa181f-5bfa-4824-8fb0-ac46c70cc2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f46d87f-7c47-460c-b266-5ce98c7f8345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "42275ce1-d3a9-4e8f-aa85-44df2e026209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e4de8a-cd06-47e1-b003-106fd5d9c7b4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e553f8-dcea-4f3f-8a68-63c9f6be6bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2dc368-6825-4b38-aad7-9c4b08d67ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986f96b9-f1bd-4b7f-beec-d593f7572819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35b51638-7c0f-4a02-a170-bd7dd1b15eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd675f3-903e-446a-8e6a-bb37345a3bb5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02e3a00-1590-4cd5-9dc2-0a52b760bb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d8b4a2d-3f46-4785-b833-0d1bbeef4222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f72a89-f7e8-4221-a94c-06595727e8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aca4783-cef0-4350-944f-945a28f064b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384dfe2c-f420-48f0-9db0-e9a38096476b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a434b6-60eb-4cea-af74-df6906c8c6c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d2d93d-4ab2-4981-8798-49b5b4e3095a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7222e29-e4d4-4cb8-82dd-397d050e4ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb1efd0-bd6d-4c44-a9bb-26bc30d4db28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7e800e-e68a-4328-8b2e-e536c2a693ee",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa03d767-1bdc-4d88-81fb-7117befac370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b8fb70-b6ba-4882-83a4-6823e187c9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29c8503-2929-4206-990d-ef47ccb6c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "44db48e3-0b14-4dc3-92eb-d133892039ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2ae3b7-3833-4121-b18d-318567792811",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4324693-7ad7-43e8-add4-87dcc6ae0aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c10696-9f6c-4422-b0ea-17b364dd3640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d45fec0-3849-4bd4-bcc4-501361258a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e544b1-f93f-49a4-8670-640a7725e9f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7e5eb64-7b4c-4808-9238-47e72b4aaf2b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724ae935-9117-4139-a7de-156b1806b795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59c3df82-7096-4322-9cc4-97475bcfbbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41872c02-c062-444c-98ae-82106284e488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "015dbcb4-ee52-4c51-9fe0-07c80671b3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb7716a-b4d5-4a1e-a307-74fe5e3a1b71",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabf0791-9cfe-4bf2-a25f-58309fad7bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f4c950-41b1-4f32-b338-09158e714875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d3268a-91f1-4052-b6e1-9f033413db75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "478b1bff-111b-48db-b6b9-cb226ee8ff90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c758d0-4640-4993-9455-24d9e80d1dc6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495c71f4-bb91-48e5-b5f1-065f5393678f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2976f31d-80f6-44de-ad3e-07419be396f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c7f70a-e5be-46ef-8c2b-6b07f8268980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2134536e-9efb-47f2-83ef-e46209f1ca1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d9f421-4813-4d08-988b-1d31ed7ebbfc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8debf87a-60ac-429b-b9db-e0c49c169f3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc58e411-2ea2-42b6-8980-b6d2f8ad099b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a979478c-327b-4af9-89a8-a1f3260f14a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67369f5c-91ed-41db-a56a-19fddd7644ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a176cd29-8503-4d46-b06a-c2ceafc8bca3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834d1b99-a773-4a32-960e-913547a4c314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd3d6a85-a297-4d05-afb7-2b0f7ed9767d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6306368-23a3-4b99-af50-e5da5e8a428a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631d5124-8315-40f7-b99f-59a6a3bd461e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68895f4a-9fd1-4bbd-9eab-3f07aca1a56d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ef9ef4-8dca-445e-91aa-98835264e16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49628555-0fca-4509-835a-3509e5ae3fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faaa147b-c084-4a0f-aad1-94e094d204fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8388b92a-4d71-4a75-a4db-831d8bb0c413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b553e7e-a8b5-491d-b6d2-123875f8f3e4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2db35f3-8209-4df0-a6b7-018fa899eb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7ba03d9-9b69-4910-90b5-fa758b569adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6bfa80-a709-4153-81c4-88d8ec28dcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1329967b-3772-4392-b0ac-6d64f90ecc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9925af19-f754-4cb5-85ff-a58832f7b25b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dda03eb-d843-408a-b013-93ba4abb8599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc9f225-5288-40ac-991c-89f3eefe4a24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e650302-dc1f-45f7-a2b0-ba83fac7516b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "07310227-60b4-4e4c-a4af-b1ad5379ad56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87b72a2f-0fdd-40bd-b4e8-7e8082335c0c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24500af2-8afa-49f6-a292-004d01505a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c60bcf04-593c-4fca-974b-fec4f8063be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f3d286-3f3f-4076-a3c0-16f2d24cc75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3943d6e4-4621-4f40-b44a-dbfdba972bbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7af9fb-55bb-4cc6-8117-78af145459ff",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa895dfc-9bd6-4b17-9853-61e731af6822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6221c7c-838e-43b7-9abd-6523a72d7f5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2d0848-8d6a-433a-b2e5-12f252fb1527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb15aba-5c32-4e0e-b2f0-8ea7afb906ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92af9863-2494-49c3-8767-1e2c2931cc51",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "281ab90a-529d-4651-aa9c-57c93866d83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ecd999-25a1-41f1-af7f-ced23591ccca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bb5b16-a739-4a0f-a4e2-26c22699b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4340b6c2-923d-40ac-94b7-b685d46a3492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b7ea8c-2fe3-4610-b581-25bca994750f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3caf1a-1514-4bf2-9a34-b2548674320b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a56e3e-a16c-4cec-885b-213d3b780d06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56aecdca-9ca6-4445-872a-395e99b7f91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b40cfb1a-d421-46fd-811d-45dfc3073239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399971e7-49c9-493c-b922-9bead7972596",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040a36cc-362d-4410-ab2d-4c7e31673059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61455199-6569-4ece-9b6c-53a4e2c6648f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b632cf-1d56-4ff9-9275-9130c21cc827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8432f02-e4c5-4328-88ad-30f8c74b5487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe4daf0-aeea-4958-bdc9-f298cff5030d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9a4f9d-7329-4e12-86e9-b6171aa700a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a7ba51f-8545-46a1-879a-df4be1969e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a40e0b6-b072-4c59-98e3-a8ca88ee7d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "662933cd-528d-4bc9-a0fd-df68643a16bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d00f96a9-1e8b-4d40-9113-6d44ce1a2ea5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4633cf48-2ba6-4898-8a69-7ef846d0e147",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e89b5f6-8eaa-48a4-8c24-981a66f134ba",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d84de61d-f66c-4f82-984b-a8e97f4a2783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f328ed3-201c-44ec-a7a8-5d4199b1197a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abec6274-8e2e-42ab-895b-f9d27aeb9c1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ceeeae9-dd01-43a3-a208-0ce89ccb8050",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48da0f07-98cb-4276-b5aa-a0362d1db768"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69e33760-b862-44c5-b658-e387fc67be7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca9b5de1-65fc-44b4-9781-8d095a54667b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80d3b2bf-0177-4076-8f75-3005821542f0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b5411613-ba56-44a3-b67b-659348764f4e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf0f28a4-edf6-40b7-8fa3-37f0ad937f97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0175137a-a7f2-4ae2-a496-a8e2b9bd40cb"
            }
          }
        ]
      },
      {
        "id": "442058f4-f38c-464e-823e-1fe10d039066",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "812a1d8c-180d-49df-ac42-fc5bc7527290",
            "name": "Negative Testing",
            "item": [
              {
                "id": "484b6015-1a54-4c13-8f83-641e941e9c62",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "806a969b-83fc-4cb8-b0c8-1ba944813962",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e4f2ed-7a35-4ed0-8cd4-49471df9ace1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae95cd5-0320-40cf-af5b-43ea373e56a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5093876-c3a4-4c91-a6d3-102f4b7f68b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "c02f8867-8647-48e1-bd2e-a37735afa66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1cebe3-d5c8-4f49-b9b0-6c8863c5e5fb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24600136-bf2a-4684-972c-b9b7c64a33b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8089620-0ced-4b54-880d-2d24ba4aa86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaca0bf-bb2c-4bb2-8060-a680372a0050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d9fbd60-7f79-4030-9613-7a67699af169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c2f823-160f-420e-94d9-6a8a2be2f8ae",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9b783f-738c-4288-a13d-dbf92b44c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac48950-0aee-453a-8e1a-c74f7f7f384b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45d2dbf-4b79-48fc-9677-babc2580b0e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f79f23-0027-434d-a83b-cc021ed4cff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd3ce1e-c644-4a71-957d-d3a66a936126",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7516c005-4a91-47f0-be28-2f6758659eb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cdbf76-a915-4a72-b654-11195a429603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0755616e-4d12-410a-92ba-c7b229ece3c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "96469311-4984-40e8-8690-f71ac43d9bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b39009-e674-4f78-b2ff-a6bd3308507d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78911832-7e04-4c44-9f21-ddc1e9351ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610e5cae-8792-40a0-98d7-fb17d7ee865f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6c39e2-1baf-4ddd-8eeb-170cf1c2eeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "951d8334-da37-4efb-bc90-e2541ba032da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1da1536-96b3-4800-847c-aa38a767bf73",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf11ed86-b107-4224-9f3d-dc564c841774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ef602f-42ab-4cc6-a611-0c182437bbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "071ced31-3e67-4430-b581-2f98b526769b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f13ed7a-59db-4d0f-bd01-d3b6334f88f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4b0dc2-3002-41ae-bc74-bafa4a13b93d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d2d29ac-3fc4-48c0-9fab-0fb0f9a0257a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f12537e7-da67-4c37-8062-3d8ea62eb66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96809b8-a082-4140-aec3-3fada4b1d93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c985f519-2e2e-4b4f-a761-487c24834fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ba067d8-468a-40a5-bad8-211efdfab995",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db703dd4-dc88-4adc-a92e-f8703cda77cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34cee261-3c4d-4683-be05-955c2284ec54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b640934-7f04-42c0-adfd-237ff9a63d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e8e512-b6d3-4244-b1e2-b4e1286ff3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7a9379-9bad-4436-982d-fea454b8d2c5",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d77915b-aa63-4005-898a-e1fcc55ab5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28f08bff-e6d2-4dca-9bd3-7595cf57f00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73540f8e-68c0-4f05-9dd5-5606e551ccbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e122b5-2f47-46ef-a290-891f957fa961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71cda44-dea8-47ca-9cea-d7d193f88cc0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fae519-5b84-4978-bae6-0fcd8e60b197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b188f6-cf55-4e9c-81bb-f9f2a5fbd580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f780d3d1-edb3-494a-90a2-23b3a2f45ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0309eb5a-938a-4743-8a76-e2200e39d65e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a36bad-830a-4520-8097-f95ef00d4e17",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17d43d5-fabc-4d86-97eb-5fbbe38297d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80648fa3-d062-4d96-a01e-ca5b30a90671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622d5694-b66c-4607-8dcb-328b5def15a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9986dbb6-ca05-497d-9037-1d0e80b9eff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441d733e-26f1-4054-8ab5-d6379dc5d556",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e934ec72-01fd-4fc7-ac18-fb48996d68ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9477e13-5491-4106-9955-b78f2d8788ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13f0220-482c-489c-a407-7870282673bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dec68876-e316-4214-bc93-fde5dea8713e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7501554e-36bb-4c8b-9ddd-ac4ba636b726",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0dd368b-9ab3-46fe-9ffd-e6c504bc85e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55508a7b-6df3-4acd-9a23-4df42f178a4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a621217-cabe-4933-8a57-3bd7a4f7a2a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1186399-406e-4472-8518-f984e7667cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3fbc64-c21b-457a-984a-3fdd768b2aab",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9ab718-036e-4a37-90b9-ab0f67f31178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4f175c-f708-4a44-a9b9-c022944a4699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e53668-ce89-4069-aba9-699fcf932f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c77c5cc-d483-4f3b-856f-dbf0b57f98c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42b95ae-dc55-4008-b424-74f6dae5124b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793869bf-9fa1-430d-bfe2-b1348cbae2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dacba9-e559-4d83-9105-31c3cb49131a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5ba792-d984-408b-80ba-4f54ea08a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a08dfbbb-afef-4d23-9fb5-b636e0e894e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7be0170-374f-4981-ac51-ab19c0386270",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff9682c-91b2-409a-9942-de43aeba775c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf03503-d9ae-406b-864e-41fbea709ac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f2e877-4dcc-4931-993a-d04f7eb3ece7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "074d505f-fe61-49eb-8483-d2543113d0fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c439fded-5d04-4715-9be1-4d9ebdbb5873",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d3aace-c3d0-41bc-9e88-7cfbebb40fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b7ee28-cc5d-4a70-8970-4299031c66e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69db42f5-a25a-493f-b744-aa9b6edd6a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ad9d6c-aee1-41a4-b132-f1a09fa60a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433e2cac-f4be-4001-944e-c1faedceb457",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffbd94f-f185-4b8b-967a-2eba64220198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb719b3-2e20-4e3c-973c-2858a8a9794c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bdd405-6879-47e7-9337-33f27982f131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ac3c652-0345-4771-bd89-291338059c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f686315c-5206-4b05-89e6-44ee18419885",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508eacb5-62f1-41eb-81e1-124dea42a6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37043f15-a98d-4940-9d8a-e4eabe074a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d55dfb-13c5-45b3-9574-7cc69beefc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88ae7167-a885-4044-b406-d6fcaf7a0d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551ef6fe-f6e2-4172-a483-40f67bc21932",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0460566-ed40-4668-9b4f-9199584f3eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434efd49-7f44-4d0a-a2c3-9ea9c498f0ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1c9def-e067-42cf-b020-276f5e4788e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed0baa7-1164-4897-b8e6-046f2817d77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4f41eb-c3c1-4eca-ace4-805730c7d372",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c71886-fc30-4840-babe-28b66b0da9b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5ca17d6-ac3f-4241-9fe6-0b6bfd9ee80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb15ea1-b651-4c7f-bce7-41434c9237eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "768e33ad-4525-43da-8523-f09c1fb032a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739d957d-c365-4e51-939c-4d99c6a1af62",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcdcf94-573d-47ab-b452-536e73bed914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ae7311-a7ad-4ed6-ade2-4ddb1e438007"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f64d9a-0cdc-4e6b-b3bf-6d2ba5ee5489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa070d1e-c42e-4974-b8b8-5519025b7fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dc587b-5a49-467d-bdc7-f387f2a5542a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c845f03-d1d3-498b-ac32-a7ada17e0576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b3e2eb-c2ce-4c3c-b1f9-7725d1f674bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290ffa60-85de-4a1b-8fb3-8983f832a7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa90b49-cc99-4050-af9c-847112e35ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "440043a4-b458-4424-ac6d-0339e47dbeb1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc6d330-4314-4eee-862b-2a707a8590b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b05902-c60f-40a6-880f-e879f8729a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5812f86-34c0-4ff7-b986-518c13af1564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f67d3450-e982-4112-aeb5-eca504ecf673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad17a90e-6aad-4061-b94f-126712695719",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4db9632-1bb2-4aa7-b391-cfa24fbf47e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d81e4c8-7cb9-498d-953e-d8c84a50855e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b165bb04-db08-43a7-a9d8-5110cb31c8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1d6b1f-fe58-4896-ae69-2104feb60e1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77dbf558-b6d8-490e-8f2e-39c76bfbf80a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c6cb48-04c2-4648-b682-6a00a170c366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350d7b4c-0604-4e5b-a160-5cfdd13923d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0497d4ea-6779-44b8-a557-8f1023df0aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d966d4-c901-47fe-ae8b-908dfae87da8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789524b5-56d2-4923-a69c-3a9eb49e6324",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3244672a-5611-450b-b880-ee8540698be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9b89bf0-ab7f-4640-bbe5-f2ccbb1f9dbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c36b5cb-65e5-43d6-88fa-c5717a6c06eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "badf5e08-76d8-4c26-86db-ae34cbc202be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32896ae0-4c26-4a29-be9b-c008678a6eee",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e3c7e4-963f-490c-9054-95b00b81d382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47eefdbf-bdaf-4409-8e19-daeb49e91dba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5077c5-50af-49cc-9c99-3af4a60bf215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d3cf576-2e48-4844-ad01-91056a26cc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce610f9-4691-4520-950a-457f29248feb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4899f213-0af3-40b2-a124-93762a620b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0540b3-4b82-4c2a-8c0c-acead4ff3cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "525bd107-8a21-4ed2-8764-bb2f6c69047e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a1d7bb1-7236-484b-b86f-4b8782cac555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f5e320-bf77-4343-befb-6832c17e072e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efe386d-e8db-417f-b998-ff2f5bafd7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0119c8bf-027b-4945-913b-35b9ff958f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe39d5c-0d55-4cb6-a585-8f736e423b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af7b2b6c-18b4-4e2a-a428-7fbbc065f76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53dd87ca-381f-44dc-8d49-11e210efbebf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4154695-7061-4e3d-9763-8fcc509b6055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68ce647e-8e04-4a6b-a5fd-99a3759d1335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d23220-c399-4ab3-b7b7-25c228d08732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1749de01-1fba-47ba-90c6-cfbf8696a104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc6f244-63f3-4cde-b49c-c3f3aaa81ca9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ed3f86-d52d-44d5-964e-88e1a31b577e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee31f1bd-19cb-43b0-a23b-cbc341adb501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40cf5e76-634e-47fc-b8b2-41977cdcf35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6621d1f4-f21e-4f58-bd70-4086ae0c8b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de0bdc9-d347-425b-81af-584644ecc49f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0b2e458-0c76-41a2-8221-fffda1d39147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9fbc8b9-e278-4328-ab51-e5ad4297d170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f9c4e7-5c59-40ed-8db1-e06e4622abba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e8a0356-d8cd-4958-b287-89f933702d8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a0358b-47b9-4fa9-b66f-24203be16006",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1d5990-570d-490c-8330-49cb4cf75aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5a3478-527b-48f5-8d52-0b13f1b60158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d078765-e49e-45fc-801c-df6736111277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45cac5fa-e56b-4e58-9e7d-edd09e82a18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c116eb21-fbd2-49b3-acde-13de100a2d34",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19560d2e-3bb1-47cd-98c5-d784177a01aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecfcd77-2477-453a-9370-a5e5f6141f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248eb57e-0bae-435d-9052-09380279fdfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb9e8b6a-dfb4-43ad-a2ea-d938be1e9999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f311f81e-9895-44b3-833b-2630d8b7de51",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f0e52c-ffcf-4bb9-bcca-fb8f55ff75b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf074e4-e34a-49ab-a5b6-ca6ac7d56580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea7bbdb-c0a5-4946-848e-f883b22b2a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38672131-8371-43f7-9241-aca897e4ee7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c161c70-f134-4f6e-8849-8e52435d37cc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b95f3b5-9d24-4284-bcf4-6be793b175fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58f917e-7993-4afa-8048-f20109786e2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c240f94e-2ffe-48f1-972b-96c2fd8016fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce895608-aa17-41e7-a688-5828f3474c95"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccce8fb5-33f8-4a66-8edb-6c615642b537",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8fc0955-ed3b-4672-a6f4-18f60693f522",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43953071-b15e-4846-ad8e-6b2afb556503",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f961fe2b-eb2d-48e0-9e68-64de90d49c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d563ee19-f4e2-4bd5-9173-9a197fdda325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3d5a8df-3625-4ef4-a5ca-41b61e139a60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b93544b-97cc-4332-8289-532d0acf970f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bfe5de02-575e-4891-9939-c06bd9857ed6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c744fb6-6bf7-4a68-a5ca-8fdc83ca88e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d433332-5d59-4963-8694-ea66a172a334"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30f4e356-befa-4e4a-8ade-d7509d999212",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d7ac1c0-62f0-4605-8b88-78d6a8c86605"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fde0de91-016f-40ea-8c33-fb9796a63b51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9d7e9df-56c0-46cd-a04e-6621d5a7ddd8"
            }
          }
        ]
      },
      {
        "id": "3f8db6d9-48bb-42b9-acbf-aa8dc0fedf72",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d7ebcab6-30a7-4c1a-81c0-a874da398960",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0038c33-2566-4332-9c83-29e35812d65c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8371b471-cb96-4175-a881-71087b1d22f1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f53b04-c0ec-4d89-a374-9e23177f0f1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "477d2dc2-29b0-4b45-955e-457317f05cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4516b97-a46e-4b2d-acaf-d6c766a29fbc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb39ce8e-aeed-47fd-9140-8eacd9705cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ed8852-8fcb-4040-a9a3-48a66f40c4d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85724e6b-a4d1-47a2-aa2a-feb8bfdfb68f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5714a4a-e96a-4ac8-80a0-a0c03db71569",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de716e94-9691-4ea1-bdb4-4df35f1d33df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9496f1-4ea5-4e20-b60e-91f2faa2d9cb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cddf77c-e9db-49c7-9fde-f0be1e372817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6096807-22ec-4611-905e-300455c29f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b6f974-3f96-43fa-ab47-069e7357459f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9768c4d-36cd-40f9-946b-b3da853b8e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff68d3dc-1ad1-4114-8cd6-bc7efb48e68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f76eff-a509-4361-aebd-f00a069378bc",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5933e4b-8c9e-4a44-959a-c33ae10126a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "491ab3bb-1981-4912-9ee9-8222e026953c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20ed4873-d5cf-4699-883f-6adcdf941561",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9029ee4e-4b4a-404d-af2c-bdb9ca846c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bc5bf92-2c1c-4ece-b858-629c11d121b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6c5608-26de-44ea-a9ab-bf3771697bed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47f02b3-c183-4202-94d8-668cce641df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a1eb96a-b1c2-4b63-a025-e9aba8a97185",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d2cc09-0af0-4f2d-b441-7b3e6af0bc7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4afa0aaf-03f0-4532-82e0-03cf1b9047d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cce2ac-d438-4c88-800f-604caaa39772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7246d634-58df-465d-80c3-6a7914d6c52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d862af14-639a-4234-bc8c-61dae3f7d3de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5518a8ab-3fd9-44f3-a619-40a4d102bfe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db3ab4d0-2e67-4d18-a8be-65e91f5c58a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85122374-b0a0-47ec-bc43-2c5f9eb3219a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d69036f-d6a7-48b6-9e3c-cc5b5017bde6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d609400c-d903-4312-beab-f8babb5b092c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904bc59b-75ff-4eba-9e63-a4902d67ba84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d370945-eae7-4b10-a26c-96ebf7e9e135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b2e9a94-708e-4b12-871a-eec442133643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f458558-fcd4-443b-939b-7327969dc865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa90bdf2-8d0c-480b-8dc5-6f7eb34c65c0",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04219b44-211d-4b5b-b62e-86f392d2502b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69d03076-dca9-4d98-913e-23b81cab9b7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d3b9e5d-bd5e-41e2-9afa-4bd1aa06de79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50aacc9-9356-4a5f-8f87-6cd16ea9bf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279863ef-1b07-4093-a1ae-fd31a10befcb",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a39bb19-5b31-4638-8689-04a3017df270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5487f99-a401-4d8a-bf5b-3a0d8f0e8fd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc56b743-b542-47c2-9b23-1ebaed59c10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52bc4d3-82e0-4b73-87cc-e8454e6fe636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3af7dc31-4ca9-433f-a310-e4773382433c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01ad6fd-1981-4a9b-88ae-40c0734d0d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7075ac-1029-424c-808e-8ddfcbfed01b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "741768cb-c52d-4f1f-a722-0b5467737db3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b967984d-bbf7-4312-afc9-9729a3fbd3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469c3d3f-6c14-4523-96c4-96d7417e8860",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fcff33-5c1f-4b01-82c8-278ad59e8360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9b6fb42-b827-4298-9926-323a599f2835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0e459d-7103-43c7-b7fa-81fd26cb73be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab87f8eb-e604-435b-bd66-4f73d85801a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d02c9d-0424-458e-bbb0-0fdfab6e0cfc",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b726aea3-b616-4f71-8f39-3d0616748750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca8763b-8e7c-45f5-b390-547c587e855a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1952c3-451f-446a-8a6a-b7641d94180b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccdbc7b0-a59e-4303-9a88-89904be5bcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b22cb41-a67a-49e6-80d9-9d40c9c640ce",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1a682d-b1bf-4a9e-a5e0-f153d2ad8b3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ebf48d8-5c4a-4db6-8978-40d1d60a5bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c034b88-6465-4d6a-a3f1-4990c90afcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ea5903-f226-4a6a-97b6-e2e7a7c9545c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cb2817-c5d2-4719-946e-c99d0aedf2f4",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f001674-45bd-4f1d-af16-f88320c275b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c0f0ac-b5f8-442a-b679-64e8c02a2138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58bb29d-91cb-4dea-ac64-6e84eac292d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2fc6c3-4a92-441f-9040-ba8f26cc6d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698ea880-ce0f-4c29-b953-b448ce916ad3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04af37fc-751f-49e2-a2b5-7a7f8ef10915",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79de5056-c7a3-497b-bc48-861c16adb775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f1bb53-e43b-4168-a3d9-2363875bf530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8583e6a2-8b2e-4214-8cb6-0cfd5eaecbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e1a416-d824-4550-897e-e3fd1fc9e923",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c30c52-064e-4cda-a860-a87f3ff4084d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a990e9-b034-4730-84e4-841a17066d08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77711e42-b872-4100-93a6-370ff0e3ec41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d65280-d5a2-4b77-bc9e-2ba6f0ee6b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07028fef-7c14-415a-9bc9-c28687ff7521",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466ac512-b55b-429c-a0d4-53ec2dd0c0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4346946-edf1-4a18-9044-def688d8a045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98573f15-87b6-4880-a92c-edbf1cd3cad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e567fd77-14d5-4a32-a925-0aeb356e0558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7b79470-0d45-4c97-836a-0cbccf4b1af4",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12a715e-5934-4bb4-ab8d-426be39859ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4aeaa94-b06e-43a6-be54-a3d44f4c3cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2d0337-d2da-4ca7-9d3e-f0c8afb0c693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31412bef-c85d-41cd-b8fa-8e519fad61e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2eaf7a-f039-4c72-8091-a900d898b8a9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737d37a5-6a71-43df-bc21-7e60fa434f92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ff3e31-35a9-42dd-871e-66a97f04b168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f1fe9c8-6d78-491a-aca8-7f67749a4df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8853c202-d9e3-4fd3-935b-a32a618219e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933b4e69-414d-4980-8884-f65a96450cd1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3209a26-43f2-421a-8f22-ac5abfcfa957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb729b0-98fb-4a56-ab92-0e08fdf56fd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f2ae24-ba8b-4c03-8415-de24cb378a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2206afc2-66aa-4144-afaa-afea6461fac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a13e3ec-796e-479d-9f72-3c16e41f0bc5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38c46181-3470-42f2-91e6-03c3797ffee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ae7225-9e5d-4527-b625-e1691f9ca3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2c3662-26f8-4749-9f95-fe118cd7a7d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fe36a31-1eda-40e3-83a2-10a85d892516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b61dd6-7377-416b-89cf-5fa8b95898b1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9132e88-be8c-458b-8489-9ac3dfed06a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5eec392-3bbc-40cc-a3c8-39e9c8db4a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906e3ca5-9011-4507-9e62-d4c58f708115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0209b42-8649-47c9-af27-670fe5e951b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd583da0-fec0-4586-b206-3cc8daf03caf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0833a043-37ec-441a-a4d5-92a36416389f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cea1e559-7aff-4b4f-95e5-400c19038cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ef4cd7-49f9-4a83-bc0b-c5e0e1de0e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deff1141-a2f6-45d2-9620-7e767fbe4d40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb8285a-a889-4eee-95e0-510afd508a68",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e35fd79f-0445-401e-ac11-f3e10b3a7008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37fc0013-7863-4c84-99bf-c889163dc5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a93864b-0ca9-462a-99ef-ec67788c69ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3179d1e-1f7d-46e9-bbab-6b176dafca94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3f2443-d9ce-47fa-84b4-57545deefbf6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9719ee-0c33-41af-8ec4-4c2a483461b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518c1b57-947e-4bcb-8abb-4672694f1005"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af49489-6ef7-41f2-80e3-898d7940798e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb9c608-7e84-4c5a-a906-c771c4981110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e43beef-41b7-4449-a5e2-9fd325c6d122",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1d81ff7-415e-43b9-8a07-bf5c6cfd4595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65b41d7c-daaa-4aaa-8ad7-c80fdc65f567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b56fa1-68e9-494c-b192-9a74440d1113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3049aee-239f-4611-a18a-d8c3d571e6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "095ae09a-bf88-4d7a-a6b8-5203a181e753",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1204ba-9d48-4956-a794-2f7be1794c10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c2fd92c-1533-4945-8f21-3754ac7bc06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfe0289-637d-45d1-8173-369373554fc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb5cda5-8f0a-435c-84b6-ffd5ce2680b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6695ee-2c5d-42db-9501-8c0d6a781758",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924ec398-0bea-4424-8ef7-d3288cfc3807",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1411c178-1f3f-4ca1-bad7-05cc1131d85c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab1696b-9b52-4a82-bc29-5253df43f34f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9833c404-3a8f-43ac-87b2-63706c66a910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a7097e-e3eb-4cda-b3db-1446b110fcc3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb93b47f-a6e6-4975-b634-1b712f98d35c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0717b0-4118-4354-8597-7fbcc206c62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb02a24e-9f15-4e22-9700-5ed63984596f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5e4f9-6111-44aa-8642-565a3166e378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4450869-1dd5-43f7-b724-bd6106a16188",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f480d51-11f7-42d8-92d9-eb506ab93794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9971200b-2831-4165-ad0f-1698337e0797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4bdb86c-4968-4126-91fc-42cd50d676e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e5c8617-fd1c-4bd3-9a40-b5f4041647ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9d793dc-47b1-4b9b-9569-f3fcd76a16d5",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03506e14-f296-49c4-bb7e-c76d613fcf97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa252084-14ee-4bda-8854-ba1470924981"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03e9b72-67b8-4cf4-9a5b-e7ca9dbc9089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692f4d4c-e7d3-47af-aab8-8e71bd0bed49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4960fd28-f9d9-42aa-b6dc-8ef660648fd2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5069f9-c13c-43fc-be61-279d44346d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a141b45-bf5b-4010-9022-09b1cdf2666c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a0563d-778f-4cb6-a091-bcaa40876d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f456469b-5ce2-4c81-99f9-4086a3ab1f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d181daf2-9585-4ab8-beb7-d60411c137c5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4181b525-20a9-41b2-8e7b-910a0af28592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96ddd2a-0fff-4013-a47c-6bb8b5e31d9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961e000a-86b4-4029-8428-14b3aec07e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd34f97a-2efb-4b6e-994b-71c71d47803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd129d6a-1871-4ad7-a40a-17ac7763a631",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda13274-3256-45fb-aaa6-ec5c473877a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c56ad38-06d0-482d-a60f-a4144b1c34b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bab7d177-a83b-4027-826f-8462fcd54105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7021eda-3ad7-42d5-bd1d-89c16e7f1c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60000f8b-8324-4565-8bbd-74913a58d322",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf5c8a8-be00-47a8-982c-cfdcc94e71ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c7b540-214d-402f-be0d-c9d5e962475c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afb778f-9d92-40e5-8408-db53cbf4d110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dcbdb8-2bb6-4baf-a9b6-eb377852493e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a6b19c-664d-40f8-b0ac-8ff759055ea7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db31954f-ac9a-4d64-bfed-2cb951386eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75853397-7281-4dc4-aec6-2f5edf3c5d33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32162ffe-916c-4717-b97a-1cb14d617af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae06461d-a88d-45b6-ad16-33d4b0cfe0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e561e11c-d417-47b0-8d21-021058bf74ae",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7c6780-1835-496d-a33c-a0e02bac4fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ce5fc3d-6572-4a97-a883-eff009d89f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91047be-0978-435c-973a-122bc5647acf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4332dc10-5c38-479c-bb8c-c40900998786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f097004-2568-41f4-9938-3003687ad58d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a4ef8-1e4c-4b3c-9ef3-5dbbb82b1821",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db10eac8-b0fb-4560-8b6c-b18dcf70a47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e33f10-e363-42f7-8beb-1caf39d549a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cc6af9-aa07-4677-b5b2-667a3dd797ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47736693-e4d2-44bb-851b-effa6975270f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99db37e3-4c0d-4609-9e42-507659ae04c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a1ec57b-6b09-4fcb-8ca4-e74c4a1290e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cc8ad2-0466-4806-861e-e7e9bd6977ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ba74ca-6f81-4680-b79c-c082199143d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719b3c6c-89b7-411e-aac8-138253b3f832",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a3340b-fea3-4090-9ff8-195a9b9ec676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68625576-ad22-4bc7-87c7-47b23eda3e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75860591-2d22-446d-a261-39c25e52db73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f60c4f-3b4b-40af-ba91-de28f899f2c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b63febe-3472-441f-82b1-59d66860dcbc",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb578c47-9bfa-43d8-b9f5-485eae2f74e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a788d3ab-697f-443f-a6a0-39df08e20f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9556b90b-5667-4154-9d35-753e908d6ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1974859e-e1b4-4974-9456-d95bf6fce951"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9279cb5-890c-4faa-a4d6-c14abc4a99a5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77be2067-db16-47ef-b574-8ddf9b9ba1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15db420d-1fce-43f8-bd67-841162797ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ad9a42-8cf5-4891-bc18-c9ca3e5f71ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fbd9a0-42f3-49b8-a65a-d9047c8709c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa392e3-00a1-4d4a-b772-7a5b5d4cb4dd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9d2056-f1e4-4926-9b0d-c1a641c46a34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f612b5-5e05-4737-8966-5beb39758edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00fbf66-2e0f-4fa3-9145-b7d0bbb2c855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f3e44c-8c3f-4e5c-8479-970d2ffcc77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7629eb9-0657-4d7a-90ee-fc0b0fc273c6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c603c6-bd17-47f7-965f-1f7301ac65d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa62c9c1-13d7-481b-a6a3-ccef8c40e6ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1e7f3d-ee0c-4d93-a042-fa70d8e8b47a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3382dd2-8d7e-4925-8b79-89e34de8663a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5bd454-c6e4-4b8f-9dec-e4616c3d8363",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd90ec2-2ef5-414b-b35c-9e941d4a5dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68562ad6-2270-4afb-841f-3161c37ce4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6add543e-d581-400d-aa42-44bd5e474d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1401a0-ae1f-4691-8bab-888b39e11102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195c3223-1f5f-45b0-9c24-f99898ba3147",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc90d9b-7b87-423a-9be8-33d5211628eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdce83ef-5743-400d-bcdc-b69ad29fad67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6c0b24-aa2e-4caa-9f9d-3121f14783f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd2b2c5-e18e-4a61-99df-cf41e510526c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a44a30-3ab5-48a1-829c-9ce801f3c637",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb601d57-3476-4776-8962-3859a7b532d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee5d258-77ef-4bc1-934a-2fecc790ac2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8087afe-17cf-4b4f-b15b-ddd19b2bea2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c207d54-fa26-407d-a6f9-2608e6c73450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81394c42-5280-4187-bac2-0dd86897b2ba",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d962b9f0-263a-4e93-b247-c0434c36bc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547755cd-3ac0-4ad3-809e-b09c01bb486b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94c45f2-d8b5-4ff9-9c7d-b478ae1726ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cb45e60-1df6-42be-b360-bf3f905c1d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee20d2d-3f4a-4fa4-a714-18f1114de3a7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffd4e44-e169-4cff-9674-af437c200b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfe35ed-4cf7-4863-b082-69a84c859c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd98431c-19eb-47ce-9e8b-4c8a41c43826",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab23675-26a9-4029-8f4e-59d3ecf9f69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2b7833-9b86-447b-b2e2-075e5bf86917",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905ebd50-e7bc-47dc-b42b-fc24ac4cb78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb50f7a-e1ca-4a6a-8c5f-919d054cfb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf87711b-49f5-4003-a8d8-98203fc50d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ab12af-36c8-4281-b234-afa57aeadf1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590ce465-f9e1-4af7-a289-122b57e37887",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bb9c94-49e8-43f2-abb0-044a1e15c45f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9370782e-f074-45aa-b944-4c21ceb56a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e02b27-2dba-4825-987b-8d82382a5032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50c5cf6-ede7-446b-8244-939373da547b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707fadbd-7005-418f-aabf-33ff7b118446",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efcd9c5-6739-4648-8a11-588f0d9b2822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f307bd-0c5d-43dc-8bdc-a5e8989debae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eef501-993a-4d8e-9ae4-0e4133d0c4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4295e0c-760f-47a5-9f4d-6efadda12de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a16f29-af5a-433f-a351-28c86bbadbcb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9acdbd6-aacb-4910-ad29-efff1164867e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87c0451c-a02c-4018-9531-030fff434418"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c9ea84-52da-42db-8a46-984acf0183fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acb2531-b42b-487b-8619-041f0b1a34d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2475fb-234a-458f-b9b1-9ac0e8d55844",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85adf77a-71f1-41f4-bc3e-9e175a7eb684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa327990-7eb5-4155-827d-e64e94377a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7330ba98-fb58-435a-906f-f8e33d0ea624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec09cdc6-1b88-4536-a0aa-de683ca33cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5c4b01-6df6-4079-9311-ff25fd8f7c27",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10d115e-f62a-4450-af0b-ab96cbc947ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60560eb7-140d-4e09-ab9d-a82c6f83d50e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb45167d-c00f-42d5-8c3a-189b805f28f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4a79ed-d05f-46c7-8629-7cc1b80e4b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9765fce7-dc5a-40ed-8c3b-c4e2330bb3ad",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1678e59f-b6d0-4d0c-bc14-b9a94ae8376a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3d867d-4b0e-414c-86d2-ed0303298afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca5e8fd-3c5a-46f9-87e4-f5035b8f8072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a03258-802f-4db8-ad26-5709c62dfcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e7d067-0eca-484c-9f4b-603d7ce109eb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c08ab4-82e2-4509-8da2-605cfb623fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cffd45e3-272e-44cc-a285-929e34ec1026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d7a8ea-b57d-43e2-b70d-30b35924cf01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2288084-f29f-43c5-a199-95f151a5ae65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8021bc6-303c-47c7-8d6e-34dcfdc44431",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c4d04f-10ab-4dc6-b221-75e48f8314da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a24243-9174-4a05-a73e-dae5be4f0114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e0def0-35a8-42fc-8edf-1443b5caffe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4cf2ca9-2e6a-44fd-a85e-0b81baf44f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11355d4e-2d8f-4517-a005-559c10f16871",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1426ff43-0e4f-4fab-8dfc-0541d43e3b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d678ddc-a794-437c-899f-12b3b66334c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0b22ec-523e-492c-aff6-cf4cc33c905e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28fd0939-17fd-4ba4-946f-c9890859fb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5270f810-f499-4763-b199-0b660873d1c2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5261d00a-c6ec-4e06-80c6-283cf3252ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cdc967-95a0-4259-819d-475a2ba7b03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "002ede3c-4eee-4f60-a27e-2734e8ac0df5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "145124e4-9135-410e-bd9c-cb92d5ec834f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501aca7f-6c80-4368-bae9-32a3cc3ed4fe",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a7bb38-d2ad-4ea5-96de-f5e055bae48f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "141b2bd3-7e59-4664-91cc-ed8d9f6cdc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bde485-ba9d-4bca-817d-2ede1d251156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2f74d7-b5e3-4dbd-8888-c51510339eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3f1e75-06e1-4bd6-88ad-1a00deae0ce6",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28b44e4f-f499-4e12-9581-8a0b3f6d2a11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c19ffe7-0f58-4044-a7f0-4a538ebe91b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0d4905-6fe6-4ea8-b5c8-756f08dd7d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89fcc2c7-4c10-4a7e-9358-e89b42119c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910f703c-46ef-4e71-aecc-6d7fd0e46c23",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9aff89a-85eb-4825-865b-4061e7dab93e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aed9afba-8c84-425c-a9fa-fc524deb6b1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264977e4-5e17-4016-a60a-ab10e5464e53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c196e8f7-11a1-4ffc-99e5-2782b8121797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbf0f1c-1794-436b-8b2c-834895dcfecf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46db9fb9-5b45-4523-98b4-b3d3f2d16f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e195232-5a45-4786-b12b-04c5e2cd9358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6576b990-146c-4991-bee4-6c495dc79ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d598395-c3b0-41bf-b3ff-174c064b365a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edfef09e-858e-4557-ac5e-d9f5bdc3a690",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cdb5cc-f1b9-4bab-96e1-02ed5b4535d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b70188e9-f759-4105-beaf-6dfae5ab8391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16dfe47-d66e-4e9f-97e9-d434dd51a29c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c14988a-2c07-4f36-b662-33e3f408c05b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0927b18e-83ea-4ef4-8c29-afa4b64ca587",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d811b691-4061-459e-a667-700560d10af4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86fc185e-438e-46a7-a738-3ace81adec06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778df24a-ea92-4abe-91bb-7373dc79f16a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656a9fa7-6e0e-451a-a893-293a122ce833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f261f12-1de6-4a17-a517-351ab1d12053",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65bf12fd-01a2-4a50-8cd4-9caf5edca303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d62690-b935-4d30-91b0-86598b53e14c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea4ac47-6fbc-4b83-b359-280e414a5003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b5f463-41a5-4b36-9495-00c7baae9583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ba06de-91d1-4f9f-9a3f-63a353fdfb0d",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9aabf11-57e8-47f2-9c9f-647793858f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42eb7a73-b4da-4faa-b97f-4893dcce94bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a988cc0f-3e4c-4189-8c93-937f97295874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22c0c74d-0bd8-4a5e-b880-d632a5963705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0a2cda-98b8-4ff7-9a0d-2f65a4db565b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988b9d8b-4602-4639-9887-4a059953b905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1b15d5-2ea6-44b3-9770-719898256dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c91f6de-9948-45a0-a8f2-f3c1758aa2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37147fe8-2a1d-42fa-a8ce-1fac580a8373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748ec234-40ae-4d9d-a236-b864d645665d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262d07ef-1bf9-48b4-9238-5f5b4b2b5c48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5107411c-80bc-4506-9151-c09620a29a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0247367a-22de-4df3-a7a8-9ce513ea174a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3796513a-2c37-4f13-afa3-6a77b2f714b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085bffe4-8639-4df4-b950-5b2bb70fe970",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf290105-5413-4fb7-a6cb-d6aec8bc7010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d958603-9ea3-4d89-9129-9c58b40210e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52b677a-fb7e-4f6d-a751-c84e341765ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21081e48-5d52-4c89-8315-bc714c7a041a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa993eb-17bb-40aa-b9eb-ff1f3d215541",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bf5ae1-ac22-47f0-8a57-9f4ffd26df78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a7b1bb-c187-49ad-961e-a79a3d22ba1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ab9360-5da3-4be8-8f30-c2895d630fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ebe979-a02d-43b2-8470-11e64519972d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b7209c2-0d86-4433-9e64-6e72d58f7829",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046f2ccc-e0ac-4f63-9d8e-0e2eb14d8ab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c40750e-0a3d-4f99-be49-82f9a7b7a39f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10b4e91-2fde-4fb8-9f9e-298c8047efeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab7fb10-e6e7-4602-9153-29510268410d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b9d52e-c733-408b-93e9-415eeaa2b292",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3499f71e-f267-4fa1-b0d3-9d7d5a06161d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaca7c85-98b3-46cf-92cd-5c8a057ef8eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6255145a-6607-4f2c-976b-dbe1e86a21ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1829a130-9452-40ba-9f3a-f934ed81e8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cdae5c-d3bd-4616-bc53-360afe82a963",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2f6ca1-f6d5-4b26-bbc3-a7e7478e0e50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0970ce55-7030-477e-8b7e-2686125de3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae38486e-1832-4d8e-bd8a-b45162f7475f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160b86cf-e331-4bac-b3ff-f92211b0ee21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9914d85d-a225-4287-bc76-19d54e81a0b2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8205106-978d-4d45-9fa9-84120d7feafa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "932d428b-e31f-4c7e-a730-adef6a8ece1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc97dc2-9b7e-42c8-baa2-2aac3e694743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a216dd73-2ac1-4930-ac85-d6537e0514b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02080480-5e3b-41d5-9750-7092b4c73980",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50d2d1c-548e-4d02-be19-c2464d0fd83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93645eb5-8532-40ee-9a28-4810e1d115a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c98756-a2c1-4566-b661-e3b5ae2ccd4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a64e770f-34d1-42b3-b982-03dabff9c11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93627863-c4ec-47c6-9a07-9b191cfd2d03",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4621f6-ecd8-490b-bc7c-a1f29792c83b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d111763-9ec2-4547-a6a7-95bb2a121c3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a038054-9ee9-43f9-90f9-a6519f9fb2b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2159b02-5fdb-48fb-8593-d6edc56ab724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade106e-ac36-463b-a52a-4df7256c5c4c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c8c4ef-0c47-4fa9-8ffc-a950bef9eb6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "059a2079-b5ca-4a55-bf26-53f68f2ff596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6eca8b-d342-4afd-9c78-ac83e22fd96b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41511473-a6e1-4b5f-bdb2-b4c8d2b46601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "531ba6ef-9037-401f-a3d2-7651c9217484",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e50715e-6e54-4273-963a-77837f17bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01516e4e-0be0-4455-98e3-527bbbfa3839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c86bcc1-639a-4317-8df7-e8e4df249efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4510c5a7-7f79-4df1-ad25-0571afca2681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836f8173-d1e6-40e3-8a5b-d22dbabb82c8",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd88d291-2ffa-4034-be94-07b28169b8d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e892cf25-68cf-4f55-9f84-f3dc9b39de9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40423d07-74b2-4f62-a1ad-344b12c5cb51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c18f3d2-d6be-4cf0-8596-adccf3302c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa51fef-271b-4df6-bb99-9fd6ee55c112",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14fed21-a082-4297-99ba-1912e35207fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "594bc487-ddf5-474b-9fc3-20cc49d634b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98468a3a-6b72-403e-bcd7-6234c923e674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ff47fab-e490-4a7a-98c4-82ceecbf2fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eabfab99-648a-488c-9b19-d84b7742bb22",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4012eaff-aeae-4c9e-9340-6a28480d0c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02acc792-1a93-448f-b26c-83a3472faad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad057aa5-f32a-4ba6-a718-024fbcc572b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e5f38f-0116-4af7-9415-3e835b3ef125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2122c9ab-9a2b-4d51-9c99-b1fd2ad3d80c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774a5716-3fe1-48dd-9216-255a41357d63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e13cbe-fa44-4a94-967d-5d83ecee16c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66b6a721-6814-415e-9343-d373963bda16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32c128c-e359-4c1e-b170-39946a3958a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3849918f-543f-46c1-89dd-01ccd49e549f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dad9dfec-22c2-4e83-ba42-baab5aef3309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88347135-6570-48b2-8521-576dc0354641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddac049-3306-422f-90e4-428e39fdd9cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5da2c3c-dae1-4b50-a665-1839303d2a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785726c6-8c64-4d62-b449-518926c93d8c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbc757cc-5a9a-4ba6-b15a-42dfb7a178f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e297b19c-0380-41b3-858c-da0441f86e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011e6a70-afd4-4f9b-aabc-8c44c1006347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2b13c2-1804-4781-af95-3d9d69062d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5913af5e-702e-4777-a868-cc2ab0ec4026",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c937c7e5-b9fb-4af4-8d97-5ff8b69a50a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf556d3-2dcd-4477-a9c5-f16e10a21446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfb00f2-a848-47fd-88ca-15821e7ae856",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0111b921-ed9f-47fc-8d7c-cee8000f3a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec706bc-43e1-4ec8-bec8-9538005c0b83",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccdd0d2-295d-4eff-bcff-7ad34737b93a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34603923-1549-45c6-a934-b1780bf3f076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10a1701-752b-40b7-9d50-2ebb064c020a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d501f2e-c496-4ed5-ae4d-4c8ca51b57e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13d556b-fa65-42c8-8f6b-d9a9f83637b3",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cb99dc-8f35-40b4-9b55-6e7af11793cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c60b280-914b-41e9-9a61-6b12cd0fe826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76416719-07ea-408c-bd95-0cc441a5a313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222f36a5-93fc-4122-bab9-02aed0afad51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "913e6c70-c0b5-4e4a-a2d2-ce18e31c7b1c",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fd926b-d57f-49fe-91d6-ffd6c5c584d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cab32970-342f-4d97-a930-9f0ad482d1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b6e177-63f4-4da1-84af-7e82a1624cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96c45107-a80a-4ab2-b90f-620e121ad686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3521f3ab-5ee9-4e72-824b-a30964681a9a",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d732856-1e34-4952-b0e9-b3b0152dd8a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "393acb10-7985-4f63-b348-736a1f3ac64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee808288-f074-40a8-a01d-d0176ab574cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783e9a67-8299-4072-82e3-d1ff7e7c04ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db927288-bc79-4ba8-948c-8d1acb21f06b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abc1b2ce-c1a7-4dba-ab48-90c231b696e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb70e7a-0ea8-40ac-bae7-ae2891b0fca5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bce649-7bc3-4a2c-95f3-00b72276cb6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b2146e-c047-4435-bf99-2ea959f31807"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff26e49-9a82-4e0a-b8a9-662ef9d87514",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e1713c-42f2-4eaa-b0e2-6ce4dd7bb85b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2318ccf-e6d6-427b-961b-5928c5db0c1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81ca4fa-a88d-4580-9a57-d0e01ac37693",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714b6352-caaa-4eff-b6a8-10b78a2ed939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb924c0b-8fe4-4439-9336-191066627076",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5937059-560b-45c8-83ac-05173c6af246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5675cc16-dc79-43e9-8491-2c8c217654cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e9af11-ecec-45ca-bfda-6a1cf0e22e9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f509c8dc-0166-43fd-907a-de72bfc89e11"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed4ad3be-6f71-4e5b-b62b-f9e86a7f3eba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7de1c4ea-bd8e-4b51-b9fc-c49b517d9659"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "deddfb94-5834-43ca-b3ca-764a339b1b33",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd691ff8-c4fe-4735-b185-cd0070bf94ea"
                    }
                  }
                ]
              },
              {
                "id": "6b778729-0507-4b79-9eeb-ba6815ebae55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f35eb8d7-183c-4c88-bb82-48fd63153e2b",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cdb20b-0fd5-4601-a8ae-8fbd5e506b51",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "67d2cac8-ad1e-443d-bf52-944b83431305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c06b87-f417-4c95-afae-9a9872a5850d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d9a3383-90da-42c3-85d3-9e7be000cc86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63073347-2e32-41f4-aef4-23a8b3d59e4c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0bd60d66-22bf-44c1-a2ae-77b434a37ab0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7aa8ee64-a56c-41f7-a388-e3c39aa97a7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17968642-b8b7-48b0-9cf3-7e16755048af"
                    }
                  }
                ]
              },
              {
                "id": "dea4262f-9447-4c63-886e-a88a763a71f2",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7081dc51-9325-4661-aa14-04c156f27f3a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "127f62b7-9c95-4830-91d5-f0b20af6736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8a002ea7-079c-4b0b-b94c-229f046c581b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05bdb6d0-e98e-4219-9bb3-16c9099264c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e90a17a-065c-4f7e-a5f5-800ba5832e8d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "08c2280a-e007-4cc5-9a0d-471e49cdd96d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a669f665-f779-40a1-a6a9-1f59253bde4d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2991d010-4c2a-4332-a7ed-55bf3b38e6fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49471476-a167-4057-9b41-d4f9a5a8bf8e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7fc0674-f81d-4c98-92f0-cbf6e4210725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49f6c453-d1b1-4bd8-8775-1ef381a10fcb"
                    }
                  }
                ]
              },
              {
                "id": "d2d40d9a-3053-4c42-a218-42c4852d7da4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad79e1b0-e838-4f80-985a-4f1e8ee493a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fedd1535-97db-49ca-8158-c9323d706fc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ba3fe85-8931-4618-918c-a84b6a981a68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0112f0c5-a4b7-4dfd-a447-2f22674030a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7fa7e42-7dd5-4e10-8ad6-08864ef61457",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aa3d6268-3e82-45c2-a215-33a5e13f66dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07c35ddb-f966-441e-b049-6d6419189b62",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0e513a3-c4dd-4b9f-bf71-c933496d1d15"
            }
          }
        ]
      },
      {
        "id": "b28202b6-a1e4-4c1b-9bb6-4c8af505d3aa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9f52f200-de01-4573-8939-4c4f829878b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07b6b9ee-02f7-44f9-8ac1-a8029bcfdc72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a0a39e4f-d3fc-41f7-b7b8-aff655f2e505",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20607b0d-96b2-4e5d-af52-5a6fb91538f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b549cd71-434f-436e-ab4f-f73e2dbeda12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76cf735d-1059-4455-a2f2-cb8466b3969d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59f58946-cb8c-4a52-94b5-b0af53b15d6a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cfc1448c-49a7-47d3-a352-85e437a5d9c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "746cbc38-7d27-4b64-988e-0d101b359a3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d431f4a2-24e2-4e67-803c-9dfbc367f45a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d0b737c-135d-4e27-aac8-5b62e5d3320d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9a7ad34-44f3-46f9-807a-feb11f836383",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "216f8be9-ef34-4911-ad48-1c1e89b86489"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "425f5373-9150-49e9-9177-9ea09b75e4cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07a9746e-aa36-4c6b-afe2-8edeffe80317"
            }
          }
        ]
      },
      {
        "id": "5850a6f4-c5c1-4490-b306-41d2c4f7f3de",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3ec5a3c3-11a5-46e0-af7c-ab86a68053d7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50d03727-39d0-449a-b446-3a8eb971a2a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ade99e9-0a19-4951-a9fc-55489f152ef7",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b216c61-c385-4831-8ae4-33a151702d9f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0983999c-836c-489c-a461-84eb06b5ab13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4084bc5-254b-458c-b6de-e195069fbf8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "96d369fe-cdcd-47c5-89cf-5d5ffba93814"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c557a21c-7ee7-4ab6-995c-665a0aa9696c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f2dbf09-ae79-4a60-a36c-caf409131ba9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "181f768c-e1fc-413e-b202-265f6e652f49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adf285b8-0780-4b7c-bc1a-73afffafbd99"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3736d1b-5960-4ef2-99c6-64cef9341d84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fe51a0c8-85c1-4375-8d5e-7aad04bd18c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf63d309-e363-49f9-9b09-bf7bcd481422",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f33d8c1c-5471-47f1-b033-92c9b5a43b24"
            }
          }
        ]
      },
      {
        "id": "ead99a88-2a0b-438e-a843-8f8fbdaa3448",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "64e850ed-ac33-4bda-8227-5d3d3a702048",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d7167d24-d4a7-43ee-b9b3-4630433ca5c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4cd5e4b1-b33a-4924-8ee1-f1a555e4c062",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b0f00d-8f6b-4a7b-9dc5-c49a3b8ced7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87c75e18-bd1a-4e14-8dcc-c608f3176324"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed34bdc-650d-42bc-bb00-5850c96397c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bcdbab08-52a4-4130-b551-bd6c6f797fb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5d297cb-4ada-46bd-86ce-ff82324bc858",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "60cea416-c312-4225-9dd0-0b4dffc38f74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf859d7a-b56b-47e0-aa74-45ecfa48ba45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25f4753f-2de2-45aa-86a6-0b4b4e3a81c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a28ee46-3360-4dad-af1c-eda24c50edb9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d3ef35d6-526a-4cb8-bea8-6bd0d68e87f7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "58ab199b-f52d-4e50-812f-5e5f2796033f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "732a7687-2985-4910-bc50-fe54c2584278"
            }
          }
        ]
      },
      {
        "id": "f0cf536d-a655-4ca1-a067-014a7237c7fd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14f4335d-0534-4c1a-90c3-a325cff404f8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "201cf435-8cbb-475f-aaf6-331ae37a1d4a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "270f71be-c25c-4dfe-a10e-433fdd8f590f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "816942ee-068b-4673-bbaf-beb911e4910f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5c5f062-da85-4a4b-9e0d-1473efe3c214",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 224.64436619718313,
      "responseMin": 16,
      "responseMax": 6790,
      "responseSd": 434.07106204500656,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690073045696,
      "completed": 1690073125614
    },
    "executions": [
      {
        "id": "8f9bca73-6a48-4d23-a91c-a56a5ddceb88",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b99d2a94-65c2-4246-ace7-4571812c990a",
          "httpRequestId": "0e3a7c9d-b37f-4c5e-ac48-79528ed27522"
        },
        "item": {
          "id": "8f9bca73-6a48-4d23-a91c-a56a5ddceb88",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3233df1d-535f-41f0-a4dc-1144779d3986",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 0
        }
      },
      {
        "id": "7f0f60e8-3ec9-46f1-9274-91292b2c2a88",
        "cursor": {
          "ref": "a256f375-b808-4038-8988-768a76f76f5b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "da06dfe9-1503-43dd-a63e-9c3259dc4f02"
        },
        "item": {
          "id": "7f0f60e8-3ec9-46f1-9274-91292b2c2a88",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e2bd016f-177c-47f2-849b-9723a828458d",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 0
        }
      },
      {
        "id": "d57c52a7-ba57-42f4-ae18-b574f24f4356",
        "cursor": {
          "ref": "36ca5f14-8705-491d-8f1d-ecbd4308277c",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ce857748-ed50-4a22-b3e8-7c01276ad5c9"
        },
        "item": {
          "id": "d57c52a7-ba57-42f4-ae18-b574f24f4356",
          "name": "did_json"
        },
        "response": {
          "id": "992e0c53-90d7-4d8d-ab38-0599421d4689",
          "status": "OK",
          "code": 200,
          "responseTime": 1408,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875c13c2-4bca-40ae-83e0-ad24deb26cbc",
        "cursor": {
          "ref": "90f19d80-4ef6-4494-aa86-4273bb34aef2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e8105e6f-35c4-460c-9979-641ba4f7e679"
        },
        "item": {
          "id": "875c13c2-4bca-40ae-83e0-ad24deb26cbc",
          "name": "did:invalid"
        },
        "response": {
          "id": "38c269fd-a81b-4810-b57c-2fbf088f8c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875c13c2-4bca-40ae-83e0-ad24deb26cbc",
        "cursor": {
          "ref": "90f19d80-4ef6-4494-aa86-4273bb34aef2",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e8105e6f-35c4-460c-9979-641ba4f7e679"
        },
        "item": {
          "id": "875c13c2-4bca-40ae-83e0-ad24deb26cbc",
          "name": "did:invalid"
        },
        "response": {
          "id": "38c269fd-a81b-4810-b57c-2fbf088f8c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4685a76d-e6c8-437d-8ac8-443d2b8c8c8e",
        "cursor": {
          "ref": "c7b2372b-36a0-431c-9894-af494226af16",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b4427dd8-439a-43e1-9552-28ba2ee1c4ab"
        },
        "item": {
          "id": "4685a76d-e6c8-437d-8ac8-443d2b8c8c8e",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f0b7d211-51f7-4949-b960-fe9241e54c68",
          "status": "Not Found",
          "code": 404,
          "responseTime": 440,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad118f0-1d64-4904-88e5-764d96859cbc",
        "cursor": {
          "ref": "61d64eff-68c2-4310-844d-c2673ed1980d",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "78bbf110-75bb-403f-a062-630a502997b5"
        },
        "item": {
          "id": "5ad118f0-1d64-4904-88e5-764d96859cbc",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b6e9225-0f04-4b0d-9d4e-ed538c9ecc2a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 262,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a38d688-2e35-4a17-be27-3e06f0e54b1e",
        "cursor": {
          "ref": "0eebff47-9c0b-4ba8-8b0e-b126ad488998",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "44c67e33-cc33-487e-b6b1-68886ac95bd2"
        },
        "item": {
          "id": "3a38d688-2e35-4a17-be27-3e06f0e54b1e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9dbebe06-1924-45d2-89c7-885086a7a1b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ddf33e9-e54a-453e-a5ad-94068508bc37",
        "cursor": {
          "ref": "28cf3fbf-9853-4b2a-8806-6c471a35cb72",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "10f5865e-c694-466d-9c13-e6c0c29d41b5"
        },
        "item": {
          "id": "6ddf33e9-e54a-453e-a5ad-94068508bc37",
          "name": "identifiers"
        },
        "response": {
          "id": "a9b96ba0-9906-47dd-9c36-e15da4d02d47",
          "status": "OK",
          "code": 200,
          "responseTime": 1083,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f26d036-fb56-41fd-8c05-960191b3174d",
        "cursor": {
          "ref": "233b1ad1-a336-47e9-acad-92eb1fff4dd1",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1d5fa117-8103-4a9b-bf3c-b00d508d301b"
        },
        "item": {
          "id": "5f26d036-fb56-41fd-8c05-960191b3174d",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "534fbc30-cdde-40f7-bc55-ec5e9e4aff55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea171e03-8b59-4ee5-ad84-02899a0511e6",
        "cursor": {
          "ref": "d66b57c8-d854-4ff1-8488-bf4a8a49664a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d6d3e243-c757-4492-8212-9ce386851116"
        },
        "item": {
          "id": "ea171e03-8b59-4ee5-ad84-02899a0511e6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cd605f76-5704-4485-847f-de696cc9e323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d7ae27-ada5-474a-a114-a85709763a93",
        "cursor": {
          "ref": "1248889a-79c9-40cb-9f21-1e622008d543",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "b98d4132-7766-4537-a43e-0e772cca9bba"
        },
        "item": {
          "id": "52d7ae27-ada5-474a-a114-a85709763a93",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b72ad30e-2a92-4a5a-8411-bfa4900d444c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae43df40-2557-4d2b-ab11-66749b8c58bb",
        "cursor": {
          "ref": "6dad5ff8-3920-4a2b-8138-2cb82c791838",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8fc9cfcf-ae85-4d3a-a99d-2f385a137789"
        },
        "item": {
          "id": "ae43df40-2557-4d2b-ab11-66749b8c58bb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "66867fa3-e7fe-4c65-b8d9-61e3546b2392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d21b74-c5ad-4f84-88be-85cd226a550c",
        "cursor": {
          "ref": "1b18d175-f322-40e9-8ae3-24b6d0e7a757",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d370e404-e8b4-4122-8494-b01eb7322b02"
        },
        "item": {
          "id": "65d21b74-c5ad-4f84-88be-85cd226a550c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "53c9223f-dcf8-4967-9100-9891fa90222e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3db0035-57ca-4f57-b4e1-9b7a1a5cfb42",
        "cursor": {
          "ref": "2455ba42-2e0e-42a7-8df5-51b9555395ed",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d48b7fca-01db-406f-b3a1-c270c057992c"
        },
        "item": {
          "id": "b3db0035-57ca-4f57-b4e1-9b7a1a5cfb42",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "45bb80b0-2517-43e7-8211-887d759bb639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f20591-4610-46f9-abb4-f904d4bad0c2",
        "cursor": {
          "ref": "3d729983-8a52-4923-9845-0d13e140120c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3acb3d3a-f02f-4582-a89f-25d424b5d27c"
        },
        "item": {
          "id": "c1f20591-4610-46f9-abb4-f904d4bad0c2",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ae7da8fb-d732-426d-8ff8-d2a7e04cb2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483bd9aa-0b61-49f2-9dc8-8e05c8799cb5",
        "cursor": {
          "ref": "ce491270-7fe9-4b2d-ab65-71d98361f27f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ded3fccc-c032-4714-b9cb-8bfab0acd023"
        },
        "item": {
          "id": "483bd9aa-0b61-49f2-9dc8-8e05c8799cb5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "65988f2b-b681-4fd1-8701-2860b57ebf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f946c019-be10-4f35-851d-4225f4a70b75",
        "cursor": {
          "ref": "4e1d9ef0-ce4d-4a56-826f-f3035c92cef7",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a0190ee9-2937-4ed0-b0cc-e54338f4a393"
        },
        "item": {
          "id": "f946c019-be10-4f35-851d-4225f4a70b75",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9c123095-0db5-4daf-bb4d-bdf0102c984f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420d98e3-45fb-4235-85cf-3f71796b109a",
        "cursor": {
          "ref": "ecf6c392-f075-440a-b764-a22ffd6078f2",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "895a7c18-4048-41cf-a86a-b236b7cc9cff"
        },
        "item": {
          "id": "420d98e3-45fb-4235-85cf-3f71796b109a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "fd4db308-bba4-428c-870b-905838b4f7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fa39b8-4378-4a2e-967f-d3a40df31a60",
        "cursor": {
          "ref": "6d3afa84-f4c7-42fa-b57c-001ee0e3f859",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9c68a730-268e-4807-8bb2-30a7219a028e"
        },
        "item": {
          "id": "34fa39b8-4378-4a2e-967f-d3a40df31a60",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9259b91a-b586-4c4b-b79c-c2849064802b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19918042-a00e-4972-8ccc-0a68ae1cb227",
        "cursor": {
          "ref": "0975a0ba-9632-4de0-836d-2c1dfb9ab57c",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b506ebd4-bed8-4299-ab93-baf5b58bf9d2"
        },
        "item": {
          "id": "19918042-a00e-4972-8ccc-0a68ae1cb227",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d532f417-f156-4f2c-9f16-c878aa6fcfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f742aeb7-d310-41b9-8eb3-1fc4b3f88b80",
        "cursor": {
          "ref": "7ba97263-5e43-4a7f-8217-3bef1ca64024",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bd543126-0778-4dfe-9d99-476fb629612d"
        },
        "item": {
          "id": "f742aeb7-d310-41b9-8eb3-1fc4b3f88b80",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ba411bb5-8c09-49c5-b05d-c19bc8584763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa0767c-b49f-4d7e-b0c9-8d976c94499e",
        "cursor": {
          "ref": "7e88fbbf-776b-43a8-b240-b3f1be323d9a",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "55af4af9-7b90-4a05-93a5-8d58e5f3ade9"
        },
        "item": {
          "id": "aaa0767c-b49f-4d7e-b0c9-8d976c94499e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "0ce4b636-1847-42fa-94ef-8fe44108050c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdc152b-f2ac-45c2-a147-2ae5d241f21e",
        "cursor": {
          "ref": "2ba637e0-c260-4dfc-acd3-ef6205d0637f",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "42a3d898-f0ef-4413-a54f-dc536c4cac2e"
        },
        "item": {
          "id": "5cdc152b-f2ac-45c2-a147-2ae5d241f21e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "07c54452-768f-4615-bbe8-b6970432d936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6910bd41-9bb6-4aad-95f7-e27e649d8d5c",
        "cursor": {
          "ref": "da4032c9-1999-44d5-bd56-42f1e9fb6e0f",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cce71c4a-d118-4f9b-9736-ec34bf115b27"
        },
        "item": {
          "id": "6910bd41-9bb6-4aad-95f7-e27e649d8d5c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "22d3d201-8573-4ae4-8135-883f54f5811a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5443b484-5763-4a45-8e2c-84d5940fd953",
        "cursor": {
          "ref": "f8faa9af-9847-4632-8a6c-0d7106b06d08",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2c29bd42-263b-49b9-80ce-584d48197f3d"
        },
        "item": {
          "id": "5443b484-5763-4a45-8e2c-84d5940fd953",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2340aabe-4e5a-4426-b1a5-95030bcfb4ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dbd8eb-f127-4df1-9c5f-d5861c4752eb",
        "cursor": {
          "ref": "018ee902-0e34-40b7-b03d-01628cd0fa14",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3f5ecf9c-f3f3-4eb6-a7e7-5116d397fa2d"
        },
        "item": {
          "id": "62dbd8eb-f127-4df1-9c5f-d5861c4752eb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fe3d8254-2c7a-4a04-a7cf-57aa070ff6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5348ba76-29a9-48c8-be47-dc318118fe58",
        "cursor": {
          "ref": "d7bcda73-2fdf-4777-8045-3df74b602eee",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c70e5529-4a4f-4f1c-9759-cf11483d6608"
        },
        "item": {
          "id": "5348ba76-29a9-48c8-be47-dc318118fe58",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4b609211-a86c-4247-a223-45d6a4cae206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becf3db1-54ef-47b0-8719-2710fdaed2b4",
        "cursor": {
          "ref": "39c614fd-1e07-442b-bd98-75b3c24f585d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "cd7cb27f-4f53-4a19-9dcf-2dc8be66abf0"
        },
        "item": {
          "id": "becf3db1-54ef-47b0-8719-2710fdaed2b4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "88f51e2a-a43e-46eb-a2ff-c7fcd8146cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1ce668-dab2-46e2-ac01-e2a7cfc86643",
        "cursor": {
          "ref": "94d4aed8-bb0b-4039-bb09-7ba1924055b3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "be222495-603c-4bef-b3dc-6f91c9894abc"
        },
        "item": {
          "id": "2d1ce668-dab2-46e2-ac01-e2a7cfc86643",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d25a6a48-5e9c-4061-8bb0-8fdc8b0e4c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36411824-67d4-444d-933f-c578aac65269",
        "cursor": {
          "ref": "6600fdd8-8fc4-4c88-9812-16cb34f599a1",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3010e5f2-c7a5-4447-8991-4222f2ceb4b3"
        },
        "item": {
          "id": "36411824-67d4-444d-933f-c578aac65269",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "be7fbcf4-7907-4a65-a6bc-dde24e71eb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c09533c7-73db-4027-aa27-4330e1ddeb01",
        "cursor": {
          "ref": "326bd1fe-e7ba-4b03-aeb4-5757fbc6a73f",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9580fcef-1256-4bfa-886f-d9877498b1cc"
        },
        "item": {
          "id": "c09533c7-73db-4027-aa27-4330e1ddeb01",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fe7e8309-dabb-46b3-bf45-579f66c841cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949b81a3-5aec-4ab5-b4a6-60c903ea57ee",
        "cursor": {
          "ref": "f7dd78b4-d23a-46a1-bcf5-fd2b3a3bc47b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a5ddd86a-c26e-4491-9d67-9f8aa1366300"
        },
        "item": {
          "id": "949b81a3-5aec-4ab5-b4a6-60c903ea57ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ca160bdc-e7d1-4db9-933d-d37059766a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e31ed9-768a-464d-be96-4869466efde4",
        "cursor": {
          "ref": "a8b830b1-e1f5-4d50-8cef-6f842c10ae55",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3fa60ad8-3038-4618-b198-77770a03aca8"
        },
        "item": {
          "id": "f0e31ed9-768a-464d-be96-4869466efde4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8d810fba-3ead-4952-a681-bf022bf54a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20459180-336c-4184-a765-23e78e454659",
        "cursor": {
          "ref": "e529f22d-c7be-4a2d-9e96-76b2a580b859",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1fffa2ce-4437-463f-92fa-077557a7038e"
        },
        "item": {
          "id": "20459180-336c-4184-a765-23e78e454659",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "89f419c8-b1df-4833-8f88-9e8d9a525194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffc7564-3b26-49c2-9684-d0fb75d8ee14",
        "cursor": {
          "ref": "53aa33b0-4206-46b8-8323-5d782e697cbb",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ab0fb986-fbff-4ae4-bcd6-f1e0bdec44d2"
        },
        "item": {
          "id": "2ffc7564-3b26-49c2-9684-d0fb75d8ee14",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "88224bb6-456a-4ee7-8071-07f54580e416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35dcdd65-27b9-4c2f-952c-44be9cbc47ec",
        "cursor": {
          "ref": "b4527d79-b69b-4cd2-a809-7f028f12b343",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a77084fb-7a99-496a-9c43-10f59730b144"
        },
        "item": {
          "id": "35dcdd65-27b9-4c2f-952c-44be9cbc47ec",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f6cb6086-29e9-4917-a4e6-4298d5090b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2707ca85-2371-4722-87b2-d87a51c63ac6",
        "cursor": {
          "ref": "55475c5a-8855-4dfc-ae44-9d6efd88a8c5",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c42ee76b-bab4-4775-8c83-e4b5763474c5"
        },
        "item": {
          "id": "2707ca85-2371-4722-87b2-d87a51c63ac6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "68b7b26c-3b21-4499-bc16-630d0efe3c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab59d71-88a6-42ea-b540-7c95b67509b8",
        "cursor": {
          "ref": "f899e296-bb47-4a46-91f8-8789a38c5cd5",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "359e097a-a96f-4647-8bf0-66c57500e698"
        },
        "item": {
          "id": "5ab59d71-88a6-42ea-b540-7c95b67509b8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d4a28547-7829-450d-b4f8-540c5906749a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f14454-039a-416c-b512-c15cbceed9ee",
        "cursor": {
          "ref": "11dee140-b9c9-496f-9618-a224346e4827",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4bab6eec-58ab-4dff-8322-7c8524e46b5e"
        },
        "item": {
          "id": "15f14454-039a-416c-b512-c15cbceed9ee",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ffb8e8af-5f2a-4ef1-b475-016e28ba34ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960623a7-7a73-46b5-a950-e9a056d9d3b0",
        "cursor": {
          "ref": "adaca6aa-89b1-4f50-a179-7afd814a437a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e2948a7a-04a6-4a2c-9e12-e1f73febd46b"
        },
        "item": {
          "id": "960623a7-7a73-46b5-a950-e9a056d9d3b0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "867af047-2e26-4736-8506-4e547f9d6591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b8bba8-4a8b-49bf-967a-15bc58b4703e",
        "cursor": {
          "ref": "26f5ee76-26b4-4cb9-904b-152dcfc78eb6",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "26f77c74-8ba8-4746-9abc-07b63559192d"
        },
        "item": {
          "id": "78b8bba8-4a8b-49bf-967a-15bc58b4703e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "45a98fc7-adf3-490e-8387-92c14ec002ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85c45ae-31b5-44f3-9354-01819510f672",
        "cursor": {
          "ref": "dae9974e-0b60-4b1b-9feb-eeba419c998d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "249a6d7d-3c44-4cc1-912d-4712d0b3025e"
        },
        "item": {
          "id": "f85c45ae-31b5-44f3-9354-01819510f672",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5094dc4e-5ead-4299-93c3-2a6665229111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3644851-b7c7-440f-97f7-e3c8ebc9637a",
        "cursor": {
          "ref": "2ad8d930-e680-419f-9a8f-8a3a843ca1b5",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "70ea5ba8-3aa0-4b42-aa0f-0864e3b5c7bc"
        },
        "item": {
          "id": "e3644851-b7c7-440f-97f7-e3c8ebc9637a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2a0e90dc-fd17-4fe5-9d03-fc6fdb53d2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e9ff1a-f361-4487-8a1d-32e9a5ad9bc2",
        "cursor": {
          "ref": "957c76fb-9bbd-4b4a-b29c-f4a213eddd9f",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "05ae7d54-472d-46ce-9cec-5b8cfd8f8fae"
        },
        "item": {
          "id": "c9e9ff1a-f361-4487-8a1d-32e9a5ad9bc2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d3583546-1a10-48db-852e-ae7dfd0397db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3879a1fa-3d09-4354-a78b-f9ff2b673e94",
        "cursor": {
          "ref": "7c94827e-603c-4c07-a31f-18266f11b909",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0c5e964b-639a-4b01-aa24-2b91f941599b"
        },
        "item": {
          "id": "3879a1fa-3d09-4354-a78b-f9ff2b673e94",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7cfd6034-ded6-4a2c-a2ff-d41b753164fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "922cb19e-f5bd-4314-890b-17a44229fb40",
        "cursor": {
          "ref": "29042e0b-3275-4f1e-8995-5f93838d459a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "de227f7f-19fc-4de6-b381-a7ce808d85d1"
        },
        "item": {
          "id": "922cb19e-f5bd-4314-890b-17a44229fb40",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "32222d8b-c706-4316-98b6-fa2df47ee84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f768a6-6b58-4b0c-bbbb-6c019f6e835a",
        "cursor": {
          "ref": "8e7cc064-20ff-4e4c-b89a-237889ce6338",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "14c3fcbc-d7ea-4030-a5bf-11d71c81e73e"
        },
        "item": {
          "id": "18f768a6-6b58-4b0c-bbbb-6c019f6e835a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5b50da09-3252-48c6-88ae-2a1e962ede81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dac9e9-ce3d-4100-928e-b18d3657eab5",
        "cursor": {
          "ref": "2d4510c0-943e-4be5-9b51-5b376f57bc1d",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ea9b3720-45d6-4ceb-8486-a4105129a259"
        },
        "item": {
          "id": "46dac9e9-ce3d-4100-928e-b18d3657eab5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "da9f331d-38ec-41b1-ac3c-e29f1d8be4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d12698-93da-4d8d-8cf0-9737aba5eeb5",
        "cursor": {
          "ref": "0618379b-93b4-4676-858e-fecb7dabde4b",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f52237e0-50b5-49b2-ba71-3896c1671ef1"
        },
        "item": {
          "id": "c9d12698-93da-4d8d-8cf0-9737aba5eeb5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4fc0b1d5-5027-4e34-b5c2-10c386723c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c98b83-5243-46ef-a4e0-5134dea2fc0b",
        "cursor": {
          "ref": "f50da06e-a290-4b74-be00-df5fefef1ce6",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1fb96215-dd2a-444c-b4e2-4a4d09ef35f5"
        },
        "item": {
          "id": "e4c98b83-5243-46ef-a4e0-5134dea2fc0b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b4d543ea-66e8-4b19-a8b0-91795e5586d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5d62d01-373e-4afc-afda-67a03ee07283",
        "cursor": {
          "ref": "cbcc5753-f3f4-48e5-8d87-fb27491dd4f8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "200db42e-20f3-4521-a51b-c69b49940c27"
        },
        "item": {
          "id": "b5d62d01-373e-4afc-afda-67a03ee07283",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c1777534-8aad-499d-b553-2d91c911499c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dbd54c-ba0c-42c7-b8d3-acd15fdab449",
        "cursor": {
          "ref": "47def756-c5fd-4b55-a01e-3445a0a2b403",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c221b4a6-0ca0-46d6-9648-d97842287240"
        },
        "item": {
          "id": "d8dbd54c-ba0c-42c7-b8d3-acd15fdab449",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "99e10d3e-90aa-41e2-9da0-ed899f3c622b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6359893-85ae-403b-8b31-712d3898b693",
        "cursor": {
          "ref": "f16209c9-6f84-4a02-bb3f-5dadebcd62bf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "eb42aef2-43a0-4576-88f9-22168bc94fc2"
        },
        "item": {
          "id": "d6359893-85ae-403b-8b31-712d3898b693",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "35305cb7-c8a4-4614-9fe7-ec33ff595d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1797af3c-38ae-4bb4-82b0-06273445d8a2",
        "cursor": {
          "ref": "ff56b403-914b-499e-9818-0a12b9992636",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9b6ed22c-1e59-4ebd-afd5-17cecc32abe8"
        },
        "item": {
          "id": "1797af3c-38ae-4bb4-82b0-06273445d8a2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c17dde1c-4ff9-4aad-8e18-46d22799f47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d0d3ca-d198-4329-b6e8-b7f814421e4a",
        "cursor": {
          "ref": "924b1036-9cbd-4a82-a7d8-1b87b66f9bdc",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "56bfcf92-74a7-474f-a99e-dcda257c5756"
        },
        "item": {
          "id": "38d0d3ca-d198-4329-b6e8-b7f814421e4a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e0a27887-d9db-4874-8749-35591930dfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ab6f74-42a7-45b2-bc3c-93e18ca562d2",
        "cursor": {
          "ref": "6e9cbfc7-1416-434a-ac8b-58c0e0edb4b9",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "cf27a68e-1d5d-412d-8442-806e066f1037"
        },
        "item": {
          "id": "88ab6f74-42a7-45b2-bc3c-93e18ca562d2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e70eb507-eaeb-4e38-b19c-29e841d99e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6b8298-1246-4562-a6e6-5d10916a3f20",
        "cursor": {
          "ref": "9d85a0fe-9f2b-4387-934c-65580c0938c5",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "51973d35-bccf-4004-b0ff-3e87257c3f35"
        },
        "item": {
          "id": "be6b8298-1246-4562-a6e6-5d10916a3f20",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "828dec26-6f0d-408c-a2d1-a7a8f9cac5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b9c95e-feaa-437f-bfed-04b6cd62b90a",
        "cursor": {
          "ref": "fa424384-b3ab-47bb-a227-e90f69298eb2",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "56c38295-d0f0-4eab-9de6-a4e2b6bcb504"
        },
        "item": {
          "id": "b2b9c95e-feaa-437f-bfed-04b6cd62b90a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8eb3cc4d-494c-4ed4-8904-36002806ba50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9014857e-5a7c-4c72-93f2-788e649b74f0",
        "cursor": {
          "ref": "fe121eda-b88a-4f5b-bc3e-1aafbc4b031f",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "ae624f77-6635-4248-8bb1-43c1f8a1cd1a"
        },
        "item": {
          "id": "9014857e-5a7c-4c72-93f2-788e649b74f0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6410bfe3-e9bd-4cb9-9fc5-899f200a490f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db449766-4215-400d-ad22-b0299d436e3b",
        "cursor": {
          "ref": "e286034f-c9dc-4735-9e63-66d6cd8f263c",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "dd6bd438-e223-4c3e-bd08-e67036dd67ce"
        },
        "item": {
          "id": "db449766-4215-400d-ad22-b0299d436e3b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "62c40dde-fd6f-40ac-9055-b691f4438179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784ceef8-465d-4098-8260-2e23dd32c3ea",
        "cursor": {
          "ref": "bf1f0cfd-90dc-4a56-8445-7115a4bfcf33",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7e5386a2-96de-4f07-943b-ed31e2d682c4"
        },
        "item": {
          "id": "784ceef8-465d-4098-8260-2e23dd32c3ea",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "83e3e36c-372c-46ac-b680-4cd0964b1782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9871ff89-625f-435f-9c40-e9326c9cedf6",
        "cursor": {
          "ref": "51557a70-19f9-4f29-91ec-06e92f05e5ad",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ac92d450-bd1d-481d-b6a4-47916dc868a4"
        },
        "item": {
          "id": "9871ff89-625f-435f-9c40-e9326c9cedf6",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "56ed12c4-24ae-46b2-98f1-711a686bbc0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4a0cd6-33f8-4568-a3e3-42d9858d14fb",
        "cursor": {
          "ref": "d657707d-c095-44be-9a53-c621682ee48d",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "eb84f118-812a-4a45-8007-a5b84fd67a87"
        },
        "item": {
          "id": "8d4a0cd6-33f8-4568-a3e3-42d9858d14fb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "12854fab-cbd6-4a3c-92fe-a8ac88c7639d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd0a880-fd4f-4707-8a25-d6675d743101",
        "cursor": {
          "ref": "3724b398-b4a2-46e0-a181-8db9881cfaca",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b8fbc467-5e43-4e0c-ac35-2a92f5318454"
        },
        "item": {
          "id": "bcd0a880-fd4f-4707-8a25-d6675d743101",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "46eca017-6dc7-4978-8a41-b5429398fa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aa4497-e067-43ed-a660-8e0c5fa0f695",
        "cursor": {
          "ref": "4552e591-b4be-475f-a71d-c1eaf78652b5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ba9f7c81-db48-418e-9cd1-5457fca8c5f5"
        },
        "item": {
          "id": "39aa4497-e067-43ed-a660-8e0c5fa0f695",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "789919ba-319d-436d-9f32-49fa51791961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac943136-bd6d-4fb9-af6f-e6dc8825ffdd",
        "cursor": {
          "ref": "b53b5e59-dbb2-4c5f-b308-50c019a038ab",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6c1846a0-ccf6-49ff-832c-a5e8b7bfe394"
        },
        "item": {
          "id": "ac943136-bd6d-4fb9-af6f-e6dc8825ffdd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "aed6af97-5de9-4e21-9d28-0e8167b11bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551aa73d-3571-42db-977c-b7914749447a",
        "cursor": {
          "ref": "44db9327-4715-4f33-84ec-092e6866f24e",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "e405dd8c-37b6-40e0-bae2-3e841e147e1a"
        },
        "item": {
          "id": "551aa73d-3571-42db-977c-b7914749447a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "734c158a-9dbb-43fe-944f-fd20b0ebee87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b9f4ba-26e2-463a-b95c-801a047022db",
        "cursor": {
          "ref": "3008e3f9-e985-4e70-a333-bb2d66839aa3",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ab2cddbf-4b85-4d3a-9af9-65db5ae96308"
        },
        "item": {
          "id": "25b9f4ba-26e2-463a-b95c-801a047022db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5de9c797-fc98-46d4-8352-d6541e589eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc2d1b1-4b63-4cf8-a252-b23561f4e984",
        "cursor": {
          "ref": "bb557e5b-783b-4298-b32f-7fcb71f84b4d",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "a1bc61ea-e940-48a9-a99a-e1207165f587"
        },
        "item": {
          "id": "8dc2d1b1-4b63-4cf8-a252-b23561f4e984",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "49c38ca9-c14d-4ea8-a76c-300b07c6fe1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215fb73a-e78f-43d7-bf3c-0f2518c2ed84",
        "cursor": {
          "ref": "d041a90e-bef8-4305-af1d-eb665a71d0a0",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8b766beb-23e5-4239-b6bd-71dc519079a9"
        },
        "item": {
          "id": "215fb73a-e78f-43d7-bf3c-0f2518c2ed84",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1e8c68b8-bf02-41ce-8b72-70d74f928d99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5e109d-919f-44ea-9578-3fd0510062c9",
        "cursor": {
          "ref": "c23dd964-9e5a-46a0-b92b-b5f4f1f4ca00",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "c58d7501-dd7e-43f4-a48e-b2a8fe0d8537"
        },
        "item": {
          "id": "5b5e109d-919f-44ea-9578-3fd0510062c9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "166ff9bc-26cc-470e-bd1d-b432fb158e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913076c5-213a-4053-a82c-12107ec530ae",
        "cursor": {
          "ref": "18d9832f-7658-4d39-9326-678686654240",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "62746625-9fd5-4a80-952a-332fecafa96f"
        },
        "item": {
          "id": "913076c5-213a-4053-a82c-12107ec530ae",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bb8e5e08-493c-4d52-94d1-c75952b9f766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3972bd3-3751-4ef9-8ec5-395d1f176099",
        "cursor": {
          "ref": "8ec1cfa3-bef5-4aaf-9c92-f5581d13ecd6",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b481fd2b-0e72-4bd4-8726-6010fa61774e"
        },
        "item": {
          "id": "e3972bd3-3751-4ef9-8ec5-395d1f176099",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4bc86c2b-1e16-4d76-993f-15338fb9fc0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d99450-b7f3-46e1-a78f-7557734b7e1e",
        "cursor": {
          "ref": "353c4151-4e0f-4769-bec5-0bc8091f16d9",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "adcec04e-56d5-45ec-a65f-06200630de2c"
        },
        "item": {
          "id": "e8d99450-b7f3-46e1-a78f-7557734b7e1e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1a5213b9-57b9-4db6-ac24-fa744ef0e8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5696d001-99c2-4b92-8ac4-11d3bdb48a79",
        "cursor": {
          "ref": "7d20fea3-439f-4f82-97ca-7922dd3417e0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "93977d8d-977a-4029-8456-a44adec96629"
        },
        "item": {
          "id": "5696d001-99c2-4b92-8ac4-11d3bdb48a79",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6ad96330-6fc9-4073-950e-537e97d84789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4805ab60-a3a5-4920-96e8-7cf7b7288597",
        "cursor": {
          "ref": "0bb1e399-ee54-42c7-9bc7-7b092900cd63",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f5b499aa-7036-4295-ae7c-25b8fb46ef48"
        },
        "item": {
          "id": "4805ab60-a3a5-4920-96e8-7cf7b7288597",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "34536598-422b-4d80-905e-f5f0d77ffa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9315a359-274c-478b-9f36-6d23eb6c346e",
        "cursor": {
          "ref": "9b38d9b1-2c47-44a9-b86d-9ffee6bba81b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f7895198-737c-4718-b316-64e9ccaf60c7"
        },
        "item": {
          "id": "9315a359-274c-478b-9f36-6d23eb6c346e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "800756c2-3a76-4aa4-b06e-8a9d6cffcf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561884e3-0828-4880-abb4-a483fe0045b3",
        "cursor": {
          "ref": "a6289de8-7e61-4029-8110-1d1c096a7aeb",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "edabba4c-97b6-44af-925d-9c985ce3f363"
        },
        "item": {
          "id": "561884e3-0828-4880-abb4-a483fe0045b3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fbdb9494-1a53-4de2-845f-5b9cadf3e097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d8e3f8-e658-4a32-94ce-ceb2f2551b56",
        "cursor": {
          "ref": "3a3f8b5f-698a-49e3-86ec-517b20be58e6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "934150df-4ef1-4b0f-a26f-45d9d8f1ebd2"
        },
        "item": {
          "id": "c0d8e3f8-e658-4a32-94ce-ceb2f2551b56",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5e798bc9-dde9-4993-857a-aca0ad434ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131f3e33-7af1-452f-ab74-32fa6ded01e6",
        "cursor": {
          "ref": "0ccc3568-c530-4615-bc7d-b39ae8167856",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7b06d73e-9096-4ce5-a126-ccfcc933b695"
        },
        "item": {
          "id": "131f3e33-7af1-452f-ab74-32fa6ded01e6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "33e0f39e-8762-4868-b2cd-c76112b92b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f9b1231-f8e3-46ff-bc23-fa5827d1e4ca",
        "cursor": {
          "ref": "65abfcc3-56eb-4057-b799-93c464826b0f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f613e8fd-c83a-4f96-805f-abaaa9743b81"
        },
        "item": {
          "id": "7f9b1231-f8e3-46ff-bc23-fa5827d1e4ca",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9056dca4-5dc1-40b7-bc8b-b23c79f2bb0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867d8853-1521-4185-93e8-52d4f883995d",
        "cursor": {
          "ref": "fddcb30b-45d1-4aa3-be2b-b0d5814ccc44",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9a387bc5-97a6-485f-8d90-0a4fffd4a84f"
        },
        "item": {
          "id": "867d8853-1521-4185-93e8-52d4f883995d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d78ffa78-668c-4e73-a63e-1efc4063b77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89dd73b-8888-4022-b73e-983abd000506",
        "cursor": {
          "ref": "aac5fb2b-58fe-4456-af46-15ce4f8254b0",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "eeac0814-c865-4854-8b9c-a9bb96d2dfae"
        },
        "item": {
          "id": "f89dd73b-8888-4022-b73e-983abd000506",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "daafcb2b-bd80-48a8-a7f5-ef4280d30163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259129ac-d832-4ed3-a100-41d7dc2670b3",
        "cursor": {
          "ref": "32c976c7-ed33-4a98-8294-ec125a245600",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dc69a964-8000-4d4f-912c-9d177e3e65b7"
        },
        "item": {
          "id": "259129ac-d832-4ed3-a100-41d7dc2670b3",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "41b2f6c5-22cc-4cd5-87f4-89768f88c78d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb50ea9-8f02-40a5-8515-d0704561354a",
        "cursor": {
          "ref": "06d62e57-bd8a-4d4c-b428-f539274cc889",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "983c3ca6-0ca7-473e-ad33-b9f0fbc2a062"
        },
        "item": {
          "id": "8eb50ea9-8f02-40a5-8515-d0704561354a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e927421c-9a29-467c-a54d-ba91095bfc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c31f60b-49af-4e67-a20c-919249f85869",
        "cursor": {
          "ref": "3f9f72ab-f417-4fc1-8afd-298a24aa0bdd",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "991e24bd-0619-43a1-86b6-97d94a52b19a"
        },
        "item": {
          "id": "3c31f60b-49af-4e67-a20c-919249f85869",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a21d95df-bc74-439a-ad11-7e5b05c6f28e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60b58b9-fbbf-4bc2-93ff-c8031523fe1a",
        "cursor": {
          "ref": "9379c408-d615-4dd3-b222-b10d760f1061",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "cb6f536d-2c2f-474e-bbd5-d88d5d01b9f7"
        },
        "item": {
          "id": "a60b58b9-fbbf-4bc2-93ff-c8031523fe1a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2a488901-d9f7-4162-824e-61f12955c12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a91aa10a-8fb9-4e07-836a-abeaa56150f1",
        "cursor": {
          "ref": "fbe8636e-9553-4e11-a2e7-49ef8fe5a201",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6fc59616-687c-4edf-9ef3-87435c90f94f"
        },
        "item": {
          "id": "a91aa10a-8fb9-4e07-836a-abeaa56150f1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2fa0ab7e-82dd-40dc-b114-2cf528e797c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb21471c-3e3d-4b52-a8d2-723742d2b3be",
        "cursor": {
          "ref": "39bc0952-94fa-4ae0-ac19-9500be5b499a",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ccb06c1d-0e9a-4ac6-807a-f995cff4553c"
        },
        "item": {
          "id": "fb21471c-3e3d-4b52-a8d2-723742d2b3be",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "819a9f77-8d78-480e-a2df-7e74d659f59a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524fd43c-e361-4e03-b50b-dd60dd0a5499",
        "cursor": {
          "ref": "c45aade7-5df3-4ca1-baf2-9ec34c58796e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0866257a-c99c-4b61-b98e-f87588107ee8"
        },
        "item": {
          "id": "524fd43c-e361-4e03-b50b-dd60dd0a5499",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c6c5eecf-5c21-4114-820a-25810a73489f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30017bf-c3bf-4008-a4df-88d6e1d2d177",
        "cursor": {
          "ref": "85447d81-6397-4036-8345-09b90002d1a9",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "da95183f-29b6-4d62-8797-df555a329a6b"
        },
        "item": {
          "id": "a30017bf-c3bf-4008-a4df-88d6e1d2d177",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5aca4a7d-ba58-4925-893a-e7fc0ca66538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f42fe4-e870-4591-9092-84cb7293d8d6",
        "cursor": {
          "ref": "b17bf9fb-41c8-496d-a61d-3f4e0641111f",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "44db5da3-f391-40c0-883d-5fdc30e59567"
        },
        "item": {
          "id": "e7f42fe4-e870-4591-9092-84cb7293d8d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a424c927-b5f9-478b-84dc-7f8f751bf7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9266ce-d8fe-4cba-9156-28c1a3d33101",
        "cursor": {
          "ref": "f50ce255-eacf-4f23-a9cf-84eaad7e4979",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1a28b00f-06c3-4b23-8f5e-df3b5f5c90b2"
        },
        "item": {
          "id": "4c9266ce-d8fe-4cba-9156-28c1a3d33101",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a3c85444-adf8-4949-8163-f5442cac7eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b18a883-7469-4880-883a-1c7183de811d",
        "cursor": {
          "ref": "41523c2c-4b48-4587-b3ce-d936acdba564",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "630eb817-1848-423e-9c37-d21c316c813f"
        },
        "item": {
          "id": "3b18a883-7469-4880-883a-1c7183de811d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7182c422-fbfc-49ec-8109-db00a591aba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4085f1a9-b606-4222-9738-6e2219615977",
        "cursor": {
          "ref": "82fe110f-5bb0-422e-8650-55e71c212edc",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "98836eed-9ca5-4770-be9d-753040bd8476"
        },
        "item": {
          "id": "4085f1a9-b606-4222-9738-6e2219615977",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c7e8e197-3d4e-48ff-9ef7-1f738c09e0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570cce31-7ecb-4fbb-aa2f-53f271bb2d92",
        "cursor": {
          "ref": "a0a66318-c590-4c1d-96fa-5b6513bd8b5e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4ba0eb66-ae5c-4bef-a38e-bc0ab889fc5f"
        },
        "item": {
          "id": "570cce31-7ecb-4fbb-aa2f-53f271bb2d92",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "1e3b8056-f99c-4463-abca-d9af00a73c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bca95d-7e85-4e5b-af7f-d57c535a5595",
        "cursor": {
          "ref": "7329f151-2c67-460e-bb09-619105f4dcfd",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "e0bd8680-4dfc-4eff-ab4f-097e87e031e6"
        },
        "item": {
          "id": "57bca95d-7e85-4e5b-af7f-d57c535a5595",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "4ec585cb-2982-4b8d-977f-0258238fc852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6aa8ba-161e-4596-a553-332b29be804f",
        "cursor": {
          "ref": "2b11e302-62ce-4f30-80b7-25ab2879978f",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "424521ae-d3d7-484b-9ef6-1a1e7265a28c"
        },
        "item": {
          "id": "8e6aa8ba-161e-4596-a553-332b29be804f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c4b82b7b-303c-4c1e-8405-817c0c58b07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbf2b51c-b89a-4482-92cb-b3bfda7d3d34",
        "cursor": {
          "ref": "55d3ed9f-d201-404e-8c10-8755a68446c6",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d626f9c0-2192-4999-82b0-7e2fccbeb33c"
        },
        "item": {
          "id": "dbf2b51c-b89a-4482-92cb-b3bfda7d3d34",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "73d89f16-8ff3-4201-af12-bd6cf990866f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c79363f-8dcf-456b-a8ab-147ba5042759",
        "cursor": {
          "ref": "71efdb81-2fcb-448d-a870-d1f89c9fcd4d",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "cb111b7a-2414-4f6a-b57a-520959df7d2c"
        },
        "item": {
          "id": "3c79363f-8dcf-456b-a8ab-147ba5042759",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c2179e50-53ef-4753-b6a6-f53e3037d3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65091ceb-0f99-4471-8b8c-e18be3aa2abd",
        "cursor": {
          "ref": "0629a65a-80ed-4e32-af8f-288b9eb29074",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6aa3a83e-c62c-4e49-aebd-3e5f4437f648"
        },
        "item": {
          "id": "65091ceb-0f99-4471-8b8c-e18be3aa2abd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0a16c835-dd43-47e6-8bbf-d06f248b1449",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f622301-3b22-4421-a5a5-211c1a3b67ee",
        "cursor": {
          "ref": "baba3feb-c5cf-4b5e-8f14-eb3719c5f1c3",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "10eaeb98-7298-42a2-a71c-87824609cd81"
        },
        "item": {
          "id": "1f622301-3b22-4421-a5a5-211c1a3b67ee",
          "name": "credentials_issue"
        },
        "response": {
          "id": "15bf12d8-0a6c-4839-9c35-f6f2eee76704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "cf1136f2-f7bc-4695-8788-0910be0f2ffe",
        "cursor": {
          "ref": "fa03a7b7-5c34-450d-97db-0676f356159c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c46b3011-499e-4d81-9aca-ad1d1c65eba7"
        },
        "item": {
          "id": "cf1136f2-f7bc-4695-8788-0910be0f2ffe",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ff05ae99-74b0-4bb3-b82a-a84218fd8538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "1e76a213-1c16-4573-960a-0b21ff36849f",
        "cursor": {
          "ref": "fed9b481-0e8b-44c1-8dee-3466a257a6c9",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ad5a2db0-b444-43eb-af68-ac50b555be01"
        },
        "item": {
          "id": "1e76a213-1c16-4573-960a-0b21ff36849f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "61b6c242-1916-4d43-b8be-309aa9d735f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d464ccd8-144e-475b-8640-9994f8db8328",
        "cursor": {
          "ref": "b857ba88-9a36-4a7c-afb6-4d32122f9245",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0d8f65ce-94c6-4d71-9c5d-ce1f5e8226e7"
        },
        "item": {
          "id": "d464ccd8-144e-475b-8640-9994f8db8328",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "9018c139-0459-46f5-bcd5-448032a11684",
          "status": "Created",
          "code": 201,
          "responseTime": 6790,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc63414-28f4-4b85-9c0f-b63e49c9585f",
        "cursor": {
          "ref": "8a485767-6165-4153-b63e-1679a80845a3",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "83b4ef7b-e7dd-4a4b-a61c-e39c89860a0f"
        },
        "item": {
          "id": "1cc63414-28f4-4b85-9c0f-b63e49c9585f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "35f66227-776f-40d1-8bfe-ec10ad911df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "792715f5-181c-4d42-8688-b84c9f64f1c7",
        "cursor": {
          "ref": "84e459c7-e8cc-497d-8d6e-db95fd557bac",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "d25088ce-2f6c-42bf-a843-a59901abcd59"
        },
        "item": {
          "id": "792715f5-181c-4d42-8688-b84c9f64f1c7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d6b86754-271d-450e-b9a3-943e39deb587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "b42b05da-6047-473a-8d42-74a4c1446ad6",
        "cursor": {
          "ref": "aebf2d3b-12c5-4d64-b107-00d4ab2a5f0a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9205833f-c377-4cc3-95c9-7a9ca130d788"
        },
        "item": {
          "id": "b42b05da-6047-473a-8d42-74a4c1446ad6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8b3af44c-5d4c-4750-b149-cec14f4a4d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1253ac8-a249-4f19-8d8f-69c3e365fc53",
        "cursor": {
          "ref": "f731ccdd-f0e9-4472-809f-33ebf549a5fb",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1367d71b-371e-4187-a7a3-101e30e9a3e0"
        },
        "item": {
          "id": "d1253ac8-a249-4f19-8d8f-69c3e365fc53",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "05ec270e-49bf-40ce-aa79-fdf0828fd977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc11376-48df-4bc4-a9b1-de8b9d612c2f",
        "cursor": {
          "ref": "8dc2e8f1-a70f-4d78-8371-89b90854db89",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec227f30-2237-4a8a-b6e8-7d2e74126659"
        },
        "item": {
          "id": "ebc11376-48df-4bc4-a9b1-de8b9d612c2f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7916a156-553c-4981-ba9c-042e64efaad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e28df35-7cc3-4e74-a5d6-9634bc6429a2",
        "cursor": {
          "ref": "b45784e3-9439-4503-9dc0-5a3b264e1098",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "993a5e86-d3e5-4c44-8337-08fd6b1457de"
        },
        "item": {
          "id": "3e28df35-7cc3-4e74-a5d6-9634bc6429a2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc030142-9a9a-4209-9831-757029df8c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7501c0-669d-4ce0-85ce-47c4ab9938b8",
        "cursor": {
          "ref": "dd10c236-e07b-40fc-bc64-3794ddd8281d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "adbb71bb-319c-4603-a4be-bcac99a7e1bf"
        },
        "item": {
          "id": "ad7501c0-669d-4ce0-85ce-47c4ab9938b8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3e374ba6-75c1-46b6-a9ed-cfabdbbb5be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bb8de4-603d-476d-9b40-e586cc2db3d1",
        "cursor": {
          "ref": "b2b7028d-9b2e-4eb4-9749-66d59edb2258",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "59aa798b-5f4a-4ee4-a84e-092aabfde9e1"
        },
        "item": {
          "id": "35bb8de4-603d-476d-9b40-e586cc2db3d1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b07f205d-2d02-43f4-9f03-feae7576099d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cae4c8-ebae-4b5b-8dd7-3377435516a3",
        "cursor": {
          "ref": "b60c07db-cf3d-406e-b264-a749405f447d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8fe997d8-5d49-4c77-b0e7-73f6ac9ed966"
        },
        "item": {
          "id": "02cae4c8-ebae-4b5b-8dd7-3377435516a3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a69ccc5c-0f52-46a5-85d8-d5336f684d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fbbaeb-a7ef-40ab-afbd-df4629ae4254",
        "cursor": {
          "ref": "899cb72c-f8d9-4b82-8643-737a8ebdcfe0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fc36fb97-4c37-4a69-888d-b691a8a7714d"
        },
        "item": {
          "id": "77fbbaeb-a7ef-40ab-afbd-df4629ae4254",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5d2c68ff-7e25-4c9d-a79f-fe6052a8be48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58fdebb-296a-4b87-839c-29d650699442",
        "cursor": {
          "ref": "6b1027a6-28e9-4b19-a35b-ef4eb96c1b9d",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bc9b7dd0-9e91-4f6c-a2ce-8bb5fea4506a"
        },
        "item": {
          "id": "f58fdebb-296a-4b87-839c-29d650699442",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ce29a420-1e96-42d5-86e2-7e5bc7676c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c057f37-e5c0-4425-9af4-d354b5743da2",
        "cursor": {
          "ref": "fcfe73de-9ff8-462f-a3ac-23a368625bf3",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bba9e723-7eb2-4aa6-91c2-8c0894ac00c8"
        },
        "item": {
          "id": "8c057f37-e5c0-4425-9af4-d354b5743da2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "0bbd1a98-13bb-4068-b77a-6acee954d548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c42adaf-8502-467c-ab91-a4d674ed409a",
        "cursor": {
          "ref": "3e553025-c8d6-432a-a431-7068d2a81b19",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7caeff89-e1c9-4c0f-b78e-d4499644de40"
        },
        "item": {
          "id": "7c42adaf-8502-467c-ab91-a4d674ed409a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d2643fb1-1ec7-455b-a8fd-c28d9f953f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cdb924-ad67-42f6-86a2-ca6371db9763",
        "cursor": {
          "ref": "3ab01362-8a23-470b-972d-e81cccf625c0",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "871046e4-5394-4306-88bb-776fe77b3f62"
        },
        "item": {
          "id": "c4cdb924-ad67-42f6-86a2-ca6371db9763",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6d99733f-ddd6-45e6-8100-0c0b73ccfc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a5fc1e-7455-439e-9be0-f5c50044cb03",
        "cursor": {
          "ref": "12e89ef2-6fb0-4e5d-91e0-8178e753332b",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c1042457-1c50-4e68-a185-1b4ad75988d2"
        },
        "item": {
          "id": "82a5fc1e-7455-439e-9be0-f5c50044cb03",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c0a5346e-55d4-4c63-a669-72c2c352969b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e4de8a-cd06-47e1-b003-106fd5d9c7b4",
        "cursor": {
          "ref": "13457acd-0492-4db4-9985-07196475dfd6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e15630c2-ddd7-4478-a6cb-e17eed2d86f5"
        },
        "item": {
          "id": "b8e4de8a-cd06-47e1-b003-106fd5d9c7b4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6c406d30-00d9-4190-9d37-bc1de0e66da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd675f3-903e-446a-8e6a-bb37345a3bb5",
        "cursor": {
          "ref": "3382daeb-0622-4525-b766-0b4768145900",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "29980b3b-4268-4d5e-a673-06beb3448165"
        },
        "item": {
          "id": "0dd675f3-903e-446a-8e6a-bb37345a3bb5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "017374e1-ab98-4489-a06e-4d9593dbdd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384dfe2c-f420-48f0-9db0-e9a38096476b",
        "cursor": {
          "ref": "0dc1f0f2-56c6-4709-933f-efd6479d94dd",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a42e088a-2e91-49e7-a06c-3ebe3e794f44"
        },
        "item": {
          "id": "384dfe2c-f420-48f0-9db0-e9a38096476b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a828428a-9605-4372-8beb-999a230ecbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7e800e-e68a-4328-8b2e-e536c2a693ee",
        "cursor": {
          "ref": "f442085d-3bf4-4503-ad03-256cfabc6a46",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8eb0b216-6514-4db6-95cf-1df18a6216ee"
        },
        "item": {
          "id": "4f7e800e-e68a-4328-8b2e-e536c2a693ee",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4b179a98-89e8-4fb0-91ad-ae6fd5f46e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2ae3b7-3833-4121-b18d-318567792811",
        "cursor": {
          "ref": "c373b5cc-13f4-42ed-81d9-4d909d539f77",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3d1183b1-8142-4478-9948-dee79ae12fe1"
        },
        "item": {
          "id": "3f2ae3b7-3833-4121-b18d-318567792811",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8f8c8057-1765-4861-9ce7-11f163efb4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e5eb64-7b4c-4808-9238-47e72b4aaf2b",
        "cursor": {
          "ref": "36113331-3ead-4235-aca0-a686e35d8623",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8ceadb71-9058-4f31-b6df-843f1d7df269"
        },
        "item": {
          "id": "d7e5eb64-7b4c-4808-9238-47e72b4aaf2b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "79a3728b-8423-4db8-ab49-ffd80c55413e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb7716a-b4d5-4a1e-a307-74fe5e3a1b71",
        "cursor": {
          "ref": "69c07be9-994f-4cd5-82e0-ecfad87b9c12",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "50d16e7e-6c2c-4568-b374-f5ab2d6368e1"
        },
        "item": {
          "id": "cdb7716a-b4d5-4a1e-a307-74fe5e3a1b71",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "869edc1c-9f09-4f11-bc3b-ef26deb6962a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c758d0-4640-4993-9455-24d9e80d1dc6",
        "cursor": {
          "ref": "7b647a5d-a59f-4dbe-b3b2-e1ebcaec4dfe",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "08e8cd97-f14a-4dfd-9a84-2d39004d02a8"
        },
        "item": {
          "id": "c2c758d0-4640-4993-9455-24d9e80d1dc6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dc87ae5c-b1ff-4951-ae2c-f14a8d45a9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d9f421-4813-4d08-988b-1d31ed7ebbfc",
        "cursor": {
          "ref": "62346f15-5759-45d4-bc80-67b43511bf8f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "868085de-3bc2-432e-98aa-37dfe26c84ef"
        },
        "item": {
          "id": "48d9f421-4813-4d08-988b-1d31ed7ebbfc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "92a5058d-0ccb-4c1b-b225-f2fb82697724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a176cd29-8503-4d46-b06a-c2ceafc8bca3",
        "cursor": {
          "ref": "d034565d-47ec-4192-a44e-891801c45099",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2f4daadc-f2fd-4d31-b016-4810f76ea97d"
        },
        "item": {
          "id": "a176cd29-8503-4d46-b06a-c2ceafc8bca3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8355a89e-f712-40f3-aa60-78b01df3456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68895f4a-9fd1-4bbd-9eab-3f07aca1a56d",
        "cursor": {
          "ref": "06e0de11-2ea2-42d3-9eda-f2f49a8db20f",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bbdd4332-6356-4a41-9378-a6667d85dc7b"
        },
        "item": {
          "id": "68895f4a-9fd1-4bbd-9eab-3f07aca1a56d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0bde03a1-65b4-41ab-bdbb-a698e9f15438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b553e7e-a8b5-491d-b6d2-123875f8f3e4",
        "cursor": {
          "ref": "a93a3bfa-067a-4953-9751-f871c41bcd3c",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8ba1a84c-99a4-4a6c-8ac8-63979e61b05a"
        },
        "item": {
          "id": "5b553e7e-a8b5-491d-b6d2-123875f8f3e4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "84ab359b-9771-40c7-84a6-78e635f23d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9925af19-f754-4cb5-85ff-a58832f7b25b",
        "cursor": {
          "ref": "377e6fc5-9602-4567-9c7b-b9d986c6aa7d",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ff13eb23-3b28-4595-a280-3003dfd147a7"
        },
        "item": {
          "id": "9925af19-f754-4cb5-85ff-a58832f7b25b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "48b4168b-e95c-46c8-a6ad-8ff11f01ff20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87b72a2f-0fdd-40bd-b4e8-7e8082335c0c",
        "cursor": {
          "ref": "ffb1c8c2-5f55-4db3-bd09-9cf34856386e",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d52cf137-187d-4c39-aa74-583ada091ae1"
        },
        "item": {
          "id": "87b72a2f-0fdd-40bd-b4e8-7e8082335c0c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d017178e-673a-474b-8ad7-f7f7ac455013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7af9fb-55bb-4cc6-8117-78af145459ff",
        "cursor": {
          "ref": "626115b3-deba-4983-8e52-70be84e2a72f",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f7f20603-ddca-4bee-a941-bb6e61a3bddc"
        },
        "item": {
          "id": "2f7af9fb-55bb-4cc6-8117-78af145459ff",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "cb6c22ce-0f9e-4ffa-8d18-93446e434f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92af9863-2494-49c3-8767-1e2c2931cc51",
        "cursor": {
          "ref": "c82ff5c6-e8fd-4aca-94a0-d99841bb4d48",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a4ba3eeb-b424-4ff0-8bc8-9e8709323c3b"
        },
        "item": {
          "id": "92af9863-2494-49c3-8767-1e2c2931cc51",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "da9a6d6c-1230-4ad0-a928-114fe2707cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b7ea8c-2fe3-4610-b581-25bca994750f",
        "cursor": {
          "ref": "4e618f4f-ba0a-4e39-90f4-db07cd432174",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9d938805-3024-40b1-8966-bdbfb41df0f5"
        },
        "item": {
          "id": "78b7ea8c-2fe3-4610-b581-25bca994750f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "23d38456-e82a-4d47-991d-1450b484315f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399971e7-49c9-493c-b922-9bead7972596",
        "cursor": {
          "ref": "0472021b-2651-40db-9707-e9ee73a3121f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "af2b516e-aed4-4e16-9a19-9687c076406e"
        },
        "item": {
          "id": "399971e7-49c9-493c-b922-9bead7972596",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ba43c23e-4938-462f-b742-a4bc031e5b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe4daf0-aeea-4958-bdc9-f298cff5030d",
        "cursor": {
          "ref": "f0ea47b9-f5eb-4337-a564-785b2c933f50",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a85e5d5f-90d9-4e0f-b6e9-9274cd6584a7"
        },
        "item": {
          "id": "dfe4daf0-aeea-4958-bdc9-f298cff5030d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "62294327-47ed-4ad1-90a0-50d46c16ebd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4633cf48-2ba6-4898-8a69-7ef846d0e147",
        "cursor": {
          "ref": "698441ba-7c3d-48dd-a4f7-31a53e6b7aee",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "27755a03-4e4e-499e-8ec2-1d42c3b2d43d"
        },
        "item": {
          "id": "4633cf48-2ba6-4898-8a69-7ef846d0e147",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "db144a59-015f-4269-9457-fd10741616ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "806a969b-83fc-4cb8-b0c8-1ba944813962",
        "cursor": {
          "ref": "bc68cd3f-4954-43ba-9dd5-3d965b199d4e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "771e65b0-adf7-431a-bba6-d255bc4dbfcf"
        },
        "item": {
          "id": "806a969b-83fc-4cb8-b0c8-1ba944813962",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ea83323a-9755-449d-885e-17f1a0c1007f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1cebe3-d5c8-4f49-b9b0-6c8863c5e5fb",
        "cursor": {
          "ref": "6e88d714-31c0-4a2d-bbef-8d75c45d1df7",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6be5b135-e956-4658-9c1b-25663cb0e06e"
        },
        "item": {
          "id": "3c1cebe3-d5c8-4f49-b9b0-6c8863c5e5fb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ba33c8dc-7c72-4042-aa95-01545a90eebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c2f823-160f-420e-94d9-6a8a2be2f8ae",
        "cursor": {
          "ref": "2d93ec83-a4ee-44bd-8357-bfb14b4f2cc4",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "214c564b-c206-4a84-a01b-7a3f0b4afc65"
        },
        "item": {
          "id": "e3c2f823-160f-420e-94d9-6a8a2be2f8ae",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6ec6c938-f08d-42d4-b04e-afabc04a0d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd3ce1e-c644-4a71-957d-d3a66a936126",
        "cursor": {
          "ref": "e80b2c17-6d43-4261-b70d-a94e33d6138d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1604140c-ee5d-4ac0-9123-4741d6b41666"
        },
        "item": {
          "id": "7fd3ce1e-c644-4a71-957d-d3a66a936126",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3597fde-34f9-4f8c-9706-a2b337a5a100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b39009-e674-4f78-b2ff-a6bd3308507d",
        "cursor": {
          "ref": "f39766e3-8f2e-4608-a6df-b9b2f3e026b5",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "72ea7e3c-9b70-4297-931b-1b8349fecabd"
        },
        "item": {
          "id": "27b39009-e674-4f78-b2ff-a6bd3308507d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68a349c7-5e02-4e8c-933b-186b423df18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1da1536-96b3-4800-847c-aa38a767bf73",
        "cursor": {
          "ref": "08d1826e-f058-4756-a0e7-664719447a8c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7c74cc7c-2b10-4abb-9b69-f0d2c27506dd"
        },
        "item": {
          "id": "d1da1536-96b3-4800-847c-aa38a767bf73",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "429b085b-fdff-4432-a029-b79f346dcf80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4b0dc2-3002-41ae-bc74-bafa4a13b93d",
        "cursor": {
          "ref": "0ab80387-941c-456c-ba36-7ad95560038b",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a19244e0-a89a-4579-bef1-c665dd17a036"
        },
        "item": {
          "id": "4d4b0dc2-3002-41ae-bc74-bafa4a13b93d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6b4351bd-ae68-42cc-9fec-9bdc1c80f3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ba067d8-468a-40a5-bad8-211efdfab995",
        "cursor": {
          "ref": "1c09d148-4460-415d-adff-0ca85c6f19b7",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f98283bc-d050-4a72-9771-0119c30806ab"
        },
        "item": {
          "id": "1ba067d8-468a-40a5-bad8-211efdfab995",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "12aee27c-0048-42cf-b8c4-5e49015220f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7a9379-9bad-4436-982d-fea454b8d2c5",
        "cursor": {
          "ref": "ab569b47-e150-4677-b06b-7125f1c3451e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "de693ca5-882b-4b87-97a0-c0275620bd74"
        },
        "item": {
          "id": "dd7a9379-9bad-4436-982d-fea454b8d2c5",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2ac43a5a-2db1-47d0-a597-99c186d8d0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71cda44-dea8-47ca-9cea-d7d193f88cc0",
        "cursor": {
          "ref": "4b9d74c2-46a0-42b6-b684-734b32af460d",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6576fb5e-c0be-4af6-9569-2a54f00e29aa"
        },
        "item": {
          "id": "e71cda44-dea8-47ca-9cea-d7d193f88cc0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "28e2aa30-9b29-40db-b212-9bc71f966876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a36bad-830a-4520-8097-f95ef00d4e17",
        "cursor": {
          "ref": "0906bc34-7370-4c8d-9649-c1a8791cd943",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c3c6fcc2-7faf-4b4b-91a8-1130e4b88eba"
        },
        "item": {
          "id": "e7a36bad-830a-4520-8097-f95ef00d4e17",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "72fa6234-b6a5-46b2-80fe-d6878f5e42a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441d733e-26f1-4054-8ab5-d6379dc5d556",
        "cursor": {
          "ref": "af9f709e-9bb3-4820-ab67-96331ce3a64e",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a8f2f3a8-1b5d-4476-9346-8e54fa03aed3"
        },
        "item": {
          "id": "441d733e-26f1-4054-8ab5-d6379dc5d556",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "00d170ed-09c8-40a1-b8a5-26f5ab47c317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7501554e-36bb-4c8b-9ddd-ac4ba636b726",
        "cursor": {
          "ref": "774c4eae-f8e4-4bb3-bf6b-5e5cba624fc5",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4d8c21f4-9b37-4a59-bb93-58051c9fe2a6"
        },
        "item": {
          "id": "7501554e-36bb-4c8b-9ddd-ac4ba636b726",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "22d2f1b4-803c-4450-9495-9b7073d843ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3fbc64-c21b-457a-984a-3fdd768b2aab",
        "cursor": {
          "ref": "3d4787aa-3f50-46f2-9540-987dfd67a925",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "dcc575c4-21fc-4669-83b3-58e250a3b8e4"
        },
        "item": {
          "id": "6e3fbc64-c21b-457a-984a-3fdd768b2aab",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "1de75487-1d95-4dff-add0-0bcf8e89898b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42b95ae-dc55-4008-b424-74f6dae5124b",
        "cursor": {
          "ref": "62d249f1-a627-4371-bdb2-89cd251f891e",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "8476bf78-0861-440f-acfb-0d32ece3069c"
        },
        "item": {
          "id": "d42b95ae-dc55-4008-b424-74f6dae5124b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "75b94ffe-52f4-4224-8cad-6b60a9b8a840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7be0170-374f-4981-ac51-ab19c0386270",
        "cursor": {
          "ref": "51c7a014-b76b-494d-9d3d-c53b11267216",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "e67c480e-3494-4b7c-8e54-12cfde04cb9a"
        },
        "item": {
          "id": "b7be0170-374f-4981-ac51-ab19c0386270",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9bb03bb5-7a90-4265-b594-07d086170099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c439fded-5d04-4715-9be1-4d9ebdbb5873",
        "cursor": {
          "ref": "832c007b-09e0-4a93-8f81-8fec62c3086d",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d71e083a-1be2-4930-b292-1834254ce621"
        },
        "item": {
          "id": "c439fded-5d04-4715-9be1-4d9ebdbb5873",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "73d01b33-1bfb-49b1-9270-e4407f9e96bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433e2cac-f4be-4001-944e-c1faedceb457",
        "cursor": {
          "ref": "df82c080-bc91-4810-b4a5-b510c47c89b5",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6c475903-836d-47a8-a9aa-07ff09b06e9d"
        },
        "item": {
          "id": "433e2cac-f4be-4001-944e-c1faedceb457",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "338f2a39-2cf3-4bcf-a62d-7473bebac7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f686315c-5206-4b05-89e6-44ee18419885",
        "cursor": {
          "ref": "3b04df6a-a9f8-42a6-91b4-1ceb908b6f17",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2eb84ebc-89c2-465a-a9ff-76dd31aea59c"
        },
        "item": {
          "id": "f686315c-5206-4b05-89e6-44ee18419885",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9b15d133-791b-4a35-b6bc-4ab9d059e6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551ef6fe-f6e2-4172-a483-40f67bc21932",
        "cursor": {
          "ref": "b4286587-5393-4b00-94de-f36d70ff37ad",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "18b22439-3309-411c-9b3e-4a5f18f3e334"
        },
        "item": {
          "id": "551ef6fe-f6e2-4172-a483-40f67bc21932",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8de25495-79cd-4451-a5a1-6ede9d362180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4f41eb-c3c1-4eca-ace4-805730c7d372",
        "cursor": {
          "ref": "5ddf0107-1ba2-404b-8893-4af8326fd9ec",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cf219a7d-32c2-4902-b9c5-c6b6cbadc11f"
        },
        "item": {
          "id": "0a4f41eb-c3c1-4eca-ace4-805730c7d372",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d96f1a2b-d861-40db-a3b1-03ea1e59efe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739d957d-c365-4e51-939c-4d99c6a1af62",
        "cursor": {
          "ref": "7620ce34-f267-4819-94ca-ca7ba58320ef",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ba74512b-c419-4fb7-8fbd-125363097784"
        },
        "item": {
          "id": "739d957d-c365-4e51-939c-4d99c6a1af62",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b73dbc95-bc91-45d6-8062-166f276008c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dc587b-5a49-467d-bdc7-f387f2a5542a",
        "cursor": {
          "ref": "49b5ae34-56eb-4556-b2ce-6af1f04da7a4",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "cd4d2a3e-0b9b-4f75-b99a-20b90102d843"
        },
        "item": {
          "id": "39dc587b-5a49-467d-bdc7-f387f2a5542a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d30af25d-922e-4ba3-8fbb-9a5892d942ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "440043a4-b458-4424-ac6d-0339e47dbeb1",
        "cursor": {
          "ref": "91cbf069-73b3-4306-95d2-d39495959da0",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9a6298b6-ab61-405c-86ba-87011b91d791"
        },
        "item": {
          "id": "440043a4-b458-4424-ac6d-0339e47dbeb1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b6842f68-7873-4515-8f84-eb162972a98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad17a90e-6aad-4061-b94f-126712695719",
        "cursor": {
          "ref": "e9f80c41-dcc0-43b3-8a19-8ede50c79f46",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f96d73be-557c-4789-8b49-6d503666ee32"
        },
        "item": {
          "id": "ad17a90e-6aad-4061-b94f-126712695719",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ea32423c-c535-4d6d-95ac-ebc9a2e4daf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77dbf558-b6d8-490e-8f2e-39c76bfbf80a",
        "cursor": {
          "ref": "00ae2369-2c95-455a-9491-e937ecbe1d48",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6d6045ea-debe-4aad-9e12-6509cfa8a921"
        },
        "item": {
          "id": "77dbf558-b6d8-490e-8f2e-39c76bfbf80a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "98e64cec-4f86-4e72-971e-67724b370b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789524b5-56d2-4923-a69c-3a9eb49e6324",
        "cursor": {
          "ref": "6fc4a5f6-ea39-42df-aa5e-94c0d94c1c05",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "03c4948b-730e-4b03-a287-99223d7f455a"
        },
        "item": {
          "id": "789524b5-56d2-4923-a69c-3a9eb49e6324",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "58438c20-7d55-461d-801a-002de387167e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32896ae0-4c26-4a29-be9b-c008678a6eee",
        "cursor": {
          "ref": "0bc3caec-15c9-4f89-ac3e-02be1868f725",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "01e67c04-9625-4392-a7d9-418a5d9a80e6"
        },
        "item": {
          "id": "32896ae0-4c26-4a29-be9b-c008678a6eee",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6aaf6822-327a-4629-ae9f-47fd582c8bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce610f9-4691-4520-950a-457f29248feb",
        "cursor": {
          "ref": "c4ca27a0-1b59-4411-8c12-f2d0ccd95417",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ece1c2b6-257d-4214-acae-efde0223c69c"
        },
        "item": {
          "id": "9ce610f9-4691-4520-950a-457f29248feb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c7fcfddd-66c2-4258-bcad-bc82fe7ed4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f5e320-bf77-4343-befb-6832c17e072e",
        "cursor": {
          "ref": "8013aa18-ed8a-4233-a8a1-ecb00f1996c5",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "aa181e84-d51d-4e7c-bc12-32d95bec3a54"
        },
        "item": {
          "id": "f5f5e320-bf77-4343-befb-6832c17e072e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "85a4d391-d938-4ca3-8563-74b11b8861e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd87ca-381f-44dc-8d49-11e210efbebf",
        "cursor": {
          "ref": "c127eacd-4d70-4590-b65b-a30dfead4407",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "01d923d9-e083-4d43-9e02-080b4b2a9bf2"
        },
        "item": {
          "id": "53dd87ca-381f-44dc-8d49-11e210efbebf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c53fdabd-88fb-4551-8f29-9a0f88b5bb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc6f244-63f3-4cde-b49c-c3f3aaa81ca9",
        "cursor": {
          "ref": "8e46d6d6-5e4a-4326-adcb-765f7dcd4f08",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "eca0bfbf-8b63-4e13-8915-bce42c286eb5"
        },
        "item": {
          "id": "2bc6f244-63f3-4cde-b49c-c3f3aaa81ca9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "54c1938a-96ce-45be-8fb2-9eeee71cd77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de0bdc9-d347-425b-81af-584644ecc49f",
        "cursor": {
          "ref": "6fc2e5ca-a37a-4189-b1ae-104c1e5530a8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ecd37662-fa99-45bf-823f-8ef925ae4b3a"
        },
        "item": {
          "id": "0de0bdc9-d347-425b-81af-584644ecc49f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1f04a438-50a4-4b2e-a883-e55480a6b19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a0358b-47b9-4fa9-b66f-24203be16006",
        "cursor": {
          "ref": "e981739c-17de-4128-aa81-1fec143d65e9",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "671b2840-635f-4200-b0ff-10575882d8b1"
        },
        "item": {
          "id": "39a0358b-47b9-4fa9-b66f-24203be16006",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "4c4ced45-bc57-4b46-8dfd-fd7f2f113714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c116eb21-fbd2-49b3-acde-13de100a2d34",
        "cursor": {
          "ref": "e95694a1-8552-41cb-a73e-c9014cc2201f",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b310d832-6c3d-48c4-9cee-b94f57acdd02"
        },
        "item": {
          "id": "c116eb21-fbd2-49b3-acde-13de100a2d34",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cb01f2fa-a4aa-4ab5-b888-45808e14fd32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f311f81e-9895-44b3-833b-2630d8b7de51",
        "cursor": {
          "ref": "80d33492-8c41-407a-9408-3f7b02ca8a77",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "09f4383a-5420-4280-a3f3-d0b0bf1a4fbd"
        },
        "item": {
          "id": "f311f81e-9895-44b3-833b-2630d8b7de51",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4f6541bd-b83f-4066-8673-34a58bfe59bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c161c70-f134-4f6e-8849-8e52435d37cc",
        "cursor": {
          "ref": "0b35d13a-cd88-454b-8db5-591fb9c54cb7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c4fa34a9-e6e8-49fa-a6be-1b5bf98ea9e1"
        },
        "item": {
          "id": "6c161c70-f134-4f6e-8849-8e52435d37cc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "c2b12b85-61ec-43f1-851e-d7cd2941b439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fc0955-ed3b-4672-a6f4-18f60693f522",
        "cursor": {
          "ref": "b60aac5e-006f-4c6c-8c3c-e5a7cab6cf39",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "667fcea5-5e46-43a4-91bf-6c51c1125bb0"
        },
        "item": {
          "id": "b8fc0955-ed3b-4672-a6f4-18f60693f522",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "39dbddbb-0a3e-4131-8c53-1af3f2203b7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8371b471-cb96-4175-a881-71087b1d22f1",
        "cursor": {
          "ref": "722e2b25-1ca0-43a7-8ffa-83b00654abaf",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "edbc0e75-7b00-4f20-b365-158d140227b8"
        },
        "item": {
          "id": "8371b471-cb96-4175-a881-71087b1d22f1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7c88b61e-911d-47ab-81ab-b740bc6d3aad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4516b97-a46e-4b2d-acaf-d6c766a29fbc",
        "cursor": {
          "ref": "a58645ba-f0e3-460c-bf84-1c0fe151dad3",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "857314fe-44ba-4864-9c1b-efed9185e7ee"
        },
        "item": {
          "id": "c4516b97-a46e-4b2d-acaf-d6c766a29fbc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8ea97064-0b98-4287-a3da-2c3e333f6283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85724e6b-a4d1-47a2-aa2a-feb8bfdfb68f",
        "cursor": {
          "ref": "2b0d892c-3890-479f-8876-8305100c622f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "639a6549-2732-4312-969d-9271a2c3b99b"
        },
        "item": {
          "id": "85724e6b-a4d1-47a2-aa2a-feb8bfdfb68f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4ce89bc2-6db9-40d3-90ec-c1746a69358a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9496f1-4ea5-4e20-b60e-91f2faa2d9cb",
        "cursor": {
          "ref": "310d6d66-ddfb-4170-84f1-a1a1d2c4ea5b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "26c41989-f2e6-4d3d-8528-433a2c09e8db"
        },
        "item": {
          "id": "4a9496f1-4ea5-4e20-b60e-91f2faa2d9cb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1f47af62-e288-4344-b97c-970265ab567e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b6f974-3f96-43fa-ab47-069e7357459f",
        "cursor": {
          "ref": "86768cc5-6e29-43ce-ab75-349197becdb0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "31e23584-6a26-4943-a44a-9b0d49b1a41f"
        },
        "item": {
          "id": "64b6f974-3f96-43fa-ab47-069e7357459f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ae3c6950-ea90-4a4d-8972-9ad1d0cf9c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f76eff-a509-4361-aebd-f00a069378bc",
        "cursor": {
          "ref": "ac962d51-c8e8-4e9c-a127-e89171f41be3",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e56931c5-f888-491c-8360-d9efda8ddc4e"
        },
        "item": {
          "id": "23f76eff-a509-4361-aebd-f00a069378bc",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "185c9f6a-d9e8-4cef-9243-a945308d5a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20ed4873-d5cf-4699-883f-6adcdf941561",
        "cursor": {
          "ref": "a55912a0-3ae2-4b66-8fd5-d82e664e8c60",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "808a31c6-7406-4d67-ac1f-04b4eb375281"
        },
        "item": {
          "id": "20ed4873-d5cf-4699-883f-6adcdf941561",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "f7785583-a062-4c74-b121-7bd87ea7ac64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1eb96a-b1c2-4b63-a025-e9aba8a97185",
        "cursor": {
          "ref": "b5302629-88f3-406c-9311-52673f039557",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "58c2dad1-1374-4ffe-970f-1337f468cb19"
        },
        "item": {
          "id": "9a1eb96a-b1c2-4b63-a025-e9aba8a97185",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6d5590b9-986c-4a90-a0a6-2a69eb13e247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d862af14-639a-4234-bc8c-61dae3f7d3de",
        "cursor": {
          "ref": "43e6a525-b32c-4a54-8ed8-b5ed6f1d7a0b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fc61757e-bd31-4a0a-8a72-15c29e5abb6f"
        },
        "item": {
          "id": "d862af14-639a-4234-bc8c-61dae3f7d3de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "10465d8b-cd23-4329-aafb-dceedc7f5713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d609400c-d903-4312-beab-f8babb5b092c",
        "cursor": {
          "ref": "8bc82093-ae01-454f-9b42-075725cad54b",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d8998c1a-ca58-45df-be40-93e80cf127d6"
        },
        "item": {
          "id": "d609400c-d903-4312-beab-f8babb5b092c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bf51dfe3-77c3-4fed-8fe3-4b12ce55f388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa90bdf2-8d0c-480b-8dc5-6f7eb34c65c0",
        "cursor": {
          "ref": "8881f338-609b-4a9e-9547-51adbccca0c7",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0a48b335-253a-4a2e-b7ab-3ab22d653dd4"
        },
        "item": {
          "id": "aa90bdf2-8d0c-480b-8dc5-6f7eb34c65c0",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1f5fac74-ddcc-48eb-99ba-5c552ef06402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279863ef-1b07-4093-a1ae-fd31a10befcb",
        "cursor": {
          "ref": "a905273c-000b-419e-b4e1-352e1df53bf0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0eb7c4ab-9387-4cfe-b818-0a1cfaa1e0e4"
        },
        "item": {
          "id": "279863ef-1b07-4093-a1ae-fd31a10befcb",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "86a2dee2-cf13-4fd0-8056-518a8a8748ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3af7dc31-4ca9-433f-a310-e4773382433c",
        "cursor": {
          "ref": "a64a30ae-a018-471d-b9cd-3e9053b067cf",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "30b14f5e-ef04-474f-b892-33b467f573ab"
        },
        "item": {
          "id": "3af7dc31-4ca9-433f-a310-e4773382433c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "98d675c1-b9e1-4fef-ad70-443def005696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469c3d3f-6c14-4523-96c4-96d7417e8860",
        "cursor": {
          "ref": "a6f68979-e92b-443e-86a4-6a4d654640b3",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7b3dbaa9-935b-4183-afdd-095cb8afbc50"
        },
        "item": {
          "id": "469c3d3f-6c14-4523-96c4-96d7417e8860",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0684b3ab-5cc2-4a18-a02c-468c7cbcd1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d02c9d-0424-458e-bbb0-0fdfab6e0cfc",
        "cursor": {
          "ref": "441fbdf9-8441-4e7b-b38a-cc5cb159fc2d",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "63cbb81d-a616-4d43-9506-077e90e17ce2"
        },
        "item": {
          "id": "29d02c9d-0424-458e-bbb0-0fdfab6e0cfc",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9b9233b0-474c-4095-b7d8-d025953a890b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b22cb41-a67a-49e6-80d9-9d40c9c640ce",
        "cursor": {
          "ref": "3fc2153f-0ed4-49b4-a1d1-cbe56e076ea5",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8dd39fe1-fb83-4823-a5e1-ca108eb00e56"
        },
        "item": {
          "id": "1b22cb41-a67a-49e6-80d9-9d40c9c640ce",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "90cef768-145a-4bf8-981b-98eb5e867d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cb2817-c5d2-4719-946e-c99d0aedf2f4",
        "cursor": {
          "ref": "4505601c-d433-49c2-a3ee-6cbf5cbe3d2f",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "08b126a2-4aa3-4e05-b439-8891ca23eca1"
        },
        "item": {
          "id": "26cb2817-c5d2-4719-946e-c99d0aedf2f4",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ab3be87e-fcb8-480a-8c03-6e52fc7e8656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698ea880-ce0f-4c29-b953-b448ce916ad3",
        "cursor": {
          "ref": "8172d80d-532d-4e15-9dfe-32ed57935da4",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ba94a901-b0c5-43aa-a15c-e4d325a18ca2"
        },
        "item": {
          "id": "698ea880-ce0f-4c29-b953-b448ce916ad3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ecd33e3e-b0f5-4e86-ad16-4b9f568f7b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e1a416-d824-4550-897e-e3fd1fc9e923",
        "cursor": {
          "ref": "74390f04-7399-4230-8cb8-8f470e07e8e7",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fc8a12a2-850d-4051-8ea2-567b2ca3ec2f"
        },
        "item": {
          "id": "00e1a416-d824-4550-897e-e3fd1fc9e923",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "846fdb74-ddb0-443d-ad68-1367fa574955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07028fef-7c14-415a-9bc9-c28687ff7521",
        "cursor": {
          "ref": "0b8a2317-5cb8-49a8-8242-15ae4106629a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fdf7520a-cd9d-46be-b153-1ec6d8ec893d"
        },
        "item": {
          "id": "07028fef-7c14-415a-9bc9-c28687ff7521",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9bb31d17-a559-47e4-ad60-2def7fa1e540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7b79470-0d45-4c97-836a-0cbccf4b1af4",
        "cursor": {
          "ref": "0a36e899-a09b-4349-a39f-aaf42c2d8f62",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b5e36a66-3f79-414b-a321-04d1143f94a2"
        },
        "item": {
          "id": "c7b79470-0d45-4c97-836a-0cbccf4b1af4",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "393712dd-85e9-48c9-9ae8-fd9d73cbce02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2eaf7a-f039-4c72-8091-a900d898b8a9",
        "cursor": {
          "ref": "ed09a946-d2c1-48f1-9738-26b2de30d540",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "93d42638-0608-440d-81b6-294a8670ce1b"
        },
        "item": {
          "id": "db2eaf7a-f039-4c72-8091-a900d898b8a9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "8362a450-2be7-4542-9d15-b84d8add943f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933b4e69-414d-4980-8884-f65a96450cd1",
        "cursor": {
          "ref": "b406f379-0bbe-4d88-9857-3fa3085c6868",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b93e02a4-7166-4108-b376-80d844819743"
        },
        "item": {
          "id": "933b4e69-414d-4980-8884-f65a96450cd1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "fffe917f-07e1-43fd-b140-98f655ace854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a13e3ec-796e-479d-9f72-3c16e41f0bc5",
        "cursor": {
          "ref": "d9949531-1a24-4452-bae2-c0d05fb96223",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4e41b6be-e749-4b68-a366-7575b533dc64"
        },
        "item": {
          "id": "9a13e3ec-796e-479d-9f72-3c16e41f0bc5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e5fa2b90-6256-418b-a2fe-5ba5512b28e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b61dd6-7377-416b-89cf-5fa8b95898b1",
        "cursor": {
          "ref": "394ece19-0ab9-4243-bb7c-3fadccbe2c84",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a92f6c81-8354-474e-b699-175507f6c7fd"
        },
        "item": {
          "id": "b2b61dd6-7377-416b-89cf-5fa8b95898b1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4913f1f1-36a3-4d48-b34f-b6a97cb7b882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd583da0-fec0-4586-b206-3cc8daf03caf",
        "cursor": {
          "ref": "52cdd24c-eff2-4001-9a13-80554ddfd0e1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "5debb049-3d2b-49ba-88dc-6ac16d437b94"
        },
        "item": {
          "id": "dd583da0-fec0-4586-b206-3cc8daf03caf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f3a574df-54f4-4784-95da-00fe664d04a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb8285a-a889-4eee-95e0-510afd508a68",
        "cursor": {
          "ref": "ea92c313-f26f-4de0-992c-8c8a8d516aaa",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0ed27c6c-36c1-4350-b3c4-c4aaf014318d"
        },
        "item": {
          "id": "beb8285a-a889-4eee-95e0-510afd508a68",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "746787f8-9109-4f5a-a40b-70b501234235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3f2443-d9ce-47fa-84b4-57545deefbf6",
        "cursor": {
          "ref": "8cb86725-cfe7-4851-87d8-86079667a4ac",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3e717ad5-a698-4ee6-bb91-7288a7ecf618"
        },
        "item": {
          "id": "dd3f2443-d9ce-47fa-84b4-57545deefbf6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6466d083-a589-4daf-91d8-f3e66e2f8272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e43beef-41b7-4449-a5e2-9fd325c6d122",
        "cursor": {
          "ref": "f3cfc06d-f24e-469b-b2a1-c4ceaad90afb",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "8e6fb8d7-b080-4c23-a699-4696d91680b5"
        },
        "item": {
          "id": "6e43beef-41b7-4449-a5e2-9fd325c6d122",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "1c0fde13-841a-4b0e-8378-22d0ca17c869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "095ae09a-bf88-4d7a-a6b8-5203a181e753",
        "cursor": {
          "ref": "2a896078-1542-4634-b61c-c136bbc751d8",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d5f65ccd-2bf8-4a85-a29f-9772b00b8acf"
        },
        "item": {
          "id": "095ae09a-bf88-4d7a-a6b8-5203a181e753",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3646a661-eb36-4cc7-8599-b5fd4543f3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6695ee-2c5d-42db-9501-8c0d6a781758",
        "cursor": {
          "ref": "8338c7a5-f38a-444e-85c0-b25b9becd0ec",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b475af55-7a2c-49a8-be81-3acacde35501"
        },
        "item": {
          "id": "3c6695ee-2c5d-42db-9501-8c0d6a781758",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "69716000-6be3-4935-9f80-293d586fbd74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a7097e-e3eb-4cda-b3db-1446b110fcc3",
        "cursor": {
          "ref": "318d244c-6dda-44be-a6ef-f5632ef8d69c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "66ddd880-e191-489c-8c6f-2c5bd1c841fb"
        },
        "item": {
          "id": "00a7097e-e3eb-4cda-b3db-1446b110fcc3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "eb4fafe3-fbfd-48ce-99b9-e2a39d7ccc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4450869-1dd5-43f7-b724-bd6106a16188",
        "cursor": {
          "ref": "eec62868-2bb7-47a7-8d84-6cf7e835b041",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "de509e13-b1bd-4f27-a9e8-fb3f09f23764"
        },
        "item": {
          "id": "b4450869-1dd5-43f7-b724-bd6106a16188",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ea447576-d737-462c-80ac-6171919fb342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9d793dc-47b1-4b9b-9569-f3fcd76a16d5",
        "cursor": {
          "ref": "27564407-be90-428d-a98d-1aed7bedf988",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "f5f38dc8-903d-424c-9ea3-7b404d5bc13c"
        },
        "item": {
          "id": "e9d793dc-47b1-4b9b-9569-f3fcd76a16d5",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "55a54615-44c5-40ec-9cfa-b7f60c9ae724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4960fd28-f9d9-42aa-b6dc-8ef660648fd2",
        "cursor": {
          "ref": "4378626a-f31f-4e2c-8c7a-c2d41511e4ba",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0f115c11-6149-4e7b-a7ca-dd1bdef29c2b"
        },
        "item": {
          "id": "4960fd28-f9d9-42aa-b6dc-8ef660648fd2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "2520f3c1-b5d3-46b0-b1db-9a205cd6b074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d181daf2-9585-4ab8-beb7-d60411c137c5",
        "cursor": {
          "ref": "ce3b4b61-9346-482e-b659-d8ffdc274682",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b99299a4-4f24-4606-af70-24d0bcdc8fb5"
        },
        "item": {
          "id": "d181daf2-9585-4ab8-beb7-d60411c137c5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6d68be05-a57e-4db0-af32-eb3017896a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd129d6a-1871-4ad7-a40a-17ac7763a631",
        "cursor": {
          "ref": "d6dc7064-7c58-4e73-98c8-b7ad52c8f0ea",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "da680737-478e-4053-bda9-7a36ac78e213"
        },
        "item": {
          "id": "dd129d6a-1871-4ad7-a40a-17ac7763a631",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "3920c0b4-2498-4b1b-9a48-95f6e1a9b416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60000f8b-8324-4565-8bbd-74913a58d322",
        "cursor": {
          "ref": "bf89bca0-324a-482a-998b-284cb1213d2d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "990f0da5-1400-41c3-aa44-4eddeaadd132"
        },
        "item": {
          "id": "60000f8b-8324-4565-8bbd-74913a58d322",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a62d8678-476f-4d71-9aa9-070e7602a0f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a6b19c-664d-40f8-b0ac-8ff759055ea7",
        "cursor": {
          "ref": "4f1072aa-70b9-4645-9a2b-0153092fc2e6",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a093d973-df18-4dc7-964e-8901e5f2ac80"
        },
        "item": {
          "id": "60a6b19c-664d-40f8-b0ac-8ff759055ea7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d486243a-d49e-4b7c-a3b1-7dff0d11eaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e561e11c-d417-47b0-8d21-021058bf74ae",
        "cursor": {
          "ref": "b604a9ba-c672-438b-9970-66af2d855603",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "839d882a-9a3e-4624-998b-cb446e63c1c5"
        },
        "item": {
          "id": "e561e11c-d417-47b0-8d21-021058bf74ae",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fae7bd96-8930-4b33-858a-e5c8ebe0b31a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f097004-2568-41f4-9938-3003687ad58d",
        "cursor": {
          "ref": "a69d5b69-cbd7-4212-ba59-cec9cb0650a2",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "857e720b-4bb3-4e47-826e-a9fb97466f62"
        },
        "item": {
          "id": "1f097004-2568-41f4-9938-3003687ad58d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a2457d2b-2b3d-4818-aedd-6c94f30a9581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47736693-e4d2-44bb-851b-effa6975270f",
        "cursor": {
          "ref": "5af17c44-6f29-4e28-8be6-c4c4c88e30d5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "55a21e51-6220-423e-843a-ae8188beb149"
        },
        "item": {
          "id": "47736693-e4d2-44bb-851b-effa6975270f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4418c335-8f6b-4971-9b2f-b88dded0118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719b3c6c-89b7-411e-aac8-138253b3f832",
        "cursor": {
          "ref": "52b1e6eb-1b15-4496-ba40-d8413d262cce",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a567f35c-48f9-4aae-a926-be7267688c90"
        },
        "item": {
          "id": "719b3c6c-89b7-411e-aac8-138253b3f832",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "66394561-8612-4c75-9c9b-39c300cdc936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b63febe-3472-441f-82b1-59d66860dcbc",
        "cursor": {
          "ref": "fd540a4d-be4a-4aba-9a6b-35e46290a812",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "89d994f3-3ca6-4fe7-8dca-cf3d443a85fa"
        },
        "item": {
          "id": "8b63febe-3472-441f-82b1-59d66860dcbc",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b9b5fe7a-04c0-4b66-a262-f8a16e48ca27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9279cb5-890c-4faa-a4d6-c14abc4a99a5",
        "cursor": {
          "ref": "7b354c31-c458-4235-a3ef-2f6c1eb24268",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e012bd2b-420b-4496-9f8e-f7bc96a7a9dd"
        },
        "item": {
          "id": "a9279cb5-890c-4faa-a4d6-c14abc4a99a5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "579e0b88-6312-416f-8162-6749de811e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa392e3-00a1-4d4a-b772-7a5b5d4cb4dd",
        "cursor": {
          "ref": "1ab71687-fa36-4e57-adca-a8193329fbf6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "9c9adc2f-bc86-45bd-b004-e53f8ec74a0e"
        },
        "item": {
          "id": "eaa392e3-00a1-4d4a-b772-7a5b5d4cb4dd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "657a12b8-ae1d-4f19-8e53-1666145a6a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7629eb9-0657-4d7a-90ee-fc0b0fc273c6",
        "cursor": {
          "ref": "b86edccc-0227-4df7-a803-0d352e309f9b",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2834621c-660c-45aa-ba29-c7fd651f92c6"
        },
        "item": {
          "id": "f7629eb9-0657-4d7a-90ee-fc0b0fc273c6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "8c48feea-b178-4d39-b92b-38f07c9986c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5bd454-c6e4-4b8f-9dec-e4616c3d8363",
        "cursor": {
          "ref": "1e28bef0-cb92-4235-8de8-10d9a72a179f",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f5abcff0-e3ef-49fd-8640-a02786d3dbf9"
        },
        "item": {
          "id": "7e5bd454-c6e4-4b8f-9dec-e4616c3d8363",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8287e4b1-852f-4d6e-b3da-dfb03dbee450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195c3223-1f5f-45b0-9c24-f99898ba3147",
        "cursor": {
          "ref": "ec1de88d-4e5c-4c42-8864-5857c10b1693",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "351d6a46-a1c8-4a6e-a01f-d0f872b3c01f"
        },
        "item": {
          "id": "195c3223-1f5f-45b0-9c24-f99898ba3147",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "70e907ee-8111-489a-acb2-c6f760a13153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a44a30-3ab5-48a1-829c-9ce801f3c637",
        "cursor": {
          "ref": "ede21a53-074a-4ef0-b15d-3099dbd14222",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "388ff423-77f3-41e2-b17f-0ce580ba6a06"
        },
        "item": {
          "id": "d9a44a30-3ab5-48a1-829c-9ce801f3c637",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "65c5dcaf-186e-4d7e-a7eb-ebae2463bd1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81394c42-5280-4187-bac2-0dd86897b2ba",
        "cursor": {
          "ref": "9c884aad-073c-412b-8a96-c7646a1aa83a",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0ee5f0e7-0080-4c18-ad77-9a80421a51bb"
        },
        "item": {
          "id": "81394c42-5280-4187-bac2-0dd86897b2ba",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "122d51a6-7412-4513-8fbf-2ff50535ae13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee20d2d-3f4a-4fa4-a714-18f1114de3a7",
        "cursor": {
          "ref": "22efbddc-1e92-44de-ae0c-1597a0fdf8d1",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9d5d8dae-65c9-45b4-9ac0-4997bd3d04a0"
        },
        "item": {
          "id": "fee20d2d-3f4a-4fa4-a714-18f1114de3a7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "36e4cd97-0de4-4c46-ba54-bdbc4abbad93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2b7833-9b86-447b-b2e2-075e5bf86917",
        "cursor": {
          "ref": "0aa03516-9525-4c2a-8cc0-e234dcb7cb78",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "1f2c3837-b9e2-4080-a169-8bb38b183468"
        },
        "item": {
          "id": "9a2b7833-9b86-447b-b2e2-075e5bf86917",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e982adba-f5e2-47c3-b4e5-34c87f189c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590ce465-f9e1-4af7-a289-122b57e37887",
        "cursor": {
          "ref": "5656a2cf-ec52-46a2-8232-96abd8bff4a3",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "db5f5978-5c25-4a66-8f26-0db71a697aa2"
        },
        "item": {
          "id": "590ce465-f9e1-4af7-a289-122b57e37887",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0ecd4d8c-d9c6-4c74-9276-c2b8c2fb4050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707fadbd-7005-418f-aabf-33ff7b118446",
        "cursor": {
          "ref": "8d580570-fdc8-46eb-b7a1-fc0aeb0929d9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "03117a78-4dfd-4584-9976-91ded54d50e0"
        },
        "item": {
          "id": "707fadbd-7005-418f-aabf-33ff7b118446",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "dbff189d-27b0-4437-bffe-64022030c15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a16f29-af5a-433f-a351-28c86bbadbcb",
        "cursor": {
          "ref": "2820b090-7c3f-46ec-a093-eea6c7f83957",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a737ae20-365e-416e-a669-76b5e56684e2"
        },
        "item": {
          "id": "a1a16f29-af5a-433f-a351-28c86bbadbcb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "95e1e66d-ca95-4d42-b035-4aae67307a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2475fb-234a-458f-b9b1-9ac0e8d55844",
        "cursor": {
          "ref": "b064838e-620c-4807-855d-c060b9d16b39",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9a249119-3ecf-44db-9e27-a203cad556b5"
        },
        "item": {
          "id": "5f2475fb-234a-458f-b9b1-9ac0e8d55844",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "92db7b14-b161-4318-8ae5-abfc52a97598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5c4b01-6df6-4079-9311-ff25fd8f7c27",
        "cursor": {
          "ref": "f61d1c0c-3066-4248-b9bb-73aa7b2e9709",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "81e13eee-4b24-47ec-b1f4-4eeea326a141"
        },
        "item": {
          "id": "af5c4b01-6df6-4079-9311-ff25fd8f7c27",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "20b1eb26-6849-4312-8bce-be1554958c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9765fce7-dc5a-40ed-8c3b-c4e2330bb3ad",
        "cursor": {
          "ref": "cf1b8c1f-502c-4e63-a32e-8afea50292cd",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ef139a35-a669-45f8-84a4-de0aca7142a6"
        },
        "item": {
          "id": "9765fce7-dc5a-40ed-8c3b-c4e2330bb3ad",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6e0d86bf-33e6-4545-839d-788d1dec9c6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e7d067-0eca-484c-9f4b-603d7ce109eb",
        "cursor": {
          "ref": "b46c6742-851b-4d63-b712-7b9131574778",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7d1b40d1-d8ea-458f-a30c-02f6a081f4e0"
        },
        "item": {
          "id": "98e7d067-0eca-484c-9f4b-603d7ce109eb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "549ebe02-966b-46bd-83b0-ce53434c99e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8021bc6-303c-47c7-8d6e-34dcfdc44431",
        "cursor": {
          "ref": "05f8abbd-4b6a-4ed0-99ee-134a4c360acb",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "99fd888e-cb44-4acb-9085-e04259ff249f"
        },
        "item": {
          "id": "c8021bc6-303c-47c7-8d6e-34dcfdc44431",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "fba638e0-31b8-4e23-8076-dd60b6581f28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11355d4e-2d8f-4517-a005-559c10f16871",
        "cursor": {
          "ref": "2d5e1d64-1459-4bcf-b8f7-832dc931cce1",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5ee8f45e-db20-4c6d-bf6d-7d0702980b0b"
        },
        "item": {
          "id": "11355d4e-2d8f-4517-a005-559c10f16871",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0919730e-7ae7-4d85-b4f3-38f749f3eab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5270f810-f499-4763-b199-0b660873d1c2",
        "cursor": {
          "ref": "01e0dc46-f6f6-446c-8847-33b2903472db",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7f228e6f-ed48-4d0f-99f0-468a37706db8"
        },
        "item": {
          "id": "5270f810-f499-4763-b199-0b660873d1c2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "740a9ff1-2550-43e6-aa00-fe4e1659c6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501aca7f-6c80-4368-bae9-32a3cc3ed4fe",
        "cursor": {
          "ref": "d5dfa01f-1607-4a1f-adc0-e35420bfbbf0",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c55e6279-c128-4c53-be7d-6736d76f4e3e"
        },
        "item": {
          "id": "501aca7f-6c80-4368-bae9-32a3cc3ed4fe",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "8a98bbbd-f7e7-4fd2-b395-69bef95c4d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3f1e75-06e1-4bd6-88ad-1a00deae0ce6",
        "cursor": {
          "ref": "716c4ef9-b61f-4391-a8d0-ddfa85c6189d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8bc63e0f-0bb6-4f20-b632-eead3f2b650c"
        },
        "item": {
          "id": "ff3f1e75-06e1-4bd6-88ad-1a00deae0ce6",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "06caed81-0daa-494b-8221-9924b278089e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910f703c-46ef-4e71-aecc-6d7fd0e46c23",
        "cursor": {
          "ref": "052cbe42-981a-4561-a2d3-36bec00669db",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dddeaa29-9e12-4a04-a25e-2faff78c85f2"
        },
        "item": {
          "id": "910f703c-46ef-4e71-aecc-6d7fd0e46c23",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b763651d-e098-46a0-9b11-89238c60836a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbf0f1c-1794-436b-8b2c-834895dcfecf",
        "cursor": {
          "ref": "bfd2fde0-d081-42d7-ad85-8b051b570274",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3ad93b85-afec-4bd8-a646-91c8c21f37b0"
        },
        "item": {
          "id": "8cbf0f1c-1794-436b-8b2c-834895dcfecf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5adcd4de-15ba-4526-8932-ab9cbd0f1199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edfef09e-858e-4557-ac5e-d9f5bdc3a690",
        "cursor": {
          "ref": "9fa195fd-1edd-4b95-85a9-28c97097063e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "38698da1-838b-4adc-9a86-071ab3918192"
        },
        "item": {
          "id": "edfef09e-858e-4557-ac5e-d9f5bdc3a690",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "66dc170d-0508-422f-b8bc-383b45a48f66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0927b18e-83ea-4ef4-8c29-afa4b64ca587",
        "cursor": {
          "ref": "441cfe52-b85b-483a-a769-d5b71d4cbee9",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "f57c94a9-9274-4ebd-b594-9aa665755c29"
        },
        "item": {
          "id": "0927b18e-83ea-4ef4-8c29-afa4b64ca587",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "efe4510d-22a1-4d50-9b75-c9ad71f5c088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f261f12-1de6-4a17-a517-351ab1d12053",
        "cursor": {
          "ref": "db88e86e-9d85-4033-9721-308ce8bfacf2",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fa9c0484-bcce-47d1-8bf3-162b438f2393"
        },
        "item": {
          "id": "1f261f12-1de6-4a17-a517-351ab1d12053",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "1ca870ac-6a0b-40a7-a2ef-5bbfcc0ac55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ba06de-91d1-4f9f-9a3f-63a353fdfb0d",
        "cursor": {
          "ref": "2173f277-be5b-424b-aea4-608b19597463",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6e298c38-59d4-470b-a048-e5748b1a2532"
        },
        "item": {
          "id": "32ba06de-91d1-4f9f-9a3f-63a353fdfb0d",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "caf11d8a-e585-4489-bc01-0e8086f4222d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0a2cda-98b8-4ff7-9a0d-2f65a4db565b",
        "cursor": {
          "ref": "434ac5a7-31f6-4ab0-ad9f-925513fd6d52",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "909c08f6-4b87-4ab0-8c97-46f573557169"
        },
        "item": {
          "id": "dd0a2cda-98b8-4ff7-9a0d-2f65a4db565b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "efff32e5-abb6-4214-85ec-e1755583aeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748ec234-40ae-4d9d-a236-b864d645665d",
        "cursor": {
          "ref": "52be037e-9e08-43f7-bd1c-37814124e60d",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c91521ec-1591-45ce-a5e5-ac74d9ada3d9"
        },
        "item": {
          "id": "748ec234-40ae-4d9d-a236-b864d645665d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f074cd3c-b9cc-428c-b612-cfdaea949228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085bffe4-8639-4df4-b950-5b2bb70fe970",
        "cursor": {
          "ref": "e1c0845d-c9eb-4c1d-8899-d47c880c3a43",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c90cce71-8baf-4408-946c-a369d2d136d8"
        },
        "item": {
          "id": "085bffe4-8639-4df4-b950-5b2bb70fe970",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2f9fe54e-3789-437b-82a0-b00c006af350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa993eb-17bb-40aa-b9eb-ff1f3d215541",
        "cursor": {
          "ref": "1e2ab8d4-66cb-4cf6-b9a9-1ebd0b5b80e7",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3bc19f58-e0ce-491c-b166-7475bd1e5f73"
        },
        "item": {
          "id": "5fa993eb-17bb-40aa-b9eb-ff1f3d215541",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4bce9c08-c94f-4054-8ab8-564831ebb826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b7209c2-0d86-4433-9e64-6e72d58f7829",
        "cursor": {
          "ref": "bcd1eb03-9ebf-4f54-b7fc-831193b453b8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "cf79034a-05da-4bf7-b593-579499dc3b68"
        },
        "item": {
          "id": "7b7209c2-0d86-4433-9e64-6e72d58f7829",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c6068fad-5ac4-45be-a4c8-b1a3c2c19ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b9d52e-c733-408b-93e9-415eeaa2b292",
        "cursor": {
          "ref": "61b2a313-e8ec-439f-b208-a0178ba2b76c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "25e46e63-f823-4731-94e6-6164ad6b6664"
        },
        "item": {
          "id": "c6b9d52e-c733-408b-93e9-415eeaa2b292",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "616a0ce1-77e1-4c95-b23e-f1948da27d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cdae5c-d3bd-4616-bc53-360afe82a963",
        "cursor": {
          "ref": "ad60694c-54c1-451b-aade-95f17de8eb5a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b2edb46a-a87e-4c45-a3c6-d61017a95e81"
        },
        "item": {
          "id": "89cdae5c-d3bd-4616-bc53-360afe82a963",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "ed02453a-c6a3-44f2-a123-d58c937e9c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9914d85d-a225-4287-bc76-19d54e81a0b2",
        "cursor": {
          "ref": "acfa76b1-cb78-4ea2-a30e-1a252d38c065",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "83664162-f226-449c-b6de-38dd9e98b091"
        },
        "item": {
          "id": "9914d85d-a225-4287-bc76-19d54e81a0b2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "67625789-71b3-44d9-90f6-89caf365181f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02080480-5e3b-41d5-9750-7092b4c73980",
        "cursor": {
          "ref": "a84e2ab2-58e8-46ce-b0e3-bc560a177201",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2226a111-b967-4979-a348-7cdb76c1ddea"
        },
        "item": {
          "id": "02080480-5e3b-41d5-9750-7092b4c73980",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "33104dbe-10c0-43ae-863a-f2fc29c088ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93627863-c4ec-47c6-9a07-9b191cfd2d03",
        "cursor": {
          "ref": "cbbd98f5-b89e-4337-9681-dd3f6038ca6f",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "142a6e77-adae-4212-88c9-c96f11374146"
        },
        "item": {
          "id": "93627863-c4ec-47c6-9a07-9b191cfd2d03",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "47e7b84a-cdba-4152-8c57-9ed688eeef80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade106e-ac36-463b-a52a-4df7256c5c4c",
        "cursor": {
          "ref": "9a42368a-42a5-4ea2-91a1-5a36f7b50b10",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4501444a-4a7d-4ace-a1f9-223eead657e4"
        },
        "item": {
          "id": "7ade106e-ac36-463b-a52a-4df7256c5c4c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "27250b01-e663-4140-8bb0-60e2be1f55d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "531ba6ef-9037-401f-a3d2-7651c9217484",
        "cursor": {
          "ref": "89068d5a-9570-433c-8a00-1b91e327e423",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "965eeb86-6eac-4066-8951-41817c473484"
        },
        "item": {
          "id": "531ba6ef-9037-401f-a3d2-7651c9217484",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "861e0857-153a-4e9f-bdc1-1749b7a39c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836f8173-d1e6-40e3-8a5b-d22dbabb82c8",
        "cursor": {
          "ref": "c3a28980-b904-49fd-8789-a7a72c8f4f1f",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ab1c3045-4b1f-4e87-bf9f-04be6e19f420"
        },
        "item": {
          "id": "836f8173-d1e6-40e3-8a5b-d22dbabb82c8",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "43102ea6-abbc-40ed-83d1-bfcc593ae7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa51fef-271b-4df6-bb99-9fd6ee55c112",
        "cursor": {
          "ref": "653747f3-4505-4f81-aa46-844b9a48be17",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e2a7ed9d-9522-41d0-9c16-d8f10aa89b45"
        },
        "item": {
          "id": "9fa51fef-271b-4df6-bb99-9fd6ee55c112",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "3a1c59fd-eb41-49ea-88d1-36a572c9a8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eabfab99-648a-488c-9b19-d84b7742bb22",
        "cursor": {
          "ref": "df297c41-e377-4a28-86a7-11b545170a80",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "43c0cfe7-070b-4160-b8e9-01656fe31ab2"
        },
        "item": {
          "id": "eabfab99-648a-488c-9b19-d84b7742bb22",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b79fd65d-1e5b-4cf7-8030-8a5c21d41bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2122c9ab-9a2b-4d51-9c99-b1fd2ad3d80c",
        "cursor": {
          "ref": "549c6bd9-4462-4fbb-a397-87f30fce9543",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ebaf044a-c3b8-466d-b04e-5033a6c8f8ca"
        },
        "item": {
          "id": "2122c9ab-9a2b-4d51-9c99-b1fd2ad3d80c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "25e1fbd7-3719-4710-9961-873a15d73020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3849918f-543f-46c1-89dd-01ccd49e549f",
        "cursor": {
          "ref": "5e25d4f2-7678-4821-aee6-968350e189f6",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "7a68d1fd-3c49-4bac-a7b0-455fbdbc99fa"
        },
        "item": {
          "id": "3849918f-543f-46c1-89dd-01ccd49e549f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1932574d-b33a-48f8-853e-ed7d76208c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785726c6-8c64-4d62-b449-518926c93d8c",
        "cursor": {
          "ref": "98e3dc81-f04d-4f5b-b60e-fe9a818ad39b",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3882a0ad-be99-433d-95d5-b74d97da3643"
        },
        "item": {
          "id": "785726c6-8c64-4d62-b449-518926c93d8c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "83d0d0c2-24aa-410d-b25c-7fc219e57c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5913af5e-702e-4777-a868-cc2ab0ec4026",
        "cursor": {
          "ref": "e14c7db5-ee17-4615-923e-e5a4f6d75bcb",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "4f0e7c67-4069-4605-8bf5-ad7c7ff178d0"
        },
        "item": {
          "id": "5913af5e-702e-4777-a868-cc2ab0ec4026",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d6e41791-1bf5-4e38-9e05-6b1e4bb0f7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec706bc-43e1-4ec8-bec8-9538005c0b83",
        "cursor": {
          "ref": "f1910337-dbaa-40f6-8ea0-0522e0e3499e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "adf4701b-5bfe-4701-b410-d292ed0436c1"
        },
        "item": {
          "id": "bec706bc-43e1-4ec8-bec8-9538005c0b83",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f4dde931-3bb4-42b6-8e2a-b02b99947e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13d556b-fa65-42c8-8f6b-d9a9f83637b3",
        "cursor": {
          "ref": "b53bd518-6c32-4d1b-9b27-0b23cbc2a219",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e2a3ee58-4c50-4e2c-a5a9-c2cdd3405ee6"
        },
        "item": {
          "id": "b13d556b-fa65-42c8-8f6b-d9a9f83637b3",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "748eba70-05ca-4cae-a932-632914923132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "913e6c70-c0b5-4e4a-a2d2-ce18e31c7b1c",
        "cursor": {
          "ref": "1f86b834-a2fc-4b5d-89c5-b637e0e8dd24",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1bba17c7-0a08-4b5b-b69b-ef3e245a99b2"
        },
        "item": {
          "id": "913e6c70-c0b5-4e4a-a2d2-ce18e31c7b1c",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3e4b60d7-ae45-4e2e-906f-845fb32afb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3521f3ab-5ee9-4e72-824b-a30964681a9a",
        "cursor": {
          "ref": "65dbcd48-10de-46f0-85fc-69c9b2370c63",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ec1f97d3-b4ab-450c-aaf1-56c2f9f1fca4"
        },
        "item": {
          "id": "3521f3ab-5ee9-4e72-824b-a30964681a9a",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5cb58264-02f8-49f5-ab5e-57b4f78ddbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db927288-bc79-4ba8-948c-8d1acb21f06b",
        "cursor": {
          "ref": "f7639095-6cbe-4094-ae0f-bfb0d8994757",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "40904343-94eb-4e9b-b25e-29a288c14bcf"
        },
        "item": {
          "id": "db927288-bc79-4ba8-948c-8d1acb21f06b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "55fb69f9-2d65-45dc-8eee-199332e597d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff26e49-9a82-4e0a-b8a9-662ef9d87514",
        "cursor": {
          "ref": "8bdc2e8e-c419-4be9-9d4b-d7e6a5ff06d6",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5d590977-b34b-42ab-9f0e-aece561fdca6"
        },
        "item": {
          "id": "5ff26e49-9a82-4e0a-b8a9-662ef9d87514",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e7af3beb-189b-4630-8c15-422ff720abb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb924c0b-8fe4-4439-9336-191066627076",
        "cursor": {
          "ref": "12e58048-731c-49a2-89f3-ede37951d9aa",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f11fe342-e52a-4913-b3a3-042ee72678f1"
        },
        "item": {
          "id": "fb924c0b-8fe4-4439-9336-191066627076",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e027b55f-5fbd-4574-b93e-3b0ad74be8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35eb8d7-183c-4c88-bb82-48fd63153e2b",
        "cursor": {
          "ref": "c2c2ac00-5504-44bf-9d9d-e449d4bc0c12",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "262c2db4-ef30-4957-a74d-226a8fe8b46b"
        },
        "item": {
          "id": "f35eb8d7-183c-4c88-bb82-48fd63153e2b",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "64cab9b7-2aa5-4fec-b96e-a290eb8d9a19",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7081dc51-9325-4661-aa14-04c156f27f3a",
        "cursor": {
          "ref": "d34e4368-5e98-41df-bf84-81204351ad2f",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "93467403-f963-4f16-b561-a3213ef41b5e"
        },
        "item": {
          "id": "7081dc51-9325-4661-aa14-04c156f27f3a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "000125b7-db8d-4486-bad6-a9013a78519d",
          "status": "OK",
          "code": 200,
          "responseTime": 124,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a669f665-f779-40a1-a6a9-1f59253bde4d",
        "cursor": {
          "ref": "72a13aa6-c42f-408e-a3a5-3ca67d5c987f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b09e80d0-78ca-4823-bb72-5ebb6a079807"
        },
        "item": {
          "id": "a669f665-f779-40a1-a6a9-1f59253bde4d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "01da379a-40d3-4709-ae22-c004ba210096",
          "status": "OK",
          "code": 200,
          "responseTime": 1486,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d40d9a-3053-4c42-a218-42c4852d7da4",
        "cursor": {
          "ref": "f10dd757-cca7-45cb-bae3-cf1305f344c3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f5f4d688-1e5d-430e-b235-11c0310f4cbe"
        },
        "item": {
          "id": "d2d40d9a-3053-4c42-a218-42c4852d7da4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "862e3f75-67be-41bd-bc91-d73ebfaf8527",
          "status": "OK",
          "code": 200,
          "responseTime": 1924,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a39e4f-d3fc-41f7-b7b8-aff655f2e505",
        "cursor": {
          "ref": "4b9b0a70-32e7-4b59-be69-d69e77586a77",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b918328b-742f-4d10-af46-40a2efda24e0"
        },
        "item": {
          "id": "a0a39e4f-d3fc-41f7-b7b8-aff655f2e505",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ba93bbf-dc0b-42e8-ad63-9d4bfe597674",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a39e4f-d3fc-41f7-b7b8-aff655f2e505",
        "cursor": {
          "ref": "4b9b0a70-32e7-4b59-be69-d69e77586a77",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b918328b-742f-4d10-af46-40a2efda24e0"
        },
        "item": {
          "id": "a0a39e4f-d3fc-41f7-b7b8-aff655f2e505",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6ba93bbf-dc0b-42e8-ad63-9d4bfe597674",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ade99e9-0a19-4951-a9fc-55489f152ef7",
        "cursor": {
          "ref": "8afe12e6-01ad-42a6-9d4b-1cac307d1887",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "8caf774a-e87d-47c8-b9d2-6ebb6e0da44e"
        },
        "item": {
          "id": "5ade99e9-0a19-4951-a9fc-55489f152ef7",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6d0d3ab2-484d-469d-8154-5ea397e1fde0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd5e4b1-b33a-4924-8ee1-f1a555e4c062",
        "cursor": {
          "ref": "67a17e43-012a-4bbd-ac52-080cd5b8a46e",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "be56f679-d4de-4e77-8d7a-b01c4321d733"
        },
        "item": {
          "id": "4cd5e4b1-b33a-4924-8ee1-f1a555e4c062",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5a52d8f0-f1cb-4515-847b-bd0952f4f5df",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}