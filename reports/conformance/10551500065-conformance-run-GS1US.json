{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9709d16d-22c9-4bc3-96d6-8ad75dcaead8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fd0e3905-69c8-47bf-a302-830250cbe215",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8858698f-ad26-40c5-a62b-3a5a44cbe9e0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b0b64ae-cf4e-4dbb-b6c1-512af2b7322b"
                }
              }
            ]
          },
          {
            "id": "ba87decc-873f-4b20-a3d7-2300734916f6",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc3a84ea-368c-4dd4-8e57-d376067daab7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2ad88483-fb79-40dc-b064-3479fd56158e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ba1917ba-d3ed-4893-ac12-b1f5902a4fcd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f86b2ace-55e8-4100-9de3-e79b766c86f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0f461bb-40dc-49ab-9bc9-7f9b98f8eced",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f5213da-9839-47b7-a1cd-8f9b0b54c493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81a82b4f-6826-4e5b-a6b4-f358c8b22cb9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e6eb6be-2451-4cda-9604-2f0a0e830a0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0305b423-7cb3-4456-92ac-87fb9844e201"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ee0eadcf-e9d2-4201-a6a3-51d28f3be82b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e5cc994-d42d-49cf-a5ee-ff1a1bb35e86"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c16acbea-a350-46a8-8049-f72cb2a105e2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "ebc171a8-eacb-4083-9faa-11f2a96fc362"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7738604-9244-4138-9950-f8481a93318d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ec6d290-d9ec-4a57-9d5d-848bbe77b8b9"
            }
          }
        ]
      },
      {
        "id": "116bdbfc-eb38-4ad4-a19d-0a922fdf9f8f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4e132a37-d9a5-4701-8240-639496d5131b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6baaea12-cedc-4d99-8e1c-6364d95ae707",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6dbd3b9f-c016-4ca7-890a-1a86c96ec846",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe56fb3-ca6d-4875-b310-60bfeaaf2e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f4602caf-43a2-4e4b-92e3-61866c539ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5169d89-a700-4df1-882a-d53701ecc7a8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84226fde-a574-4f3d-b629-bf0ac242ec37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "53530e14-41e9-47a1-ace6-98b278416937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf54ccb-d69c-4bbd-8bc2-e6e27f038707",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce276a21-355e-499c-bcab-306ab9734fe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05442e78-db03-45bf-b004-8293c9ee3687"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89443676-1e95-42b5-9a30-25884ed648a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af58d8bd-f67a-4e7c-9fd9-31a75395bc9d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255d2366-6035-41f6-a881-b4af14925b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa77e3ea-d6d1-464e-8faa-3d2af27c347e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8d23ef-47b5-4b44-a60c-92462b181e56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd642a7-07a3-4b50-b333-402649199bff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "314c1966-98f9-4d4e-a4e8-a9743800afa6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "82e954a2-be03-4763-a14b-f9f85c002724",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee1220f4-554e-44fc-840c-9bdbb4882a4e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "448f6267-a15b-41ff-b9eb-6a5e61914ef7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0ad2ee16-f5e3-48f4-acf6-fc81f4792464",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "15c8e851-51f0-458f-9777-c90cf3c56b59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "15ce364d-ee12-48f9-bb89-7e0ec69a6c84",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bfed4f64-a832-4f0a-b4ac-dd7c54eb4c0d"
            }
          }
        ]
      },
      {
        "id": "68213923-3221-433e-82e2-4254800dee47",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2eb7ac6e-09d4-4116-a51e-9bdddca6732c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2b4f6873-13b6-41b2-8645-31204f9c601b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a04abfe5-3a9f-45f3-98b0-17589787902f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "125f22f5-4f7f-4014-bf95-b3edef704167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6124b2-bf77-41f7-b2c9-6a5f670e7d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1438bb-c828-47e8-9e7f-8a4af31b8a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "809aa7e2-c81f-4d31-988d-24de61b63d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9512d5-49a1-4f90-9687-e6c449bb58b7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec8ba09-83bd-4f5e-bef1-698f39af06d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65a9bb56-3b95-4452-aecd-8e310f88d07b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef990a8-13c1-48e6-9568-82e5f1415484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c2ff117-902d-49a2-a702-58c9bd4dbddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c25aab5-aa68-480a-8635-f1efac50c804",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac274b68-ba06-4e76-a856-4837838b93cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582682fb-f162-4466-a281-6bf1bef146a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3d3b8e2-41bd-4c68-96e0-58532cb9147b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7333f0e8-aec5-4b7f-9d9b-1c2213a72274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42085587-cff4-4a9c-b4d4-456bf5ee446e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c69293b-55c7-4616-964b-656c7bd3b62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de16960-2f8b-44d6-97bc-58281993208d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4929dc-1286-4ccd-a538-4dbf6519edc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6502ac43-0828-4ba2-8e78-3e7c9f98a88b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a78354f-db40-46a2-b78e-1ae0e65b595b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0bd7b14-7571-493a-bee6-ee2139e13d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293538df-a085-4c2d-92cd-8dc306b12266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f462fd5-5514-4b43-b3d3-f8f03ad8b1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20359059-332e-4ed7-931f-3ea65ce0d0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb6cc94-b625-4280-b3fe-0631c46eb25a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca65d52-c9a5-45e2-b202-c462b549000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70b92b3-c760-4c1e-8aab-b28e2fa11396"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4500a0c-2560-4b4c-9f6e-3a69a216ba9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7d3eedd-9f41-4627-837b-1348abbf4494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2cae40-75cb-4a80-802e-65a9eb146d86",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02253553-c125-4b89-9941-a9791ef7718e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b4ce80e-9795-4509-b3e0-c433b7dfc722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa02b6d-bcb8-4150-8aa3-3ff47c25173e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb7bc764-1823-48d6-8c60-12deda322539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e25287-df11-4ea9-bd56-bf62cb6101e7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5a0a19-cd58-4b7d-8e8e-9622c1b18d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e87fc6-3c98-422b-96db-da74e9c21ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c5e90e-7c2f-46f8-a722-50739973eadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a0da11f-2af7-49d1-a4d8-1adb9b6f017c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5fd7499-f518-4f50-bc0b-34a1779db40a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1396c649-0b0a-43ea-9237-931ff487d0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b287a154-9ded-4444-980c-119208d66f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13453a7-7088-4423-accd-2f5ebce60b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8ad0821-b04b-4ea6-a937-d0b0c4905314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4887d05-b8a9-46c0-9679-abb9930d4bda",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894b4447-f428-4e19-a02c-c8c34c13863f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3298dce-a441-499e-be85-3a99ea9e6a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22a5354-7dff-4df0-9c5c-c83f35495519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4304ec7d-3504-47e3-93eb-6324a4bf2c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e32cf1a-ade1-4fed-84de-94ce479de8cf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c710a6f-d0f3-49a2-9244-8b403a57452e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43a25a27-e47c-487e-a373-73267e93136f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8670d26a-1f30-48a9-9ac6-66fd1b013139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7977352c-0626-4c35-9e57-de04256238a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf054a6-34ea-416a-be0d-b3743ab9e4a6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3517b6bb-d4b4-475c-809d-37c675a2afa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbce40f2-4f10-4104-803b-27276005c611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ddca87-9c16-44c9-b47b-60ae682f968f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f164c96-e532-4291-9b5b-616bba15be3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c83971-a67d-4433-b574-9cb0a7ba521d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1511da1-e2bd-49c9-b076-3f7887ce8fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93343dff-43bf-40bb-8bf7-384383e41c82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02bf9dc-e2bc-4398-9956-e390c292dc18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf9910ff-66d6-46ed-b1a8-552dc0f6a784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abaf1615-9195-4e0c-9a6a-a44552f554e1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "670f1464-64f9-46b7-9693-bd43ba88a23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a785bf06-84ed-4ae9-be57-d3a5008abc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38f642d-5d25-400f-83d7-f70ace461573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c1cba7-fb76-4499-8d8b-9d981bd5bb6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724a681f-5ef3-4912-9a51-afe0f2fc8fa7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2589d2-d2d3-4898-b22a-cd90ec6841f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cafe1e-28e3-4295-bd94-7cfd84ad493c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44d2e31-43ab-4e5e-9598-3b3f0d453e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "509ec656-4fe8-4be7-adfa-b03899d8d4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f41b9ea-0887-4245-bf1f-1655c0f018a1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68dbfea-80e0-46bf-8129-943fbadeffd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "120535d3-3498-4d3c-9e33-9c49577a7228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23038330-8552-47e3-a579-5b9988e3eb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "458ca824-9460-4ddc-a372-0352b6951f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6e4592-11f8-423d-88f6-a6c0e4f0293d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288c9513-c058-4820-a47e-5b4c22e8851b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b18dc56-d233-4ba5-aae3-08fae8e5eecf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90774ea5-91d7-4311-8697-80192d86c980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67648e2e-efa1-4014-a5b1-072034dfa6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce13da3e-b132-43eb-b4ab-af458498673d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a951b0-91f1-4ec9-8668-adaebdaab113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043540b4-61f7-49a2-b59e-bb03d8680823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9ea950-1408-4b40-a85e-deb71b2ce495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a25888db-666a-4694-8d3a-f5a4f9abe46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79356f4-3544-49a3-961c-3b27b776380d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ffcd3b-81f8-40e4-b176-cedb2c95e81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e007f23-607b-4def-902a-1df3d998d767"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25237f46-e0f8-40fd-87ed-a7575e0ef49e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d74a3307-d1ca-4529-9fd5-449174f7f475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8889f89-55c6-4c91-a34a-055d2034cd07",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a97c0e-65d7-4ab1-97d5-744f6d84fb66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88513d66-6b0d-436e-a7bc-77248a9acbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c42b71b-a22f-4134-844c-c6e82ade393d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d757a078-432d-4014-bb09-ec360a4bb515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4215e2db-52f5-4135-9cf5-0e3c107b86d8",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23173ad0-77eb-4607-a288-62ed6ef03eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f9d1e1-71af-4d24-a701-1a0b77e5b200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92846be4-9ad5-45d3-af3e-cc28f6e8faef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a5181f-5dfa-4ea4-b800-195be2203637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab169a1-424f-4c2e-8827-23944c004f55",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b848b85-cdb4-411c-bcde-b004f922513d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2f7f7e-dcf6-4b09-8dcf-3942b378cc2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee555c40-332f-4f05-bf2f-8186a0d065fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd1143a7-cb98-49f5-ba9d-2e21c7868145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e69a03-bac5-4e7d-b64d-45653edd5acc",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448b5db2-59a1-4ef3-814a-6f8f5cd49671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca53a5ad-4e48-48e2-9d1b-50ebdc6ae26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95fbaa7-c908-4553-9646-421466e9d0c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d302e542-6f19-4265-b6a0-ec949e094cd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bc3bb7-ec46-4147-9371-d272f768ffc8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0431ae45-c94f-43cd-ae3b-66ad81edb699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d873b2d-73b3-449f-8426-a8138cd161fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712bb2d2-8826-43df-bff0-1c2c1ee247a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "be0d7eb8-7fe8-4dfb-9e17-00468aab642b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aad52a4-1848-417d-b227-91e832cfab26",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f429df0-9618-4a7a-bca5-0a62bf738da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a515434f-98de-4e98-a867-a9f5fdce263b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0f7122-acc2-4790-b74f-8373e0b115ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b513b38-9142-448c-a8aa-cb367c0bc91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39095e61-6747-4015-bbd0-997ca42a86a1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b9ee6c0-a2b0-400e-81e0-77a465b02356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541a4613-4c7d-4dbb-9640-0eca31c7c111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75877d7-c6d5-4b8a-88e8-21a8864eacb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de95193f-c44b-4ea4-acfb-2033da317331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdd7134-769a-4f61-8143-da0ae9f197e4",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2696a7b1-476f-4fc2-9ee9-b2679fa0ab3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d961451-abfa-46d6-b34b-99d8808fdd17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e6e5ad-893a-4a00-8f09-2cf8fd9d5895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fda1070-0420-4043-b57d-e1a53406850a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a423043-52c0-4dfe-947c-4ad44165215a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcc0ecf-4bf3-4b85-9065-2ecead35a28e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a286e74e-2383-49cd-9b72-bdd30bec5f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64744221-0efa-43ea-a5c1-f983baf3c037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de1b217c-40f4-4a42-8c3f-0c07581b943b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4782af4f-5ce1-4dcb-a270-dd2be6b73ec2",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ef82b3f-bcb4-4504-b6be-516aae1dae02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82089e87-1590-4ceb-b40e-2f19d6c4d95b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ef63cb-5177-4c42-a243-052bc6ba8310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f11db2c-47ec-4c77-bf22-de8ed73ef7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbf4a37-b8af-4b1c-97dd-8875e8c35222",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa7c06f-1506-4ba7-8800-6e49000767c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ec1706-3032-4bbb-b664-ac679d9cf541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f28d5d68-fb1f-4e87-81c7-dc6f97527dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb16712-6ec9-488b-be67-ec978467e61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79e254b-bb92-423e-8ae2-87d998829e7b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f15f3e63-7cc9-445e-872f-c108e8377ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06de26d8-2216-48c3-af22-1bef049c7604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d90fe1a-660f-41cb-8eaa-caaf419a87eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bb9d58-969f-49ae-ab69-5464f77f507d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73c4871-c9df-42e7-ba6e-8d010aec34e2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45a0a3d-6278-4e99-b814-3fbbd4051f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd047cdd-c37a-4828-b066-0ffed042ad51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7122374f-efe0-4620-9fe9-395197316caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d26ca7-e670-4254-bec6-23a7f3acd45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5369fd6-401a-4a21-b07f-b9faf4404d5b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841aa60d-e696-46dc-af26-9219c251398f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a884cb0-8767-404d-9984-8c413679af1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f42f53-fbd9-4cc3-8609-06907e18e514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "781a6294-c554-4b45-9e20-0aa466a07dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1719d847-eb77-4f76-8afb-2225cce55879",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2168657-e86d-489b-a1c0-5f27088534f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c470b393-37c4-44b1-a00e-cbb69bed245a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a77ee42d-8992-4f3b-843f-c4789c942825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad226d50-10d9-4c99-9ab3-304c90446b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5629ad1-b390-40a4-8caa-73aafdeb9254",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f9655d-6a02-4323-b23d-1b72b79f5d18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea26e12-6a9c-4e93-aeb2-646f543f7e11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b711df24-5a69-49c7-9c78-8c51533983fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "06b4d260-bbb7-477b-9a82-ff76dfc0de98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae69db37-a8fe-4c12-b3cb-f168bdb397c8",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cadc36-d493-47d3-af6e-03016a09f7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c00afad7-72e0-4c40-bac2-d7bf224f3fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71eb72d-35f2-47e9-8520-cc69f22c822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ebcb646-1a73-4b1f-a673-f941c10068d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab41847-8152-4325-b45b-50c28fc29bb9",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11769e53-d63c-4d19-893d-1e9076f4b97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e26953-ada0-4be7-b1c3-1a001e151632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aba8aa-cc1a-47be-9fe4-80122ae707fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "09a6fc83-5d94-430e-ace4-797889219c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12de59e-e025-4077-944a-a0a7352644e5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a918354c-1cf5-44f6-99c0-95f2e23838ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e3d457-449b-4325-adc0-01183c61beed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0300ba4b-145c-49c5-bb7d-94fc34fb48ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "760ee105-0370-4c6f-8106-86aece4970c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efdd8024-29c7-4ec5-ae47-5f6c24d77e44",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc3d233-9578-494d-8daf-f4b39b643a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d450e15-17e4-4dd7-86b1-b60c5b53df8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fab279-aa37-4870-bb9f-566f8e2dcd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e696b15-36dc-457a-8c41-7fed5524a9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ef0b63-3faa-4e16-92e3-27b2969a7aa1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ec7c5b-5f0a-492a-b0b3-5b7e3d288b46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f7b20a-265a-4854-9932-fa6471c46905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3795483a-ea45-4690-8360-a1a876bc230e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "27f7e097-108a-454f-bd35-0d5294d36769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e1850d1-7594-4329-8dae-6d1f3f15a549",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def05b95-c62e-4b57-83d7-197ba8f5040b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19f22a7-0697-4cd0-bdc5-fea70b693077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0985d07a-8196-462a-8ddf-d286dfd23533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02d33f07-24d4-444b-b5cf-f0b309fb51d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6ef566-ecdb-496e-9e3a-f1de53091b66",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23942f9e-da17-4f01-bc3c-fd4713f4be8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ce74d14-8f66-4767-b79b-334efdd727fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137fc586-639c-4dad-867f-ad690e171622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "af34e410-ada2-431c-b65a-2f7dca1a894b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747beb28-c49e-467b-b4a8-3d669c9c8e75",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1ac200-99c8-40c5-9162-92ed80cacfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e883a599-9b2b-43f3-a7c6-91f1a2171586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4df7009-f1e9-4feb-bbb2-2b782b30a903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2630dcc5-d6f2-4c30-ad52-6aef123bb847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e187644a-d201-4363-953f-82e3767daced",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deba4563-915e-446d-b8af-bb2374ff816d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ea8a53-77b9-44cc-bd53-ca45c7494144"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c592f0b0-485f-4771-b781-0e33b9d73ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb516ab-ffba-4428-b76d-b314babc986c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4162bbb7-8fda-4717-b9e5-7e1d1914cc5c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c56b2c96-6c9a-4031-b455-0017c207c7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74f33bd6-240e-4e81-9f2f-39371e9373c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f958e1-5ade-4542-a923-50708e50c3d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "14b4bfe1-cf3e-4a29-b447-f2a5e841f3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88c21d4b-3bda-4cef-9df8-9de4065056d8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "063c17c6-7b35-43af-8c39-c595b815d7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c1e6683-ac70-4650-9596-b807ea0a8020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ced39bb-dddb-44dc-9ff4-4e2cd7e79fac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46836e3b-dbdb-4936-a23e-123dcda18472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7368cd-8faf-47e2-81b2-a8b81938b8eb",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d45659-ceff-4706-adfb-f2a3ad1ee698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68edf828-7835-4429-86e7-a718f3218df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ed6e77-3775-4e4b-a17e-db5a0cc7014c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "236afbe6-a2f7-4883-8571-f9ea2e78dd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109fea11-d888-42ed-9df7-03a14041d48b",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57625dc3-0a42-4a33-8582-1ded07de970e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f57739e-1030-4c5f-b3fd-badf0caefc08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807d534a-9c1f-44c2-8f2c-730ffd7993f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4671db42-0801-41d1-b6c2-1207ccce1a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1297e8b-d56f-4125-b547-3397ce7ba3cd",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb8f5c5-d23d-424d-8340-04b4279a1eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee132f36-357e-40e1-982d-87ee14f02f32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850e1d89-fe25-471e-8007-b09c5ea2b60f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e5a94e4-a8b5-4a3a-a037-5a0ffc031582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ae6c8f-53b6-4926-8351-8042012de4ed",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d9796a-eaa9-4098-9e5a-af8ca5304248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc9a9d5-a442-476e-bb14-5fc40bc801e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc1d698-d554-4b53-bb8b-79c1938bc847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77a4535f-7044-4c22-a81a-b6a1262f7b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb9669b7-a704-42b1-976f-b488112cd332",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca719c7-766e-4b98-a1f0-810963e5fbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212580c5-0d8f-4c64-9f66-47f4c108b389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7461208-e38a-4c42-9ced-cb2914965dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c893fc3c-bcf6-49d4-a5d0-9ab4c7be07dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a1cd7f-8fe3-4f44-a90f-b9cc2d55f264",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2839b02-57d5-4cc5-8376-f13f923d2175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb97530-34bc-4bd6-9ac0-0852be916f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b15b31a-6162-405c-b9eb-d45f36029cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d366611-cf8a-4fb2-8e79-272e451cb792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4df75b-8991-4dbd-880b-aec4294d8a3a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4759b22c-4563-409a-8da1-b968c78f42de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aae98eeb-0be3-49af-8571-815c444b90fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4adad33-7c77-4ee7-ba2e-1c428d40bda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "83e41930-72c9-4a85-ac03-eea8924e2f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ad96d4-e6c4-4259-9124-d5fc3e05d2fb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef8008a-26e7-4658-86d6-dbec6853d1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1014f01-4bcd-4b70-8dc2-019ced19dcaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89cd5422-3256-46f6-ba5c-ab43308ea06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "666dbd65-13bd-4f5e-adac-cd42e9ab3565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b985f596-20f9-44bf-88dd-e035e5502b1a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcee1e6c-a351-493b-9e2d-a734a269334e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5eb7e0c-fab8-4341-86f3-02a152e6d913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f599b76c-3f0b-41da-bdf5-1cd176304d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a68bf25b-5e97-463b-88b7-c69e2cc46975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc070bff-77b9-46c7-a591-a4628678ae96",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb2c4583-0c42-43ac-ac41-06a63ec929e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5a1094-fef4-4230-8f2d-5c8765b982b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0509b3e-e196-4ff2-8d0e-b27972284875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b946eeeb-e383-469f-88f3-45b96ac48941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b48e353-2b2c-4ab3-9cfa-d33ff45c17b0",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167e068d-52f8-4744-9add-d4d37db1e01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee266336-e9d9-4765-a14c-01e6b8e3cb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960bef4a-576b-411d-955f-2a0c556861b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "425ca83f-eeda-45a1-bf4b-b81fd8627ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc068295-e04d-4afd-8a65-050e97cdd053",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdeaa64d-14a2-4ca1-9117-a854d3032052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef18d35-b846-4be0-b067-67080e6a25c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "037b9d5c-52a4-46b8-b6c0-57aac0efb9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eface1a1-bdb4-4564-81bc-7da4db22b85b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f499717-cd6b-495a-909f-a9d75aad3333",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34a8f7e-4bc6-4d3f-a697-4acff3278a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0235615-4399-41a3-bb23-005e7d1ae545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b69dd9c7-fd26-49b0-8331-c3205f942dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "703bbc4c-20ea-4fb4-a117-829d814425af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3f4a843-ba4b-4d48-b3a5-376491c57cf4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea810698-7784-4ccf-b6b8-40c2f2b43a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2392d03-62c2-44a4-b4c1-fd2765a1a75b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e120c06-e9c0-44d1-aeaf-132b517531f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "416f0575-7a27-48b3-90e3-4cb1f2432f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66497e28-bab6-4bee-8475-79e9d6bfff65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033d9087-f47c-4f68-a2fb-60c5a97285d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9d3c459-1116-4c40-8e7e-76816c6729bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a285471b-99cc-4b6e-ab60-5b13da51ffc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c823e4b2-ed3b-4557-92f9-1a4ae4c3b4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d1ffd6-7cf9-46b1-90f4-90124ecfb0ec",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e1baba-9402-4857-bed9-f748a0c5a8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a0fa664-21ee-4b88-93ec-2920741b962a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd3fce5-71d6-4165-91f6-ebd5f4cd240b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "76860a71-c172-4006-8cf4-2f7d3132a693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba27a45c-d8f7-4e0c-a73b-64d4c59a9a82",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7c393a-b4ec-4bfd-834d-7a2d94ecf26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04244acd-a9c5-43ad-83e2-d35303401122"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df1f580-c34e-4c66-9773-5e34b3c70d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "77517bc1-0ba2-45f2-a0bb-1a80c6b2235b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "308b8a17-639d-49c5-a20c-b0060b159913",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c812b0-4adc-49af-99a3-e7e71e1dafeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18e7a56-49ae-4c1c-98eb-13628db5544f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec90d67-1fb5-4512-b98b-37060f04839f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "107e4062-f41e-4159-87f4-19023ce1017f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d7ec69-f909-4128-83ba-7289b20bc0d0",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6828169-3ed9-4503-bd6b-c97e4ce192e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3022a550-c639-4eea-82de-e76d71944c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666428e8-ed1b-407b-850a-469c53b1d26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "249eb18a-03e7-44e3-8932-453c447e06cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106bde17-84a3-405c-97cf-71cd2b9f3f39",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6788bdd7-94ad-46db-b47a-f02cf8ff0b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47eec52-866e-471f-b84d-02adbe244e22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fed329-56dc-474b-a916-d8fc2896d119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57356d35-cd42-47e7-a48a-b1ccc98961b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48979226-2338-4f62-bb5c-495a97235032",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe1816e-6655-4d6f-83d1-f7902febf4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b737aa8-f662-4a59-8a8b-c20b94e98c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0997f508-92a3-4a98-86ce-0e36b1cf6811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50756fcb-5653-4d26-a807-6653cf83f55b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7220b94-1ce4-40f6-8a2f-471bd14fd8ec",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cd7dc6-a855-48c3-90ed-89fdf839513d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3a7fe4-db65-4b57-a8cc-bbe28c55f305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7411bd8a-a813-4adc-b090-85d32939e841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b518572-f60e-410b-a462-9c61d6ef5cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9be0f5-a5dc-4613-9959-4b18b0351dd9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7d4c84-301c-49fb-bf55-3012d3b0729d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fc76c22-1019-4be1-9fa1-af8bd3a4c49f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aa4765-f52f-425b-ac11-63653bab45fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1228de7f-8dde-470e-8d79-c78fb4781195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b3ec58-0c1e-44bf-8527-1daa60dd50a9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17b5293-b185-470f-88dc-3d986e7c461b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6f23d2-c43b-4466-a1cb-d0b6eb8394d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e484f45-2a4a-4776-b234-77d8d9297040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f208632-bae5-41c5-8343-a2b5310e0580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4839cea0-f60a-481d-bcc1-dc669241c2d0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "379b221f-e01c-4079-9ad8-b33f32b5a127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a05e4643-48b5-461a-b195-4961f5f16d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c729bcf-ae11-44b1-8648-ee029617cfb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "518147c8-c5f6-4b77-8a7e-491ed0cc0be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62470e3-cb37-4d5b-be2c-d64ac1d192f9",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f98b28-84b8-4c65-a4e1-e59a8f929cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40bd2cfc-d1b1-40df-a3f7-b1a69ec72afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cae1982-a4c5-444d-af76-516eccdf22bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2441d984-6c70-4566-acd6-110f48e794c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c403bf-d42a-4b56-9369-e56a880311a7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a055a848-5bf5-40af-8c71-9ff962176b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa44fd39-a269-4e39-bbd2-ea7bfbbbacec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221167b9-5d58-449e-a6a4-2e85f355591e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c90c08-5b41-4f06-b261-6f69ea32dfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86310de4-453e-4f4f-b272-2b09f62108e6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d6047e-2cc2-411f-b1aa-459c0e106a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b69f9af-f5d8-4192-b809-2747df917cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345df735-c3fb-4d7c-83ce-96b14c922353",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a278052-3e6b-4a40-88f0-597ae684dac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154f5a6d-8127-4ff7-a024-5817d7891105",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f4dea3-34c9-4cf9-a090-bd2f5f5aedcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e9da0a-a826-42c1-abc6-e110e78ae71e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c4b69c-5ba8-4608-b89f-e1f54dfc7c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b44288-0a5e-4d93-a1b9-30752de3f982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e422fcd-5679-4023-8d86-453382f97e64",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b25ecb3-013a-4f9c-95ff-a187a48a7f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f07d76-cfb5-47de-8c8e-3777a2f51213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5afa1532-2741-4c70-bf7f-f788b3f9cea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8267cbeb-768b-43dc-96ac-5bd907cd4c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750c7799-9b57-4a4a-872c-60614391a7e1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb37c95e-3acb-4923-9894-49706e6bfc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd964c42-fefc-483a-af9c-ecc7626e6ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86073c99-0155-4d20-91d6-2f4669f891c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "170209cb-a272-4648-9aaa-582c44332a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4818d14c-8f45-4150-8ab0-1bc73764638f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81b63c0-eb69-470e-a9f8-df26767f9862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae03512b-7a36-4eb1-a6b9-fe05283c4c4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0057bf13-d162-455a-82c0-0f3863a75370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80953ee4-009b-495f-ad99-4f6a2e7b6ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d00fa2-202d-4d30-9198-6445e092bd92",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8402c1-190a-4798-b28a-02515bcdb884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a7216e-beaf-4e14-b14f-f74a85ddd955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99f5807-5052-45e1-9cd3-48d2012b9aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ff4e459-a314-43c0-8c28-035dc1e2070f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b91901-5484-4786-b95a-2318cfe96000",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cde63a1-42aa-496e-a209-87f9b420b071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3513a0-306c-4d89-b8db-6872f1dc86e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49bcaa38-7c07-4c3f-893f-586618c857bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "218a7760-b875-4d49-8986-55052533a478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501617cb-b79b-4f02-aecf-75f510994ee7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711d1413-1d23-4589-a359-16dd6f89bab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ea7b47-fe65-4546-a40a-34b71fc72a03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f72d08c-78af-4df4-8adb-095bafe09e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "257013cc-b2ff-4a25-b5e2-526b9fddf2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3313dfa-2e0c-43a2-b6b2-91df14d8c844",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b010c9-862c-4b63-9a05-a3c6de97e054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68817e9-40d1-498f-963e-a7ba4efabb39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11190031-73bc-4f3a-bde8-4d1b28437e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9441a0-4288-4166-91eb-daa0c5d22b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132a9552-2ccc-4026-8aaa-2fd1d56aae11",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8764b748-09cd-405a-8255-9ae888fca2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc006cb-46b5-4231-bc11-5ea2d5c417c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2beeb27-1098-412d-b099-c7cc56493477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa77630-e1bc-4256-8dab-599f6909d4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6ac244-15b7-4ceb-9ae9-de07a2437eb2",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8b310f-2639-426b-b1a9-2ff9bec926e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8b37f0-13b4-4cd6-9f13-d8cc0fd2ab83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f67f43-942f-419d-a5dd-a8e5fad5907b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72d8c689-f079-4071-b577-011338083b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe786564-3901-4047-8135-eb4d0f8fa9e0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca92fb8f-6881-4aaf-84a6-7b13db597bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d392440-f2f8-41f0-baeb-b9a720b9e1b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c843fd-e6d6-42d7-86c8-ecbb56da2159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c215286-e170-4be0-8609-22105a9c47fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e36bba-b3c6-46ce-8bb9-51d53fbf0c16",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd59000a-9090-47f1-851a-e6eff9da2254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b726108-8118-442b-b909-9daac5a7bbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc64af49-d54b-45e8-a2a1-d56b5d7f2548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bdf45e-3a04-4399-a2a0-a78a0fbb25fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d26fefc-5ff2-48ae-9940-dba27ed3d846",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc38d96-b0a5-4c88-888d-125460868700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1bee95a-f92e-4823-b057-25f118ebe6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419d4423-8af2-4295-8573-dc6ed371be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2062158-5d0a-47bc-9d96-123d62e3b91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca61a65-0c2c-4d2e-954e-16d1936760ff",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c206aa63-474c-4a2d-9ec8-1cdb7659a2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39beb01a-09b7-4ee7-b465-56c1dd9d8501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78991c34-8ba8-453e-a1f4-11fafa15d569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e84761-d841-4f32-b6c0-15284bdb66df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2da3c5-b947-4341-afcb-f362f7816754",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bc2fa5-c6b5-4981-9aaa-5e43a6564ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29400c9a-7bf4-442c-b33f-73d4815cbc37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c324529-3111-4fbd-a4fa-2dc3d664c78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf4f4da-ddd7-4672-a52c-3f70b28e6f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e43472-7a95-42ec-8aa5-2a895a9332d6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e650f17-fff7-4c3a-9213-04e207567038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b6fc3f4-99a9-4e98-aae8-57568160d025"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18a473e-f6ba-4a3f-a225-81a8c93d85e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f4733ab-7b57-4dd6-8503-e5e01764590a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d4d9fb-5368-401a-b775-99432429bfbc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2fad97-945b-474d-8c3c-6bf99c63f614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0b4b3d-0c26-43f5-8a18-b03688c5dbed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43247d7c-830a-425d-9474-959288111354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "be5796ac-3e90-41a0-b385-e466c32b11af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d07eb1-f512-4760-8a4f-2eeeb4cc7375",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c8870a-ff16-4aad-8139-c2fb05808e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "3e1dd76e-d257-4b71-96dd-cf256cc77170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5b25a9-d6e6-4fa9-b6e7-61100015be36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba15589f-0b4c-48fc-87da-6ee4d55ee085"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dd8684e3-2c4c-4b1d-a1c3-707c436c846d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa961a8d-d9e3-45b4-8cf4-25fa5fdb8119",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8c4f65-18ec-436f-bc13-99f46517bddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "245e083c-7973-4a19-abf2-50ee9c5232b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c676117-f07b-47d3-ba22-29fee3eb7088",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b9b29b1-8873-4973-8690-d6f980477429"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74df2f7c-6c71-4c8a-bbcc-ad3d4815d5a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c0008a5-77e8-4e32-a9ef-718c2ec2e3d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebfa9da6-888f-49e1-8f31-056cbbcd250a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "016670e1-c975-4312-bf82-987b10d28252"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ed68076-ac49-4afd-8546-0f716e7959c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "852c471f-9cf3-4096-a5e2-185d46861715"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "adb7fdd5-ea82-43c8-9e24-b7b3be3c5bce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dd79024d-566d-43a8-8bd7-20246f81e78e"
                }
              }
            ]
          },
          {
            "id": "f1093ab0-0246-47ac-b940-336911d98606",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9dc4ed7-fb6f-499f-a5d5-7f3c11a89663",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9354d4d9-5a5a-4d47-8d1d-fe7aa4801c31",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff84b8ab-e897-45d8-9cb5-5707baca2843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0dab2cee-0696-4b95-8591-8d3274b9e73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7daa70db-03dd-4596-9341-8fd2e1ebc792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e14670f-065d-4132-9d57-e9031c12f701"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9ed506b8-d204-45dd-8652-96fb3ec866bd",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0ff3269-7f75-4d5b-86f1-37bf36d8734a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9a12b9ab-0959-48fe-b75d-bdb4e37abc4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8865b287-9848-44dc-8bfb-7f5bec0fc109",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bba3b4d0-2cf6-4550-afb5-97bc49c53925"
                    }
                  }
                ]
              },
              {
                "id": "5c3ae9b6-d328-4152-bba9-57d933fd1260",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d83fb1b0-9cf3-4480-acb8-a6a7d3b995f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "261868cf-ec5c-4c85-87e4-4a3ddbec1943"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72d63f55-1a40-4fde-a5d3-608f1c6abb5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7430252c-6cd2-42d9-9cd9-a5394c3e8dbd"
                    }
                  }
                ]
              },
              {
                "id": "613e997f-b42f-43c5-b456-dd85a29e6879",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fe4bcef-cd0a-4fe5-a5d2-f9ecfee76250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f90e57d-2f17-4c72-9579-aa3a97feb102"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55345a60-1e54-4382-80c6-20ce90e00c20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "657b4daf-c08e-46d0-9741-2708e1b9be9c"
                    }
                  }
                ]
              },
              {
                "id": "5b758add-14c2-4fa6-b5f4-bd580fceb12f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fd645c7-dcda-44ee-9509-3cc33368c954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bb86a92d-c18f-468e-9cae-536ac303b43f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db1d682c-d596-4905-8894-d59a852e5ca2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "10dcea31-380d-44b0-a04f-9fffc040fc21"
                    }
                  }
                ]
              },
              {
                "id": "e66af60b-11b5-42b2-a619-f12dca8889d4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a9023e9-1dc1-49d2-8d36-bac99a7bd17c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97633834-06ee-41f4-b5fa-1ee1cf78c4e6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "354d5dfc-8820-4f6f-9a3f-cbe2cdbf177d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d9ca9975-a703-4e1b-bf5f-632066191658"
                    }
                  }
                ]
              },
              {
                "id": "9c6b35aa-37f1-4ea9-8685-e240c12fb694",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44b96af1-d70a-42dd-bf30-a6575d500b4b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf9f9d29-3aad-4a9d-a823-c75b8b737d06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "72e435af-aa63-4270-83d9-cf9dfbbf3125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bea06937-da62-4cd9-9a41-0934915cfa9f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "67ed0b96-8280-4159-89bd-8eb5aeb0168f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89e800ab-786e-44ba-91ee-0cacb0cf91ad"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7e7f7e88-5962-46d1-b9b8-65173e33bba0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "faef87f5-775f-4313-8294-538e58825060"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5e726a5-238f-4b5d-803d-9ed504e44a90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7f638979-08a3-4d16-9042-6353346ebdea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caaa8c3c-ebc4-427b-a028-66e04e326336",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1cb20c0-3a86-4635-b29a-e72f7c1860c2"
            }
          }
        ]
      },
      {
        "id": "0dff0c62-4e06-44b1-8519-a80689e0aed1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "dc9f5242-19aa-46b7-8839-2e306a172c3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1972f94e-1aab-457c-a880-c1b9015ac316",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d949b09e-7e0d-4c45-8f8f-e0df5ab126de",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1aac2e0-5b82-4efe-8dab-f6fbb4156981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eaf97b6-2e33-4128-9b6d-0733118331ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea224a4a-2e8c-48b7-ae4e-586d8673b202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e618efcd-918d-405d-b4fd-33b23793253c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e54019f-b769-469e-9d37-4bef8375f7f5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212bf89d-c1f4-4074-8918-658bcc818c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da118e71-e6d4-4412-89cb-7f3b1b5d5d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a89990-4cc9-43ad-9ba3-7072271963c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "26df3632-f553-4799-bf3f-5d15d4d6ca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0513480-0540-40a0-aa83-f2f810f5bff8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b7c5fc-3742-4fd9-bab9-e8e653338f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4522ca-15fe-4b2f-a17a-1fcb65731306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb4af2d3-54bf-4bd5-bf8b-4ee3020f5cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2713feab-c066-4405-a194-6ebe500026db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68c2142e-97bd-4212-a376-36a5a1db1bd5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63233009-0783-4dc9-adbe-6eaa488c902f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09e4676-9b9a-4e8a-b9b6-40833bae78ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caface8c-124b-4915-bdfb-d5a1b90f4ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1001bcdb-77da-45f8-bcb6-a336c0341c1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d000f85-b98f-477f-8045-031f29fea354",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb6570b-cbe2-4480-b950-40eee0aa21d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bdf64f0-42da-4550-8c17-694954a029a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dcbfb8-b21b-4119-aed9-acc4f1bdca07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7730c8f-7001-4133-bdde-1d917e82c72f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a038ad9-7d3f-4cd0-90e3-7a68b6a78b2b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512ff7f6-a5d3-40d4-b6b9-1572ed60d9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6f78d2-f101-4636-baee-791030487d7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c82c8da-efa0-4331-a03d-95d7d4d3353b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f6c7fef-da8b-4ea9-baf7-eed3e74d8516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1190416f-b38a-4f6b-9771-5771777cb813",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ee98f9-e10d-46ec-99eb-2005dd770914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95b494c-2c37-4892-b79e-d00a7c4614b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867225a6-5743-4dae-b7e6-41cf9b79dda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "52b5fd76-9ee0-4181-950c-d37776cee557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb3c63a-0f6d-4e85-96ca-f769f1014507",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04c0184e-e0b9-4147-953b-838455a865a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b68756-f22c-4171-8d84-1b2a5d0b97f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc30712-716c-4c35-8fae-09ac80dfa3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "479813c3-7323-430f-b987-b76693f1f9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b2b326-10c5-497b-86b4-57c3dc3c602e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0dabb8-7a9d-43bb-94fd-a141125c802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df06a5b-77cf-41cb-8b62-55a849ad7d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc8a0e2-a486-4830-b72d-2192f3d93a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c702d3a3-a6ac-4fa1-86b3-8f3661ecac53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5619882a-3bc6-4ad5-8a4e-02d7ff4a6e8c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364592bd-1902-4c41-9752-51f10096bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33da2284-33ae-4e88-9b3b-48eadf1ee95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f051751-9489-4877-aed7-8bd79a525bde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fced5f59-21e4-45f6-8da8-5897fc49f365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d3b277f-aee3-48d4-b2cb-d4e2adb98b1b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f53daa9-381b-4b86-b7da-3983a486dd0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ce0052-9d2c-4423-a82a-472040a43f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef314356-5db1-41db-86df-1b8c6395919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "47f1efbd-f528-402c-93c0-48f3db827e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf57d888-fc13-4acd-9a8c-a7408d5a4eb7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef748ab1-f65b-4699-baf1-7da08020ab4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72879e13-8636-4c9b-a7aa-442de40806e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49798caa-9fa5-4b57-9a5e-b0d2e83c9839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be5848de-d532-4389-a56a-0d862a842265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d334ce-5f4f-41d5-a51c-50ef255e1a5b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6c747e-b0c6-4475-a925-5912989103cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c7796a-fc81-4f74-a978-9887f72cce1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d5c611-f892-471b-a5bf-310a091788a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41708246-35d4-43ae-8fd1-c13ea1e2489f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551cb76a-3acc-4323-a700-feef85ed9711",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d75bcd3-3dce-48df-8120-56ad9577c925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adc1c93-6c26-4aa8-bdff-a92b5bf99e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a300b5c9-1057-455c-94ff-c56a1f823951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d0abb34-c526-4bdf-93b6-508a59c13a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e7f4643-b159-474a-a701-2c79a63ad030",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6318eace-d01a-46e3-9fa2-bf30a18a7865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac3c1b0-fd17-4b9d-a3a9-6fe865092a0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf8b5a4-a0c4-430d-971a-ae5566562b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bab2ad6d-f605-4dc7-8d9f-e960cdb4cec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511b15ec-4301-4e54-8cb9-7a59b9e69611",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d047e3-61d0-4b07-8f61-dca88b125000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965944b6-4e63-42fb-8c9f-219811d76b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d13b0e8-e673-45ef-bd21-ae150678663d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfa397e-8aca-4326-8589-9f5fd4bfde8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794cd240-7243-485f-98f3-34d2543528b3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038ad306-7f14-4133-a79e-9620306abcc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2066d916-1a8e-4c60-855b-5a47bbd7fe60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e60ecf-abb1-4036-a2f6-cf1237091f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "81e55c87-6761-40bb-8085-bc5c6a40f7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8999812f-6e8b-4404-8f3c-1884e4d160f9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20740556-b7e8-4936-bad0-22f54c6f0657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e27c8b-fcf0-4ebe-b4d2-931635c42ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e17fb04-47c8-41d8-a9ec-a70e8079124a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac79d4f-c01b-4f09-8b46-dc93092012b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd167514-2032-4195-96f6-0733e06dde50",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db853974-02cf-4a9e-920c-17760433833b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ff48ac4-4571-455c-95f0-24b9e0abe1d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af6b0c1-0217-4438-b537-30c6736eac8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11e9256-336e-40bf-9f06-128dd607263d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38774cfe-d38f-4cba-ad2e-a770e2007780",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd09acf-ee70-4476-8d4c-eef750b6ce82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c442a0-76ac-4ba0-9a17-b29a3546c063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc83bee-f1ba-42aa-ab59-d937e79181fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f035e9-b24a-4fc3-a39b-7f81f2a3c63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7883aebc-e15c-4142-a034-674d2aeb7c8c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f512233a-44bb-430a-b656-4062021ebef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2109aaa2-f8f7-433b-b519-ebe3ce45186d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf525a2-d31f-4268-b910-8f7d8c0144ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "762e43b8-17ca-4219-bc83-6b741a68bcd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccaf1610-7834-40a8-adbc-446bc1e04848",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc43efe8-d60a-4672-956a-18795de22248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbd35b7-4af5-49fb-8c0b-c1532ccd9f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503cecd8-22be-4967-a341-57b0b19face1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eccd31e-120a-4214-a057-6f86900c79af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53486761-2108-4f98-a6bd-6741c9385644",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e78b7f-926d-48ad-aceb-4e6f774022bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f91b233-c1b7-4f24-b2c7-af967f549b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c39721-6ec7-4c86-b849-0c153a212fe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65690ffb-ce3b-4d97-a9d5-a9fe70d36a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95f97b8-2dea-4d34-909e-88850e450c44",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7074d08-1d0b-4a7b-9ddc-836404ab4f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121d881a-7e42-4119-9f01-da2a9f46cfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c73459-4501-442c-8fe4-e9961e17941e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0da09a-2c6d-47ec-9bcf-a208e463d7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c109e0d4-9bd0-40a9-82f0-a53623895059",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c635a3-9a5d-47a6-89e8-724631c602bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647db1cd-9d40-4d51-a992-4fdeeb30ade8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa52be3-8f50-46da-8148-5d611f32672e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52cc0749-b38d-4f00-99fd-a547336e7c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d500f5fc-4408-45f7-b028-83e4c5979f60",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61697eba-f96f-43d7-84df-1028e7aae4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac26f80-4c97-4919-9408-cafba08d240a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57266d0a-e4d4-453e-9ff8-da0d91d4463c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92b91085-a768-46da-99ab-1d374aba2b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775b04a0-24b3-4f13-a9a7-b04b0013475a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2061baae-17ea-4d8a-8863-d8c09f6cacec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7c6abd-7076-4e90-8e80-4dc54f1b54c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c26dcdc-bbcf-432b-9603-cf51a3eefa27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4be830-a240-41c7-966a-49c981fe74b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba12ce4-c170-493f-974d-d830f8698cbc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4b2d3d-186e-435b-be0c-11aa368214a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932b4a94-abbe-422a-bb9d-2b212625f60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4503a858-dc46-402f-a457-968eb761f3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd3574b-e0c0-4eff-9723-b12ba075f0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4fcc3c-df2e-4864-8031-8bec8d90a240",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6564360f-67a1-49da-be9d-cfe9f328c0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a985379-2175-43ba-929c-ed7202abdde1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b21ac3b-29f0-40b2-a834-4eb94d17e8ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4418e6-a6c7-4bcd-a8a7-b511435e06cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1f3c4a5-3a52-4535-8f83-4670e4539d02",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f881786-e97a-439c-b211-3f8a1b077d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b0d6c7-e433-4a0d-bdb9-0741c9bc5811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7564b8-8153-4dcc-b2db-8a93d3642971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf9e702-f424-4970-a0f1-6dc798e90941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4b0fbf-b8e6-4b94-8457-7ca52fee8126",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "111048f5-7c12-47e6-bc31-37daa6c60f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04878752-2a5a-4664-9961-3393569dc15d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a09932-2089-42a8-a176-820eec52f3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5c8402-bcaa-49c7-851d-bb556e46833b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418f37e1-374e-4469-b426-701f5a61196f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca1cd23-6994-40c8-88bf-560e38f180c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e2be91b-6d54-489e-9093-2b40366021ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca27f131-f44d-47a3-91de-cd9ae9a58228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8766f5-c6a0-4aad-8be2-f1f43827bb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e2d6e5d-4a2f-42bf-a7be-3f0f1751ce54",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c15548-7fa0-426e-846b-4ba5cc681ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d9388c-c74d-4581-ad97-73794915190a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af3ca7bd-11fe-4e86-8336-6d5b74d8eaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "024185c1-ceb0-4b63-a0e3-fed6cbdaa053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbfc721-a028-4f6c-9cd1-c17480a10746",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1af7d1-4ecd-4b3f-87a1-bb5d77ab1265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bee28df0-a009-43f1-9a12-b18aec999a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab694bce-040e-412a-96bf-e14589779580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdfe9bea-2181-4a4b-9497-655b4845871b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879dd353-fca8-4aa2-a07f-9e445c977571",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f8b089-51ce-49a4-a20b-f8daca2b403a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11342616-4e1e-4ada-8fdf-6d01b6a45cf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816e1a56-d27a-4640-bdee-9aaa367b9706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4942308-cea3-40c9-b35b-b4e5e27d17fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355f8ca2-b7c6-40aa-bbe4-88471b881f40",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f99ed7d-380f-4e99-b266-830f11fc395a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff352ef6-6197-42be-8922-f5755791addb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c50a9503-434e-4441-9c82-a9e739ae3f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0edcb33-4720-4112-9f00-aaf199d30bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8212e1b9-d4af-4279-8ab5-59c2b7a8a2f9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b1b87c-1dfb-4c7c-8807-484452931c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d85492f-e8a7-49ec-9215-e404ce5385d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533e0abb-40d2-4361-938d-f62b6364bfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6ce743-2a48-4b1d-8cd4-662168d1e960"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74a35052-92ae-4f6a-b6d3-ebf679086ac7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b3f960ad-1838-45af-97f8-6ba62e69662a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a681e0-8a4d-4fa1-b8d8-feb8aa6d5184",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "200cfd8b-9496-4546-a4e1-1a3297be091f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ac71b6-38ca-4193-9a73-2fc8b4bf8c7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18a2b3a2-03ef-4cf6-be38-1cd92eb74e1b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce02aa02-38d4-4f32-8db5-4e231665f2b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8664d51b-64f6-4d83-b57d-ead599639b87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18a51fc4-a393-4c81-ac13-dde6953a8315",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20bb91a5-7e0d-4c12-9d92-097ebdacbd0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6aaf1c2-e6cc-44ab-b4cb-7b8ac0441f4a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5b2ec176-4d6e-4990-bb86-79886812185d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5671ebc9-77d1-4e1d-b572-b1070e52544e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "63c535df-3240-4f9d-9a65-88331c1d59eb"
            }
          }
        ]
      },
      {
        "id": "b3c8d8af-93b5-4c8d-a2da-6cff19ad87a3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a598ff35-f2ea-4b4e-abb8-d07694d6fe28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83aafe1c-5b1b-4b4e-a09f-b88fc6afdab4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ed6aed34-72b5-451f-9546-abc4b341b139",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f004fe4d-c869-421d-b47c-00d2a6c2d3d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b409bba-82de-4888-9ba3-dff7dd512b58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f11b08-e80c-4432-91bc-1fad5dc044d0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30bca1d-7889-4da0-ae7e-033f0c149516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60991249-9ac7-4ebb-897e-ed7d6fe4d181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a198b59-67a4-4e4c-858c-7e65140c6eff",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e847a8-5925-4852-96bb-43875f6c004d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89e7c334-08de-4344-a93a-e7051ef7f071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1203d6f3-9d8f-4ff7-9ec9-08ab9ef11951",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b881f5-5e0e-44b0-9c7c-752a41ce6c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9dbcbea-1915-4e58-b060-93d983627d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41518bdb-7e0b-4217-86ff-fd3a0a9e539f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a54849fd-6341-4800-ba18-814912fe5423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a06627-9f97-4afd-baa0-4a7b94b923b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f552ae-d1d9-49e2-bc0b-4f56701cd91d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3635208b-9183-41fd-aa57-cd576481264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9de901c-5050-40a2-8a31-8d51a5ebdce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c81192-d2fc-42bf-9ad4-b976e9677347",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c863010-0dad-4841-a146-0e8742e8a6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0427ced-4028-4a3f-a8af-e6528b90d9f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2ddb32-a467-4cad-a518-f145d4a2ecb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14ef62a-9d02-4d57-bb70-d9c462bd1d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08abf775-376a-48f7-b716-5f9e848303ee",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb8307c-afb8-4224-9406-fb45abdb9af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4329f73-7ed3-4a8d-b68f-37e82881f863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18e1198-d1c2-4d42-b43d-e3a20aef2739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef29ac00-4451-4b85-822f-47be6c3a8e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d618b4a-2c14-4ef0-a1a4-967f31e54737",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f10cbf-3d64-4237-99f1-b3e3255bf5e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaaa62e8-5214-4a44-9f40-a571bf66e3e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d591f6e2-8849-4701-a635-fe51bc397d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5b70f3-cbf6-4a76-b31d-278eaae80106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f03809-178e-4b91-90d5-39de02471da2",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e049c3-59b7-402b-9521-5fdc936e8eb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c24719b9-cc0b-4725-813a-205914c609ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "660dd412-0908-483e-a39b-87aae348d139",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd71f6dc-8b32-4024-b8d6-4ce8cf33393d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdf2a8f-3f14-470f-87c9-f9d36089b8c3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a859205-6241-4e1d-a1b5-991f81e2237f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec7d4fc-0e30-4d6e-a40c-af23ea6c664a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f9bdbe-babd-4f01-a719-8d6215ac01fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53393572-d724-4f22-9180-57efe9c6bdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4223a99a-0b07-4148-b08b-14cc75a31344",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482b7fb5-e5fe-47db-9ca3-da1a8ca16bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33edd85-6b6f-4c27-8c70-2ff18f7e120e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c15375d-db9a-4d5c-80c8-0ef6ce142cf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a2aeda-0b57-4aba-b3b8-d270a58111da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a24af65-bea7-461a-b4d7-670763658d89",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81a02626-737c-4b40-bee1-dc0478e40cb2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6e6ffcf-2e02-4466-ac18-f22cc61c94d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545d9537-74fd-48cf-8c1a-407b1745083a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e904773-3668-4590-8099-9b21c4b53e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fe15ec-1753-43be-b2ed-a4de035d49ae",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ff4f82-07df-4aa6-b5f4-a56460195aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0e6fbc1-1848-4767-af9b-7a2221b9488c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d177ae4-b967-4b8e-97d6-d20cb31a76d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5548ec8-c4bb-4f5e-ab5b-87290bd2c2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29de2dd7-f02b-4187-86a3-026a7d722f6d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb614a0c-73d8-42b9-8f27-539dfc3b16d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed898dbd-a4d8-49fc-b263-f32deb955daa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1cc528-59ed-4260-8250-b4fa707cd758",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da0c164-710d-4f5d-a31b-fb419a54533c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34643376-2f9d-4e6a-9e81-d188abd1fde2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054eb802-2010-4332-b639-f7da8009e707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5217f71e-394c-4f25-9d66-f73179e41903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07370af1-80db-463a-8eb5-63a4018bb282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0e238e-48de-42b8-9022-ce4fe8c389b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f3f377-07ed-4ca5-a813-8c5380e5d0be",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e9fbdf-1b42-4f25-8427-f2643752b965",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bb9413-4c98-43ab-8a1b-9ac15efda0fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d4ae6c-f078-4a63-ba2d-9836aab65754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a401ca-e7aa-49a2-a54f-9d92dc28cda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26eb692-6b8c-409d-af04-6d4130194cee",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca74c23d-6fed-4d61-bcf1-9cc20c5bd4df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6ea22c-422b-4c72-a784-8ac7f1f06152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbf9cce2-c6fd-4d1b-9c3e-6309e0f03daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc097632-bb8d-49c8-8c45-0aa199576a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c900d3-7c42-46a7-817b-41909e17cffb",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d1c09f-e181-498d-b244-f29826f06202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb683b6-08c1-4f3f-9ba4-b7c7e8b25d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "309a75c6-885f-4fb4-9872-5d980f875295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6061dec1-2433-4d76-b532-60b2f3437909"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d61ecfe0-7823-4ab1-b94f-f3f61f13657f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "128c7e11-8488-4296-aebf-41727f21e055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d86e7a57-f8d2-4035-aeac-6f1883adc669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7584a61e-058d-4259-a1f2-d11b949d1cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c4bf25-70e4-41ce-b293-c49adbd8f4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1de0413-4b49-458b-9a87-3f03e211fcd2",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c2864e-1b1a-4dcd-9397-5a1a55250482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5debbb-9a12-476f-9bd9-c3e85cee0c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754ecbc6-0f0d-42a6-951d-4790416a8364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbaeb87-2e84-4541-8bc7-106fa17538bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15ea71e-9710-4638-877f-e462618a73af",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7403ab-c0ae-4e23-91d6-a0cd183b3010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926afd4c-cf73-4494-a997-fa9fe90c775d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2944473-3de4-4cbc-a03e-3cc33d9d4eb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5ba2bc-2747-44b7-83f7-b36a6fc9a0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83766bd8-0af4-4f4e-8d94-24f7a3de8599",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ce95b8-cc23-4fcd-b03f-fb9dd18b3a79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbef160-df16-4ba1-8d2f-85f3cfe7c54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2370bf9-36bd-4e4c-a87f-891c63d91815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067d24ab-89d0-48d6-9ede-7096efbfaae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19214413-7aae-4978-a350-0a5f0ba89e19",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb40298-86ad-421e-9320-0bc9b1d1916c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d144b51-80c9-479b-aaba-c3d77bf60975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054e97b8-49b9-4c19-b9ab-6ee28979844c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72909c35-eb9d-4bcb-afa6-635e093965e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb70fbf-f6ff-410d-bb88-ebc864092126",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4070cb-3576-4171-a959-ac92e229a9d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e04b82c9-d30e-4a62-9ac0-d7919ca15529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bebb540-96df-4214-abda-93a66fa14285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e272be53-c8ee-4ca5-899f-8c68f6decb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78a9d36c-79d4-4e7c-a73a-3abb0878eaa5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3204fb6c-126e-4054-bb0c-cdf33c4926a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19581656-4581-4357-bc17-086d17e9534c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4587345-46f6-41c4-bd54-813adcc4c6e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb3fb70-53dc-49a8-800e-ebf5f79ef3a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ae663a-476f-476f-ba99-d6a27ecfbf6e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878000cb-4863-46fe-a1c9-b5cb1159f992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "334b4090-822a-4a9b-8dda-73ae7eb391b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4380743-f20d-4b78-bcb5-48023ae7d161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6408fc-2961-43ee-8d83-d6103d4fabc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e995bf-6458-4288-a346-1673cd496cf5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfb082b2-2b96-4b53-b2ac-dd38e875ec4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad1c52e7-f62d-46c6-8e67-d152c859ca72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84eec64b-731a-4fcd-84fa-f5b512411ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33e17ebd-78ea-4950-86a7-d737b29e71f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08991445-c45b-4bcf-99a3-858051edccc1",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eacce16-517a-40cb-9684-c9aacd64bac5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba6456d1-7775-441e-a336-dd0e4559209e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51e4cdb-6e0a-44c4-96db-038335e1cc5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a827a0-1c10-4618-8845-e6051a76b569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74135a6c-2511-46d4-bf7a-59f96e61a3c6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ac8a1a-2a46-46e2-a0d8-7386125a6c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0db00b52-f374-4c00-b970-d33138cbfb6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5773522d-8390-4405-89a1-28c0256d6880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a234f6f8-8996-492f-98df-272472cfe84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2fb5deb-687e-4490-8339-072c63f1d4b9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acaf7b95-2aed-4a57-a1b3-195dc78bf6f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "652e2e05-30b5-4d5d-b78c-364cb4660c80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aad0d47-961e-4052-97da-8aa0baf02145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4fd9b29-ca47-4dcd-81cc-062d8a6d9b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b79374-4952-4939-8398-5d1a20e85559",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ded4f5-488d-44db-bffa-ac7512a5e113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385b4736-d2db-42f1-9a34-8f6064f98518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d594e9e6-7ecd-4825-954d-34675f4cd847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ea96d8-6910-4e21-89f3-85352138ed78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fdc9aa-96ce-4b47-8521-89b53c66b97f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39bb90e-3240-4e22-bcb3-9592b2886f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dc28141-287d-480f-ba92-073df48e9025"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3079a930-5c22-43f8-a841-e33524b54458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b97bec-df83-41a3-8159-9070b04cd9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9fdeaf-89a6-41f3-a415-e5e9a5c433b7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3bf0b9-a279-4bfc-845a-c5b322bc58d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afb35b21-1454-4a97-a1b9-1e6822f958b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a17f9ea-f0a6-4a6e-9e6e-e237b57b3e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b55077d1-f58d-49ca-a349-62ea9a47076f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ef71c1-e66f-4d02-a4c7-f3e12cb9a73f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9331b45c-cb6b-4276-86b9-fa38ff0d7981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3aba5c-d7ee-4bb2-8791-44ba9845725e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6473a781-a314-4cef-968c-edfd60ab8c95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3f7bdf-252a-4996-b52d-83d2ce96401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91afcc13-ffc5-46a0-965a-b6e9ef2faa65",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73bc593-0aa9-42da-a12f-a9972d41e85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20f1007-f4e2-473a-a096-8f842824adb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e2e931-320b-4faa-8efe-b4fe1df64bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60dbda86-33ec-4d1c-83df-b71fc597c648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782ac56a-89a5-4dd0-961e-eb1b4865e8e9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f762841-ec6d-4c93-b659-548bdc1b27c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6431a35b-e973-449f-8cda-b973b2055dfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c664cf09-0552-4164-9ea2-034bbbdfcd8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7010c690-0ffe-4d7d-b9a5-a6bd37d2c3a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b41dd27-4c37-45df-b665-592b62f4c9fc",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6bf3ae-67a5-4ad2-9913-afbe27023ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e2c10c-2f15-4410-ac74-ffca6ec97ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db69d946-e479-4f82-a3e7-929e635d978f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fc9d51e-3ea1-439b-955e-fececaadd0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d852b0fa-4d69-4cf3-8a12-2c998e5b90cd",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5049c214-cb92-404b-a979-795dbe80df83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25007d53-58de-4e4a-a81f-f4ebb6145065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e890c317-ec98-4854-b688-070510628080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e903b65-6f97-4502-814a-ed1c39d4356f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9dec06b-40a3-46b9-bcbd-a3b70dea0bd0",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02dcbee-1bbc-4936-a929-81d869d02df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2a0c8f-3ddd-4392-8800-415f04f52a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1beee67-60e3-46ca-91aa-380b7b5f9777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4b42eb-55c7-4437-b341-ac7a1c6d8165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d3fd36-e90b-456b-a701-a9e94dda49cc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f885322-e647-4c46-8a21-8ffb39019a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b01f2e9-6c04-491f-9d4f-6b897169ebf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a8cce16-646d-4890-9aa1-7f4a119b9f21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "566d9126-2be4-490b-81b7-4e4ab5067d1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007ea822-86c1-4382-9986-2304487f1ddd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6984723-0b69-4312-a153-25ca75d6aecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d1b01d-79cd-48be-b8e1-d1f1a98aa74c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "539fdbc0-daf7-4c4a-a0ca-82350362c49b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63051a8-eaa7-4c8f-9c0c-7b3043b52da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9542aff-e416-41ae-b041-e63b34475e11",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2402fe2b-38cb-49b3-9996-e0b0fd79f8e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c5713c-bb99-496a-bc13-fc671e18cc16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e3fd95-2f63-4580-afab-e70910bbfb48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494e18f2-0beb-4745-a741-63be768f066b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767503d7-d110-410f-9cb4-3369dfbe9da4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcdf5ba-37ec-49bb-9b38-d6f7cbca1846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdc48955-c106-48c1-b1a4-50daf3c870b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3744df14-a089-4014-90c6-8a2c25220cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694ee5cd-8a0b-407d-9c8e-aa3d884bd46e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfb106b-c789-4ac4-abb7-04fff9a5a390",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb864336-4627-426e-8188-19d99dcfd5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31cf4676-95c0-4fdb-a540-a85d8e61c50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "403cb7dc-751e-46f6-8a3e-2293290d4efa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b3e4e9-9131-468d-b043-97112738b349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc853922-a7b7-4843-9d87-5b8947c0699e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03488942-ea9f-4ed0-abbf-1a12b743bfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "181f308e-a9f0-411f-b3d1-1fefa0a398c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e4b0c92-9eb5-46a3-b9f0-1bfeaae95235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a998db8-6921-46d7-85fa-479c84be74e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e62fbbc-e819-4ec4-b139-e562d791af0a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850f0878-fc40-4d27-8118-a1235d10ffa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e908cd-e885-43b8-aa99-c4ee19ac2e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbff54c-5918-4096-85c0-945154d83e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6adf0ed9-533e-4b64-b3e1-37ff89cf1d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8a9146-7f02-44a0-b012-e1ab357e6d27",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d38b6b-2c78-40dd-a90e-3095f470cf51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316edba3-a7a0-400f-9d3d-c120e39f3383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be22d90a-e46b-42eb-b51e-60312517b5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dc66e24-4cb2-4148-9d6b-e67c52a7eb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a17d0f5-0a82-460a-b34e-db22c6304688",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318c29ac-aa70-4496-95fb-3e9931ef6c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2467fdec-f8fa-4c4b-a413-454e2d5b5d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2028c7-9365-49c8-8a8a-cdcfda41d2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f775d53a-d192-42bb-9ef5-eab64672e5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5810d6-9010-4aef-9a34-cb352ce09cd9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7257d38-5f57-4e75-ab40-abc1736a6209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39eb22b4-1540-474d-80d6-e8bbd70723d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c08c2d-b467-4bc4-b7b3-a7d3c142db84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4ef4cf-17d7-4741-a2d3-8f914a4bb723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d723412-b84a-4c76-b696-ff5a16e7225a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaed52ae-7a4b-4813-a82b-dfd16722527b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "088a11fc-b336-4e7f-a4b8-aa83e3b82330"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e232cdd0-0a92-4a29-9664-8f669cd34c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df888671-7781-48e7-a7cd-97570c3d62b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577f8ba0-4233-4d5f-9a29-50d8085a80e0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a540304d-edee-4884-9c94-3129ad46f441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e742a0e1-82b7-4906-b5d5-846c227e0f6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0451a9-d26f-4eaf-b52f-a345daef8c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aa67bcd-7cb6-4cdd-82d7-66e2e60fe786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5c0a28-c0b8-4bf5-a429-917f5d23839d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c055e9-07a5-4da7-9199-ef2fb4a1a027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e223ff1-74da-414f-89ea-d3095dce668d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d35f29-05c9-4c1b-aa0b-10963a74a704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b5ddff-c014-4767-9a06-087359125871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5b772ae-b8a3-4f3a-83e9-01958823c752",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b89906f-3f08-4064-9060-85090b4408c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde4139e-f1df-4c87-826f-c452cb2c0a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "537cb828-282a-4060-a277-e7aa80b54ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c39af367-efa4-4601-8c10-449d8dca9c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b98f1f-bc07-4f23-91ef-b5477b4215f7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "005b77e3-1c63-451e-a606-2c18f797abf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27763c63-f88b-4af8-a77b-8607992eee22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da61643-a869-4cf9-bb69-ce3b5e51761f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60340d7e-122d-4ccb-8a09-a66276ec1ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04051806-056f-4f6d-bae4-adba655a757b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ad9cba-4669-47fb-a963-61e6be2917f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f69bef-40fa-4419-b99c-7a3dfba31ba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ae7bbb-b333-43f7-8b48-c6a514d51fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dd92e66-f347-4142-8bc6-00b1848dfef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6cc424-a4a3-4b9d-8060-e5816d3eae1c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e955d088-ef74-47ab-9654-613af9826051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dfac597-acff-4852-8dfb-75ba03af4ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0dfaae-7b46-4a96-98e4-70fdc60ab95f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0c72fd-0648-4d07-82a4-04892599bc7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b96f756-b58c-4bb6-9060-3ff01466a65a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd9c6453-68f4-4693-a330-f34468a9bf42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdd1740-aec8-403f-b25f-9b7d0add6a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47192792-eecf-4979-83c4-f5f63922f55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba330172-be5c-4ad1-8d18-bddaaa9a7796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ff31c5-61ef-4c2a-92da-47871195276f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff639345-0f51-4bbf-966c-d16ac5cc1e5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce42ffd4-ebe4-49dd-9be7-17a735edf4db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7648704-af99-487c-963e-6e12d5b7ddfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5fdce2a-3157-4eb9-a7f4-ad1f3a3a7cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593a0b5c-6026-4b77-b5e6-02a3762096a8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b61fde46-fa6a-4a2f-be5a-36b1666fe36b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f431f30e-7d4a-49d0-b98f-1f7e2b13e52a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac8e284-851c-4776-8380-e7652ec2a5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c17ab3e-3e0b-4c70-b565-db9efea113b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7815cf3-d6bf-4e56-9c87-a3de8e9cbbef",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9939d1-76b0-47cf-8641-c1832560448f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b7e494-f50e-401d-aaa5-53323675fea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868712bb-ea53-459b-a7b3-e5134aefabbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5f86bb-ce29-4600-b76d-c89c73163d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fea2b388-e9c0-4995-a9d6-e4765576d779",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc15e103-082b-411d-95f3-1f25ec09da5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69289f3d-8bfd-46d0-b3e0-64fc1b23c126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fbf4bd-eddc-4e96-b7a7-060a1aa59904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a07739-d2e2-4f34-abc8-1967d97952fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f449469-0090-46e9-959d-849873e81ce7",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d44ddf0-3010-433e-a7a8-4832c621acc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda06135-7440-4f70-b84f-cdb6e6b1d7d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f543bfba-4ed9-4f2e-8ced-69c7d456845e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d337e0-e19a-4b1d-8ab2-121efb4383de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca23d9e3-8ed4-4d54-b00a-2c9206ec4c58",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f44436-9cae-4bc7-a3bd-16b97a72e6c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232c3b52-8e16-4759-9a46-072d3e862f7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4108ce1-3e31-460d-9786-542f9b8fab6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753ca5d3-6962-4154-bb7d-e9814ebab499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c481bc-7e7b-43d9-8c7e-57cf7fe9e50f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85680df2-6584-4323-88f4-8c56366a81bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72661313-1c5c-445f-bae5-a1ae92779e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5aa4ec-b056-4dd8-a03c-fe3e35387823",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af3a41d-4cb9-4f04-b518-76cc3c417c81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880993f6-07d8-4e71-8a04-3abb37059264",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffb75cc-ed3a-4471-9736-fa169145ffa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc19b72f-05b8-4366-8ab0-323ca84d7298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5383c60d-2e07-409f-8196-3770a2f92af4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c67e14c-ac42-4c1c-8c54-95f8edc99450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eaf473c-b240-4dc2-bf8f-85d0f7647f82",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178f1a71-7b41-4672-8582-c9e6a06b3cf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904d8567-dae4-47b3-95be-fd2828fac529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fc8b385-3f60-4f2b-bd73-dc8e3dc32a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b33e1d2-0967-44ef-bac3-a6ad91a88b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063adddd-cd3c-4156-bfd1-b8a261bbb9f3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f13db63-2b5e-47f6-8dac-3e9502981c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14748dc-769b-4b46-8f93-4efad05fa696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c48d80-5a09-42f1-bf86-d00b527af0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cb26c3-3262-4fa2-bcb2-4c806987a285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719b8524-1938-42b2-a7ab-4a6da66eb5ff",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85b2d3e-410c-4fc1-b0d5-89e5b6ae483d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca83073-b7ad-4265-a8ae-a47d89ddc094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "302ead07-27fd-4fc9-9ced-4116a1c2d36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af03d6bc-3210-4d9b-aeeb-02e455178367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f0772b-293a-430c-9978-507814b91069",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55f5c08-6004-420e-b38c-8fa7e26aabde",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "739e36be-d3ca-43e1-954e-dd1781254eb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a193ca91-da0b-4f64-962f-8775558013f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6811cb21-cdaa-4662-816e-9f4b8070e663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9e4bd00-7588-4049-93c7-3bbd9eee5b13",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5985612f-5339-408a-a847-aa463f20e7d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd461b68-9943-4266-95a5-820473b5c1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94eba9d-0d18-49fe-aad7-cd15312cfda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f69aef-8111-472a-9416-458bc7ba9f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8e15ad-9a52-4379-a1de-3b1220d0c9d7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7b5816-3d57-4f1d-b5ba-21964d7c83e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c784b54-6e60-4446-a1da-7afd5827610b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa78711c-3aa9-4138-8213-cae9bb04fdae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53832166-3721-4576-b4f6-7d7f17aadb30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a2bbf7-115c-4bee-baf8-ef7d10e1e04d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540ee13e-5191-4b5f-8c54-ebaa79bdbeb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5467e4cb-8db7-4ae6-8fcf-31cd9c11ca4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18941a7f-6204-4669-9531-c2df35d7ded7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f93e44-977a-421b-901f-6bd4d1c70e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2a0e7-2f80-43bf-ab1c-2d73b6622032",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d2e502-de1a-48d1-b642-105fba02d063",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22b971eb-095b-4ad6-a238-612a17fc74af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477995ad-9482-481d-951a-e3ad5db22204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e949238-a53d-4924-8466-9c75be1fcb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc434df4-8718-4e4f-948b-d100db9f52c6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa885bff-00e2-4e70-8935-eda162a14fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bb7e9c5-5eb1-484a-ae4b-06ef2a1862b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af62328-870e-42a4-ab12-c78134797ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c73ba9-faa2-4118-aa4b-f2f751d4f725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08c9812-c9d9-4d13-833e-290fc71a2f2b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568f05a9-265e-4374-8e56-8aa5aacce561",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae79be82-42f1-4331-8f1d-da752788872a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e477d5-943a-4f58-bc2d-0d5070b3fd4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52b9afdd-6b5e-46b0-9f42-666da7e8fb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ca27e58-a833-4487-b35e-4d229f48f019",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66e7c04-6411-4302-ab9e-061cc49f4976",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcc870b4-9888-4a3a-92e5-72c3cabdf198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5f8db9-ec8d-4cdd-b5ec-9ca7a69568db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c344c4d-26c7-4604-895b-1b27cc058662"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ab0965-7e27-40bb-8851-719c6e3a1eb0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b280a64b-542a-40a6-901f-68352e12c04c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95f51bf2-1278-4bf3-b112-6c99da9987ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f974f2-ffc8-4cd8-a198-79f43a807587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9eaf407-8856-4252-af6b-ee7cdb6cacc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716d7b27-7043-4634-bdd0-3425490867a3",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a917c4d-03c1-4879-83d2-9d813c5613e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e9cddb3-d134-4274-ad1a-3fd0f6f361e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b8a190-7eb2-46c1-875f-557fc88b09cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89d55861-1876-40e4-bd2d-481f00526904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388e40f5-951b-41f1-85fc-da717b082aad",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a572c0ac-6ca4-4611-9703-f202edd26981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194d7d74-ea34-4035-963d-9043c0f0699f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1687424-5dd1-41e3-8d51-6a38d2403858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ddff495-a3cd-49c0-8224-1ce8f3cf2c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58c17f27-73a1-440f-8a40-e41c0e610d6d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397b124a-f211-4ba4-87a7-82aa3e626d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9807de13-341c-49ac-93bd-71623db165c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cd8984-c2c0-4f9c-aca5-0deeee8b7f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46101ac0-b317-4cef-93c4-f35a2a79dc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45344c50-d4d0-4035-b62d-aa737625e1eb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180f6c3f-3ecb-47ed-b396-0119793210b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b51a28c9-8256-48ea-8fe2-ebd032ee6df8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa5d257b-fe69-4932-b6b6-f37eb432ed28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7b46b7e-8fe3-4826-a2dd-b79cd8e97c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7303a9-fc9f-4d8d-8127-e271e6584769",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe0c840-e0c8-4436-8287-561d33e879ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06f34e6-94b5-4770-bb0d-bdc43f539370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c657cd-7317-4dc9-96a1-5a608ec561ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8039ab4e-8a23-471f-8130-f7181a2e7740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cea79c3-76e9-4e5f-8700-807c8edadb69",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de6fd1cf-ed45-4957-8992-ba98250db653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9a2b8e-25a4-430c-8694-9306f69b33e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cedd748-b620-4a86-8585-3d3ef31e5dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d513fb-5306-472c-9bb3-a842ca2477f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed35a51-4f7f-4a15-b719-f633078d07bd",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309d6fba-a64a-4957-a6af-d740dfe84b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354722ef-d63f-415b-aa11-3dfead274373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ec4201-7c6b-40cd-9f86-46979f6cafbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f28b283-ee0b-42bd-9e57-809214e5b2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc666a5-ab72-4deb-9bff-26e7a5672352",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030a2f05-9562-45c3-bab4-df1cd8a26574",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f34dfb6e-2c2e-419f-8028-7414bf1cd4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08581399-4a36-430a-9049-7a12d52bd7fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "805dbcc3-ac33-45f8-abe6-e687c404fe25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "954daa71-dd2e-499b-bc12-c4552a75c85f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51800909-36c4-4595-976d-1a8afe2fb778",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2313e7c1-4068-4644-9815-0025b7d009a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8bb29a2-1f4a-4148-8626-5130d505d067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64cac21-4248-491b-ad3d-0a5ba81f4de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852054bb-0b17-4f23-bc3c-09a0abc03bab",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc8abb4f-282c-4338-b9b5-55f931e677de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e818e2fd-036c-460c-870c-9986a13014bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf99526d-9e46-4708-8bc5-fc56163bb41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d4686c-8c5e-44d3-964a-020d0b6c27e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d354ba4e-e475-4c19-b33d-e0edebb5927c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a66b08-a8e6-4e75-8f0f-59c65f11594a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4906311e-9024-4df1-a34d-a4174579932b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61bbb07-54cb-47eb-9b94-3184164f8bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68146e2a-911c-4cee-aec2-5bfdb9e5d7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3fede55-7674-41ee-900f-6fa5ff6564dc",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3e4b79-1e9a-4e7d-ac18-592664d205f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4b11e2-3e15-4d98-a52c-6c5303444c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0d5a3a-1979-40da-9f91-8ce32ac83f2d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6140eeb2-16fd-454c-ad0a-9dd5e369c70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a78f6b-784a-4431-8af7-3861f2263a26",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7611ce6-d150-4a64-9fd8-12e2e2315731",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df2dc505-7bf5-4f5f-bab0-c102a2deed42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3d26c5-c3fe-4fe5-ac98-642a41589a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e46f111-80e1-4778-a992-2f9a1bb8e606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daecf1e0-ad7b-4467-ab88-339293c2b371",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628e6025-76c4-4fa4-a078-ad94b79ac16c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "575c40e2-0591-4952-b136-bab5572a4eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a975e1c1-ee62-4c72-ad4d-b7bd640c112a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776bf241-6dfc-4a50-9f11-6d89122dbdee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e98b2b1-c597-4b5d-9f45-f6f58d461cd3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc362ff-109e-492e-a22c-7db2fbcdbb5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "574e1451-a51f-4b48-b02a-782e3841698d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1874b173-ff24-419c-927a-76bef9f95c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e773f9a-fddb-4ad7-a3c7-4a381d39a2c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3b8898-2efc-4ef5-9639-fd08401dd99d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad93e6c0-cc1e-4e16-b039-d426d0f4a945",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d616a97-62bd-4c41-b708-9e5024932548"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37273aff-09d8-408e-8abc-0e896e0f8484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4531f09-972e-4381-ba91-2d69f6bdaaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2526220-8337-4721-953a-faea5f41ab8c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05562d0c-2c72-4154-a0ea-18f882d504da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a843e06-998e-46cd-90f4-ce5801e4e8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8f5feb-c88f-44d9-994f-bde8e7185b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4053f631-05b7-4ecc-9c1f-7b2ee8af844e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e22e72b-b8dd-4e37-a747-69229e17529b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d0814a-0266-4889-b679-6aa471f351f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce0dbe38-0694-4144-b77c-f708382b74c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9f8ab5-6432-4057-b345-f502d95a90d4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ce405b-24de-4dfd-8d85-37fd2992cbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8307b2cf-a3a3-4f2c-962f-787e54bc775d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfb487d-393a-401d-9d01-42477c58d9b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da59dfc8-fc26-48da-961d-4559ba9cf94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19fcc2db-afae-4421-aafe-a458b00bf925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fa40232-5ca5-460f-bb7e-0e00bb4aaa49"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "909bb0f6-0323-40cb-9d34-e39dd756e79e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd1e40fe-6c1d-4bb1-abc9-dfddc806aa16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a569563f-37f7-4a50-9d07-4d91ac1bab55",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6a34de6-7d80-4df5-9718-a6bc190a21e8"
                    }
                  }
                ]
              },
              {
                "id": "c566c5de-c9e4-418b-853f-bae849118019",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "202d1757-51b2-4ac9-93d7-5ce85437830c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc048409-be0e-4431-9193-2394f6bd7cfd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a32e704d-d89d-478c-9f21-2f39bfcd16a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb5dff0-05c8-47f6-b19c-cde36f62a694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "81f4ada2-946d-48e2-b747-b36867369515"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16daaacc-1764-4ae3-8d19-935bb1adf544",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "04e01686-c2b9-407e-8f74-1c82704458d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5699d3a2-b886-43a3-8676-42be61dec95e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5041d3d5-7c09-4452-9393-fff31c8bfced"
                    }
                  }
                ]
              },
              {
                "id": "f4c72dac-4979-4299-8c09-3fadb07064db",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "257218aa-a81c-4ecc-9be6-a17475f5c28d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e003330e-0a5c-420f-b7b7-13d020d5e5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bc4ff1d1-93a7-4935-9cf3-0d2f426a38c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cfe1a8-04ca-4a7b-b2b8-d82fffd24a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b427183e-0bd6-41ec-aa1d-b06f869681f9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52f09fd4-fc2e-44f0-b65f-8b11c39a1257",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ec9f86f1-bfdd-4cd4-b741-22497c3d9b6e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d76eb577-715e-41ed-b03f-1d23deae11e7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a5dbacd8-f7bf-4471-a268-0e61b9b78ad7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55e1769a-8be4-4e53-b675-13cac5898f82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "770ed1fa-d32d-47b9-813e-0d02cd509c01"
                    }
                  }
                ]
              },
              {
                "id": "3555e8a1-74d9-43dd-9ec2-aed188ec0dea",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a58aaddf-3347-440f-ab1f-554891ab99c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d2e31c99-e2ea-4e3c-bc6d-112d5e608ab3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29a6f254-c6ca-4c94-9767-013aeda302b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a609525-15aa-48e0-80e2-1e4be13de670"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33bf44ee-d82e-472c-94f9-15ff82a4dd41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "208c4e6e-4268-48ab-ab7c-aa37169575d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43fe9f11-9c0d-4899-b96e-e516d800c98c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4af8f6ca-22a5-4ab4-928b-40b8182f25af"
            }
          }
        ]
      },
      {
        "id": "65432e08-57b2-4f2b-8b95-084a1b8386eb",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "eca9f3ca-f877-482c-88a6-90d0ab8f6031",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c51f0d7-858c-4c5d-b557-b6ccc82c76c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ab5cd0a-a87c-44ac-b7eb-bcfe53224ed6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9266aca-cd1a-4d94-aee5-905216e21734",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "842bc486-1afa-47f7-9139-b9768973739a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0274fd5-5380-41cb-baa7-2cfe3e014396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c600f2e4-30b7-4a57-a563-32ca0f30cc33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c2c2f8b-4a3d-451c-aa6e-a4aa8d165487",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f215e9e-a761-4bd4-8cb2-c8a480411c16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57b064d2-01bf-4863-882a-fd0256df768e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "271d59ab-92d9-4637-8015-944304f7436a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9c93e01d-a09d-4e52-8199-09a6d9592a90",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "56fe7d28-2d00-453a-b55a-e56de45996e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ddf7672-312a-417f-8dce-19693b056581",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7447061-f83e-4b1d-9b10-5a3a2c47fbf2"
            }
          }
        ]
      },
      {
        "id": "ee77ab01-861f-4045-8d5f-d87b7ea3af28",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "246d7cba-6e78-4d74-8b2c-87a3deaf2fb3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb93f016-f307-48ef-ac10-93e80b79813e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e029f4b-cfb2-4f66-a9ab-870fa471aaaf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "184c468e-735f-4026-89de-122cc63dd451",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b010e5a3-f4ea-4090-b124-c62e0bdd3774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e3bc2c-3d12-4d8b-8ef1-6e9551b62578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3235f018-12df-42bc-b2d0-d199044235c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04187575-beb7-48d8-b016-ee49228c15c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e5a9e5a4-6796-414f-89f9-aaac94cd4c24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "544fce46-63eb-4984-8159-c86411a91082",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad9bfa5d-2b1c-4a43-9b13-4b8789ff0b49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ba4cb79-dfe0-4dbf-addb-dd1a55ecdb74",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "112ddd1a-689d-44cb-8965-1ac4cd60bee8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0359d2e-67b6-452a-925e-acda2bc26d95",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c358307-1a1e-4b0e-875a-0d00fba90130"
            }
          }
        ]
      },
      {
        "id": "c6bcb63f-f8eb-4cf2-86d2-e5d677cd30b6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e5dddc4e-3ae6-42e7-8e7e-18f36758c917",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bf0d26d-861d-4745-ad84-0989047e86aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ac85aa9-f72b-44a3-977c-5c6a69578ca5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6183f76-035a-48d4-a9e7-8d5a871065b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5357512-c69b-46f5-b158-2fcbe9634afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7ccb66-23a7-4cd0-9a17-02ad70b35077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99a7bc84-add1-4653-b7b9-841e370e28c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee5f839e-97f5-416b-88d8-acb0754042fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c2661df-b220-4817-ace4-d6475a258aaa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8a5de23b-acd0-4e42-bffd-4d3433bf4578",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7da992ec-2636-4972-8d66-ff6d2cdaf8cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "565a426c-99f1-40a2-8bc9-0707156a2539",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "25829f05-f82a-43d6-a95f-b2ee4446bc7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3995cb8c-dd4d-4d74-8b20-75493bf7c168",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ff3c507-5d1b-4f1c-bba0-1a908901ebfe"
            }
          }
        ]
      },
      {
        "id": "0b1de464-70bc-4d96-96ec-dfeea29f26df",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2d34590a-1a56-4f03-9225-a718f115f6e0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38090d3e-49c0-499d-bdc2-5f01a8ba2c88",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "aec3f7b1-7587-4eac-91ae-78c320071825",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e2595dc-62d8-4c36-8c8d-79bfc5baf4fa",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0e28fcc-0822-4f1c-af2c-26d13529b864",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 186.6031746031746,
      "responseMin": 6,
      "responseMax": 15504,
      "responseSd": 1065.5347050232438,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1724632893739,
      "completed": 1724632948859
    },
    "executions": [
      {
        "id": "fd0e3905-69c8-47bf-a302-830250cbe215",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6e633ef0-c6f2-4c16-9fa1-129c5fb31e35",
          "httpRequestId": "291b3443-bf5f-4ff3-bd4b-88dd6eb09812"
        },
        "item": {
          "id": "fd0e3905-69c8-47bf-a302-830250cbe215",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2c5f037d-b242-47cf-afad-7f331bc5827e",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "ba87decc-873f-4b20-a3d7-2300734916f6",
        "cursor": {
          "ref": "35b891ef-8e16-4147-92ee-cc8fe2e2aeb4",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "60d3a59d-33c3-487e-8239-2f4eabfbee56"
        },
        "item": {
          "id": "ba87decc-873f-4b20-a3d7-2300734916f6",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5edac987-b27f-4c68-a2bd-82cfbcb90a63",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e0f461bb-40dc-49ab-9bc9-7f9b98f8eced",
        "cursor": {
          "ref": "ed17ce87-4163-4857-8c99-b49c61eef2d3",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "374eb2df-bb04-41ad-bafc-6711418ab153"
        },
        "item": {
          "id": "e0f461bb-40dc-49ab-9bc9-7f9b98f8eced",
          "name": "did_json"
        },
        "response": {
          "id": "4aa6cbfe-e561-452a-95e3-12178f5482de",
          "status": "OK",
          "code": 200,
          "responseTime": 397,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbd3b9f-c016-4ca7-890a-1a86c96ec846",
        "cursor": {
          "ref": "c7bed131-5d19-4af2-9b97-3c39c53740d3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be309814-868f-4570-9910-044b51bfe9d1"
        },
        "item": {
          "id": "6dbd3b9f-c016-4ca7-890a-1a86c96ec846",
          "name": "did:invalid"
        },
        "response": {
          "id": "9bc3a507-1c51-4418-be6f-9ae3b27e5b9c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 469,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dbd3b9f-c016-4ca7-890a-1a86c96ec846",
        "cursor": {
          "ref": "c7bed131-5d19-4af2-9b97-3c39c53740d3",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "be309814-868f-4570-9910-044b51bfe9d1"
        },
        "item": {
          "id": "6dbd3b9f-c016-4ca7-890a-1a86c96ec846",
          "name": "did:invalid"
        },
        "response": {
          "id": "9bc3a507-1c51-4418-be6f-9ae3b27e5b9c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 469,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5169d89-a700-4df1-882a-d53701ecc7a8",
        "cursor": {
          "ref": "7830e575-a511-43be-b533-57ca316441a4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1e5b9aac-3d5d-4359-b7ab-76c606685348"
        },
        "item": {
          "id": "b5169d89-a700-4df1-882a-d53701ecc7a8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c6e69de8-ea05-4f29-95fb-dcc5d71e7283",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf54ccb-d69c-4bbd-8bc2-e6e27f038707",
        "cursor": {
          "ref": "408eb50b-6b95-4f9a-94ff-96835fffffb9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1f070b83-9d92-4337-9734-3b117031c7ac"
        },
        "item": {
          "id": "1bf54ccb-d69c-4bbd-8bc2-e6e27f038707",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9c1531c3-e44c-4ff8-8bde-6a890b84b3e9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af58d8bd-f67a-4e7c-9fd9-31a75395bc9d",
        "cursor": {
          "ref": "26f202ff-7ddf-42de-9315-3feb5c2d7728",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9e2de6b2-1549-42b4-92ab-439b91e1f614"
        },
        "item": {
          "id": "af58d8bd-f67a-4e7c-9fd9-31a75395bc9d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "14109309-71ef-4498-ba56-5bdbb057248f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82e954a2-be03-4763-a14b-f9f85c002724",
        "cursor": {
          "ref": "41a505ae-2cd6-408c-a6ab-4e446ca7eee7",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ed2d9117-7444-49d3-9ce7-126880d9ab7c"
        },
        "item": {
          "id": "82e954a2-be03-4763-a14b-f9f85c002724",
          "name": "identifiers"
        },
        "response": {
          "id": "0cdb2c6e-8844-4a4e-968d-8aa6e668c0b3",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04abfe5-3a9f-45f3-98b0-17589787902f",
        "cursor": {
          "ref": "10f7365f-05cd-4d95-8736-8d0e363b20b5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1461776c-7476-431c-8197-4edafc41d2a5"
        },
        "item": {
          "id": "a04abfe5-3a9f-45f3-98b0-17589787902f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7df5edbf-1375-4b7f-ab6a-f4d980a6e772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9512d5-49a1-4f90-9687-e6c449bb58b7",
        "cursor": {
          "ref": "657786ae-857c-4a76-ba8d-14b57ee24dec",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "99bae5d8-c4ee-410c-a5ff-dcc8abb6d1cc"
        },
        "item": {
          "id": "dc9512d5-49a1-4f90-9687-e6c449bb58b7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "56b82208-45e6-4315-82d2-348464380085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c25aab5-aa68-480a-8635-f1efac50c804",
        "cursor": {
          "ref": "3d7c2889-53ff-4011-978a-225ed83fb153",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "112025ef-92ce-4dab-81af-36c5d500212a"
        },
        "item": {
          "id": "5c25aab5-aa68-480a-8635-f1efac50c804",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "63c4f882-d6da-410b-9545-c6f1e8374894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42085587-cff4-4a9c-b4d4-456bf5ee446e",
        "cursor": {
          "ref": "b95334c8-3a9b-432d-8936-2bd2205e6e39",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "45bed834-e8e9-4c77-95df-8beaf81b793f"
        },
        "item": {
          "id": "42085587-cff4-4a9c-b4d4-456bf5ee446e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "25780bd5-548b-4f1e-b755-c897e59b0636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a78354f-db40-46a2-b78e-1ae0e65b595b",
        "cursor": {
          "ref": "c9696227-dd25-4a65-9075-b5d6b8a02a47",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "733522bc-eeae-4dad-b164-59ccb0bd3405"
        },
        "item": {
          "id": "6a78354f-db40-46a2-b78e-1ae0e65b595b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e9111214-2016-4acb-99de-90429a06f3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb6cc94-b625-4280-b3fe-0631c46eb25a",
        "cursor": {
          "ref": "c97e6063-72a8-4128-bc49-625765f9eac2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3bd2ffcc-8775-4bf6-9213-ce0cbfc62b2d"
        },
        "item": {
          "id": "6fb6cc94-b625-4280-b3fe-0631c46eb25a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a0bc04db-a827-4ced-b9d1-0b1f32d48f52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2cae40-75cb-4a80-802e-65a9eb146d86",
        "cursor": {
          "ref": "2164f6c9-c4b1-400d-875c-4c0cfd5c448e",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d8993493-e94a-4d62-97fa-1805ed73f478"
        },
        "item": {
          "id": "6c2cae40-75cb-4a80-802e-65a9eb146d86",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "98988a05-6ca2-4018-83f7-1e107ebdf3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e25287-df11-4ea9-bd56-bf62cb6101e7",
        "cursor": {
          "ref": "5707188e-33db-4d29-b3f2-220b6768b858",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e91e18c3-873f-471b-a7c2-1e27ec23648c"
        },
        "item": {
          "id": "17e25287-df11-4ea9-bd56-bf62cb6101e7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f6af0f5a-94fa-4760-aca3-4e20603c7aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5fd7499-f518-4f50-bc0b-34a1779db40a",
        "cursor": {
          "ref": "2a6307d7-2366-4068-b40e-91f2084ff92d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "94ea9fb1-bcc1-495e-990f-f088f820de57"
        },
        "item": {
          "id": "e5fd7499-f518-4f50-bc0b-34a1779db40a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6ace177c-190a-4fd6-a2d8-24df19f71b12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 169,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4887d05-b8a9-46c0-9679-abb9930d4bda",
        "cursor": {
          "ref": "962c35d9-186b-4483-81a1-d8e8fe73b4c9",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c9088e05-7a4d-40b5-9833-a48040fad9aa"
        },
        "item": {
          "id": "f4887d05-b8a9-46c0-9679-abb9930d4bda",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7fae89c8-cbf1-47d4-ab14-00d8e1687da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e32cf1a-ade1-4fed-84de-94ce479de8cf",
        "cursor": {
          "ref": "6d053830-a29b-4e97-9c8a-1d3f8e22588f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0ad1a0b9-982c-4a73-bc8d-0a51404b9531"
        },
        "item": {
          "id": "1e32cf1a-ade1-4fed-84de-94ce479de8cf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "faca4e96-acf9-4454-9655-e3dc1a6fda50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf054a6-34ea-416a-be0d-b3743ab9e4a6",
        "cursor": {
          "ref": "1b06b3ae-fb4f-440b-9375-007a24c76408",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "90129c9d-90d3-457f-914e-3722625ebcab"
        },
        "item": {
          "id": "1cf054a6-34ea-416a-be0d-b3743ab9e4a6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cc69ebfd-39de-4eb2-af06-3797369643cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c83971-a67d-4433-b574-9cb0a7ba521d",
        "cursor": {
          "ref": "3ead2675-0a4c-499f-80ce-0aefffbc0e3a",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f0be5827-8453-40d2-b763-cf3d0fe521eb"
        },
        "item": {
          "id": "44c83971-a67d-4433-b574-9cb0a7ba521d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2414d80b-0e15-4056-a4d0-e581555af10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abaf1615-9195-4e0c-9a6a-a44552f554e1",
        "cursor": {
          "ref": "837a5d86-b92b-4f53-aa37-c4a38cc6f012",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bb22cf7e-43ee-42b2-8ff5-86f905d2c1fd"
        },
        "item": {
          "id": "abaf1615-9195-4e0c-9a6a-a44552f554e1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d2697da5-ba45-433c-8b87-ba15b7ac2029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a681f-5ef3-4912-9a51-afe0f2fc8fa7",
        "cursor": {
          "ref": "222d49d3-db63-4692-b69c-5d029271ddfc",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7a1afca0-0a21-489c-a679-aef68ab2fb38"
        },
        "item": {
          "id": "724a681f-5ef3-4912-9a51-afe0f2fc8fa7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4a1e5ff6-ac7b-438a-b66e-f0ef54532a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f41b9ea-0887-4245-bf1f-1655c0f018a1",
        "cursor": {
          "ref": "bbb14680-2863-49c3-8f01-56def392edda",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "facf54db-b218-47e5-9465-231f400a2385"
        },
        "item": {
          "id": "1f41b9ea-0887-4245-bf1f-1655c0f018a1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "274eeda5-fdd3-4b4c-915a-31cb48e7500f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6e4592-11f8-423d-88f6-a6c0e4f0293d",
        "cursor": {
          "ref": "5bef3ea4-3ef3-4d29-b892-cfa41f00393d",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "32c0981f-23d5-4fe8-b58d-37bb31458811"
        },
        "item": {
          "id": "fc6e4592-11f8-423d-88f6-a6c0e4f0293d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b7dd3458-080a-40bb-b531-149e46361832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce13da3e-b132-43eb-b4ab-af458498673d",
        "cursor": {
          "ref": "c7a3f300-483a-472b-9ff8-0a55a7b083b9",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "56671436-cd78-46e5-bc9a-f4642b2d9b74"
        },
        "item": {
          "id": "ce13da3e-b132-43eb-b4ab-af458498673d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "006309a8-5d7b-4fc9-8a83-78e7039429db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79356f4-3544-49a3-961c-3b27b776380d",
        "cursor": {
          "ref": "7c1102cc-3e58-4dcf-bf29-3cd8b3abd5d0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "68adce03-0c37-4902-8ea6-aef2af0c13b9"
        },
        "item": {
          "id": "c79356f4-3544-49a3-961c-3b27b776380d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4bf61faf-68b9-4f7a-b88d-e9b7f9354caa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8889f89-55c6-4c91-a34a-055d2034cd07",
        "cursor": {
          "ref": "dfd253b7-855a-4113-b8f6-7085458fc779",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8370399b-bbad-4011-aa6d-d38846a98448"
        },
        "item": {
          "id": "b8889f89-55c6-4c91-a34a-055d2034cd07",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "eb74f91f-e78b-485a-ae93-2eb5643e0e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4215e2db-52f5-4135-9cf5-0e3c107b86d8",
        "cursor": {
          "ref": "691d3cdc-3606-4f7c-aab9-19ce9ab0bc0c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2874a059-09a6-41aa-8f51-f5c34b339168"
        },
        "item": {
          "id": "4215e2db-52f5-4135-9cf5-0e3c107b86d8",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6f3e7fbd-b51f-4bd2-bc39-7f7dcd2a6fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab169a1-424f-4c2e-8827-23944c004f55",
        "cursor": {
          "ref": "52f62cbf-e017-417e-867a-bdd2d0e112d7",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9802636f-fc42-4e09-85ae-b9a508af9e21"
        },
        "item": {
          "id": "1ab169a1-424f-4c2e-8827-23944c004f55",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7755892d-f2ff-4e26-9c3c-99fe7e9bbc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e69a03-bac5-4e7d-b64d-45653edd5acc",
        "cursor": {
          "ref": "fea8e9c8-a984-4c64-8ebb-b76cd57b059a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a9e9a265-1d61-455e-8a56-64338923613d"
        },
        "item": {
          "id": "44e69a03-bac5-4e7d-b64d-45653edd5acc",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8b3a66d0-018c-44d7-a02f-68d736a3e6fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bc3bb7-ec46-4147-9371-d272f768ffc8",
        "cursor": {
          "ref": "73771c73-69b6-4234-b02c-89666df1543a",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f44d11c3-58bd-4892-82bc-cb95e062976d"
        },
        "item": {
          "id": "74bc3bb7-ec46-4147-9371-d272f768ffc8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "25e840c0-2512-45c5-b4e7-09245062fd87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aad52a4-1848-417d-b227-91e832cfab26",
        "cursor": {
          "ref": "a62a93fa-5477-48be-8596-caf8d1895ca6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a4ab641f-a739-477d-890e-c248bca7f984"
        },
        "item": {
          "id": "0aad52a4-1848-417d-b227-91e832cfab26",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "bbb4aea0-c193-4ab9-81c9-d1188a50b89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39095e61-6747-4015-bbd0-997ca42a86a1",
        "cursor": {
          "ref": "96f89b81-1c47-4c26-8897-c425abb3c62f",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "084e9fa4-18e7-4c86-be23-92a02fe24518"
        },
        "item": {
          "id": "39095e61-6747-4015-bbd0-997ca42a86a1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e47d2888-37de-4af0-827a-c3ba6aa98c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdd7134-769a-4f61-8143-da0ae9f197e4",
        "cursor": {
          "ref": "63b88d8f-5cf1-4905-a3a5-f7f7d31d14a9",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d1d2493d-42fb-42a0-ba04-f437401d8a59"
        },
        "item": {
          "id": "ccdd7134-769a-4f61-8143-da0ae9f197e4",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "028a56ab-0553-491c-b7b0-49c0b3ab25dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a423043-52c0-4dfe-947c-4ad44165215a",
        "cursor": {
          "ref": "3cab059c-1abd-4646-b27f-292cdeb491ff",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dcde86e1-e0c3-47ee-82d6-a720cf032d31"
        },
        "item": {
          "id": "8a423043-52c0-4dfe-947c-4ad44165215a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b38063c7-d091-47ee-bc47-e9c98cfd6b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4782af4f-5ce1-4dcb-a270-dd2be6b73ec2",
        "cursor": {
          "ref": "15816111-b32a-446a-9aef-cfb75831ae46",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "40a582da-d049-4346-bee5-b125f635683c"
        },
        "item": {
          "id": "4782af4f-5ce1-4dcb-a270-dd2be6b73ec2",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "47587279-1d12-4616-8781-ad7dcf1be160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbf4a37-b8af-4b1c-97dd-8875e8c35222",
        "cursor": {
          "ref": "5245d9fa-f0ce-4cef-b783-4ecebf2d4e9e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9a1dffd5-b836-4a50-8792-cbd4f206b333"
        },
        "item": {
          "id": "ddbf4a37-b8af-4b1c-97dd-8875e8c35222",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6469e011-28c1-4139-bd21-5735df8fa16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79e254b-bb92-423e-8ae2-87d998829e7b",
        "cursor": {
          "ref": "80e4e535-fbee-4615-ae09-945ecaef49c5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1dc63298-577a-42c1-a024-ed887f20256e"
        },
        "item": {
          "id": "a79e254b-bb92-423e-8ae2-87d998829e7b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "3fb42558-cd81-4bc1-a4e8-067a54b7c666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73c4871-c9df-42e7-ba6e-8d010aec34e2",
        "cursor": {
          "ref": "f72d2582-a02d-4edc-bb48-385242a72479",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6f46344d-9b6a-40ac-b7b4-edd9803f7588"
        },
        "item": {
          "id": "b73c4871-c9df-42e7-ba6e-8d010aec34e2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b8086c04-7f16-4edb-9d40-d346de5d3788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5369fd6-401a-4a21-b07f-b9faf4404d5b",
        "cursor": {
          "ref": "d2112e8f-c9cd-4852-81e6-40d5d30189e6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "3d6183c4-7e40-482a-af7d-3fa37594b5dc"
        },
        "item": {
          "id": "c5369fd6-401a-4a21-b07f-b9faf4404d5b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "63258ec3-a26e-42ba-99ef-14b4509bba72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1719d847-eb77-4f76-8afb-2225cce55879",
        "cursor": {
          "ref": "99b849cb-21c9-49bd-a424-6f87054df24e",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f658222c-1a82-4b94-8846-6a203f060765"
        },
        "item": {
          "id": "1719d847-eb77-4f76-8afb-2225cce55879",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f0cc9ce8-994a-43fd-ba14-a16e58cbba64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5629ad1-b390-40a4-8caa-73aafdeb9254",
        "cursor": {
          "ref": "e7e7fd3a-20b0-4ce6-afdf-ecc8582d5916",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "94435bc9-ca1c-4d13-bd5e-7bc30a1d8ab2"
        },
        "item": {
          "id": "e5629ad1-b390-40a4-8caa-73aafdeb9254",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dcdc05bc-f569-4b8e-ba0d-496ae475fc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae69db37-a8fe-4c12-b3cb-f168bdb397c8",
        "cursor": {
          "ref": "2e883cc9-7bae-4d56-9ebc-565e8513f7f3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "80dabfe3-efea-486e-bdc9-b5dc8e02b85d"
        },
        "item": {
          "id": "ae69db37-a8fe-4c12-b3cb-f168bdb397c8",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d4218dc6-99da-4f84-9855-08baf722d1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab41847-8152-4325-b45b-50c28fc29bb9",
        "cursor": {
          "ref": "dd0b00c6-dbdf-48c5-bb8c-bdf478edd405",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7f32b2a4-32d8-4da1-81e6-ba1024811070"
        },
        "item": {
          "id": "0ab41847-8152-4325-b45b-50c28fc29bb9",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "21ff2dc8-6fe5-4bae-9c72-8ed1b6d7b07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12de59e-e025-4077-944a-a0a7352644e5",
        "cursor": {
          "ref": "8aeebee6-f2de-4584-b852-25a8e713f14c",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "029e5159-06e6-46e9-bedc-e52ac4437245"
        },
        "item": {
          "id": "f12de59e-e025-4077-944a-a0a7352644e5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b7059ee6-efad-4d0f-b9cf-96fcf1a55e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdd8024-29c7-4ec5-ae47-5f6c24d77e44",
        "cursor": {
          "ref": "13ba4597-4f44-4f8b-83df-6fbb5d01ab0e",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "964d56e3-7759-4a8c-a2ef-6406b2fd3153"
        },
        "item": {
          "id": "efdd8024-29c7-4ec5-ae47-5f6c24d77e44",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fda79b01-d478-433e-9f21-2bb258bd6933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ef0b63-3faa-4e16-92e3-27b2969a7aa1",
        "cursor": {
          "ref": "cc30aaa1-e6ef-4fd4-8690-2b82948b649f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1514b2eb-77a9-4b39-b9fe-492aec7dcf45"
        },
        "item": {
          "id": "d6ef0b63-3faa-4e16-92e3-27b2969a7aa1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "be60e53c-25ca-4a34-a025-6e642d2c0f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e1850d1-7594-4329-8dae-6d1f3f15a549",
        "cursor": {
          "ref": "ba66222d-92f7-49d5-8ed4-50fe027e8a62",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "fac66fc7-08de-4884-a34e-bd634bc13d38"
        },
        "item": {
          "id": "4e1850d1-7594-4329-8dae-6d1f3f15a549",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "df4fb583-b9ff-4429-822a-5005805a9eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6ef566-ecdb-496e-9e3a-f1de53091b66",
        "cursor": {
          "ref": "d43d1da6-9909-4fbc-851d-6d151a5c81c3",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "237cf4d9-8b9c-4427-b673-82735d3b5957"
        },
        "item": {
          "id": "ac6ef566-ecdb-496e-9e3a-f1de53091b66",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fa517219-e65d-4282-a1d4-79af6d13ebaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747beb28-c49e-467b-b4a8-3d669c9c8e75",
        "cursor": {
          "ref": "d28a8e96-d665-4821-8de4-0f96a4a691a2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f6ea4fce-2374-47f9-af4a-03d7b3df16fb"
        },
        "item": {
          "id": "747beb28-c49e-467b-b4a8-3d669c9c8e75",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fc30fe7e-0c57-4b9b-b5e9-7bfc33068b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e187644a-d201-4363-953f-82e3767daced",
        "cursor": {
          "ref": "d8eaae13-8dd0-4fd1-9198-61b1e4708447",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ed789cf2-dc11-4afa-b295-0e9c98f13120"
        },
        "item": {
          "id": "e187644a-d201-4363-953f-82e3767daced",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "ffcaf5ea-0787-474d-a44b-1e3ea4411f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4162bbb7-8fda-4717-b9e5-7e1d1914cc5c",
        "cursor": {
          "ref": "241fa7ec-d6a4-4c32-83eb-ef942761698d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "49ea5695-dd5f-47e1-b157-63309a77c70f"
        },
        "item": {
          "id": "4162bbb7-8fda-4717-b9e5-7e1d1914cc5c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d04fde50-e705-41e7-b87e-41f758f551e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88c21d4b-3bda-4cef-9df8-9de4065056d8",
        "cursor": {
          "ref": "577cde00-baa0-46cc-8ecc-02ef0b295018",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4a855a02-be74-4eea-a20f-572d4c10d006"
        },
        "item": {
          "id": "88c21d4b-3bda-4cef-9df8-9de4065056d8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9b28fc2a-b52f-46af-81ce-4515b47fbe88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7368cd-8faf-47e2-81b2-a8b81938b8eb",
        "cursor": {
          "ref": "c1d434ac-8dea-4347-98b2-a579cfee673f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1ce57a95-35ea-4bf7-aa5d-a21f145c5c4f"
        },
        "item": {
          "id": "0c7368cd-8faf-47e2-81b2-a8b81938b8eb",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9f97ea34-03d9-4fc4-a270-04a78cd26d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109fea11-d888-42ed-9df7-03a14041d48b",
        "cursor": {
          "ref": "aaa32ba9-8939-4959-9ee3-484a3ed5fd3e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c8dba1b7-3e60-42e5-95f6-5c83abf703a6"
        },
        "item": {
          "id": "109fea11-d888-42ed-9df7-03a14041d48b",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "974ff847-292a-4314-9547-39dd244b8a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1297e8b-d56f-4125-b547-3397ce7ba3cd",
        "cursor": {
          "ref": "ff700051-a571-41ac-ad19-64a25cd6a58a",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "571ebe51-ed6b-4cd0-9e98-44971947afec"
        },
        "item": {
          "id": "d1297e8b-d56f-4125-b547-3397ce7ba3cd",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "894b2027-241c-4362-828f-43096840d365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ae6c8f-53b6-4926-8351-8042012de4ed",
        "cursor": {
          "ref": "7b160c5f-37fa-4e6e-9fa8-14a475c7e085",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a8632730-3cf5-461e-bf5b-a697c2e6b470"
        },
        "item": {
          "id": "09ae6c8f-53b6-4926-8351-8042012de4ed",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4690aad3-d8f4-43fd-8019-3a78fbdd7b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb9669b7-a704-42b1-976f-b488112cd332",
        "cursor": {
          "ref": "28cb2ebc-5769-4e55-986a-fdabdbc0947c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "df7c699e-86b6-49b8-a543-cfcaeef64979"
        },
        "item": {
          "id": "cb9669b7-a704-42b1-976f-b488112cd332",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "795cf4f3-101c-45a4-a843-ef1a7ddaf530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a1cd7f-8fe3-4f44-a90f-b9cc2d55f264",
        "cursor": {
          "ref": "18e3aa8d-4442-4d44-9986-fdbae8dea5da",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c9ab84c4-065b-4a56-b820-f5315e35300a"
        },
        "item": {
          "id": "78a1cd7f-8fe3-4f44-a90f-b9cc2d55f264",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "87af4dbb-bde2-40e0-b0a9-ada5603bd6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4df75b-8991-4dbd-880b-aec4294d8a3a",
        "cursor": {
          "ref": "a45304c3-9af5-42a2-9cf5-38ace5d0e191",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f1742e1f-ba19-4180-aeff-f66fc7996ce4"
        },
        "item": {
          "id": "3e4df75b-8991-4dbd-880b-aec4294d8a3a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "993c6dc2-1d22-49bc-8a0e-4008b082cc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ad96d4-e6c4-4259-9124-d5fc3e05d2fb",
        "cursor": {
          "ref": "ebccc082-324d-4e85-b098-c5712fbf2cfb",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "1db4e55a-af03-4caa-8d33-37529b3632c4"
        },
        "item": {
          "id": "04ad96d4-e6c4-4259-9124-d5fc3e05d2fb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8afaed81-ed11-43f7-943e-b00c15bbc0e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b985f596-20f9-44bf-88dd-e035e5502b1a",
        "cursor": {
          "ref": "61e27f1a-4648-4039-a26a-8ce432e6c512",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "acc5e457-7e4e-4e24-b6e4-ed1af78d95ed"
        },
        "item": {
          "id": "b985f596-20f9-44bf-88dd-e035e5502b1a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1a058fdd-27db-4891-b676-75a5ce4af83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc070bff-77b9-46c7-a591-a4628678ae96",
        "cursor": {
          "ref": "2fc0238a-146c-4484-afaa-390da9145fb0",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fca38a8a-a5de-4c41-904d-f842fad6104e"
        },
        "item": {
          "id": "fc070bff-77b9-46c7-a591-a4628678ae96",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "4f07ec3c-4e2a-4514-bb1c-def8a3011834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b48e353-2b2c-4ab3-9cfa-d33ff45c17b0",
        "cursor": {
          "ref": "2d9f9e70-dc87-40b5-baee-55d3b61b4f1c",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7ece7fd2-a513-40d7-840f-a3308613ff3b"
        },
        "item": {
          "id": "1b48e353-2b2c-4ab3-9cfa-d33ff45c17b0",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c33027de-e008-44a4-bed0-c81f477a7748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc068295-e04d-4afd-8a65-050e97cdd053",
        "cursor": {
          "ref": "736bd134-9b9f-45f7-9c30-16c36f4ac805",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "19b472c8-810e-4fc9-a31f-8c5febea83f9"
        },
        "item": {
          "id": "fc068295-e04d-4afd-8a65-050e97cdd053",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "6647f2fd-caf0-47db-a346-2bef9b14cb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f499717-cd6b-495a-909f-a9d75aad3333",
        "cursor": {
          "ref": "1c30452e-c24d-4648-bdbf-a462158f1312",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "305426b5-893d-46dc-99c5-89efe62cba79"
        },
        "item": {
          "id": "3f499717-cd6b-495a-909f-a9d75aad3333",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c6fb7866-a2ab-46d2-a837-ab2adebc0ea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3f4a843-ba4b-4d48-b3a5-376491c57cf4",
        "cursor": {
          "ref": "8cdbefa8-89c7-43a6-aa2c-690517014748",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "eabc3e39-9b8c-4b70-acdf-5be12ecd444f"
        },
        "item": {
          "id": "a3f4a843-ba4b-4d48-b3a5-376491c57cf4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e3a0785b-602d-4b4e-a90a-6278986ca735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66497e28-bab6-4bee-8475-79e9d6bfff65",
        "cursor": {
          "ref": "01dfd133-c9d2-44a1-a18a-eec1a2c79884",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c0d4f6e7-bcb5-4ce6-b1db-63891f16af89"
        },
        "item": {
          "id": "66497e28-bab6-4bee-8475-79e9d6bfff65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e958a04a-3b8f-42d7-a50d-f5b102f369d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d1ffd6-7cf9-46b1-90f4-90124ecfb0ec",
        "cursor": {
          "ref": "7f71916c-389a-4c6c-9aa4-d80f9d5a9853",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8f8ed931-25c1-4fd0-b54f-4d5564770043"
        },
        "item": {
          "id": "d8d1ffd6-7cf9-46b1-90f4-90124ecfb0ec",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "84fed191-e5c9-4631-a218-0c0a47f1cbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba27a45c-d8f7-4e0c-a73b-64d4c59a9a82",
        "cursor": {
          "ref": "f3d054f9-51bd-438f-9607-f021ef4febb2",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bbb3c0a4-910e-4a24-9734-2e29caf40775"
        },
        "item": {
          "id": "ba27a45c-d8f7-4e0c-a73b-64d4c59a9a82",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ceca05f2-1bdc-4476-b72d-2e9d7d9e2276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "308b8a17-639d-49c5-a20c-b0060b159913",
        "cursor": {
          "ref": "11289ffa-646e-4f36-b2e6-4f254843a1ae",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3756a5bd-dea2-40aa-9e4c-a3d306638ea4"
        },
        "item": {
          "id": "308b8a17-639d-49c5-a20c-b0060b159913",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a26069be-c47c-484e-a38a-b3d49cefe406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d7ec69-f909-4128-83ba-7289b20bc0d0",
        "cursor": {
          "ref": "0643e9de-ee36-40db-b1ce-c79136000a69",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "386284d2-7489-4948-a1ac-4df99c2805ca"
        },
        "item": {
          "id": "59d7ec69-f909-4128-83ba-7289b20bc0d0",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2b5aaa2b-cd07-4558-896e-41d567013d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106bde17-84a3-405c-97cf-71cd2b9f3f39",
        "cursor": {
          "ref": "355ea7c4-128f-4382-82de-a602260a439a",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "69fdf66e-24c2-4d7b-b3bf-9442dcdd34cf"
        },
        "item": {
          "id": "106bde17-84a3-405c-97cf-71cd2b9f3f39",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aa5434cb-7834-429e-9397-1ac63cc51c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48979226-2338-4f62-bb5c-495a97235032",
        "cursor": {
          "ref": "d1ca0c98-3fbd-4c71-9ad0-a5981dd4de19",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e43de7e5-6d51-49c6-96fa-a2ef19a28dd9"
        },
        "item": {
          "id": "48979226-2338-4f62-bb5c-495a97235032",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9298e66b-9eeb-41ef-83b1-b197ccf6a310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7220b94-1ce4-40f6-8a2f-471bd14fd8ec",
        "cursor": {
          "ref": "cb400098-c429-4bd5-a06f-2d63513cc9dd",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "59508fc3-32b7-466b-8331-c7fa03eed8a7"
        },
        "item": {
          "id": "b7220b94-1ce4-40f6-8a2f-471bd14fd8ec",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "23aeeef9-10a2-4b0b-90d0-a61161fad1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9be0f5-a5dc-4613-9959-4b18b0351dd9",
        "cursor": {
          "ref": "e4c00fa3-76b9-4347-86cc-3f243669dd52",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1e15b6ab-56cf-4ef9-98ef-8c850caf58a5"
        },
        "item": {
          "id": "9f9be0f5-a5dc-4613-9959-4b18b0351dd9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "fbb2e6be-6c90-4d3f-8198-d8a84158639e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b3ec58-0c1e-44bf-8527-1daa60dd50a9",
        "cursor": {
          "ref": "7f7289ae-971c-4644-9715-d0f1883fc883",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "4b850e2d-6714-4508-bdda-636321e52b07"
        },
        "item": {
          "id": "a6b3ec58-0c1e-44bf-8527-1daa60dd50a9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ccc14ce4-12f4-414c-bb82-85b9272988c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4839cea0-f60a-481d-bcc1-dc669241c2d0",
        "cursor": {
          "ref": "44c986b9-0eef-4be8-91b6-8cf560bd3d16",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c99f0208-e478-49ea-8904-69c499a7cab9"
        },
        "item": {
          "id": "4839cea0-f60a-481d-bcc1-dc669241c2d0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "abbdd8d0-1939-4258-87cf-40710fcd12dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62470e3-cb37-4d5b-be2c-d64ac1d192f9",
        "cursor": {
          "ref": "3cd57de5-5d2c-4338-a7c7-804a7e42a889",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "99213cb4-75e2-4cbe-be3b-f6583b4ddc37"
        },
        "item": {
          "id": "f62470e3-cb37-4d5b-be2c-d64ac1d192f9",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "815c803a-beca-4047-ac1f-99af65d666b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c403bf-d42a-4b56-9369-e56a880311a7",
        "cursor": {
          "ref": "c2110b8a-2d5e-4337-9d57-ae23a9653037",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "00de4751-1614-4419-a3f5-04dfde4402cc"
        },
        "item": {
          "id": "38c403bf-d42a-4b56-9369-e56a880311a7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "342ae2d4-06ac-4602-9693-529f0734cc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86310de4-453e-4f4f-b272-2b09f62108e6",
        "cursor": {
          "ref": "88991c1d-6a00-49c2-9e26-1d1457a974ff",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0ea754d9-2f15-432d-8d3d-380c42c6d3e0"
        },
        "item": {
          "id": "86310de4-453e-4f4f-b272-2b09f62108e6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fcb8afcf-0b62-4f01-927a-4bda2106b959",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154f5a6d-8127-4ff7-a024-5817d7891105",
        "cursor": {
          "ref": "aa04dcd2-8ab6-49bb-94ef-308e8dbb7b18",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fdc1f382-74ce-4e23-b95a-7cffd2b05134"
        },
        "item": {
          "id": "154f5a6d-8127-4ff7-a024-5817d7891105",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "89ccba37-573c-4e58-a633-245b72e34b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e422fcd-5679-4023-8d86-453382f97e64",
        "cursor": {
          "ref": "787da858-ddb3-4b8a-a4fa-f61b24930c7b",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "9146d383-38ee-4566-b734-75fc6d4ededb"
        },
        "item": {
          "id": "9e422fcd-5679-4023-8d86-453382f97e64",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0c1b92b4-2c70-45c8-92ed-eb482f786a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750c7799-9b57-4a4a-872c-60614391a7e1",
        "cursor": {
          "ref": "de15c591-eb51-427a-ab79-017865df0ba3",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "26fd6381-e01d-41f4-a1d4-7aaa0964ac3c"
        },
        "item": {
          "id": "750c7799-9b57-4a4a-872c-60614391a7e1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "e6f652ac-d284-42ca-b347-78bdfa8205ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4818d14c-8f45-4150-8ab0-1bc73764638f",
        "cursor": {
          "ref": "dfcb4212-4d7f-4e44-b601-56d101392f04",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "66d3afca-2e83-48e1-95a1-6a021e2e987c"
        },
        "item": {
          "id": "4818d14c-8f45-4150-8ab0-1bc73764638f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "32d8e38e-1ce7-4f4e-b16f-8672c08569e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d00fa2-202d-4d30-9198-6445e092bd92",
        "cursor": {
          "ref": "d2578360-9e48-4a3d-9203-eb21486c63cc",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c3ab6cbc-6b13-40ee-ab70-ee249302d818"
        },
        "item": {
          "id": "b4d00fa2-202d-4d30-9198-6445e092bd92",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1facbd23-688f-4fba-871b-bfbce111f46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b91901-5484-4786-b95a-2318cfe96000",
        "cursor": {
          "ref": "5ee14080-2cbb-4cc4-883c-3743f221f506",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a9d251a1-83f1-45f3-b401-26f710932169"
        },
        "item": {
          "id": "90b91901-5484-4786-b95a-2318cfe96000",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "86959fba-d83b-4c59-88e1-65e97d0373c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501617cb-b79b-4f02-aecf-75f510994ee7",
        "cursor": {
          "ref": "eba46d34-4362-4abc-84ac-b53c1f111bff",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2c565d7a-0e25-4c32-a5ec-2cf03c6e481c"
        },
        "item": {
          "id": "501617cb-b79b-4f02-aecf-75f510994ee7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "36f77629-6369-4df0-840d-d51ee5bb5e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3313dfa-2e0c-43a2-b6b2-91df14d8c844",
        "cursor": {
          "ref": "f95ac3cc-3d6d-4a56-87a6-a707db927984",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5e4f6114-292f-4bd5-bda4-2ca41569ed7c"
        },
        "item": {
          "id": "d3313dfa-2e0c-43a2-b6b2-91df14d8c844",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ec46d901-4ad2-4aec-b25b-05c908626c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132a9552-2ccc-4026-8aaa-2fd1d56aae11",
        "cursor": {
          "ref": "3bf753a6-8bba-49dd-a940-d48c7a1b5826",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7782e7c6-eee1-43c8-9b01-bdb6102c5a3d"
        },
        "item": {
          "id": "132a9552-2ccc-4026-8aaa-2fd1d56aae11",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "73609a0b-4fb0-4ab3-aec4-0953bf6ca40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6ac244-15b7-4ceb-9ae9-de07a2437eb2",
        "cursor": {
          "ref": "59fb8f39-b78f-4255-b826-35b1a7ab5a25",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fa69d532-02cb-4b25-8e22-522ad016e54b"
        },
        "item": {
          "id": "8b6ac244-15b7-4ceb-9ae9-de07a2437eb2",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f48baae1-2a89-4ca1-8610-6b23db044856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe786564-3901-4047-8135-eb4d0f8fa9e0",
        "cursor": {
          "ref": "57bb32f2-0f2d-4120-bf28-564649738b75",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ca405224-f5e1-468b-8409-5565bd370d01"
        },
        "item": {
          "id": "fe786564-3901-4047-8135-eb4d0f8fa9e0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "309ed1a9-53d9-43bb-b69f-425b55af00eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e36bba-b3c6-46ce-8bb9-51d53fbf0c16",
        "cursor": {
          "ref": "a8fea68d-be92-4596-96ab-2e472809f861",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "14907500-6aeb-40f3-bd75-6da9fdea232a"
        },
        "item": {
          "id": "18e36bba-b3c6-46ce-8bb9-51d53fbf0c16",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "30b10de4-d5b2-4b25-9e93-6e4ed5a54bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d26fefc-5ff2-48ae-9940-dba27ed3d846",
        "cursor": {
          "ref": "cea5afff-7c32-4ddb-acf2-c30cb8689400",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fc93eafe-0e90-48d2-b234-95ca8b0b9dd3"
        },
        "item": {
          "id": "7d26fefc-5ff2-48ae-9940-dba27ed3d846",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ca1d7c04-b7ec-4a96-86e6-4e423ff50752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca61a65-0c2c-4d2e-954e-16d1936760ff",
        "cursor": {
          "ref": "aa144a53-e015-4b0d-af9e-2f3da187e3c3",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "80513a4e-b538-42e7-a31f-7b68a0860675"
        },
        "item": {
          "id": "9ca61a65-0c2c-4d2e-954e-16d1936760ff",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3dc4639c-186d-4cab-bf2c-2010bf3ceea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2da3c5-b947-4341-afcb-f362f7816754",
        "cursor": {
          "ref": "f386187c-abfa-4684-924c-d7ecea992100",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ce3f77bd-b17d-4a6b-8485-a626f2f38606"
        },
        "item": {
          "id": "0f2da3c5-b947-4341-afcb-f362f7816754",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d5e23eeb-3d8c-496c-883a-a88c06ba3b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e43472-7a95-42ec-8aa5-2a895a9332d6",
        "cursor": {
          "ref": "bb5148f0-4512-43f3-beb4-98a24580135d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "80e5dbf6-1981-4975-b01f-a4a98b53d95a"
        },
        "item": {
          "id": "d5e43472-7a95-42ec-8aa5-2a895a9332d6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "da4d1e79-1460-428c-86fa-5db2c5c9c71a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d4d9fb-5368-401a-b775-99432429bfbc",
        "cursor": {
          "ref": "54edd3cf-c4f8-4ff3-94a1-a022694ae596",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "085be53a-718b-4fd9-a498-a160f16af11a"
        },
        "item": {
          "id": "49d4d9fb-5368-401a-b775-99432429bfbc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6ca8cf0b-ecf2-47eb-aa88-f4370e013220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d07eb1-f512-4760-8a4f-2eeeb4cc7375",
        "cursor": {
          "ref": "7cda6132-d46f-478b-9a93-0f34cab6bd02",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "044c7476-c622-4850-9e48-add7131942fe"
        },
        "item": {
          "id": "00d07eb1-f512-4760-8a4f-2eeeb4cc7375",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eb403dec-0c40-4b1b-a7e5-d6a997471747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa961a8d-d9e3-45b4-8cf4-25fa5fdb8119",
        "cursor": {
          "ref": "d11fe8b1-fdee-4b5f-9bdb-576cbfdf42f9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ec5cd967-d27c-428d-9f5f-ae9ef1ce9998"
        },
        "item": {
          "id": "aa961a8d-d9e3-45b4-8cf4-25fa5fdb8119",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6f81ecb1-5623-4bf8-8062-78f61e6ebc1c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9354d4d9-5a5a-4d47-8d1d-fe7aa4801c31",
        "cursor": {
          "ref": "6b06cd85-db27-495c-b20d-4e16de19713d",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f08df641-b825-4732-af7b-1d74eb695941"
        },
        "item": {
          "id": "9354d4d9-5a5a-4d47-8d1d-fe7aa4801c31",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c1183035-bf0e-489a-834d-9865371a208b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9ed506b8-d204-45dd-8652-96fb3ec866bd",
        "cursor": {
          "ref": "60262ad4-db8f-403e-a467-35412736d3d7",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f642a68e-620b-49d7-b17d-db858cc9dd0f"
        },
        "item": {
          "id": "9ed506b8-d204-45dd-8652-96fb3ec866bd",
          "name": "credentials_issue"
        },
        "response": {
          "id": "b1a7e5f2-78b4-4d2f-9edb-fc13669564c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "5c3ae9b6-d328-4152-bba9-57d933fd1260",
        "cursor": {
          "ref": "b2b5a842-4eae-4c74-a25e-20da822f4b5a",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c34c8a3b-6511-4b4c-a734-6662fa426c20"
        },
        "item": {
          "id": "5c3ae9b6-d328-4152-bba9-57d933fd1260",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "8928c085-4770-4570-b9eb-408de83d9301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "613e997f-b42f-43c5-b456-dd85a29e6879",
        "cursor": {
          "ref": "7e284c1b-18d5-47fb-9f5e-09745e2e0c7f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "63a23ce6-eeb9-4bdb-ae59-377af7bd70a4"
        },
        "item": {
          "id": "613e997f-b42f-43c5-b456-dd85a29e6879",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "54218e30-d4fd-4f93-9f07-91d2ca56f284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5b758add-14c2-4fa6-b5f4-bd580fceb12f",
        "cursor": {
          "ref": "ddec19f9-7a26-43d0-abdb-b2e5be019662",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "8c0fceaa-5064-4b70-9871-58069ec3295b"
        },
        "item": {
          "id": "5b758add-14c2-4fa6-b5f4-bd580fceb12f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "87aaff2a-7b68-4f03-97ac-da1ae28e4b67",
          "status": "Created",
          "code": 201,
          "responseTime": 15504,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66af60b-11b5-42b2-a619-f12dca8889d4",
        "cursor": {
          "ref": "f58a63c1-c838-45d1-8755-5c6ca0b1cb78",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec144493-b802-4b32-b9b2-f923e75f4b98"
        },
        "item": {
          "id": "e66af60b-11b5-42b2-a619-f12dca8889d4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "0aba02f0-21d8-41c9-9a6b-781e10cd0535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "9c6b35aa-37f1-4ea9-8685-e240c12fb694",
        "cursor": {
          "ref": "87a06850-9373-4523-9512-9ae007016b96",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "706a1329-2f97-4845-bda3-476c575d75a2"
        },
        "item": {
          "id": "9c6b35aa-37f1-4ea9-8685-e240c12fb694",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "6c231076-2bdd-47d6-acdb-dcb2dd44cdba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "d949b09e-7e0d-4c45-8f8f-e0df5ab126de",
        "cursor": {
          "ref": "bdebd013-70f8-4e28-81dc-ba0b7bc886b1",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "84e44b30-ed3b-4d75-907d-65e91194d232"
        },
        "item": {
          "id": "d949b09e-7e0d-4c45-8f8f-e0df5ab126de",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "32f368a1-f23f-4e42-9b04-24a86a05b64f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e54019f-b769-469e-9d37-4bef8375f7f5",
        "cursor": {
          "ref": "d06019b0-9be7-4f92-bffe-763e7647caa9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "91a98a37-28c1-4aa1-b390-dc645ee344a0"
        },
        "item": {
          "id": "5e54019f-b769-469e-9d37-4bef8375f7f5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "6f5beb1e-f9c3-4ee7-ba7a-2b266bc023b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0513480-0540-40a0-aa83-f2f810f5bff8",
        "cursor": {
          "ref": "e9d42245-db3a-4071-8b53-c5558067346a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a954670a-e340-4522-ae5e-56fba3d3c62e"
        },
        "item": {
          "id": "b0513480-0540-40a0-aa83-f2f810f5bff8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "08748952-fd40-45b8-ac88-3ceb526c8991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68c2142e-97bd-4212-a376-36a5a1db1bd5",
        "cursor": {
          "ref": "597127a3-77c9-467c-9981-fade0f13f747",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9ce71fba-2edb-4ff6-adb8-b978235b3333"
        },
        "item": {
          "id": "68c2142e-97bd-4212-a376-36a5a1db1bd5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "17d9d9e9-5f4a-4f7c-99d4-5520f235311d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d000f85-b98f-477f-8045-031f29fea354",
        "cursor": {
          "ref": "696e1c3b-c24d-461d-941a-c85cae468795",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "dabb5826-cadb-4bb8-8d6b-a91803dbc598"
        },
        "item": {
          "id": "1d000f85-b98f-477f-8045-031f29fea354",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b6b5ef09-7fb6-4914-9a69-52bc62ebc45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a038ad9-7d3f-4cd0-90e3-7a68b6a78b2b",
        "cursor": {
          "ref": "100dd311-75ba-4d06-ac55-bb927ec87e67",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3978f50c-cd8c-4de2-b850-e75089f4ca7f"
        },
        "item": {
          "id": "8a038ad9-7d3f-4cd0-90e3-7a68b6a78b2b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e4e3decc-9fad-4356-a302-2aa7e3657b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1190416f-b38a-4f6b-9771-5771777cb813",
        "cursor": {
          "ref": "1409a152-86fc-4127-bc2b-31890a1886b7",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "75e2a0ff-745c-43ef-9efa-70caa41b442f"
        },
        "item": {
          "id": "1190416f-b38a-4f6b-9771-5771777cb813",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "46e54dd4-82d0-41e6-abd7-ddc943139c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb3c63a-0f6d-4e85-96ca-f769f1014507",
        "cursor": {
          "ref": "cf15b97f-4587-4087-8a22-a628357f6e93",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9c38a555-33d5-4c6a-82f4-cb80ebcbde11"
        },
        "item": {
          "id": "cdb3c63a-0f6d-4e85-96ca-f769f1014507",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8f37db4c-4d1f-442c-925b-e1d8577476b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b2b326-10c5-497b-86b4-57c3dc3c602e",
        "cursor": {
          "ref": "4360e059-84de-4590-9707-2526d727e56e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d4c360e1-cec1-488c-afd9-fc5a6245e423"
        },
        "item": {
          "id": "c2b2b326-10c5-497b-86b4-57c3dc3c602e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7040fb3b-d94a-46bb-9fb6-1724c61a37c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5619882a-3bc6-4ad5-8a4e-02d7ff4a6e8c",
        "cursor": {
          "ref": "c1a12e01-26db-4e5f-abdf-2aa675a6ce40",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "200b49d5-4ba7-4174-9d56-44118f492838"
        },
        "item": {
          "id": "5619882a-3bc6-4ad5-8a4e-02d7ff4a6e8c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ceceb87f-0e8e-43e1-838e-c8077605376b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d3b277f-aee3-48d4-b2cb-d4e2adb98b1b",
        "cursor": {
          "ref": "9a7d986e-dc47-42d8-a9da-724907fd32e5",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "61108751-5058-4c86-ab86-c515b5254c71"
        },
        "item": {
          "id": "8d3b277f-aee3-48d4-b2cb-d4e2adb98b1b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "95f785f0-48cf-4fe6-bf2d-9e4ed71ae9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf57d888-fc13-4acd-9a8c-a7408d5a4eb7",
        "cursor": {
          "ref": "f4d4cdfb-f6f9-4cb8-b57e-1b80d6936c04",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d45cbd9c-e029-446f-901c-63c491abc148"
        },
        "item": {
          "id": "cf57d888-fc13-4acd-9a8c-a7408d5a4eb7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2914e37f-4a8f-42e0-ad24-d12c7a3d645b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d334ce-5f4f-41d5-a51c-50ef255e1a5b",
        "cursor": {
          "ref": "d7c24bc9-858b-4ae9-b006-8bc3fe0f25c8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3d72c06f-9839-4208-bf82-86e0d9055181"
        },
        "item": {
          "id": "39d334ce-5f4f-41d5-a51c-50ef255e1a5b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a1a348e0-4999-4863-b4c0-de0c7523e31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551cb76a-3acc-4323-a700-feef85ed9711",
        "cursor": {
          "ref": "3c006022-eddd-4dc2-98ad-db41ec671481",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "123d99ce-d433-412e-a77a-e5c0742436b2"
        },
        "item": {
          "id": "551cb76a-3acc-4323-a700-feef85ed9711",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7cfb0869-b202-411e-91d4-f8ad7ce2530d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e7f4643-b159-474a-a701-2c79a63ad030",
        "cursor": {
          "ref": "c6f84f09-7b93-4d48-baf4-a60070ca5e38",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "de3005d2-5c61-4bc7-974c-1354c86f3edc"
        },
        "item": {
          "id": "4e7f4643-b159-474a-a701-2c79a63ad030",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6ebbf36a-aacb-490f-a57d-1413ee32169b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511b15ec-4301-4e54-8cb9-7a59b9e69611",
        "cursor": {
          "ref": "dedd068d-41eb-4640-ac6b-069b655d61b6",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "388f786a-1770-47f0-bb20-d4e74989b144"
        },
        "item": {
          "id": "511b15ec-4301-4e54-8cb9-7a59b9e69611",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "22ea9ff4-8817-4430-abf7-fed01ddd5b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794cd240-7243-485f-98f3-34d2543528b3",
        "cursor": {
          "ref": "3a06c5a5-d9fb-4eeb-8e8a-57e649be795a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9a3f6601-2c5e-4a02-ae25-f7f7451efbf4"
        },
        "item": {
          "id": "794cd240-7243-485f-98f3-34d2543528b3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "662fadf3-69ab-48db-8211-bfcb2605b2ff",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 77,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8999812f-6e8b-4404-8f3c-1884e4d160f9",
        "cursor": {
          "ref": "5a0bdad3-f93c-46c9-9a3b-440d41950885",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "be59e4f7-69e3-4af4-977c-44f665787bd3"
        },
        "item": {
          "id": "8999812f-6e8b-4404-8f3c-1884e4d160f9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a7bafe72-7734-4de9-8387-e41bfabe2adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd167514-2032-4195-96f6-0733e06dde50",
        "cursor": {
          "ref": "48aa72c3-1b36-4126-8bb3-9c9a31e1d21d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f00a7adf-3976-4600-ab58-b2c5ad093c9d"
        },
        "item": {
          "id": "dd167514-2032-4195-96f6-0733e06dde50",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d7fefb30-6249-475f-8ece-c77ee218ccce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38774cfe-d38f-4cba-ad2e-a770e2007780",
        "cursor": {
          "ref": "7d213eb3-0373-4499-ba4d-99387a4a49e9",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e5fe7d01-60c8-4d83-98ba-c858805189ef"
        },
        "item": {
          "id": "38774cfe-d38f-4cba-ad2e-a770e2007780",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e9f7258f-f307-400e-bbbb-2262be27bac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7883aebc-e15c-4142-a034-674d2aeb7c8c",
        "cursor": {
          "ref": "6600b869-cf15-4808-bb72-bc099d98e7f6",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ae8ba527-df7c-4406-8b80-3b60ab0b503c"
        },
        "item": {
          "id": "7883aebc-e15c-4142-a034-674d2aeb7c8c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "115581bc-c74a-477e-a400-d399ac98559b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccaf1610-7834-40a8-adbc-446bc1e04848",
        "cursor": {
          "ref": "d6e3ff1b-5d68-4ecc-96ee-e73986068485",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bef312ea-999d-4dfd-82bd-86e3f952dad0"
        },
        "item": {
          "id": "ccaf1610-7834-40a8-adbc-446bc1e04848",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cf401187-771f-4339-a165-4e1d44ef8891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53486761-2108-4f98-a6bd-6741c9385644",
        "cursor": {
          "ref": "f5c59706-487b-4200-bef6-615ffd0eafe9",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "76370872-ce5c-4973-b41d-898596f36535"
        },
        "item": {
          "id": "53486761-2108-4f98-a6bd-6741c9385644",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c6f786f3-47cd-4eee-85d3-9e55adaa58df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95f97b8-2dea-4d34-909e-88850e450c44",
        "cursor": {
          "ref": "69cda5da-af44-4592-9750-200b811e658c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1231d77f-03a7-448a-8bff-ad6219463215"
        },
        "item": {
          "id": "e95f97b8-2dea-4d34-909e-88850e450c44",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "523e736a-44f5-45fe-afb2-d7c822869677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c109e0d4-9bd0-40a9-82f0-a53623895059",
        "cursor": {
          "ref": "12664eec-810b-47b5-a574-3665eca0861c",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "005a29d1-37d1-4438-b80e-be5baeb18fdf"
        },
        "item": {
          "id": "c109e0d4-9bd0-40a9-82f0-a53623895059",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dde98ce7-1f94-4379-a558-e4ca808f5b2e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 98,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "d500f5fc-4408-45f7-b028-83e4c5979f60",
        "cursor": {
          "ref": "24d76d49-92a3-4640-a18d-2a9762fa290d",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "765c5f34-84d5-47b5-800b-87b3e0c38b55"
        },
        "item": {
          "id": "d500f5fc-4408-45f7-b028-83e4c5979f60",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "83b1a986-2294-4bdb-a836-d60772012e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775b04a0-24b3-4f13-a9a7-b04b0013475a",
        "cursor": {
          "ref": "26788fe7-f993-44b1-b14a-cd3ee165ab2b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "daa52294-0ab4-4df5-ba95-fd6c5e99a444"
        },
        "item": {
          "id": "775b04a0-24b3-4f13-a9a7-b04b0013475a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a9caf2bb-0034-4704-8dd0-70e27903b271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba12ce4-c170-493f-974d-d830f8698cbc",
        "cursor": {
          "ref": "22ccc2c6-570f-413d-bcec-f66adba218c1",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6b2be8f6-4301-46e6-b8a7-e0e3e86b8a97"
        },
        "item": {
          "id": "9ba12ce4-c170-493f-974d-d830f8698cbc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4a10bbda-4404-4114-a524-02bd87574d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4fcc3c-df2e-4864-8031-8bec8d90a240",
        "cursor": {
          "ref": "bf30ea69-9f5a-4391-98af-3951acaea01b",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "936d88c8-0fe8-490c-b97b-186eb4b6f910"
        },
        "item": {
          "id": "ed4fcc3c-df2e-4864-8031-8bec8d90a240",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1079c03d-e643-4536-a532-cf134f66a330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1f3c4a5-3a52-4535-8f83-4670e4539d02",
        "cursor": {
          "ref": "203261a9-37c4-49a4-bd7a-74c2638b320f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bf09701f-3cf6-41f4-a241-39ead923d671"
        },
        "item": {
          "id": "e1f3c4a5-3a52-4535-8f83-4670e4539d02",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "1b733d0a-4220-4cac-a027-3009a8933d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4b0fbf-b8e6-4b94-8457-7ca52fee8126",
        "cursor": {
          "ref": "8853c2b8-550c-4c87-8a46-90651857bdd8",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2ebf9ac1-230c-4f6e-8264-de70af777ad7"
        },
        "item": {
          "id": "3e4b0fbf-b8e6-4b94-8457-7ca52fee8126",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f4eeea8f-5703-4e57-96f4-6b8a28af476f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418f37e1-374e-4469-b426-701f5a61196f",
        "cursor": {
          "ref": "faa6332f-4333-400f-896a-31107433c7ae",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0426bac2-db7f-4c95-96cb-9616f812aa56"
        },
        "item": {
          "id": "418f37e1-374e-4469-b426-701f5a61196f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e2fab469-d266-4f00-8e39-02ea60a3d6d8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "6e2d6e5d-4a2f-42bf-a7be-3f0f1751ce54",
        "cursor": {
          "ref": "84cedb31-6b09-451e-acb8-111721892978",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f26b3c0b-73e0-4a47-82a3-e885c29ec2fc"
        },
        "item": {
          "id": "6e2d6e5d-4a2f-42bf-a7be-3f0f1751ce54",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f4e8655a-3187-40d6-a5d7-c25f59e59a05",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "0dbfc721-a028-4f6c-9cd1-c17480a10746",
        "cursor": {
          "ref": "e7f7adea-cbdf-4609-96b7-329c1465488e",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e75a2da8-5d95-40ed-9ae7-7b55a4324230"
        },
        "item": {
          "id": "0dbfc721-a028-4f6c-9cd1-c17480a10746",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "358e55e8-2ad7-44ef-a59e-9be4751ff453",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "879dd353-fca8-4aa2-a07f-9e445c977571",
        "cursor": {
          "ref": "ebe2f612-e7ed-4a74-a43e-6efe11a5c4e6",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f55636b0-5024-43cf-9a31-fe97c455cf0b"
        },
        "item": {
          "id": "879dd353-fca8-4aa2-a07f-9e445c977571",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fda32ffc-e00a-4a41-bcaa-fc7574ef8622",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "355f8ca2-b7c6-40aa-bbe4-88471b881f40",
        "cursor": {
          "ref": "a2adcd42-342c-49ae-94e8-f2bbe0748efb",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7003ca8d-a9f0-42e6-b634-c3735f07cc1d"
        },
        "item": {
          "id": "355f8ca2-b7c6-40aa-bbe4-88471b881f40",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7cd03157-2104-4c5b-b4a4-f9bb5540ae66",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "8212e1b9-d4af-4279-8ab5-59c2b7a8a2f9",
        "cursor": {
          "ref": "8e8344a8-a63d-421f-9e9c-9d344baed181",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a279a9be-9c0e-408f-b90e-0c34ba77cce8"
        },
        "item": {
          "id": "8212e1b9-d4af-4279-8ab5-59c2b7a8a2f9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "18d22c65-2639-426f-8f54-5eabba1ece12",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "b3f960ad-1838-45af-97f8-6ba62e69662a",
        "cursor": {
          "ref": "e65c0c89-7b0e-4c68-91b3-982d1425c842",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "27c4448d-5b1d-4f7e-aa07-a4573de1b52c"
        },
        "item": {
          "id": "b3f960ad-1838-45af-97f8-6ba62e69662a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9f5e9b6d-bc97-41b5-bbfd-f3237686ba00",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6aed34-72b5-451f-9546-abc4b341b139",
        "cursor": {
          "ref": "39d251c9-dfd1-41b2-92ef-a7c2f5f85859",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "15f8caee-f68b-4f59-8340-40373c1500cd"
        },
        "item": {
          "id": "ed6aed34-72b5-451f-9546-abc4b341b139",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2ce42521-d917-49e4-a701-2f8dc570bf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f11b08-e80c-4432-91bc-1fad5dc044d0",
        "cursor": {
          "ref": "4dc3d86d-84a1-4266-8143-adf8be4d9fbd",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "279d0e70-fd1d-44f8-844b-f202ed2bd010"
        },
        "item": {
          "id": "99f11b08-e80c-4432-91bc-1fad5dc044d0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "0637bf84-f1f1-4c8b-a7d6-61ca86f094e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a198b59-67a4-4e4c-858c-7e65140c6eff",
        "cursor": {
          "ref": "34e76500-a568-4b1e-80ba-7cd15ca58dc4",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "40703ccf-c01b-4164-a167-caee7186f961"
        },
        "item": {
          "id": "1a198b59-67a4-4e4c-858c-7e65140c6eff",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "85521a20-64c2-482a-a6d2-45d0821b6fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1203d6f3-9d8f-4ff7-9ec9-08ab9ef11951",
        "cursor": {
          "ref": "098283b4-6d59-4a69-9a94-be96f9a4a71d",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "5dbb5e3a-a884-49f5-bdef-f04997b7b65b"
        },
        "item": {
          "id": "1203d6f3-9d8f-4ff7-9ec9-08ab9ef11951",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d6a78dac-c417-40ac-ab3c-11357ac34cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41518bdb-7e0b-4217-86ff-fd3a0a9e539f",
        "cursor": {
          "ref": "3233cc08-a087-4d27-8be8-43a86242942e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e716c71c-00e6-42b9-a2d2-4fa0d886fd78"
        },
        "item": {
          "id": "41518bdb-7e0b-4217-86ff-fd3a0a9e539f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0b14d786-6d5b-40a4-beb3-ab2e2abda5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f552ae-d1d9-49e2-bc0b-4f56701cd91d",
        "cursor": {
          "ref": "865656c7-def5-4f1b-b2ff-c97f6843e4be",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "30aaa295-2224-45c0-b96e-d3898a48e3cd"
        },
        "item": {
          "id": "67f552ae-d1d9-49e2-bc0b-4f56701cd91d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f6df85a2-c072-4e3e-982a-8dc88a8b35d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c81192-d2fc-42bf-9ad4-b976e9677347",
        "cursor": {
          "ref": "33e71d24-15f5-45dc-ac29-f81b09bc4a31",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "90ec2cd3-0667-4c93-b207-711dd9da26d4"
        },
        "item": {
          "id": "06c81192-d2fc-42bf-9ad4-b976e9677347",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3a673cce-1e08-42d8-b794-b5447996f790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08abf775-376a-48f7-b716-5f9e848303ee",
        "cursor": {
          "ref": "b5e1b215-5324-46b9-8ebc-dc0f2e205d5b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0ae1b452-6738-445b-8b2d-8608c5c21110"
        },
        "item": {
          "id": "08abf775-376a-48f7-b716-5f9e848303ee",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6b0bfdea-d930-4a7d-b200-528c98ca51db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d618b4a-2c14-4ef0-a1a4-967f31e54737",
        "cursor": {
          "ref": "a7e1bf97-7eef-42e0-9466-72182ffa5c48",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "012620bd-9c74-4bb4-83ff-e9859026fb2f"
        },
        "item": {
          "id": "5d618b4a-2c14-4ef0-a1a4-967f31e54737",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3b95dd4d-69e3-41ff-9616-ffe849ed5aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f03809-178e-4b91-90d5-39de02471da2",
        "cursor": {
          "ref": "6152a524-24ba-4a30-8cd6-da4593b01685",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "069c3533-434c-4f09-8efa-a85087b1e072"
        },
        "item": {
          "id": "f9f03809-178e-4b91-90d5-39de02471da2",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e4afa774-a493-4ee7-b96d-dbe222472df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdf2a8f-3f14-470f-87c9-f9d36089b8c3",
        "cursor": {
          "ref": "90ce4e80-88ee-4181-8578-eb9ec76b9d95",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d544505f-30a3-464d-b82c-dc083c2fe70f"
        },
        "item": {
          "id": "fbdf2a8f-3f14-470f-87c9-f9d36089b8c3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dc822334-7b39-45c0-bf7c-c6a6e0a6ff9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4223a99a-0b07-4148-b08b-14cc75a31344",
        "cursor": {
          "ref": "57111e42-6890-44fe-84d6-2713bc527598",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e5f37ee6-8208-4be2-84f9-03c0f023863e"
        },
        "item": {
          "id": "4223a99a-0b07-4148-b08b-14cc75a31344",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "15b78e76-59cf-417b-8a50-84a7248caff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a24af65-bea7-461a-b4d7-670763658d89",
        "cursor": {
          "ref": "9cd1907a-0e1a-4d5e-8014-e212ab5fcd2d",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8701a0f7-5ff7-4006-aba3-467cc4961ff5"
        },
        "item": {
          "id": "2a24af65-bea7-461a-b4d7-670763658d89",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3eff88a7-e6d1-4580-8d57-8a2b1b43dd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fe15ec-1753-43be-b2ed-a4de035d49ae",
        "cursor": {
          "ref": "a727e0cc-c93f-4dee-b500-bf004d156cf0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6f6b5ab7-37ef-41a4-80bb-4f729c70088e"
        },
        "item": {
          "id": "70fe15ec-1753-43be-b2ed-a4de035d49ae",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e33a3112-0056-4489-b58f-64c9f7b382bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29de2dd7-f02b-4187-86a3-026a7d722f6d",
        "cursor": {
          "ref": "8225cb6c-3a06-4f06-9dbd-80f4b7838908",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a74ae319-6d74-46c2-9907-dee2726b0908"
        },
        "item": {
          "id": "29de2dd7-f02b-4187-86a3-026a7d722f6d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "925a60ff-24ca-4f9b-a730-9c0664bf6c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34643376-2f9d-4e6a-9e81-d188abd1fde2",
        "cursor": {
          "ref": "2d6eb04f-9f81-42c8-acad-e25da616d49f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "945d0156-fb4a-4b2a-a1be-faafe51e2290"
        },
        "item": {
          "id": "34643376-2f9d-4e6a-9e81-d188abd1fde2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "915f1b71-807c-4eb9-ac18-ef78271e83a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f3f377-07ed-4ca5-a813-8c5380e5d0be",
        "cursor": {
          "ref": "09828d84-5e09-47db-b230-235ef5bb005f",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5f6a5cd5-8696-416a-8897-769be6482062"
        },
        "item": {
          "id": "44f3f377-07ed-4ca5-a813-8c5380e5d0be",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5fad3f5c-ec71-4e15-8298-89f4cf86f0d2",
          "status": "OK",
          "code": 200,
          "responseTime": 107,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "b26eb692-6b8c-409d-af04-6d4130194cee",
        "cursor": {
          "ref": "8a9f7193-dd35-4952-b689-cea8c3f91412",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "14af1cdf-af7b-4d70-9be6-95a699ba5f61"
        },
        "item": {
          "id": "b26eb692-6b8c-409d-af04-6d4130194cee",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0062c8d0-1a2b-44f1-8e03-790bdb0bd6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c900d3-7c42-46a7-817b-41909e17cffb",
        "cursor": {
          "ref": "bf85bf1d-ddeb-494f-96c3-56817c50e18d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "405f2cec-8621-42a8-a9a0-31368c295fe4"
        },
        "item": {
          "id": "d2c900d3-7c42-46a7-817b-41909e17cffb",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2441ce86-067e-4edb-aa28-23b1d44cce23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d61ecfe0-7823-4ab1-b94f-f3f61f13657f",
        "cursor": {
          "ref": "dd8d703f-4ffc-42e1-8fa7-09fee8ba1208",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3a32c039-86dc-4b75-8027-b68981158819"
        },
        "item": {
          "id": "d61ecfe0-7823-4ab1-b94f-f3f61f13657f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "091b1ff9-f5fe-4660-9e94-948863253d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1de0413-4b49-458b-9a87-3f03e211fcd2",
        "cursor": {
          "ref": "9e7365de-3f0a-4fac-b63f-04bc1c68bb85",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7a584f62-dbf6-4bda-bb90-c7c9e965bedf"
        },
        "item": {
          "id": "b1de0413-4b49-458b-9a87-3f03e211fcd2",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c8983718-a9cd-42db-a32e-500688c0407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15ea71e-9710-4638-877f-e462618a73af",
        "cursor": {
          "ref": "d3e6a2d9-ba3f-4d35-a2f4-dfdab5b3fd97",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "96daa6b1-74c9-43ad-85c8-72c5a0d2ffc7"
        },
        "item": {
          "id": "e15ea71e-9710-4638-877f-e462618a73af",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "12c3d53b-e3dd-49c5-a7ae-4e825fb7ecb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83766bd8-0af4-4f4e-8d94-24f7a3de8599",
        "cursor": {
          "ref": "57f65fb0-e0a9-450a-839e-420cf3564ac8",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0053607e-ef1e-4b4e-a5b4-bf018b701c9e"
        },
        "item": {
          "id": "83766bd8-0af4-4f4e-8d94-24f7a3de8599",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3a8a1160-c006-4c23-a95a-d36382a676fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19214413-7aae-4978-a350-0a5f0ba89e19",
        "cursor": {
          "ref": "4fa78bdf-cac7-47f0-8803-1763bea7c4df",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "64df2b57-5aa0-4d12-9b4a-ebf7857016a1"
        },
        "item": {
          "id": "19214413-7aae-4978-a350-0a5f0ba89e19",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0abdfb4e-b597-4f65-a14f-75ea92a0a322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb70fbf-f6ff-410d-bb88-ebc864092126",
        "cursor": {
          "ref": "3816a3e4-1c9e-4443-8a57-a00b86627fb1",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f74db037-89e0-4ddd-bc20-a1bc6055fad4"
        },
        "item": {
          "id": "efb70fbf-f6ff-410d-bb88-ebc864092126",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "847f251a-4769-4780-86b0-3028dc4c2725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78a9d36c-79d4-4e7c-a73a-3abb0878eaa5",
        "cursor": {
          "ref": "4027de87-d102-4695-9802-148fb5849367",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "10afe182-295c-4d2f-8404-c0667d4d5269"
        },
        "item": {
          "id": "78a9d36c-79d4-4e7c-a73a-3abb0878eaa5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "456b84e9-3165-43dc-b2fc-b462c89f45d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ae663a-476f-476f-ba99-d6a27ecfbf6e",
        "cursor": {
          "ref": "b21bf871-e0c0-45fd-96ce-aefd6b442128",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "dbe46062-00e1-4dae-9557-5c4d328da0c1"
        },
        "item": {
          "id": "a2ae663a-476f-476f-ba99-d6a27ecfbf6e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5889b284-24b3-40a1-bcd7-b8033dacf16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e995bf-6458-4288-a346-1673cd496cf5",
        "cursor": {
          "ref": "185866f8-416f-4e47-9b45-45893b53d867",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "384f41f6-1432-485b-8237-67d0e7185df7"
        },
        "item": {
          "id": "c2e995bf-6458-4288-a346-1673cd496cf5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f4031c36-26bd-4ec9-aecf-9d6164448033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08991445-c45b-4bcf-99a3-858051edccc1",
        "cursor": {
          "ref": "c9664b83-d59f-4bf5-b480-0d17cae4f117",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "eb4b438c-c249-4dab-bfc4-5c9bacbd4542"
        },
        "item": {
          "id": "08991445-c45b-4bcf-99a3-858051edccc1",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fadd5192-4ac1-4d88-9023-08a53cfa0edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74135a6c-2511-46d4-bf7a-59f96e61a3c6",
        "cursor": {
          "ref": "bdef1f42-10b6-4eb8-b9bf-28a4024531c1",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6931ba27-a9d9-489b-8db8-8f84fe7df16c"
        },
        "item": {
          "id": "74135a6c-2511-46d4-bf7a-59f96e61a3c6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c67c946d-fd52-48df-8f91-557c7224e836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2fb5deb-687e-4490-8339-072c63f1d4b9",
        "cursor": {
          "ref": "ad531615-f6c7-4fdf-b91e-b3eee9068975",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "21bd2dff-557d-4beb-bd40-048773049066"
        },
        "item": {
          "id": "c2fb5deb-687e-4490-8339-072c63f1d4b9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d1f89017-fc8b-49ce-b504-2e8b3ecce0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b79374-4952-4939-8398-5d1a20e85559",
        "cursor": {
          "ref": "3e92e515-90b6-4af2-bee8-13d2ef6fdb08",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "80247fbe-fc06-4dfd-8838-021dd57f7d9e"
        },
        "item": {
          "id": "49b79374-4952-4939-8398-5d1a20e85559",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a651633b-1529-4bd9-ae83-1967d5025046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fdc9aa-96ce-4b47-8521-89b53c66b97f",
        "cursor": {
          "ref": "10b6f628-e5ae-4e3b-80f7-78a86d3e1972",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "622eb7b3-69c2-4eab-b9c5-db8e8b331911"
        },
        "item": {
          "id": "77fdc9aa-96ce-4b47-8521-89b53c66b97f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "91275164-cb43-4475-b6f0-357cafe51492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9fdeaf-89a6-41f3-a415-e5e9a5c433b7",
        "cursor": {
          "ref": "5dfd5a89-cc45-477a-8c63-31b4a6a9e8a8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fceaa8c5-bce7-4f28-94d8-8091b6ab12e2"
        },
        "item": {
          "id": "ab9fdeaf-89a6-41f3-a415-e5e9a5c433b7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7829c704-91d1-4d13-8de2-8e592b524d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ef71c1-e66f-4d02-a4c7-f3e12cb9a73f",
        "cursor": {
          "ref": "1d529bbd-0b33-497c-a4d0-1a13820db9a9",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "2a32f35f-24a6-42a3-aae2-92241d369f38"
        },
        "item": {
          "id": "16ef71c1-e66f-4d02-a4c7-f3e12cb9a73f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "bb94936f-373b-4626-a5c1-6bea1ef8a924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91afcc13-ffc5-46a0-965a-b6e9ef2faa65",
        "cursor": {
          "ref": "ca0bc188-3fe1-4f54-aee4-40c066af184c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7d21a4df-13be-41d0-8167-9e1b89a20423"
        },
        "item": {
          "id": "91afcc13-ffc5-46a0-965a-b6e9ef2faa65",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "8c24a7da-024a-4006-b9b4-c13d0fcf2291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782ac56a-89a5-4dd0-961e-eb1b4865e8e9",
        "cursor": {
          "ref": "cef1c01e-1dac-4593-afa5-d216e8f681d8",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4241931e-9fc5-4124-9a94-b153cc8c74eb"
        },
        "item": {
          "id": "782ac56a-89a5-4dd0-961e-eb1b4865e8e9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "65a663aa-4d1f-4db1-92e6-5050290ad70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b41dd27-4c37-45df-b665-592b62f4c9fc",
        "cursor": {
          "ref": "74579c4f-6b33-4f46-be6f-bf924da35a44",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "82f6164f-b4e0-488f-887c-0855d16d67a4"
        },
        "item": {
          "id": "2b41dd27-4c37-45df-b665-592b62f4c9fc",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "93ce56d1-1f11-4b06-8186-2b581979bbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d852b0fa-4d69-4cf3-8a12-2c998e5b90cd",
        "cursor": {
          "ref": "95ea1478-13ee-4600-9f9f-23298dbd9b36",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8326f7a8-6922-4b00-9709-5658dcdf11be"
        },
        "item": {
          "id": "d852b0fa-4d69-4cf3-8a12-2c998e5b90cd",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "734b63c3-9e8b-417b-83e3-de1f81c83b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9dec06b-40a3-46b9-bcbd-a3b70dea0bd0",
        "cursor": {
          "ref": "e5f43eef-8f8d-4874-8650-e0660dca70f8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "60343d7a-856e-4056-9802-6f74f29443d5"
        },
        "item": {
          "id": "a9dec06b-40a3-46b9-bcbd-a3b70dea0bd0",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e9b6b9c5-caff-4de7-88ab-497e8ed7ecb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d3fd36-e90b-456b-a701-a9e94dda49cc",
        "cursor": {
          "ref": "a442b975-f21a-4dda-8eab-02079e899b0b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fce10ca1-cc14-4cae-8202-04af430db40c"
        },
        "item": {
          "id": "c1d3fd36-e90b-456b-a701-a9e94dda49cc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d4e5f86d-78af-4035-b532-bf771ce9953c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007ea822-86c1-4382-9986-2304487f1ddd",
        "cursor": {
          "ref": "56121761-98dd-4cf5-8b71-4c446f3efe3d",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "cb465c6b-c25c-438f-9ae7-425d7153bdd7"
        },
        "item": {
          "id": "007ea822-86c1-4382-9986-2304487f1ddd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c055a547-f5bf-45fd-8a52-7bae1ec5b351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9542aff-e416-41ae-b041-e63b34475e11",
        "cursor": {
          "ref": "80013c03-915f-4515-8bdd-ea04d301039b",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0459dca5-ef0e-44fc-8c30-3b1ad645115d"
        },
        "item": {
          "id": "c9542aff-e416-41ae-b041-e63b34475e11",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "90932206-0402-43c8-9f54-46d3f8a8107c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767503d7-d110-410f-9cb4-3369dfbe9da4",
        "cursor": {
          "ref": "2dc095dc-b826-4d94-b135-f7300f9685b1",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2a3facbc-88d9-4530-b91a-8717c1318e24"
        },
        "item": {
          "id": "767503d7-d110-410f-9cb4-3369dfbe9da4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6a916852-e8be-444e-844c-45e223c27cbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfb106b-c789-4ac4-abb7-04fff9a5a390",
        "cursor": {
          "ref": "abd5c9b6-a20d-4704-8554-5c16196e12d1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f0b0e3fe-0940-4e6c-a993-f19a59867d7c"
        },
        "item": {
          "id": "3cfb106b-c789-4ac4-abb7-04fff9a5a390",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "ca4d7f5d-a460-460f-b131-e7d102ef0005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc853922-a7b7-4843-9d87-5b8947c0699e",
        "cursor": {
          "ref": "267b1106-3e4a-4e66-8908-53bd636a50e0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e9046074-be63-4299-a728-fc691f4e166c"
        },
        "item": {
          "id": "fc853922-a7b7-4843-9d87-5b8947c0699e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "82b76fb3-48c3-4d16-9dcc-479a15fb8c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e62fbbc-e819-4ec4-b139-e562d791af0a",
        "cursor": {
          "ref": "42e37304-2ec3-409d-a84c-af8ea0af0ec3",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f29a7bd3-383a-4a86-a501-e5d1f78ed5e6"
        },
        "item": {
          "id": "9e62fbbc-e819-4ec4-b139-e562d791af0a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "32ce2120-2f9b-4cf1-88d1-8a56d3c776f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8a9146-7f02-44a0-b012-e1ab357e6d27",
        "cursor": {
          "ref": "4b53b683-f358-40cf-b343-4b60a4b5b384",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9532f4ca-da5d-4a7e-9a2e-b22650678bae"
        },
        "item": {
          "id": "4c8a9146-7f02-44a0-b012-e1ab357e6d27",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f536d2bc-d0a4-4ff0-bb46-2bb346a22f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a17d0f5-0a82-460a-b34e-db22c6304688",
        "cursor": {
          "ref": "9ce7548b-3276-4606-a741-6bdadd65b5e0",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "56c336cb-b626-45fa-b19b-bd0f39a47329"
        },
        "item": {
          "id": "0a17d0f5-0a82-460a-b34e-db22c6304688",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "70b5d4bb-a83b-4192-a4ab-3f8b61fb84c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5810d6-9010-4aef-9a34-cb352ce09cd9",
        "cursor": {
          "ref": "d806b006-7a7c-4880-89e1-489003d8033a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "bc01ebcd-de23-475e-a84c-217f0c810b88"
        },
        "item": {
          "id": "1a5810d6-9010-4aef-9a34-cb352ce09cd9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e13c5628-924b-4dc4-9002-b21ebfb67db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d723412-b84a-4c76-b696-ff5a16e7225a",
        "cursor": {
          "ref": "fc19c137-0824-48a3-9f2b-a20b8911e8a2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8d5662da-3ee0-4001-b780-aab4aa444a12"
        },
        "item": {
          "id": "2d723412-b84a-4c76-b696-ff5a16e7225a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "df772b42-40cc-4a05-9b65-b87627887354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577f8ba0-4233-4d5f-9a29-50d8085a80e0",
        "cursor": {
          "ref": "633f4af9-e7a3-47fb-b553-7480e24fb23d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d407689a-4a31-42fe-a05b-8fa4fcec75ad"
        },
        "item": {
          "id": "577f8ba0-4233-4d5f-9a29-50d8085a80e0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3d82bb7e-caed-415a-9211-9073b799917f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5c0a28-c0b8-4bf5-a429-917f5d23839d",
        "cursor": {
          "ref": "28fc897d-aeec-4b39-8026-7ce40104e0de",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3799cc88-e061-41ec-b888-4cf38a60b7d9"
        },
        "item": {
          "id": "1f5c0a28-c0b8-4bf5-a429-917f5d23839d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d00ba303-17e0-496e-b262-574668e00a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5b772ae-b8a3-4f3a-83e9-01958823c752",
        "cursor": {
          "ref": "5bb247c4-256f-4a5a-a1e6-a70e395a18a1",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d1e4b9ad-bc02-4efb-ae0d-53c6a0622253"
        },
        "item": {
          "id": "a5b772ae-b8a3-4f3a-83e9-01958823c752",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a2100644-91aa-4449-ad6a-d1f9fb64315c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b98f1f-bc07-4f23-91ef-b5477b4215f7",
        "cursor": {
          "ref": "e9bf526b-dfde-4017-afa9-0c7d042ccfe7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8ad46ae7-9e6b-4386-99bf-e02b0eba5039"
        },
        "item": {
          "id": "e1b98f1f-bc07-4f23-91ef-b5477b4215f7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3d445a92-f598-4ae0-ba8b-f5065fc9b124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04051806-056f-4f6d-bae4-adba655a757b",
        "cursor": {
          "ref": "c4501ba9-680c-4fa8-8662-8da0b2e698d9",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f11f2250-d2f5-4dce-b12e-ce4880124a55"
        },
        "item": {
          "id": "04051806-056f-4f6d-bae4-adba655a757b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "f0f3460a-d58a-4711-b65e-2f13aa1fccae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6cc424-a4a3-4b9d-8060-e5816d3eae1c",
        "cursor": {
          "ref": "b090cb45-858f-4e87-8c01-2eeb4d018fa0",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e2bef18e-9a9f-413d-b757-24cac89664bd"
        },
        "item": {
          "id": "1c6cc424-a4a3-4b9d-8060-e5816d3eae1c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f4ba1a16-ff8e-49c8-8d2f-3b88b246ed22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b96f756-b58c-4bb6-9060-3ff01466a65a",
        "cursor": {
          "ref": "91f25d9b-9b86-4300-883c-4a8a74f99e6d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0e554864-b40b-4e96-aebf-1c9d9755dc0d"
        },
        "item": {
          "id": "2b96f756-b58c-4bb6-9060-3ff01466a65a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c4df6b11-f428-4f56-8f3f-44e0ce5e9a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ff31c5-61ef-4c2a-92da-47871195276f",
        "cursor": {
          "ref": "fc1276ac-4551-4c63-80e4-65b60f7a061a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1fe968c6-2531-499a-9bf5-4e7dd9292675"
        },
        "item": {
          "id": "87ff31c5-61ef-4c2a-92da-47871195276f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4784087e-6d7b-4047-9cae-3613b396dda8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593a0b5c-6026-4b77-b5e6-02a3762096a8",
        "cursor": {
          "ref": "b8233458-f1ef-46d9-a3ac-4a95d45f4d8f",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b3e6fe2b-3baf-43f5-9f61-8090da976751"
        },
        "item": {
          "id": "593a0b5c-6026-4b77-b5e6-02a3762096a8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "daf82ca5-784e-40b6-bd36-d26ab78c3dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7815cf3-d6bf-4e56-9c87-a3de8e9cbbef",
        "cursor": {
          "ref": "55be110f-6a6c-4bac-807b-dd88dc27bff8",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "71424d88-42cf-423c-b700-a02f054a84ca"
        },
        "item": {
          "id": "b7815cf3-d6bf-4e56-9c87-a3de8e9cbbef",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8b90a040-314f-4fe6-9d83-7241d1e8e70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fea2b388-e9c0-4995-a9d6-e4765576d779",
        "cursor": {
          "ref": "ff64e687-75f1-4c9c-811a-c5883f8ad0c3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "932dad27-9ee7-4c6e-aeca-868e49c3eaa3"
        },
        "item": {
          "id": "fea2b388-e9c0-4995-a9d6-e4765576d779",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7ba07e0a-98db-4261-ad98-61b13d169486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f449469-0090-46e9-959d-849873e81ce7",
        "cursor": {
          "ref": "3de9f325-81bf-4306-8ad5-fbda8a7ecacc",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bda1a9d5-5879-4533-ae23-e0aed19b15d7"
        },
        "item": {
          "id": "7f449469-0090-46e9-959d-849873e81ce7",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f128ffd6-ab53-4717-850d-74293c02b611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca23d9e3-8ed4-4d54-b00a-2c9206ec4c58",
        "cursor": {
          "ref": "c1db3112-a073-40bb-8281-0211dc8b88b3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "21e4441a-0068-4137-8a04-d8c89d7652ee"
        },
        "item": {
          "id": "ca23d9e3-8ed4-4d54-b00a-2c9206ec4c58",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "762297ce-269e-4c53-8aba-d13c62d1a423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1013,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c481bc-7e7b-43d9-8c7e-57cf7fe9e50f",
        "cursor": {
          "ref": "bc05696d-6725-40cc-9731-c537f3fe57e7",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3b1eff85-6ee0-4c3c-8662-7eac9d12d1cd"
        },
        "item": {
          "id": "e2c481bc-7e7b-43d9-8c7e-57cf7fe9e50f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fe4eae6f-148d-42d5-a480-eff5b4014a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880993f6-07d8-4e71-8a04-3abb37059264",
        "cursor": {
          "ref": "110e0e32-47dd-4a4f-b729-8f395ebf9649",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a6631d54-bc71-46c8-ae83-f2e82bf49164"
        },
        "item": {
          "id": "880993f6-07d8-4e71-8a04-3abb37059264",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "fdb75b92-61bf-4834-931b-b24afa9d8d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eaf473c-b240-4dc2-bf8f-85d0f7647f82",
        "cursor": {
          "ref": "ca11a38f-cba7-4e88-b59d-53a75007cb73",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d141d6db-d21c-4fb4-9421-a334beb67339"
        },
        "item": {
          "id": "1eaf473c-b240-4dc2-bf8f-85d0f7647f82",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "61737cc4-6643-4079-9ce5-d3aca3112e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063adddd-cd3c-4156-bfd1-b8a261bbb9f3",
        "cursor": {
          "ref": "f85b770a-73cb-466e-b86e-49efc693922c",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3becda0a-a05b-4676-8197-22dd1e8c2baa"
        },
        "item": {
          "id": "063adddd-cd3c-4156-bfd1-b8a261bbb9f3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "03e55471-f0c5-458c-8d1d-8244e73591bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719b8524-1938-42b2-a7ab-4a6da66eb5ff",
        "cursor": {
          "ref": "01c581c8-36ac-4239-9a7e-57c0cec559e8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3496d769-9736-4571-bac1-eaf02d6326dd"
        },
        "item": {
          "id": "719b8524-1938-42b2-a7ab-4a6da66eb5ff",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "41ee5b55-2e96-45e8-b844-5d60670cd000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f0772b-293a-430c-9978-507814b91069",
        "cursor": {
          "ref": "ae6a6cde-f501-4a0b-9c27-55ff0f53ea3c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "79685470-eb1e-47b4-a312-769f42d5e844"
        },
        "item": {
          "id": "d3f0772b-293a-430c-9978-507814b91069",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "33e4ffe0-4a14-4287-b3f2-f36ba3965fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9e4bd00-7588-4049-93c7-3bbd9eee5b13",
        "cursor": {
          "ref": "0450f253-6243-4236-a96b-58f466f8a27f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6861be6f-38e7-4cbb-b833-19a200a0380a"
        },
        "item": {
          "id": "c9e4bd00-7588-4049-93c7-3bbd9eee5b13",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "96c3a1de-847a-49b9-8672-d579b20e6daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8e15ad-9a52-4379-a1de-3b1220d0c9d7",
        "cursor": {
          "ref": "cc5d51ac-0432-4a07-86f1-c09c8e850c4c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef8d9827-e751-4456-91b4-e4b387780bbf"
        },
        "item": {
          "id": "3e8e15ad-9a52-4379-a1de-3b1220d0c9d7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2e496c55-fe7d-43ff-9cc6-54df1d6f3535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a2bbf7-115c-4bee-baf8-ef7d10e1e04d",
        "cursor": {
          "ref": "3b2f61c4-4f88-4c26-946d-6b7604dee3e1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "56c17a16-5b2b-4114-97dd-a5c66bf4f6a8"
        },
        "item": {
          "id": "d8a2bbf7-115c-4bee-baf8-ef7d10e1e04d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "b2071bb3-fa95-4655-88f3-e6ca7e7266b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2a0e7-2f80-43bf-ab1c-2d73b6622032",
        "cursor": {
          "ref": "6318a1c4-6a66-44fd-911d-a4e9400c26e8",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f514a21a-9891-4b89-b170-6bba15939838"
        },
        "item": {
          "id": "48b2a0e7-2f80-43bf-ab1c-2d73b6622032",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8ad23209-5e71-4dd7-91af-ac1e83bbda97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc434df4-8718-4e4f-948b-d100db9f52c6",
        "cursor": {
          "ref": "b27ee0d6-3aa9-467f-8f3a-ff49b923d2b1",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "62a8675c-4835-4f8f-8c03-548d22091fde"
        },
        "item": {
          "id": "bc434df4-8718-4e4f-948b-d100db9f52c6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e125d59d-b827-4b00-9854-eef2d8b29193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08c9812-c9d9-4d13-833e-290fc71a2f2b",
        "cursor": {
          "ref": "916cde89-4f24-42cc-b310-23ce4abf2d96",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1cf1028c-b9ca-454e-ab75-ddc3718fc5f1"
        },
        "item": {
          "id": "a08c9812-c9d9-4d13-833e-290fc71a2f2b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "db2bc225-671e-4495-a3b5-f05ee8dbe16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca27e58-a833-4487-b35e-4d229f48f019",
        "cursor": {
          "ref": "9c4a10a2-dad8-4d87-865f-d467d4fc6af7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cae7c3c6-f901-4cd2-90c6-4fcacbdb7156"
        },
        "item": {
          "id": "9ca27e58-a833-4487-b35e-4d229f48f019",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1cb7d7c4-c152-4001-bcd1-de2c78f0d210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ab0965-7e27-40bb-8851-719c6e3a1eb0",
        "cursor": {
          "ref": "93379922-303d-4912-b0fe-ba8bb30edf60",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bd1e0e53-3752-4cd1-a261-dca61534bea4"
        },
        "item": {
          "id": "f5ab0965-7e27-40bb-8851-719c6e3a1eb0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2799c319-ca06-4ed6-ba92-9c7831ea1849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716d7b27-7043-4634-bdd0-3425490867a3",
        "cursor": {
          "ref": "bf7cc0ac-032d-4d2b-be92-ff15b149292a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "75e8d2ee-942b-4a3f-8348-212763fd2825"
        },
        "item": {
          "id": "716d7b27-7043-4634-bdd0-3425490867a3",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ff29a7e1-31af-4bb4-ab6e-e650bb005e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388e40f5-951b-41f1-85fc-da717b082aad",
        "cursor": {
          "ref": "55415666-95e1-4d1f-a5b1-17f6c0918ab2",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "a40285eb-f72b-4cc9-95ce-6066525413e0"
        },
        "item": {
          "id": "388e40f5-951b-41f1-85fc-da717b082aad",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7123938f-a825-4165-b970-4799381ccdbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c17f27-73a1-440f-8a40-e41c0e610d6d",
        "cursor": {
          "ref": "6058c599-a29c-4a6a-bfe1-dd3ea70c520f",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "70578168-6e8e-4faa-9a6c-08457fb12589"
        },
        "item": {
          "id": "58c17f27-73a1-440f-8a40-e41c0e610d6d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "6c1a22f1-09cf-4e79-b6a8-571a2504ad53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 115,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45344c50-d4d0-4035-b62d-aa737625e1eb",
        "cursor": {
          "ref": "4b6974d2-f3a4-4487-87d6-3dc8d7bf88d7",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e3e8c3a2-b014-4c27-8ab3-3654cfeb8472"
        },
        "item": {
          "id": "45344c50-d4d0-4035-b62d-aa737625e1eb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "75eff8f9-261c-4fa6-8c5b-65d32b26f553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7303a9-fc9f-4d8d-8127-e271e6584769",
        "cursor": {
          "ref": "58dd234c-613f-489b-9f33-44d1242aacb5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "728f36d9-1ba3-4bc7-bd9f-1d90a07c3112"
        },
        "item": {
          "id": "eb7303a9-fc9f-4d8d-8127-e271e6584769",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7d196cda-79d8-4d1e-bed4-fd69df7e0861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cea79c3-76e9-4e5f-8700-807c8edadb69",
        "cursor": {
          "ref": "d4ec9c5f-2a54-4411-be3e-798d753a9466",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "846d7985-50d0-47cd-8c8c-4cd8a814b5e2"
        },
        "item": {
          "id": "3cea79c3-76e9-4e5f-8700-807c8edadb69",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "79065c04-5fc3-4397-a001-9f657b3da45f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed35a51-4f7f-4a15-b719-f633078d07bd",
        "cursor": {
          "ref": "12468d50-a521-422a-8cc9-2b5d4bd2e8b7",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b1d382a5-b0f5-49f3-a2c9-11eef2d267cd"
        },
        "item": {
          "id": "7ed35a51-4f7f-4a15-b719-f633078d07bd",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "5b19b394-4a70-49b5-9d23-2d41330895ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc666a5-ab72-4deb-9bff-26e7a5672352",
        "cursor": {
          "ref": "0c967b86-d6ab-4cf3-9ca4-5b323abd2cb1",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4d352278-8ce5-4106-b40a-e29a41620076"
        },
        "item": {
          "id": "ccc666a5-ab72-4deb-9bff-26e7a5672352",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "90afdeb9-29bd-4f18-9165-964a591c9fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "954daa71-dd2e-499b-bc12-c4552a75c85f",
        "cursor": {
          "ref": "512634fd-db99-4a01-8f3d-2026ed27c063",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "224683cc-102c-48b7-bf69-bb0c02629c36"
        },
        "item": {
          "id": "954daa71-dd2e-499b-bc12-c4552a75c85f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f98aeff-fe6c-4c0d-b3c0-23bedac6e769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852054bb-0b17-4f23-bc3c-09a0abc03bab",
        "cursor": {
          "ref": "16ac1183-2a88-459c-a26d-416497d3c562",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "d1af5d9a-e11e-4c03-9f78-9781e6cedd9f"
        },
        "item": {
          "id": "852054bb-0b17-4f23-bc3c-09a0abc03bab",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "17421016-98f1-4766-9f0a-0901e17438f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d354ba4e-e475-4c19-b33d-e0edebb5927c",
        "cursor": {
          "ref": "ca7715eb-0003-401b-b977-0c74e60a728d",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5af9c93b-10c9-4554-b43e-d2931aea294d"
        },
        "item": {
          "id": "d354ba4e-e475-4c19-b33d-e0edebb5927c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "872f814d-637b-4f1b-9efa-6b3061a0f2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3fede55-7674-41ee-900f-6fa5ff6564dc",
        "cursor": {
          "ref": "b5360797-40a7-40cb-b6e8-d09a58bc60a4",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "c9842a35-5ef2-496d-9410-1b1347e6d933"
        },
        "item": {
          "id": "c3fede55-7674-41ee-900f-6fa5ff6564dc",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "708e7e84-9c0e-4e52-8faf-01e04a7f6a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a78f6b-784a-4431-8af7-3861f2263a26",
        "cursor": {
          "ref": "31b40d89-a52f-4d6a-afbf-79c39435837d",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "947cbfc0-778b-477d-aa15-dd034d6d5e6a"
        },
        "item": {
          "id": "93a78f6b-784a-4431-8af7-3861f2263a26",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1fa4d82c-4fe5-4a21-ace5-3d557542bd09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daecf1e0-ad7b-4467-ab88-339293c2b371",
        "cursor": {
          "ref": "3f5e5e72-ba18-400e-930b-d2090aa800ed",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "db6cbb29-48d3-4fda-80f2-2b4ada483ea6"
        },
        "item": {
          "id": "daecf1e0-ad7b-4467-ab88-339293c2b371",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "dce1514a-94f8-4627-a37f-36aa69faeb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e98b2b1-c597-4b5d-9f45-f6f58d461cd3",
        "cursor": {
          "ref": "2e01e80c-d978-4bff-82ee-d3f4fc2e9bb5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d69d1e6d-31c5-4cfe-85f4-938484cd663a"
        },
        "item": {
          "id": "7e98b2b1-c597-4b5d-9f45-f6f58d461cd3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c497c05e-ffb6-4bb3-af0c-214abc54a42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3b8898-2efc-4ef5-9639-fd08401dd99d",
        "cursor": {
          "ref": "d3d2f071-4f26-4041-8b10-11b7e936c71c",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6fa618f9-ae99-478c-9c00-80daedffcad0"
        },
        "item": {
          "id": "3c3b8898-2efc-4ef5-9639-fd08401dd99d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9398a94b-dfb9-4a1b-a1db-cc2cc9142716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2526220-8337-4721-953a-faea5f41ab8c",
        "cursor": {
          "ref": "743fe604-314c-404e-8900-3dab070af4ff",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "86a2b753-37ae-4ecb-bf9f-f8ac0408b031"
        },
        "item": {
          "id": "a2526220-8337-4721-953a-faea5f41ab8c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "23ef862e-c9aa-44c5-a599-9864e10d2f13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e22e72b-b8dd-4e37-a747-69229e17529b",
        "cursor": {
          "ref": "f6add40c-9923-4a18-b946-62ab54ebc7e5",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "833d07c8-4365-498f-8b13-1f9c0a259fa3"
        },
        "item": {
          "id": "4e22e72b-b8dd-4e37-a747-69229e17529b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dee8bbfd-5b4a-454b-9e0b-d7bb417fcba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8307b2cf-a3a3-4f2c-962f-787e54bc775d",
        "cursor": {
          "ref": "6a9214a7-b2be-4869-85c6-c2455101b16f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "feb34e29-a018-4819-9649-7347c8cb7127"
        },
        "item": {
          "id": "8307b2cf-a3a3-4f2c-962f-787e54bc775d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "16da4280-9095-4629-b28b-605b8eedf62f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202d1757-51b2-4ac9-93d7-5ce85437830c",
        "cursor": {
          "ref": "28bdd3f7-2a54-4ece-a735-370ed0cee0dc",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43e2a30a-133e-44d0-8889-4fde3d259dc6"
        },
        "item": {
          "id": "202d1757-51b2-4ac9-93d7-5ce85437830c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "43f20f9e-55cc-42c3-a5bf-296c382aebf9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257218aa-a81c-4ecc-9be6-a17475f5c28d",
        "cursor": {
          "ref": "24f16c36-e5c9-415b-8ccf-dcc5bfad20ee",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7b5f1bc6-2369-4eab-a127-d2df1fd6a8cb"
        },
        "item": {
          "id": "257218aa-a81c-4ecc-9be6-a17475f5c28d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "589dda24-6519-40ee-bc7a-fae14dc04dae",
          "status": "OK",
          "code": 200,
          "responseTime": 159,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9f86f1-bfdd-4cd4-b741-22497c3d9b6e",
        "cursor": {
          "ref": "c28e7cf3-3bd4-4a81-84af-4997bf40106c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "61e599b6-5c17-43ff-b779-5fe985854572"
        },
        "item": {
          "id": "ec9f86f1-bfdd-4cd4-b741-22497c3d9b6e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4f61dc02-e83d-4238-9294-c66ca22986bc",
          "status": "OK",
          "code": 200,
          "responseTime": 6296,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3555e8a1-74d9-43dd-9ec2-aed188ec0dea",
        "cursor": {
          "ref": "cff3db77-ce01-4fe8-827e-475bba884626",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "69a30cb1-f19c-47be-8ade-d0d7f2dc55ee"
        },
        "item": {
          "id": "3555e8a1-74d9-43dd-9ec2-aed188ec0dea",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d7b68f6f-b250-4baf-9fcc-3adcf3edca64",
          "status": "OK",
          "code": 200,
          "responseTime": 2889,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab5cd0a-a87c-44ac-b7eb-bcfe53224ed6",
        "cursor": {
          "ref": "0489c8de-60f2-41dd-88ab-e3429e63bc97",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "25e76304-458e-4419-840c-6e3528114581"
        },
        "item": {
          "id": "3ab5cd0a-a87c-44ac-b7eb-bcfe53224ed6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d837aeac-e808-4893-8bf2-3c50faaabd27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab5cd0a-a87c-44ac-b7eb-bcfe53224ed6",
        "cursor": {
          "ref": "0489c8de-60f2-41dd-88ab-e3429e63bc97",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "25e76304-458e-4419-840c-6e3528114581"
        },
        "item": {
          "id": "3ab5cd0a-a87c-44ac-b7eb-bcfe53224ed6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d837aeac-e808-4893-8bf2-3c50faaabd27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e029f4b-cfb2-4f66-a9ab-870fa471aaaf",
        "cursor": {
          "ref": "c3e7dc52-6789-45ae-b6ce-4c314d1c51d6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f9ed6a32-088c-4b05-b1cb-4aa5ffe1ccc8"
        },
        "item": {
          "id": "6e029f4b-cfb2-4f66-a9ab-870fa471aaaf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bb9131a6-a4cd-4f56-9924-3fc9d9f101b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac85aa9-f72b-44a3-977c-5c6a69578ca5",
        "cursor": {
          "ref": "ddfda2fa-a4b3-4cfd-9a5b-49bf006d76ac",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "254f7ed4-fedb-486a-a455-b6af5ee905a5"
        },
        "item": {
          "id": "8ac85aa9-f72b-44a3-977c-5c6a69578ca5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9ae39c08-853f-4164-beec-c326b3802a1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}