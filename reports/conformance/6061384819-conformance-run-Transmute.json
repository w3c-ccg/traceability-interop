{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2f7010e6-2aa1-40c5-b087-e90420c97db5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "07e8a516-f0c1-4ea5-a642-6bab8ac32c81",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1a359cc-b49a-43fc-bcb7-fa35900a483c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "88664b9d-355d-4cd7-9e0a-d171eccdc35a"
                }
              }
            ]
          },
          {
            "id": "ac668a81-7abc-4dfd-a2fb-5fe69ea6c636",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac39eef0-4927-4bcc-9480-10e960cd21b6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "683be503-92c9-4c1e-bb5c-aae47ee8d8a3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "033480a5-2867-430d-9fc1-b2659cc43fe1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f238b498-910d-4689-b00c-150ba9390c00",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8cffe46-82a5-4631-8f4b-88fc383dba58",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61e39d17-47bb-4b67-8634-854a748b2197",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d4fa818-8eac-40d1-bd2b-d33b3b3b6fc0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "365863b1-b0b3-4c7e-9bc8-2f626d5ee922",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f78ab14e-53a3-448e-8c3c-93cadeeb126c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "438e9d2d-850c-4e57-9a72-c416a27eb404",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8e5eb55-82ef-45c2-994e-b91fca65cbf8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2261a2a3-bd45-426c-b809-46de85af1ebd",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "358f6865-a5f6-40a4-9603-bdef22f1416e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de63c406-d5c4-4e47-b078-3f547503daa5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59637d99-6f8a-41fe-a3ee-41811bed0420"
            }
          }
        ]
      },
      {
        "id": "11e13563-1638-497e-be78-d5140b2f0daa",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "edf99e43-5531-469a-8da9-05677c4db226",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27dd6987-35c8-4b37-b92f-910bf11474e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1e0a16d-9018-4a2d-a51c-5284b37d1ab6",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880fbb7c-13d5-4f10-9c12-07e93e75d05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af624cbd-b1da-454e-82cf-1fdee54bb56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b00edf-160e-4def-91fb-d131894ea6f5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9752673f-99ca-4b81-b205-3d16f72250f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f2424ad9-f05f-46d4-89ae-9bb1264be2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9d61aa-44a6-45f5-b107-57d921a5744b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e988d15-9378-40e0-b1a8-5bf6c39e1b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "213c7127-bf3b-4c2c-80b7-3061534b8b3c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "384f10ad-07c0-404c-831c-156992a0362b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f782175f-77ef-4f77-8e0f-84d6ed1a4a58",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc0c6c6-b74f-4980-a4b7-7b319243604f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60d757c5-9d0b-414b-8df4-ac33e89addb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861535dd-fbc8-480e-8b56-1166aeda6ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76eb7cf0-f83a-4849-890c-de2483512d3e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "31342fcd-43f2-42a9-b7b3-e423fec40933",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c0a40827-cbde-4b44-a63b-f987f36add62",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f097309-d058-43b8-8e3e-0c7d0cda3c3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f1f731d0-efa8-42cf-99de-bea3bb5cacce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3b8579a7-2f6c-4e44-83a0-70e7c03837c1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "221beb0e-65a8-4b47-9245-2975fe457057"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94e7f9ef-90b9-4fee-bbf9-598359c389ef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c378216c-30e5-4323-94df-85720468be48"
            }
          }
        ]
      },
      {
        "id": "25bfc6f1-f30b-4be4-bd59-65c553de9ceb",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c5e2ddaf-3b27-434a-8daa-68d771e6b9be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "211be227-f3aa-4e9b-86e4-72df4baf27b8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "810bbbde-7e7f-435d-8eee-c8039b5cbd43",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ebef007-c6a7-4beb-8552-9834ec5059e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "685ab49f-bbe1-4d63-a951-391232c138e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cd8057-5b87-4fba-9d07-33c2efc08bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88dde3a6-f222-4405-8c29-8f6179c20d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "096a8f03-4f1d-4878-af92-edb57e2d3581",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6754dd63-8790-414f-9ac6-40e126ec3eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf4a759-b021-4e52-9bfc-67dd0955f869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4a825a-a6e6-4d06-82b7-acd054c3496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cbdbade-b37c-4268-a405-afefa24ab501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8ca418-5b28-45eb-9782-fc6f8d5e27f3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c1efb85-fff0-47fd-b8c1-05a0d0a68084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58485283-ce9c-4e46-8084-1e6896be7d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d131bc-87f4-4ab8-bfd8-4acc9aeca06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0de7b32-cbf3-449f-a106-095be6959577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0720bb5d-0dff-4d8a-be5f-7b3cbd94c5ec",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef59cbb8-325f-403c-9b50-a23b0fde4a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ddede7-a719-487f-a83d-86b2604d9fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29608e7d-5726-48c1-97e8-b1f87da05039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81e4e91e-6a56-47a1-8b03-668cc55b3b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc79c3a-d37e-483c-948b-956927b9e938",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8232d7-fcf0-483d-9b9a-ba6f151f2442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09fae065-129c-4a52-9012-a2d2db5480ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754a955f-18fc-4e1d-bb88-37a1df3a1afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8515915-0e40-49b0-bcac-f90b3dbf4ee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eabb1d3-ed20-4135-a317-c732d7e75414",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db1d8b9-0c72-4887-afde-c9f9eca7768c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7cd2908-23e9-40a1-8a3b-9f6629008d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f51ecf-8646-4abd-8405-bcc49d838b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98f34a34-457d-4b0e-ab9f-d7d1d60530f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a59dd43-d357-4157-bd3f-44ad700cbbae",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17de4aaa-5b97-41bf-b4fa-0fd4e0821017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc627bb0-9f2f-4440-943c-264d872a8af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a67db5-9df8-4dce-8c0e-141aeb0256c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e86fe87-b9e8-47de-9e57-87f3b9800011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7fbb1ba-4ab6-46c0-8303-9dea898cdb81",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beaa989a-e915-4474-889e-3bf06f8382db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce63f7d-f16b-46d5-a796-84fc0619fb40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448deb9e-83a3-4812-9f00-5548c17e4b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a83e9e54-5090-433c-a795-be5287bacfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc059a3a-788b-4ab8-80a9-3355c9a56113",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286638db-3a81-4962-bdd0-0bbc986c3006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6b47d7-73e9-4921-a732-841d06b1c5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9250a168-c0a4-4e3b-9499-18e58abca28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27033c80-0097-4e23-a4bf-a51940b69489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a63d974-ffd1-4327-b333-a3966994650b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79fe8625-fde1-4b3b-bfa0-f15f766ae61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e923b5-deb5-49d6-9ffe-f5ba21199b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d269d97a-04d3-4155-a3e3-04f5ec4603b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e217d57e-27af-4d9a-a233-5a88a913f62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4638bf-e2e2-40c7-941c-244302e51ad6",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6365cb-f0a4-4a2a-9b1e-9876163c0cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a7438e-d7de-40a3-a172-168d3897c1d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9311616-a335-4d63-b7b1-d9817498e8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1879808-fdd9-4989-afa9-4c75661b34af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca0ac1a-f92f-46a8-bc6a-7740d4fdfa2d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a009917d-6526-454a-a401-92329d0411d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e24823-2e17-466d-924e-6d2188c67ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118b8d8d-c636-42b4-ab9e-97e344c9af38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a62c9a75-3054-433d-a42f-c03154fa576a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a5a54b-4d2f-40ae-8c8f-d921997dc28a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14bac87d-c6c8-4e0d-abac-c4a8ca57b8cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525a6591-bcf6-4392-ad61-298342a97650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc755eda-54a4-401d-b1af-6f5cf87dd8ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd06228f-b57b-4a80-9f44-f0ea5e203331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba35805-d239-4a56-81f8-a71641810471",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811a3a45-aa39-4ec2-a909-e75d7a4b7339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e65090-24cb-4a88-ac0e-f161a1653faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03c0392-8721-41a4-b9a7-747232ddce85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6f26260-db6c-4501-b1ac-907749db0067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d117f4c0-91b3-439f-9a49-d211ccfde880",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2845618f-1c2c-403e-bbde-9a678a5c90f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dbd101-b488-4c82-b5d8-f6aeb712702e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43aee4cf-bb60-44b7-8aca-99d0682757e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e6e798f-4912-4659-a503-84abf42b5a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3d2600-b034-40a9-a1af-5298970e9e73",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "143effc2-3d18-42c1-a258-421e6ac309dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcfafeaa-c214-461e-8b51-e9c0f4e38553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34bd3d7-df6d-4ae0-9745-2526e896dacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "037d04c6-19bb-4c29-b53f-df7a9d0f2347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05724d76-6ecd-46c9-8150-b3d70633c3fe",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77a1e24-7ec8-4cc4-8416-a6d4f8e12753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54859c6-4f1a-46a6-9ddd-67189bd78a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b79e51-e64e-4b95-ad6f-1ba6c2af8bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecbfdc49-d899-4c99-80c5-de008aa238f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedf5af9-e4a2-4e6a-b803-c04782022949",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22574eed-f6ac-4c57-937d-135f0ac6c786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ba6434-3b44-49fd-88a2-328e6ef4ba3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbb7da2d-5ea9-4fbf-ba02-c47521421891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2f45d9-6d50-474a-aa47-9bc21b934e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d346c49-0dc1-4bf4-b9fa-b3f91b0812e9",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85726579-535b-4b7a-86dd-fb77fd924278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774aedc2-c1ae-4886-978c-e5a0717a4103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9a4b00-f478-4492-9d5e-b150cc0cd852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cb5790-48b5-44f0-9912-e83cf3eb25a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76caa891-1546-4de7-ab31-9acfaa95c327",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a300bb-3e83-4322-8b0b-41fc61bdcc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28da4288-04b0-4246-92f0-a7243695561d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409f032f-f230-4a19-bfc3-298614b84b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "682cedd0-5844-4bcf-bde6-97606deaf377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d12ca95-97c7-4f7d-92d8-49dd842650a6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdbb11f-1954-4eae-8bf3-5ffdd0721049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a12344c-4bd4-400e-8318-6e034212d5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63120ee-4138-4aa9-8781-2e54e28c3f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7491cf86-142c-4dcb-8f4c-f372f8dc7305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c64317-0342-46b0-9480-09f4f3552f2b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ef85bc-8005-41aa-b397-f16541147c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b38074-4d6b-4b98-bd27-481205c0f706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d970d45-6c91-453c-ab43-71719988c102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfd3059-bdd2-4a90-9749-b3d10a44156f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d93287-e9e6-423f-a899-04f5770ab9c7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3c01db-b042-49ec-95d2-68f7b99185cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc65dd0-cde2-45fe-a231-482864427a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b9e35f-8294-4017-94ab-21d9b8d3f4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00653334-6f83-4b97-a977-e88ffe06e5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74516393-1cfd-416d-9906-cd5f6d23492e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141346d2-38d0-49a4-8af1-f40e790ae5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f258271-ec9c-4c5a-950b-779725e19306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eebc5f30-dabf-45e7-b576-83fd6d1c5b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81758d7-f1e5-4f4b-949c-81460136fbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f51c3ec-7011-4d46-9675-89c8460d0f5c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11a6f6d-be6f-4dea-9500-a8504cd352e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e110640c-b077-4674-b093-6b2866d19001"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cf16ea-851c-4979-aacc-7192fea98bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "167b6e5b-b1d8-476a-ae81-619ad40936ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fcad22-b43e-4241-a9d5-ef2b9477a530",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e21bd1-6112-4c15-9572-0ea8b0cf616f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05b1ddb1-3315-4892-86d6-fc87c6aeeccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff28d5f-b42a-46c2-8c0f-58d89585c602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "66509200-c054-48c1-8065-7f2065e8aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd72c55-2afe-4cd2-b781-0597e2ff0851",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd9d99e-006f-4502-9520-e40b41b61efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dfb0d8-421b-4cd0-b0b7-673a34333af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd9991f-d88d-4326-b57e-56580c43a4aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "948dc30e-8d90-440d-8592-a47bf07669bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b8725c-e207-43a2-8393-4afa595cd241",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c25f74-63f6-48be-b38e-36e726cf43bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365e48b2-214a-4a47-80f0-2b0f6d0da729"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e51c569-373b-482a-8b72-5dbaf5007f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fed2ad37-41f9-41d6-a886-2561652b187d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e749d3-4cab-413c-8a27-0676359cbb60",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9e9b9a-b889-4455-9c08-cf564264cf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10c309a8-3ff3-4431-9183-65e81e523e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089b135b-ca12-4c8d-9b26-2f62b6b43e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc0997e4-8721-492c-8627-bda0f7b927b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d82195e6-dfe3-48f8-ab6c-aa2af809fc90",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65f0b10-35e4-43d3-8693-a4647a7dd1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38a223b-1b23-4877-9f49-0817cb07c3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fe8a43-228d-4d33-835e-5143bf925cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0909a024-76ce-41ea-85c2-0e8a0955c06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dc78372-a02b-466a-a3b3-cbd66cc77d2d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c1b4c30-f67e-49d8-86de-4e49bc1fcc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76405fc6-9793-447c-ae72-d3fc3d1d9056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2073ddf-7a0c-417a-9fc4-74de35caf701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3c0e85-11a5-4966-abd9-0a8195dea587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87f6794-0a91-4b70-8c66-95527e513776",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9641e1d4-ca52-4c4f-9ae2-3bb4b16b3365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4960c8d-5325-4b85-9956-b949858e20d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f090e0-38b4-4e7b-842b-225cd1a2f3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69050124-2971-4b1b-a3dd-b38b043647d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44198f2-c871-4edc-85cc-59cae3db609f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8abc4e02-7854-40c7-b7d8-ec62bf9c509b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b774e40-612c-46f8-beea-37a951d6fccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069ee19d-8123-491d-afe0-52cec819268f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "28777a16-aaf6-46da-84e0-d8843554f079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c93b14-d7bc-41ec-94c8-e7a74b2edb77",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "433c3b59-d01c-45d7-b405-37a47ad7a780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd0b0428-10f0-4756-b5e1-f20d92eeea2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234afe1f-00d2-4e66-af73-11239f2f46f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ad1a9a-34d4-4d7d-8064-f13789f096ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bce92f-7c5a-4d1d-a9da-27676caffabf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6958af90-8df9-4667-98eb-b776bea7d678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f70a98-6dbf-454e-a611-9cc5a6056b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cc3ecc-810b-42c3-ba7d-f38eeb1db9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f73a6d4c-6a96-4dba-8c92-2e98ebc7258c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65c8499-38b7-4000-914e-212f6675ff92",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08832cc-cb57-4d5e-a392-d5b8cb1e70f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d7e2c3d-4ecf-452b-ada3-13770e3e4819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443b4498-ef6e-411b-bc6b-c2c4587f20ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "30986934-6828-4d12-8fe6-7ea037d0d980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8392e37-0193-453a-af7b-e656cebc6c4f",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54458f08-4dd4-4c43-8d03-9c46f6d4263f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "203e07c8-e203-4d0c-bb66-931aec4cd8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122a0589-21e0-4ef3-91c2-e7b297fca09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "53851980-40ec-4661-a34c-918bc5eee54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5516768-0be6-4e4b-b8a4-f701bc2fbc87",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05cba56-3453-40a4-a901-2b12fbfd60d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351d0baf-128b-47d1-9b16-c19ab8259602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9f6716-a0df-48c8-a36b-60df33962f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5ec025e-e496-4348-9f17-0165f09b144e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6829b5-0680-4f7f-8f6d-a5e0eeaf6d70",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be112063-3251-406b-b9fd-98fa484c818e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "498aa713-5c1c-42d3-b2c2-08c45d79de4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8e7af9-0eb7-4c9b-866c-507cc0088fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5d59c1aa-abe2-4372-bc03-744f1b15b5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1134f90-0d15-4dc1-ac43-e1d1c00eab60",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af14fe5-9e91-4b49-9e0b-0a862eb43aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad09872-bf2b-4f1d-84f4-63efc98ac838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2032ef33-ec54-4556-b234-1b1256b54a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6c63add0-898b-477b-831c-67b805bb7f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df14bba-8ddc-44a5-8718-0305120d843c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4622fd0d-0b6f-4d04-8176-9f99f64f053b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52967173-77c0-4fed-b77c-f7d46625bca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eb63fd-3b90-4c6f-b647-c1a86d86ec1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1963aa6-0eca-4358-95a5-58939142b237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9363afbb-6f96-4004-bebe-f51cca87152e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51350482-bd38-4c91-a50b-6b77d140f33d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1ea340-69a4-49a9-bc41-aae30d46b9c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296130e2-2d17-45b8-8acb-4d307d7ecd09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5706dbf2-2da7-4204-a428-7ebc766040a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f939764-75df-4cae-bceb-e88d4d85f576",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9cc2395-fbb6-4131-8589-73a659e186a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0e9538-f7ef-4f3b-9f0a-d3aed6080382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e046030-46a1-41f1-bbba-b0b57120a28d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "274781b4-0f91-4887-8d69-25154aa792c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fe11b4-d8bc-45c4-a7df-782744ecbdee",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20b4678-d2bb-4f16-9953-e9602e77cb71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaba510c-0624-4eae-a281-699c25bb93d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326f6707-9ad3-4cb7-b644-32e9f4baaed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "04eabf45-e47b-401e-9d74-ba770bbcbb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce1c275-d889-4237-aabf-6e0afecc12c8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948887bd-a8ab-436e-a27b-eae9f243df76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003d171d-ca1c-4736-81f2-134387a9264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225a87b1-0b99-4735-a4e3-00cc9ed9fa43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb3d28d-3be3-45bc-ae97-638e0906fbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f6ecef-80a1-4f9a-ba7b-dc2689a4d2d8",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364384dc-9f94-48d6-a852-535dac7ed0f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d119edcd-f6ac-455b-8be3-6c1544f9295d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebed5d58-8d93-46c5-9250-c547994ca8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebd0868-4615-43e2-a5fe-3d79522fa2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7092eb8-62ab-4fe3-9192-0cb82e6d634e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bae5ab2-f008-427a-aad7-6d9430e3885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155c9dc2-dac8-4072-b747-135ba302ae09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43293a1c-3c45-484c-953c-3406bd4d194e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc6216a-6197-4a4f-ac9c-d49cf2731480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bf29a6-7b15-46e9-bbb8-937c47a9353a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "201693c2-65bf-4b1c-a767-61d74781d63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383a5fb8-b974-4274-b4ff-55d6ee54bf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f79aa5-e340-490e-87b2-e831ff4b305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa34cd64-75d1-42fd-93ff-91808aea7f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd1aba5-1296-496f-bf21-918058bbc3f6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7429db5-380b-4802-8fd1-219ba9832fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da037cb4-f1fe-4e3a-9ef4-8439e200449d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a6a09e8-af8b-45d7-8437-10073cd3453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a05773fa-2019-4e01-84ce-24e141c01e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514d8bd6-1109-444b-94d8-8ded3e7fdf1e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c4facc-f60d-4184-a0b0-b151d6cbd06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17560464-e1c7-498b-887b-20be4fedfbaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d93ff8-fa87-41d0-8c98-b63460e15cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7e4ad6-16fa-4b21-9c4c-e80786354627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eb84b8-2212-433c-ae9f-d2d0a70bafb4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72abac79-6861-4adc-bfa6-8f8a8b1dbb8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efe37825-8a1a-4c06-90a6-3f5e0b1d4276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c72a01c-9752-447c-9532-8f63e138b130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b78cb4f6-422b-496d-a621-02963f60d51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0c3015-8e72-4793-88cf-d5505ef80976",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd506f8-76e6-432c-91a3-2644d285453c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22c6476-c6ea-43d7-9838-1d0278ba574f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e67613c-536b-45bb-8072-ebfab5043afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a69aed07-cae8-4b76-93ad-6657fafc1dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3195eff9-aa12-43a1-8ea2-2cedecb3f871",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5362d749-04b6-42f4-8a9e-4fd883a03ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70331e1a-aba1-4755-887a-6534ce756e17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0059bf0-b350-45e4-b5f0-057e79953956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e59578-7079-404e-8746-ddf52c4f28af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa84c831-24db-4093-8311-a32c37f3c97a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e93095e-28fc-461f-8dab-cba34df95d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a641f832-0c91-4283-a4d6-ce5480870f84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e73be886-01ea-4a72-85d5-1455763f5975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b2ea01-d48e-4128-9bc9-694341fcf829"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c5de8cb-4699-453e-ac18-cf9d81e993f6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e8746c-0daa-4d17-b647-928a486d5cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad7b59a-f826-4d70-9140-2585aebe4d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ef87f1f-0e0c-445f-9bb4-5562f6efd074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6694ab-41d6-44ca-ac99-3c45c0de2894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9eb24d7-3faa-4733-8cc0-9b0d3a6d690e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c2f211-07f5-421b-9746-2c71e251a68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04fbeef6-7962-4c60-bcb7-a96e70b1b91c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07677d5b-6eec-4ce4-a13e-e315307dd9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdd8250-1e95-4aab-b8aa-85c71a1d10dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9527d077-7e90-434a-b682-1539d52db5a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d99ab6b-c930-45de-abda-dc0d98b11045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319327a4-712c-4f97-b2cb-b294af46c1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f7edcd-b939-4a31-9e22-3291d1fdd9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "87e7e28c-309e-4ad6-9ced-bba31378082e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3cad75-4b01-411c-81ec-6cb39f278266",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2548781b-acd3-475c-b357-1e04c498d4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5370ff-40ad-4eee-a25d-1b625d848b2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2166c4-fb40-4e96-b02d-a0e70ac2b207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "148d15bf-d331-4819-9789-10859f66c6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70877c29-7fc4-4cfc-80a6-ce5414aae608",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c971d33-f341-47b8-8f0b-ef0fed64710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e9171b-7d26-427d-9707-3d609b386486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cba1d55e-797e-4ae4-a431-e3c1cb5395ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a91cde43-593a-4767-97a3-66fd2cec1329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "495d7a42-3985-436e-9922-3e99dafaa64a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad455ca-2870-4355-8105-984bd5388bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4d341c-81bd-43dc-b249-d06ba2c0ecba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdede3dd-2171-40b1-b543-3380ee7f9284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d90a6c2d-6638-4630-bc7f-1a77e0859f1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6be7d91-5c12-4acf-afc8-c39cc8b1ce53",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d794856e-27f1-4c24-952d-6ccab9600cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ca1807-390f-4661-a29d-71a898650089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137e8377-3293-4d1e-b421-5518ccd7e03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "25b2ac5a-6204-4eb8-a6db-8a11f0be223c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbb2d5e-f88d-457c-9c1a-eafdf6196153",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7075943a-5d7b-4909-af38-05f03109b88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d794414f-4acd-427e-96c8-1dd4e6bce097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "808c0814-08c8-4762-94fd-77b6b76115c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2350c3eb-648f-4f4b-a638-5c27533ce7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af681df7-86dc-47ec-8a02-6fb18b612263",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8512a2ef-8b48-4526-9abb-cf502017f75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ae8940-29dc-40ed-a4cd-66b3f51bfab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7287ab4c-57f3-4fbb-b1df-a93e539f7a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "256e44dc-10ce-417d-87ec-a399bc2f16eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efcd051d-2c5a-411f-91ff-790e6f337045",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fa0207-e309-4d8d-8a37-1a36c4e78494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a7c96b-501c-43d1-addc-5498561d65fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527e1152-b512-42f5-a01d-259a99dece2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2af5cb-092c-4e79-9178-209a6603defd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c95f135-43fc-44e5-8c18-3b5a142a7c1a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760326a4-6019-43ee-8b05-97e99df06391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e269dfa-2090-4a53-ae04-f41f14a49ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb49af16-af6a-4063-9e15-080236f0a1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a235682e-b46b-49a8-8ba7-8de14d9023a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1ba05d-9906-4ebc-bec5-cc0289514383",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f79ca8-b108-4193-bd54-f3eba11b1a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5a6050-3c0d-4a70-8034-88cb8261bd2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1c6d02-8b9c-40fd-82ba-23120d739248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eff79ab9-880a-4bd3-a0f6-d82f1ae1a495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6145e8ba-8f3e-4684-abda-a2a2a1ceece9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d49c35-bc26-47f5-8dc2-efb78359b3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84658917-506c-4cd6-81e1-39512a80be76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226470c6-77b7-436a-9468-8387f458fce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3748910a-38cb-495d-a7ff-e9d57420eabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e90011-1cb9-4d5b-b756-be9c7afd905c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b0677f-c025-4451-b98b-79603fb84205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d8a11b-6031-4610-b36f-4bb5405a0719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94276e08-89bf-4ecb-8d49-498dbe1c2feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b09782a3-3328-4c13-817a-6b6967410d4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a566802-eea2-4264-bf96-3e7b0e8838cc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a66957-e41a-4edf-b9ac-624bf52cd369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad3303b-b355-46b6-9167-d70d4de0dd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a28a5c2-bf2f-4077-b077-f40a214567ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f43cfdf-8d64-47ce-ba38-41334408a3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ab6ac8-ff91-4cbc-8d07-012d32052c6c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b23f90-dab0-41a8-99cd-830f8eac6c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69770baa-225e-4d2a-991b-f46cc65f0a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620cfad8-58ae-418a-b6a8-b427ae251e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f09411a6-7616-4c1e-9b53-cbb5299ad342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4024a0b-cf99-4c96-b4c0-7788ef83674e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1be5c6-5830-4e8e-9d06-404e1b152cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1de98bc-873f-47cb-ac2b-ffc12c12adda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20455a4e-4ec8-466c-b1ec-183281f93ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2da814a7-dceb-4753-8830-46ecf01728a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8ede98-4ab4-4064-9fe3-9c6f4aa23ff4",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ee7101-64a7-4475-8581-fc1cc041ffff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9968e7fc-4c87-46fa-bcf2-67e99743f9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09dbede0-891a-4fd6-8eb4-2166a83bbbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8870c5-3698-4529-9cf4-c20d2835a0b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5eef37f-63cd-40ee-ac0f-3e37f26a5200",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ad1951-4bb1-4da8-97e8-b4a6214a64e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960d7506-ef6b-48a0-ae0c-a0deabaa6833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e32b51-f233-4794-8883-a869bff5676f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc197085-520d-4ec1-8ebb-100179c3550f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10d2e7d-dda0-4eee-b9ce-a5bb1d80fe64",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466448c9-1fb3-480a-8061-f04bc42f1fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69b6631d-6d38-4d23-a749-4a37b7dc03e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e74e25f-4d27-41f9-ac82-71a35874c53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e6861802-4811-456f-83db-2bfe2ee1c5a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7faad4-78b8-4013-8fb2-01d6a2e2b503",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3344becc-4915-40da-b5a7-f04a773b889e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e746cb-cbc1-4d08-92d4-009887bec0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70002272-c931-46fc-b28f-e6eb706f1d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ecdfafb-ce16-4c15-85a7-4f15c31dbfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1701569-32f3-402e-bbbb-c33e05064bce",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42819c1d-6789-4e6b-a5b8-613974a5eb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30087b50-22a8-4143-beff-ce15fec1a6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c67ee0-d52a-4965-95ac-ed34798315e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88de7ba7-a396-4607-9fb5-e358c4fb9212"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0708cb-f8b7-43c4-8801-d17f804fa916",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0eef398-1fc7-4b85-b230-5c9a4d2ca52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9a8d0b3-433b-4746-9ba4-7fcf66289067"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d456460-73f2-4925-a4e1-922e27efebe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3151ff07-4b40-4b35-8549-04f76f75b0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1079cfcc-4805-4ad2-bd0d-b55d24a8f8ee",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "370161f5-3377-4d5c-bd99-d3463e970dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72f1e03-71c5-4757-b645-790ae92c9277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c0ac77-944f-4d8e-afa4-fb9b8d8553c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d2d470e-ae82-46b0-8fcc-38eb287d3e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9c1c21-ee97-4995-ba95-e956972f7a76",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73302905-fb16-4b43-940c-73eee49fed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5279eedd-80dd-463e-9c00-24f53c680027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6916de-2cd9-40a1-b6ad-8cdce2c39e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c128635-9c71-4476-8408-87f8d47a45af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ba95ac-abe1-44b3-8ffe-e476a2518ece",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1114ec20-a8fa-4186-944d-b00b878ea670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb5c184e-3144-4294-ac03-9300c75d5473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e3637e-9c3e-42e3-904a-39ee0719237f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b17b84b1-f004-49fb-adae-9636db2f8bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5ade42-4a18-46ab-8cb1-5ca79e5e7a09",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47e6448-7f40-4235-b405-5656350e2360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecfb3cba-d978-4977-85e2-4596c63932fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88234632-a892-4ea3-bc8f-6c5eec1d9dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bd68b8-f3dc-4339-ace6-846cd44df663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4658c752-4480-4b6e-a8e9-14b1e7b8eaba",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c55005-35cd-4724-a2e2-9d9d60884e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18ef95d-e159-403c-81b6-6aca51ca8bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36af9802-aa1a-4ae1-918f-edd03f205ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9171257c-a1bf-4c5a-84d4-b858e64c2e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "386399e7-84ea-425f-a1f1-33e7c46de7d4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ec915e-d965-4e9f-aa68-574335fe6845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf747311-207f-458a-b88d-9dfab747016e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6962448c-3476-43c3-9001-2f66cdf2fd37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8097fa20-40c8-42de-90b0-686c3052ed1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78713671-3860-4d6a-bd16-aab98267b7bc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203b26bb-a71e-47d1-8532-2ef5d1339623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253539ee-a5d2-45c2-9085-cd4f94ed3f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93236fa-f8ce-4b82-9b15-7c6521d2f550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "799d6c33-d069-4c3c-8554-5b57f7bbcb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45455d87-5a46-4e43-8852-607a06e4b367",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faeb82e0-c1d1-4ef6-9b61-138a6e472892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1883147-ee5f-4740-90ba-6ae15020061a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08ea1d4-18ca-4051-b85a-e3a21186bfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23a5d090-a9c2-43fd-bccb-0000b310a4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17aa14c0-aea5-476d-97f7-4961d5347538",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1419408c-e19b-41bf-802a-38a1ba51eae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5385af-044f-4e6d-bb8a-f41abdefbcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6f84d21-8135-4527-bd80-666e1575041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "827666e4-4aa2-48c3-bc5a-f533c12ac3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c95ba54-d88b-4dba-bac8-c43833e9d05b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a2769e-1926-4151-810b-2f575af168a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09bd91af-7e71-4bd3-8234-54711850e277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357cf833-0c6b-4d71-8be1-c23af1ae7976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccbd115-6745-4060-8f13-9003c24741ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3a1fd2-89cf-43a4-bba4-4fe07611f57e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae336dd-09d9-4879-837f-26a92a21a068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c551c90c-5fe9-4f7b-a177-cf9afb2360ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8877d84-aebe-43d7-8d98-32916969fa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "39e77d79-d2b3-44b8-b842-bb1650da7b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cff5927-6b76-4357-93a8-e27a50c07f97",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1987ee-8d99-4077-a550-b3a606faaf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cacb89fe-e057-4897-8318-b482d0db840e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa0219e5-3310-41e5-aa08-331373d91832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "509f671f-25c7-4054-b457-db999e9ee2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5d66ff-bc1e-4174-b7f3-d173f1079ebc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcc3499-3f44-43b5-b1e6-2ab1b9751b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0838413c-baad-4223-8515-8038c5441a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30c5d71-5706-46cc-99ab-0a191ff9c943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e71cd9e3-f03a-491c-9a5e-e945ea26e66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33b35e7-7685-4ae5-829b-eed63af365a9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c913e56-508f-408f-aaea-26a51d786c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e3b44ce-7e42-4054-9abb-ac87463f18b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62a483d-6546-4dc2-8b92-7b6a1e0107b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aed102a-5233-4578-8cff-309be6b84cce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2c824b-eb1d-4c12-aa45-b4b765b6508e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6150942a-ee66-4765-a915-00c49f2c820e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "80471aed-ea36-4f15-8649-f483eeb2c7a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2497f2fa-f66f-4507-8c62-bcc084e12007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e94fbd6-3b11-47ca-8367-ecae16a0e59e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b10e3fa6-8685-4fb3-8250-85520646adce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d8a8a5a9-1429-4cad-9fb5-5963c61ace7b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860c0c4e-915b-490a-a423-8b4e37320c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0bf646ea-ac94-460c-a8ea-84d521f73f0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4549ddd9-fee3-496e-aa03-610ff6ed013e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d00c0af3-4d46-46c4-a8a6-214116fc3153"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9ea223f-ec62-419c-9f89-965026aa6e8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24e2500b-4ccc-4ab4-b8a1-db7f881abc9e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec250d11-15d8-4d7a-88e0-b28fd4de2a93",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "355169a3-c085-49e7-8f46-4dfaf3abfe16"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eef34ddc-da05-46e8-a8a8-5bfef7509f80",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef0eb6cc-3d93-4318-bf5e-de66a1014fcb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7b2bd993-42bd-4560-8fe1-e563a556791a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8fc9b95-cfe0-4825-ae7d-d34ce034fd0f"
                }
              }
            ]
          },
          {
            "id": "d6a8db6d-48f9-4d2d-9de5-efdc75f5ad79",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cf44b4ba-af99-4e94-a139-a94cd4eafc16",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ee17c4c-b8c2-4700-9f15-37f6d530c8d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f97a51f9-86aa-4807-bcaa-511eefb9ca7a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7238ed7-4b73-459b-b808-d24287e983b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c0294ccd-a886-44f0-abb2-f3c21d8b86b9"
                    }
                  }
                ]
              },
              {
                "id": "db5ca43f-5f49-4b67-b309-3455355f401c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8181804a-db71-4a72-85b1-7e6f447ad64a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82df6f58-c10e-483a-8041-8b6ade1d033a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4768a5be-46a6-4af9-ab59-048f7d015842",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd781dc3-a210-456b-a1e0-8e9caf7e0f5e"
                    }
                  }
                ]
              },
              {
                "id": "30878362-c832-42ad-aecb-8a89890ad6d8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "febc62b0-6a66-48c3-b4c9-71236ccecf9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f182a88b-5144-4b2d-879b-630a03ba73c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd89ec14-9270-467c-aa9d-8da8d69e8216",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cc29ccfa-1edd-40ef-9d82-040c9992fe0e"
                    }
                  }
                ]
              },
              {
                "id": "21ab9b9e-e392-43ef-9be0-83d76439f327",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ff5c47a-7ed9-4e16-bbdd-dfc555423c83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ee2e3b8-d14c-47e5-b6e7-414f8e3ac531"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f213604-2dd7-44c0-b5f2-36059aca1641",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cc0b2f6d-23dc-4194-87a1-cecc2d2c8a3b"
                    }
                  }
                ]
              },
              {
                "id": "868dfbe9-2bf2-487e-a893-1a7c7d7c8fa4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b85e2c0a-cd09-484b-beb3-3a0cac00a955",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cf3502b6-82be-4268-95e1-5d1351973ddc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f513065c-b454-46a5-8ce9-894d51b161c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "7fe8daac-e237-45fb-88c9-3a41d7f3cb21"
                    }
                  }
                ]
              },
              {
                "id": "ff9bfd6a-4170-46e7-ae96-6570b2bc3650",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f9f9d9a-9838-4c81-85db-631c9f11dc42",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bead5c6-e7f8-401c-a0a6-87e49c2a5b60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d50acfd-be82-4760-8dce-3650573efdc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "31e9cecc-6381-4ae1-8bc1-a00b795d8f5a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9285b25d-2a79-4d07-9ac6-e18fd45eab1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67b61013-00a0-4812-8d46-9041e32ee6a9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "208b8b45-19af-4de0-a111-848498caa21c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4dcb65f8-3ef0-4669-9d64-4f38506322bd"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5cc0e50-b912-48a2-a51b-101bbd0391af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7d13995b-e757-4a74-9366-9e32909db5bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81a69411-7d98-47d1-bb82-183e376cac26",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02ad5d38-710e-48b1-b6b2-12e275e2eb86"
            }
          }
        ]
      },
      {
        "id": "716c3100-53a3-4f63-9b54-58877d577f03",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7c2768d7-1e2d-41a5-9bd2-2a5b1ab7cc87",
            "name": "Negative Testing",
            "item": [
              {
                "id": "041e27b1-930d-4e40-bf61-030d42d98cfc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "00354926-d499-48ca-8c73-b0d69145697c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cd2ee7-e4b0-4c4e-bb48-c75cb375af05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "243c0c5d-0907-456a-9ca7-5ddc70332ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aecf1dd-85a2-4ddd-8205-033fd4fa30d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "816e197c-d4fe-47c3-860c-f9119515e02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb654749-9803-49bf-8531-b2cf41fbcce9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0830a33f-8988-4607-a455-2607c9bb005b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7e522fa-f701-4ff8-a852-f7a512555afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8178d0-d710-49de-ad3f-c17814b1622c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b54f0b3-22f2-446b-a0bc-05bb8bce4ba2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d97340f-fc02-4671-abcf-b8d696fa4c30",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c119f7-75ff-4637-b4e8-feebdf769d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f08f34f-e37f-43c7-92ea-6dedd5fc923c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bb676d-13df-4f03-bb9c-3eb9dc994231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccd3f9d-41b9-4e26-b440-7a23123aa2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967367fd-59cb-4f27-96dd-f5956e835e64",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e07a3b-cd4c-40ba-b5e7-c550b9c78fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3042b055-64a2-49b0-b417-1ed9e39dcf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43416016-1428-42a1-b966-62da9160ff56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c4b25e-3002-4bda-8841-97b6f80f20eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47b2138-c8c4-4ebe-991d-a782d758043c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e8ecb6-54a1-4d34-8527-fabfceb607b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b94eaa-939f-49c5-ba65-5ff84e0ef545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef82c14-d79b-4074-80f9-18e83b8ef9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5fe4da-0178-4700-80c4-3775eef4f045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c847544-6eb2-4c9b-bdf4-b60b150e8beb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ef26f-769a-41e9-a16f-9af83f11c3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214c80ab-0dcd-4ef1-b79c-f6fccf1a19fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1006f797-2441-45cc-85b1-fd87b0289a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cce41e57-9d28-4a15-97b2-0378112f3509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbba552-786d-4097-82e2-6c529cef8de2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46ff7a0-1bca-49d7-9008-aaaa4c4dc67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e267a88-4732-46ed-81e0-ab4f596082ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6a03c0-f8d8-4215-bc4b-5b8913b15ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "38f586e2-edcf-4097-8fd7-f24bf8ce539b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b0742da-3c42-4f68-8e3b-333266080709",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a27695-0151-437e-9748-afbd2b1280da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b50e67-a491-4a33-bc6d-ec7905a51684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f866fb-e591-4cd5-97ae-994221a0a582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "79af8cda-63f4-4039-bf05-de8cf3888208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7e4724-5f6c-4f68-9e05-7ef103216289",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb87af8-2ab1-4e14-bf1d-8154499c5f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a80765a3-7ae4-40bd-ae1f-f3265e563f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91129a48-a39d-443a-8e5c-79962e011688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dfdecff-4eac-4c19-910c-18cc6cdf63cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de04aba-f0b2-4b8a-a570-8aaf41317ba0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615b4949-5630-4416-9952-036e37a1fb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d4c827-fda8-435a-a54d-a12a30540856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6133f7-c1c0-421b-87c3-9e226419e70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae1296c-c4cd-41ab-9e02-ff518c8d0481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a8c70b-6f95-4d3b-8562-3f802f611eee",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfd20d8-f232-4389-927b-e7c4a69148cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4943c9-4661-499b-a502-7c928e491811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22294a31-9a0d-4167-91c2-826a34d85488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "38269d49-f7d5-4d2c-9305-1543d4d76cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed6310e3-4cbd-4c8f-aefa-bc208a0f32cf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f1f168-f05c-4a13-88fd-bb7e4b8beee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20cf3a20-2a46-453c-9cd3-9bf988154eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb22c903-6591-4258-aa61-34fe648ab56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f16f7dfe-bfe3-42ae-b3d4-26c2c6684eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aae123ee-090c-45d7-b624-be7aa2faa576",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c785ee2-cbda-418c-b863-ffded09a40db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e50c22c-0749-4d4c-b8c9-6c6b934804e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164daa7f-059c-4089-b058-0730003758c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01098e7-76e0-472f-a136-c9ce17099369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a540f7a-53e6-4afc-acb1-195a6b2f7759",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13cbb1dd-ecd3-4dbc-9f6b-f2ddf278a16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3b1b585-e380-434f-bab0-7b254a8e2713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ef6afb-d6ba-4a84-b4c9-4d9820df1139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "557c9a89-d0e4-472b-828d-738c14948519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16f8eef-ea81-4053-8d04-df412a020cc3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844f1fc5-13cc-49e0-ae6f-feab5766083d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615377ee-0477-43ee-b9cb-918354b7142b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75a5724c-a3ef-4bc0-9b67-512ddbca8512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01a0ef5-9382-4bd2-bb1b-a6f63339eae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fb9ccf-59cd-48ce-80fa-7354c486b595",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec51d8d9-555a-49f8-9fc8-221f637851ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757e9a78-817e-4753-a778-974571bc08fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df5cc6af-c752-4fd0-8363-702132d5d5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fec22e0e-1559-4529-8d0a-67d7e092ff29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2a41d4-6927-4bca-8c3a-71db9b0f7b02",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45858f3-9b92-4eb0-ace5-7cd8f3b32818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90ab59ff-f922-43b9-9c2f-45e89f9dc8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c33e93f-b38c-4683-93c2-9b39a20629e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50263cd-88f7-4121-b105-3843f01ba592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b275b722-da85-4263-8a2f-5edcd3079c71",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee256d6-8b75-4aed-9882-e148b0d1c8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "253308e6-9f7f-4bda-b83d-fdee6c7136e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3b3ea7-5b8b-4513-bb88-f6a29c303b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f80f0908-643c-4333-ac98-713bf0294952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8008288b-7d1b-4ecf-9e95-34e24b0d6cfe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103c87cc-80aa-4919-8c62-97f68182e712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "961eaad2-95ce-46a3-9e0c-eefb315cdcf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624065bc-710a-4d70-87ea-9641a5680446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae4eb43-5deb-494a-832d-9bb5c8be8fee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb30f4a-d75d-4528-8575-72f0ea2860ab",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bc7dc0-ecce-4f2e-8576-a9669850639d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdfff4f3-5f6e-464d-9e0c-45dfe7d27162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f995e1-6717-4abd-b669-afe4889673f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c99eafa0-dcb4-46e3-8d60-2ed2f2bab8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d947ec1d-0888-47e0-9470-8885c430c965",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c45d54-33ef-4069-b431-e347210c72cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408f3e78-cb77-4442-bd47-4e7676fc35bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8da251-a8eb-4e4c-83a5-f1961931c60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6028de1e-b3b4-4390-bc5a-58de75c8e6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ffe643-c5c4-4ddb-8cf5-dc5ef81e4c7a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db10db81-01d1-4c7d-b14b-a858b6c0cddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b33c32-9d68-4f72-bf10-02bb172a12c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a373cf-66f5-4c22-b4a0-7d19f8789fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0eb026-9e26-4fc6-8386-94c49591330f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7a7643-cad7-41c6-927a-3c054b9e1b8a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341825c5-bbcf-4441-bd1e-6de8e27c2ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b4dcf1-850e-4ed5-af09-90aedb032d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5216dc6a-80e4-4b48-936a-eb67d1de1296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8195ad12-ab75-4fed-b445-fc9758f424f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c1be07-1768-43a9-a73e-a0f19483177e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc38cce-c7b4-44ff-af45-63ead9211893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c014e0a-2c21-48b4-991a-cda018468906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e5a02b-740c-4b82-8cc1-ab6f58237784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f80ea52-e9a6-45f5-b079-f967c0ebc038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b128780e-1b49-4206-a879-a627b8b7a34a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24597de4-b4aa-4ef9-93af-5a27386998e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8006c3b4-6783-400c-8929-d306fe9430b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02250dbc-9c46-484a-b52d-a1ecc04441fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca47f46-52ac-4211-bf49-2ebd9ebb8033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71748a5f-4b2e-41a8-b5bc-abce0a3467e1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c504d5d-a816-4d78-bdb1-1e104c317c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b03a0b72-d0e1-407e-84a6-f074f10e3fe4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333c962e-bec9-4818-8f95-4e1b3624a02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b083fe76-6816-473a-95b0-e50c6f4ee3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785775dd-c015-460d-be80-47aabcf94374",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffae230-8b58-4431-b715-172911c820a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b7b5e2e-508e-497c-9690-cc71b95e4051"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f61e2e88-704c-477a-8f7b-b14598c032f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6e7cc0-afc3-411a-945b-4f15b6b0bcf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef39660d-11b7-4725-ae00-b4ce193d27e4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3f614f-8acc-4242-81af-ce0ded7a8fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7399c77-4c79-4254-bcb2-82230a8c58f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "417bb99f-2614-4afa-8c89-5f9d6c249aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7a1443-76dd-4fd6-bd84-32100d96c9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250142b7-9b8d-4f5d-a82f-1773a435d091",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71aa9a83-c525-482c-bf1d-2cef037f1693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79cb6f1-a9da-407b-bdbc-ef59e4e43d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21fac27f-e33c-480f-84eb-72d3103ba665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "04a28e10-2859-4e09-81ab-0cce72bbfe8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70525780-3c04-401a-8324-d58f061d3647",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7a3aee-d650-42cf-9abf-a56abe20f980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbcad17-f6ae-4a6b-81a6-f721abd2d6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d870c8e5-4c9a-4be3-b0e5-067ebf57f3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b868fb-e594-4ebf-81b0-9040eb9d2b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f98a5fd-ad16-412f-a7db-dd5f8997f4eb",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2b5053-f0a7-41b2-9ef4-16d67eef131f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8e76300-7941-4f12-8e74-cde64a455f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddff592b-b290-4023-9a2c-6ab28210cc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebf1f80b-27bd-423e-9a27-a501e23e0bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a354cf87-e92f-4dc8-a336-c6b682b07bc2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbb3f47-ff99-4cf3-8dc3-47303bb832d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e850df3-adff-425e-ac4e-ca9342de0011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959511ce-1fd4-400c-a68a-7651ada14ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50834275-b522-4ba1-bb45-d0461c48ad05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "be223240-1726-42e9-b9ba-5041cf52297f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "798b643c-90b8-47dc-a6a7-01e1e64539d3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71370d61-8699-4f63-9085-a6a83eba46fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b6d74b-7500-4d79-b9a5-5b98ad7b8794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c14253a-bd3a-4e0b-81f2-63c5f4353cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8d9b845-ec2c-4cf1-8594-f98b39771f66"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4af86dc-800f-48ca-9822-dd75d8ea5159",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9adf36ae-1054-4d72-a3b4-658a06aa42c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db9dc48b-3c7c-4f4e-b772-359e9b5dd518",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7fd96004-3277-41aa-8286-70abd71ae36f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "306d4c62-222c-482b-8600-8de531ea55fb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3848d916-8986-4330-8001-324cc0f42c65"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72e2f374-e924-40c4-9fe3-610269a78b47",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d49c61c5-6917-41e8-9ab8-76e2d9bd6f2c"
            }
          }
        ]
      },
      {
        "id": "9438910a-8604-46db-ac26-d60792eb09c1",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "446fcbf8-4329-4d8e-abe0-57bc7c7a22ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c8ecb812-ff6e-4ab9-b00e-589ea0e4034b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1183b704-2be8-4370-9bb6-fdf297e1007e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cf8b8d0-d124-4223-861a-1356912a1fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64056b3b-161e-4246-8a9e-c3c4c602ff29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ae5027-ca42-45c5-b5f7-641680d090cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1bb95ef-c0f0-4f61-9de9-d3d62584294a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8a202b8-0551-4b79-ab64-5bc76a17e8b9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df14ac84-a6b0-4822-ae64-303e7832c65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d5053db-5490-4877-9dc9-e06a4f48d0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77b9987b-608a-4450-afca-3afa0d4a1dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "86f8fedc-5354-4b09-b169-0e35bec7e2f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3098c945-65d7-45bc-befb-08d9db440d4c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca5b510-9a4e-42c5-9cbe-74ac6b8c745d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4b124f2-a5cc-4ecd-9112-4fb1680093e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68dd076-108c-40e0-a413-4a58ed64a29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28daeb0b-3dd0-4e48-bd53-8f65739ceaa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b297e4-9055-47d8-9826-98785fa523b3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61e258a-02e0-4d34-9054-3c05673281b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d25311-e73c-46a7-b9eb-da285b5689e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2423d90-7a9d-4c81-8cd6-f218d884db39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12005b00-d8be-4faa-a37a-b74a4cdbb324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcba03f7-66fc-4910-8b61-4f271c3dea99",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42e9518-5709-4817-8408-5b7fc92bd3de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64a78c40-beaa-4434-a97e-458f5cb4937b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17761efb-e003-4f50-a60d-60b72f16113f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0db205-2bf5-4967-987c-feabe1065d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c006a727-ce79-4f2c-aeb7-22ee0638d7c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ff5cdc-a7d9-4647-8139-752f6b1ad5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe95ec7-784e-4dde-a46c-7ab3a08b3118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3cbaaf3-a835-44ef-a10c-8cf79aefca01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "651493fc-65f1-4018-8ca8-aa073d3bbd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26033ed2-4668-4b22-bdc5-2bf97da9c057",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5ffea1-d8c7-4fee-93f9-ecc2912f746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9fff885-88e0-4f5e-a3c8-32cf5ebf17ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d90a111-ac4b-4c65-a18e-3d0a1ad64e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5204baec-844e-438a-9301-ce7dde7d80a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5331606f-dcfe-45f8-8b79-b7467a0d3db9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a569db82-a909-4b61-b43a-cf85dad40901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4faa1503-630e-4441-b400-d095c78db635"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68472bd-700d-4dea-ba1c-40eac0f7eeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67532a04-1601-4a40-a97e-b2068efa0156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1451f7bd-9a08-40d7-bfad-d39c41f08dd8",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08895923-b455-4efe-b08b-3fa2ac47cac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e25dc29-ca43-435d-94ad-6fb40ec54b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d441c176-90e3-4bec-9f33-a6e0c89b69aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9767ce74-0877-4932-8d13-26d0613b2fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02733329-8d54-46f3-84cb-0be8bb319d34",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dda10e4-ba63-4083-beac-af235c3018b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957dc7e4-350e-4448-91d1-58c00c2b1c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39065198-2307-4bdd-8add-f513ba4356d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "983c9d4d-528c-4b0d-87cb-e0a49fc0f09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a8c3f1-d405-46cd-919b-12d1fac860d8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e709c02a-ae4b-4305-b471-ef7b51abb762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73b1239-7045-45f1-8da3-10ee9adf7a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f3c19d-9b0f-4fa2-86bb-254ae6e265e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f8292e8d-6a3c-4ee9-969e-4e8d670e1136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2e72a8-128d-4258-8f61-fd2c25fd3585",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e841714-edc9-47aa-8c29-44c69fd78ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0784bd7-d074-4873-bc18-94cae6242808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a10340-d3f8-4070-84e3-7f1ea9fa0895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a48482-e6f9-46a4-8b50-d47c9f666027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55ed22b-059a-4ae0-b59e-73761f62641a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47874b2c-4d0b-4ddb-8651-d223e14ea066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bee4d8-7bab-4592-bf0f-e7b3777b8a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028b9f5b-a109-4e84-9e38-f87295d3b47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78222557-4015-4135-9987-0a53f21e1baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0808520-8222-4c93-8b9d-0242f66cbc7d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5511926c-4cb5-4e2d-9b48-b8c07ba8c343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b68cfa-e29a-40f0-af96-053709f710ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0baa3bc-5b53-43ff-a132-6bd3b609c5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14c0210-e4cb-47b1-bccf-80bee006be22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13562129-7f1a-4133-a04c-f113dbaf7072",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4ff29c-f89d-4008-a449-29bbb601f4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e0ab3c-b06e-44af-8610-3f429df76f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8479af-a0f8-4471-b2fc-677014694200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2b9a9d-9c22-4d14-aef2-144ead3a40e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7741d0b-4e76-479b-8bd9-a5d8be0b72ff",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347bc772-5282-4372-af34-4da943606c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d4daa5-3e5f-420e-9ecf-19bbaecd76df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35857029-ad5d-4973-a3f8-afaf5456ca8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "03b6d56b-9fdc-492f-bc67-6420dcc45837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443cbc7a-faef-4283-98d2-f15c5cada845",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f7a5ca9-5469-49e1-9483-33a3d3560b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0989f695-3f4c-4b8f-a303-5b80abba5ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438fbd03-8161-4d82-a566-c3a8f0ee8a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5c4a5b-826f-4cba-be47-a132d22ebf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8337b8-805d-43e6-b0ec-7edfaeec6034",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ccb982-df7e-437b-a45e-1934456025b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bec6c54-775c-45ec-8c7b-acd8ba58e91a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c676b8c0-8007-47db-89d2-9333724d2e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "23a69c6e-ca76-499b-b9ec-2945ec22fcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f33e44-4343-4209-bc8e-e9d9a4ee03fd",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ae498dc-fdba-47bc-858c-ab238ed1fc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3667d5b-6c91-4cdf-84f2-53d7917f4415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bde9116-8749-402c-a74b-7868e5c86a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "907aa8b0-42f8-4131-914e-a72e1de046c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8682918e-cef9-46cb-936e-ea6de7c8c481",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5cdd69-1408-4ef9-a141-b01df2904a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762747a8-11cc-4ca6-97e9-1197ca524437"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf23fcb2-62d9-44ef-b175-64eafe728c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c298a8-6226-4589-82c7-bc0d184c22a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d39c795-2f23-4e5b-bb4e-c01d18706b93",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73e245a-7247-429e-9477-950e3955b41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec93fe6-2baa-495e-9ce1-7bd65d069737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcdf792-ef1b-4f44-979f-34acc167210b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "512568fa-f631-4472-9d1d-edd784dcbd7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d596024e-f813-4fcd-8dd9-e98b5e83bbc2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f07a0d-74ff-4003-8f21-8fa7b453cf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba12b97a-145d-48dc-834e-dc8385b5b252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10176b3f-1856-4849-95c0-cccf97bef528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec61d0e4-61a4-401d-a22f-d2140f0af3af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11a056e-48d9-4276-ab93-6caa822691e9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc47c5d-1b97-4625-acac-687ee9971cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9204eb7-3afc-4693-ba8d-f58ec319a6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94add759-ea3f-4f36-84de-bfbc9b313fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8fe6aae-b12f-48d0-9c71-f4f04ca873d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9d7349-a692-4fd0-8f9d-27d2ec276ed1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fa6162-f753-475f-b19d-b6cda0cbac4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3c550a-67c9-4514-9cea-d2eb4745eca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea21d1f-e80c-4285-b361-392940fac649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b4558d-c56f-49cd-b3e5-30c281d7d1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc4928e-57ba-4463-955b-479df51414ed",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab96af7-b909-40de-9393-89359668530c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392e9ddb-a5e6-49af-ae4d-ecffa93ef021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab59e1e1-84c0-4b4d-a72f-d57923206fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00c9020b-2a34-45ac-8632-042291fddc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cf839d5-f729-4929-86b1-cc7bce0a03c9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3977b81-8d86-42f4-89ba-db120ec8cf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d922e379-7f4b-4565-9cb0-542c0022abb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe13ea1-940e-4c5d-ae33-c5a2d10b331c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f23f01-5c12-40fa-b877-a2aa7ea35e53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd6fd85-18f0-4f3b-8cac-c76c7e446f97",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00deb5f-49cb-46bd-9d04-23290adc9910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47286d6a-71b2-4626-bed0-bfcf4c77de85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf8928f-c74b-4cb4-8967-f4c2c0aae72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb915e2-64e9-458a-85fa-322a87a57c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5f52a01-c288-47ae-ab03-928f13cf36d6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79ed413-5ba1-40a7-b787-6fa90d0065ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "874162fc-e9f8-4be7-a997-1039ae59bffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891920ae-cde3-4372-b53b-42d2e591f003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9fe5b1-f699-4d2a-80cb-3bb1aeebbbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44104df6-b1f1-4a0b-b923-88534d21b968",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a02fe3b-58d2-4503-9940-ef1439ff64ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6475b9-8703-4617-b24a-4d45fd1cc5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697c4c8f-15ac-422d-97df-a9f55c435a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b62d052b-e5d6-4bac-80f8-84d17644a580"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20730e01-7c65-4f22-ab7a-c2916180b6ec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14e51b4-773c-4e50-9cc0-3016d9f98a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a65b6cf-401a-490c-a878-38b1b6c10f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a59c3c-117c-481b-8f95-201aeb3ea0a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00ccd37-665c-4529-9fa9-63f7b1251258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70706ad-2248-4762-b52f-82b1fb8f1c39",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f356f63-5eb7-4f0b-b5a2-92277ff700fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcefb223-42a1-4598-bfe6-aabb98e1d38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24af8bc2-f2ed-4525-903f-66914ed4e4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18711c96-1a85-45fb-a43a-84869bf7ce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3f2d49-ff47-4cb0-a803-785e0a752547",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6f0ffd-9248-4521-91a1-1fcc015d9ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36876eed-2e5c-4dc9-98be-ac605dff9374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc7742b-9290-47f4-b520-4a0a11ea29f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba8d89a-8138-4ea8-af1f-fd65d5bc6329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500448e3-a011-4170-bb60-7f0c453f8aa4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04de445a-e500-40cd-9d03-5c7d15275cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc418df-47dc-4a85-98ff-1397f58f11f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "214fb319-aa3a-4945-935a-541e91892b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75ef78a7-186b-409f-bc6d-3e6316314676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894d9341-0df5-4fae-9178-5b11dc8968dc",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fe4077-2ee7-4aac-9048-5e0b5a8cfc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f5adb4-629e-42ca-a2f9-506969112008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f973931-7a54-49ae-9df5-23c3d9137c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56cd0055-3b9a-4cf9-95e8-109f558a9589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fbac7a0-ba66-461f-af34-1039eaea2a7b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be56d14-c905-47e5-a82e-b7f48e4190cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d873f1-dfc2-4653-a916-177a5b1afed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea5b82f9-d32c-47e2-a819-734c8757d94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19274dfd-d59b-44dc-b0b8-7f5628412dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c67d88-824a-4b6d-82d2-6354246c2ad1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254febc4-6435-4045-8226-6d0569dc846d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6d0ebd9-4263-471d-8922-85aeae66d3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364f7d45-1f17-481b-9b33-7c2145be5854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74af384d-ebac-4cb2-bef6-954f52fa9056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9c6461-c890-4974-a305-d892f6031fcf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55e6bd9-78b9-4496-a86d-57d1eca8ed9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cc1f254-41fd-4761-ba97-8470a35fa5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58431fed-5698-4f8e-9d50-d8f763148f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2cd6ce7-0f8e-4a51-a48a-1f1c01083ec2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "627ddff4-2583-4db6-a1ce-d9c9cd6cc213",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "be820236-c47d-4eea-974f-cdb4292b3dc6",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed104d26-f117-47b9-bd67-0354c80b88dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5d466d12-9b1c-4333-b56a-aad2da7da1ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4642bb40-0401-4f1a-8028-1386a680e865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1a95237f-cca8-40b5-b07b-6245159b1503"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd5ca0bc-a85d-4937-8afb-45534bfcd9f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7389620a-18fd-41f8-abd9-5f7da98b10a6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bd7b598-f36e-45a7-b52b-1dba8322f86f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1e75de3-fb1f-4337-a513-063e38f53609"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20257150-819c-4879-948a-82ba047e1b67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "979b13bb-fbb2-43db-bdd5-1d20c2b8b995"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b60b4661-a377-443b-ab46-e991c9a00a6f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "001a34f2-aa3f-4e3c-af90-f2ab4b4a4b2f"
            }
          }
        ]
      },
      {
        "id": "6ba02795-90ef-4e95-bfc8-d785d0d0afe1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "21b6bb02-c251-4def-af6a-c6b58fbd5c2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9139e260-97a3-4de8-b373-41c932868cf4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63bd485d-fe21-4ad2-844e-d37634ee9d0b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ddc78a-fa6a-47ec-a462-243d7fb95b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa15f8ad-994b-4945-9604-6d940fa1626e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326a111d-a28e-4b28-8f54-d08f7c9d7109",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d7fe73-ac37-4bbd-9e78-d59152f7af2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8be1110-777d-4e6a-b47c-ebcff4b5e594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d0aae6-3933-4b91-b259-3ecdc899d292",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d4ce4a-a0d3-4c11-84ec-affd7c43f507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff71606-a027-49a7-ac87-e8b88fc8df2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4433c4c2-913c-42a1-8c01-3fc436c1ff11",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656628c0-d929-4a23-8d20-46c4a21868bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084f1c38-09ea-42c4-a10f-4f010ebae411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5986427e-3880-4012-a7e2-bef3e122cce1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be51835-cbed-448b-9e40-725f43253e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dde6b13-afdc-4d82-a482-3257beaac219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ddd3d3-02b7-4f43-8aaf-107f28fb1a6a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbb291e-ae52-468a-b43b-124989a0201b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e410071-91db-451d-98fc-9d990adafef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26d52707-9cf4-428b-8b7a-650982ac2c5b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdaa56df-db86-4313-88d7-b3cdb793026f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4634cee-f5e7-4928-9cbf-ba4acafc4c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828b9927-7283-4a3a-a4b4-4362ae3f6f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a7c867f-33ee-47b8-ba8d-5fad258e86f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86144cac-81d7-4a42-b007-75ca83b40c35",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e7283e-e757-4b8b-9551-2a3a97e8b581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c81cfdca-5718-4061-ae69-f8a7f0f5012d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf016f8b-01cb-4cb7-ba1c-82cdc819d88f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4382bd5e-55dd-46d2-9569-ea7d51113bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30be02bc-7f53-400f-853d-94be1e01536b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd68eb6b-406e-46ee-94f9-b1ea23b333eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "462b82a5-882e-4b04-b6c2-be05f44f6b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb757b3-ba8c-4788-8562-4587415d4cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e18e0dc-c555-42ab-8f63-d1a497cd2300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4387bc58-83d4-444f-9f9d-35de20509f27",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a037833b-244d-4565-9d6a-a036ac9fcb62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "020ea78f-56ce-4fd1-8db9-d145beb8e014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d2e062-c440-4ff1-822c-e02ae67262bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92305b7b-92e1-4a67-988d-ace725fc15da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bb5017-0075-4875-a8e3-7690641505e3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909bb6b5-ec41-4399-baa2-f65820000e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4f9a71-e032-4262-a5c2-0c7bed1de0eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdbe812-2446-4982-888d-559734fb3b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8559cdb8-687b-45ee-9248-ea3005043891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8226171d-1859-473b-b6d9-196df725232f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74330ea-9bc2-4dbe-9fca-39a97d11b10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f703a33b-6b72-4d4b-96a4-410688d42258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b617c6e2-fc58-4636-a7e1-25d7e18c0c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b46d64-553f-4024-b136-837e3eaa7f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf8254fa-359a-4222-9962-767a486bf748",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3b9415-e381-4535-b739-ff0a6f3ca44f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e02f0ff0-c293-4047-abdb-d365987ca8c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bba69f-2761-407a-807d-15fc4507e905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44eb2fcb-bb1a-4827-9ce1-abf5cbc62efc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e2bc83-8fb6-4c24-bdc3-df6ec79a3899",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c492f4-72ff-42bd-8645-2d5a1fdfe060",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01ea23fb-783e-42c9-9d18-5436f4f50774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bd9016-1b24-416c-8e5f-a8cf3877dafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b0b9bb-e4ad-4720-9750-cbfebd4255ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1cc345-0658-4d70-977f-fe6ca3fbce8e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d603ca97-daa3-4b24-9638-127000537476",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c3d0cd8-d0e4-4eb5-b8a1-e7686399f45c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bb819a-6b6c-4854-bd7a-7d97edef5e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d60f426d-509c-40a1-94ba-5e1a73b40e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca095cb-426b-4f30-aa69-08bb89ad4493",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4241316b-7c76-463e-9394-e5d8551647fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92377f5-f1fe-4bda-a090-21e44d5ffcb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1946446-2634-4794-bb4e-36ce7f1d57af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059f9b1b-6668-4072-90ae-8e9a54f69166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f14708e-d6b0-4c56-8e96-ba874539e6ad",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd4fe56-8aca-49aa-898d-3b1f3a6c500d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "966d2b76-2d9a-4b99-a427-bb0d9ba15033"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58adfa8-1200-493c-a4a5-ed589b0fb373",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f9f3de-83fc-4bea-a312-b2f731679b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da92b94f-f0d9-4c61-b4cc-d5abab85ffd7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe3ece9-efeb-4bc4-90a3-4596222f81ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873410eb-8402-4744-9430-217759ef069c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d96dd5-98f3-47e1-ae8c-5f30e91b5f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3e5f84b-f8a6-49ca-97a0-226b1cc9d941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd10a912-ee29-44be-b9a1-a4031b1b8cba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c61983-c2e4-457a-b19e-75692bb7bc0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162b97e0-8404-44f7-8075-d3aeee3676c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422ce683-841d-4f6a-84c6-d0e1b7153c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8337b6a2-2ca4-4f09-8df2-f0662f8d601b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f236197e-b311-4336-9c5b-6ac8e72f37fb",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707ca447-cb20-4ceb-9a6d-c701ab347134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d52b31-e933-4b08-814b-3fbcd10e4c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c11557-7cd7-48df-9b5d-bb8057d04753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8decae0e-f4be-4b1b-8cb8-e013c6176d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8847e3ed-0d4b-49e1-ac5a-d06d901bf8c1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392f938c-7f01-4ad7-bf70-d315bebd32b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c06ad19-a41c-42bd-ab3d-cfb6f13ea09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d790fb9c-9812-49c1-8b2e-87bc07290ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9296bbf1-07c8-4602-b61b-c6a5fb2edee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4770f93-ea19-4afe-a49b-aa4747765e00",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29c307e-5108-4829-be7c-9036309a95aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c3aaaa0-13ec-43ca-bae2-da04186189ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b9497c-0024-475e-8b7a-606bf15377a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad89c72c-cff6-4d65-97d9-25ac73c2cb69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11658333-0c6e-40b8-8b17-53b3db18de00",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28761df3-d21d-4338-b687-701d03536651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5fead06-24c9-4b45-bf43-31bf092107ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1ebbca-26a2-4102-ac30-37d043fecf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87dfa4a2-6dd1-482f-b236-a16278bf6d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f5d898-b91f-467f-9c8a-d4c6c98b440c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26c9734-e363-486b-aae1-ed0c4f80f21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "737ac147-6c75-42b8-9d4d-7e0a5b792794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262cb253-2c3a-4ea1-a93e-0f96a7fb67f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "270bca91-190f-4684-b8ba-bc93210bdf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f82b97-eae8-4e09-9660-badcb7d1dd44",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71df99d7-a0bd-4c2b-8eae-84d4fb2d58ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56fbb6d0-a085-452e-adae-352dab8cf538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c036eee-6f3f-44c1-a101-1d3d4f262b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5e5581-d3b0-4c57-accf-b18a3fee7341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dc065c-0f89-4cb8-9ac1-62917d0f50f3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf09b78b-41ad-42fa-a6ce-a74e1c2e4b01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64eb760-8f9f-46c6-a8bb-ebde8303c1be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1109ae1e-cf38-4088-b446-1ea1e034a215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f50ef3-85d7-4986-917a-46f74d632992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ac9b3d-f555-48c4-b24e-1b5d02fcbc44",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b8da5a-23ea-4c27-98fe-45905e3b2ce3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c9fb7c-2200-4e67-a56f-367a8013fea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8d42dc-ac4a-4ff7-becc-8f4d292addf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97c77753-f7c0-4680-b46b-7989f443ce45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d366dba-9061-4f4d-880d-6ce3dbbd5448",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1febc68c-f481-43c6-8196-3b8350898c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23eccfd3-0050-49c2-b5e3-75eac743d735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87e6ffd-cb38-40e5-abd1-6b2cd89baa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0204373b-e68b-424f-9f00-236cf7b33ed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba44c691-699c-4ab1-821d-6cb84f7e2c25",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2e11fa-9415-4fcd-bdd7-04c0d46896f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86588fce-fd97-4aac-87aa-a6be922d966f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be3240f-fefa-4f30-9298-f3741bc0620d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8571e9-e331-4112-aa65-cca03921d04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925baf49-706d-4808-be41-06087995ae5f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3edeeca-1483-411d-8b86-3159741b583e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e5985b9-6030-478f-bdf5-8a793d4af25b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5e56ea-c8e0-4959-9750-e90fb7a1bfcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad16a3aa-77df-4163-af9d-bf027f8e994d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6007fe5-c1da-499c-868a-f81634559a53",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a50885f4-944e-46d6-81dd-2feacc9f0c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "982b1b80-caf4-4ed1-9ed5-693825ed9e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "011c5feb-e534-4917-9d41-4748425e190c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff9dd3a2-4523-47df-909c-c047b0e55cc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11649584-a189-4366-bd38-e4d0601fb69b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30cf7fe-c28d-4dbd-a839-63a2ab7dea00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dcd84c6-f218-4ba3-86a9-8e1150ee1615"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de0f8a5-ef71-4236-b3cf-094779296277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5154df9e-996a-4721-8a26-3b7ab488b839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab690834-672a-4531-a0ec-aae83c19edf5",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be97a63a-751b-484f-9ca3-f8db226b8602",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b7c25e-cda6-4167-83a0-a2705206a859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa573cac-1dc2-43db-a89d-bab4e64098eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12c883be-87e9-48a5-9c5d-1325b23bcb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b69e0971-70cd-4462-8349-4aa3809c18a0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43231c43-9bd3-40cb-9636-877a66311753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efaab7d1-c6c9-4f5a-a3de-11c647a6347e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a1edbc-9b4f-4234-a70f-bf4f1893108e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e72011-9b41-4b95-80e3-2abefb8abc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e0b6b5-6d80-4802-8851-d3e1162958b4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918fd67c-dc3e-4df0-8fd9-09d925b69979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b3009e0-b7e3-41f4-87e2-82ed09aede27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff81ce8-fb67-42a0-b9f1-4f484b9af3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca54c9d-d6a8-4020-8e83-4f2815fba269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e7ff14-b204-4e10-8bd2-89ab08752d7b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bdeee1-3f7e-4004-b7dc-7f14e20e4ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350300fe-6964-4c05-8f19-7b6bbd3cf199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba3aa4e-9c18-45eb-94c9-803930c7002c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24b343c4-439b-4141-af1f-fc7ca7030746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29533df5-ead0-4475-9083-b8af351662fd",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2fb732-f90b-42f0-8e3d-7d0be33373d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2839340-0961-4a69-b6ec-12c0b2ea0b97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05dd7500-2c5b-46fa-a775-157fa1fd5f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d44313f-832a-48fa-831a-ad88a60276a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddaab2b1-776c-42b6-95f7-74ffd4136fa7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a084bfa8-0714-48c2-a40b-156659def53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83eb11b3-710a-420e-92b1-7be3ea1e5d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9e1e60-ce8a-46c4-a715-90f3cd34f4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52a7b78b-9dfc-4895-bb5b-a6123eb7be56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92687510-e3b3-4dbc-90a2-33e5fa0ecf13",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6b4083-d6dc-43b8-a78c-2c18399a3136",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2e4840-60c8-467a-98f5-06b91aa40857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0eaa8e-d88f-4501-81eb-90b71c259a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f397c7-2a97-4bd8-a714-e1edfc72db15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3b3533-71bc-4dd0-9cc0-384a866b8108",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91e7968-2af2-4858-be83-2f796e65430f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5b70a4-be19-4428-8a4f-138ad81267b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "721ee79d-4a31-40e5-8f3e-59dc9fafca29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88493cdb-e964-449e-bf65-7368edb62144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03c8c8d-b31f-4e34-9838-9c627ebdb463",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8c2d3e-696b-4940-8513-3deee6e51d8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b194fca9-938c-461b-92a5-39da57d80cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669b6a14-6070-47de-bbfd-c989c7174a6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06d5922-15bf-49f2-a16e-e7227c073c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba1911a-9cfa-47e0-ab19-fba882cd6b6a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b8f191-5ad7-4e6a-9e2b-c183ce98a246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0df158f-c869-4fec-a407-6a1f9d8308d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4303d4a-5863-4de6-aeda-bcf5d99031b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acf8d805-bd17-41f2-a94c-ab0d6fdff0c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e091f88-5ce5-463b-9e3e-0a4eddea9b15",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be686d68-6750-4924-b639-6df6af0ff120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6806e41-67d1-4af1-8c47-b9884d72d383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd12ae3d-01c8-4fef-98e1-a0a594815391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "693677f0-7a4e-4427-85f5-c7224ff6f5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7f2923-f878-43d7-ac79-7df140ba7242",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41e6e23-8eb4-4385-a642-866157032e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e837d6-0edc-40a2-a488-555d629dfae0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c917f0f-1a48-41f3-9389-9ed247f83c36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b93dc577-9dd8-4c32-9df9-a275a99004d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda6472f-bfa5-4b93-bcf2-62d2dcef9df4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8672f806-1350-4376-bd9c-e6ccc0a11a01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07c2883a-c9f4-417f-9604-2de959e311a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a6fb14-eeab-412f-92fc-f4789ebe471b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22e54a4-83f3-4779-a5fa-f430b7823b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4333aa0b-d0e0-405d-a5b9-012b3e426051",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809dbfa5-a913-4961-bc02-8f3493173c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254f60c3-c212-4406-a8bb-4206a50dd09b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58481d24-d2df-417b-ad39-4dfe1f773563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94836c70-d70a-41d7-91ea-4a60a794ec33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7bd0cb-ce5a-49c3-a994-b22ee5d747ad",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57cbc013-e6bc-4480-8843-0305ccfc5fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc5fdc2-3e82-45ba-89f9-9c8d2f925878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6be1c123-fc83-45c8-84ca-09c0ab794da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a0e9c7-7b5e-4689-9503-1f005cd3fa7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03861734-3fd2-4840-979a-35e32fd41d08",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e66f9a-421b-4ab9-b5e1-ad54ad49b8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffea658-4806-446a-a35d-43990b2a2e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dc3f6c-59a7-4741-8b31-aab1defe9f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03253f52-a516-4c96-ac8a-cfc225044d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00724e6b-1689-4b7c-a77e-5e7b528ef487",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55f76c3b-4dcc-47f1-af23-d40369660541",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a87710c-4afd-4466-ba58-25a1ff0f8c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d394de05-81a0-4f18-bb07-e1afd0beef50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18f9eef0-07fa-4927-9294-720fb3dd3cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37e16ee-4214-4731-a74b-158327ad29e9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddc10cc-abb4-4ebc-aa79-104d0d81518d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9f147a-2768-4ebb-b68d-0fd3cbb23f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0080d5-2fa1-44f6-91d4-17419d52a22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d008ce4e-2188-4e43-b3fe-5c6351dc8910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30307ef1-7eb2-46b3-a873-9d7756c54a99",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790e272b-6242-4ea8-b668-a5b576440846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8de902d5-85f9-4ce3-b1b3-d3245e9f0a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ca1cc7-639b-4984-b88b-b665fe8202d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80de1c47-f34d-4f8e-a49f-aa9ef1747805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a5c3be-fc46-45e8-af61-dcd99b65499f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34639cf0-3427-4876-ae49-e7dabff972ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca90f894-feed-4d13-9ea1-d65f7a5d32bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c250b02-b478-445b-9d03-038abbee3ca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840082c5-2ec7-4272-9864-81034a4f31f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d3c913-e0cf-4fc4-91fe-3206403db56c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e8f8ff-a06e-4301-8f5b-65ee19b06825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5389c87-83c3-4bac-9d5a-5b6e82e3b200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "193927cb-32dc-46ab-8ea4-7e44486e86e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fae2ecc-79fa-46d1-bb37-463cb6150365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8960a6-83eb-4ee7-a6c2-fe0c0dcef4ee",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d557a16-354a-4bd8-be8f-8da583c13ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2509fca-6290-430e-8637-837682a97cbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe72014-bcc8-4a1e-bd2d-dac2893938e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41482c2d-f5ca-47e8-8423-1a9dfb77bcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3742245a-5642-40c4-8e94-74e9b1e57e8a",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac4fb27-bd38-419b-a9c7-7768127b2ecf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27a1cfd-ddb9-460c-8ca7-8f0455320cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7ca76e-04d2-43e9-a1ba-152912566828",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e454c5f-1eff-4690-8763-c00b2d2a9efa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ad719b-8846-4a39-80a8-790700386419",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7d37eb-a4f2-4142-92ff-a2c3688e8b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd42295-3296-4c19-88bc-1d16000abeb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd05351-bd25-4d93-9896-79fdf7a28ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa907dce-6477-4bd5-8428-69a23fc5bdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83627f9-331d-41df-a620-bc6595fa36ed",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26055d9b-300a-40d1-aff0-29b9f4e86bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e01bd9f8-230c-4f8d-ac6c-9f1c599319a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41748978-501d-42b0-a83e-22c270c4a1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01a9b93-c4da-49c5-bfa9-23471201b383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b2ebc32-787d-47f2-8532-e5c098e480d7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "321efb53-7541-4850-985f-21a76ffd0717",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db2b7dc0-1ae1-4a58-82e9-c4ad92d4baba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ec7047-527a-4c2f-861b-777d488c47ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4d6d03-8797-4bed-8fb4-3edae3632850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a171db12-9ea0-4cdd-963a-5898341aabde",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c2284e-702c-48d6-82ae-bb8ba980d485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627e2ad7-b0f0-4b3f-8a14-0b911677edcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053fe9fb-a34a-45ca-842b-273edd772ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afe4ba1-0a4c-46a7-a621-0d80278c3839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34ede91-5bf9-4f52-97ab-6406f83f4cee",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ca1207-05b5-4be4-a916-59fecaafcacf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed11eb3d-cea0-49f9-90a7-468aae5a9874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "702164e8-e014-4f43-ad24-e63f7464eb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dea3343-079d-48bd-80fa-5d2c0fb9d485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "624883a9-f0e6-44e5-84ce-0bbca801dfc1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03c1ba4-9c1d-4907-9eb8-31b69079082b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbeef530-d3f3-4dae-8e69-ffedec82bea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b849745-ccb6-4729-9b67-b4b385d12b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b94a20-ee74-4cd7-864d-7e1525eb4df2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0e3a2b-2efb-467f-b17c-c53a63bc432e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f07f1a1a-df8d-4cbf-9ec8-68c1457833cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ac1519-7eda-486b-bd39-d00b21dd02a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ee70ee-f84e-444c-98dd-1cf8230bff8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04469877-71d9-4ce0-87d2-d4703e288201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75603329-9669-4860-bc4c-78cb9dd81380",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ea75e7-0368-4270-b361-1738735641ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efc908ac-75a6-41e2-8bd0-963622419efe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "188c87ae-cd86-4f17-a35d-02ad4547db05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1a176a-ce19-47a2-8d16-e5178805e887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7f96ea-9be3-4f23-bbc6-fe08c0467e1d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae11004-cb18-4f2c-bc20-f48526b5e8f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "669d85f2-9683-486a-874f-9c269ce32496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b913131-7494-4d76-878e-eff3ecb5db03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6563c8ec-4935-4d30-a2de-db3d439360ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849c3ae7-35eb-437a-a00d-3d1a56071049",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e6ec64-0310-4f8f-99e4-d54f7168699c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9b39ea-0147-4f2d-bef1-87b806c48627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cc86f5-bcc0-4955-9d8e-7a3797523c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c82bb0fc-47da-4813-87f1-89978b729c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b20dcd-b897-4186-81fe-6ea0b642a6ff",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a00286-c0a5-4dff-9ce7-d44eb5315062",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c1dacb-0036-4cf3-976c-445ff523b040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b817fa-ee80-4194-975f-8ab2fe2710b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "112dd256-f347-4458-9158-d10ee64534aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa54f3e1-7257-4670-b8e4-ff30a8e47639",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee13f4d1-02f7-434d-bffa-66799f3f6c12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d35b22c-f62a-4db8-b1c1-6f86be414ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2faa769-0193-45e0-8823-681ff4532ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c5f841-a72e-4566-a856-def11d78a18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bed5ebf-a1d8-426a-b908-c8ce281354d6",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb0d392b-6319-4ae7-9d3d-f96605279957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6499b05a-725a-478d-8c69-90a891e8a0e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f681748d-3ed9-4951-b98e-e7a7568f6389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f93141-b91c-4714-8f21-6cf1a404e954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d67772-a803-4cb0-90bf-3aa43148c267",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4c0774-33a7-4d8b-8eff-db315baaf6bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f65b57d-8a3e-4ea2-a658-ee97a68facd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ddcdab-52bc-46b5-963b-b085969e58a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ee31b35-97b9-44a8-8d59-51ed80ecf646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6eec49-0d00-42c5-a75f-18a0ec2b6c79",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a59561c-21ac-4d43-9c5a-55b8689dce3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf26b661-9e70-443c-92a7-0f6dff8293f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbe43a7-25e0-44b0-99f5-3df997302b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2905021e-eea7-491e-8f2f-a15664a6a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96ff9a2-730a-4a0b-9036-7551d52126ac",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46df1efd-f7b9-4885-8b1c-252023cc7732",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d089196-92a4-4f83-a3dd-0a278fb9b55a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "013297e8-a8c2-4c54-835a-8c28c3b4ec17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1946203-2ad4-4ef8-acca-a85be906983c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9628fa3a-4009-45cb-9262-ec4b64cc54a4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbc07d0-278f-44c4-86e5-41174e2a5bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ba7c7f-af80-478a-98cb-ae4beef30c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c24046-d2d1-4b6c-8a89-93a5ad654290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ad62d7-7ac5-4cfd-9c33-f55ad2f86c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d5b03b-d61c-4106-b648-a48f110811a7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d55d235-65d7-4a64-99b3-1435fcb30da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "461a184a-0984-4332-8382-3d2caf450662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f2336e-2f8f-4b74-a020-ee8f343b8e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0856c0f-b31b-434a-972c-0cfc23319bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faabb2e2-fd05-4371-b87a-855720c0e0a2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f724e81e-8c10-441f-800c-1fad4cd89f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0225a872-b725-47cf-bc0d-893968720dc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c6467c-002b-44db-8251-08e435e4c901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8161d9b0-e441-4c0a-9e47-db5972cccb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da91d46-6946-422d-9616-5f7ec73cbdce",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61eeb098-0786-4966-82f7-e71a936d13b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3356a6b-a514-4d8a-be31-010b01a0abe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32a063b-fff5-4c9d-82de-68f7de9f65e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd5e6cd7-22d3-472d-ab68-9c87247bd228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5f5128-6c13-4945-9c42-a20bf8f468c6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed3cae3-856c-47bf-a2b8-e32bffcaed1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbff5ec1-4bac-40e9-a68b-bef73a7b3f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c32f5c7-373c-4d07-815f-d61ca3444b26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "285fbc1e-92e5-4d96-995a-6106b32a103b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef29b44-79cf-4b54-9594-e03afa7e3895",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c1a720-28c8-4986-9a15-0cc04f97d96e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34cebc1e-1230-423b-911f-531ae48c0801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d75722-c9e3-4820-b4eb-dea8f5f99e8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5220da8-6172-4db4-b974-0029f64ff1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b256a83-31d7-4de9-b405-935616476cd5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f77be7-721f-4d8a-9bbd-b7319937080e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7d711d8-ece9-4d74-8feb-ba5456460cf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c841f6d-f8cf-43d0-8944-6087d38a31ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2692ea9d-6e4c-4b0e-8356-3d8540130035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b121f4d-bdb0-413d-bf9c-96e238206657",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b4cc42-9009-4ca3-8359-e96e20b2976f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c83bd3-3332-46f3-beb1-7468777f6198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b893d671-6972-4904-b4dd-0c0178733519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea57232-450b-401e-99f8-8a67480a3890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e87bbc47-a3b4-4784-9e29-22ed238d22a2",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f543b7-f6e6-4876-9e96-43ecf97b4ebd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb080bb-d00b-4df4-8ba9-edd036901edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03dd43f8-7f70-495e-aee5-ddf548616d14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9ed792-baea-4a9a-b246-8cf4f17599ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c150e969-5fa1-484d-b06d-4e66264e0da5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c762eba-d2f7-4453-be12-239129b543db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2b510aa-7836-4614-9ebb-0ab4b8ebe2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e155a5c-02e3-46da-886a-993fc7f9a7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53a4b5a-2167-4a1f-88f9-f9d72b150ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9470495-4cbe-40b6-97d6-a112a6d3585e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c72449f-3980-4175-8410-abae3fe9ff9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7bcc40-e57b-4f8d-8e8a-752d8a7338a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29519d4-5b09-46a8-abaa-03dfc0ffad8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd0008b-d829-4067-b1ab-0b1e8cd0359a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac33e561-f57f-427a-8b04-c792ff587681",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42aba1f4-acaf-4bf2-982a-09c3f0b3c884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b9a4be6-6fc5-4bfd-bc4c-5840204f2a88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2838e9e2-096d-4a94-9ef8-a6de330d761f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c3e51d-fa93-494a-a740-1406b9c3276d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce97fa28-c0a3-47be-a528-21099eeef16e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564f89ee-9f56-48af-a7a9-a6823543698d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a45148e5-12ec-48f1-879c-81b41476d276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba97ea5-407a-48ff-8829-ec24f04aa61d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c28edc00-a737-4ccc-afbb-3f52967adc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f57e6eb-5d99-4692-af08-a86efb1587b5",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d242d16-3925-4a3d-943c-55ba8b87fd0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84f515b1-ca33-4d39-b6e3-74f1a4d01755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26166cef-a0aa-4fde-b73b-ef4fc3824572",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bcf8d3-36d6-43d1-aef0-0d20d0e50c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a03d31-550d-4422-9b1f-0593ecd0f210",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1f8b99-77d5-4e74-9776-4ac3dc6f273c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e379d5aa-62e0-4403-b4db-ef049420ed89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aaae10-5b11-417a-81dd-511dc1ca09ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f85f18-e6a7-4192-9cba-76b85b50d33e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25738f71-90cb-4271-8bb7-d99d1aa09b03",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afe8a7b-6ad3-45d0-abe3-791cb09d6341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "daf0c9f4-d657-4fc4-b732-3cc2c980273b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e3b9a7-560e-40b8-ac2d-5cd16c3f714c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e8ea59-d9f7-45c0-8317-166613763d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f704010-df51-4116-9e9a-2c39836d7831",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be0707f-b30f-4437-8b1a-4ee1a58195d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4b2942d-ce1a-4203-b118-4dd1f05f9802"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9231e3db-26b1-4585-ac72-9420b67d365f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc0980e-f88a-4f61-b2bd-9b3b35773d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4302727-eb77-4d99-b72c-2c299b8af56f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ce8e42-300e-4e17-a66d-ea2aa6e5e339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64859a50-ed64-40a2-8623-e343bf285c2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871ae109-e929-48fd-a670-dfdc964dbc29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90a11b0f-9bdb-493c-bccc-b0b5c9d3b055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0077d4c-638f-453b-8fdd-77ba83976de5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13f2740-c62b-4985-bad5-fee82b8fd5d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea82c33f-81ee-40ee-93d6-164d988e8f4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6cc319-319d-4a2e-9cef-fee3789c9d31",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab9e1f8-acd5-452f-9c7f-1a66571fc0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beed7ab2-254a-4627-817e-c72410c30c34",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12734ccd-9f2c-4c67-91ac-6da2ab920f1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dffd6dd-5cdd-4245-86e1-419eba91821e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add4a0f4-797e-49b7-8d72-4e3eb2502211",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5333b685-caa5-4c15-9cdd-55b874b5c06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8d1dfe-6f5a-4c23-b8f9-f58688b6580a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f65b15-c0c0-4032-8fab-f5091a4caa31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf32d13c-dc59-4df0-be4d-56f4f81f5a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "202d57a7-6d60-44df-902f-18e9ae4961d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70428a53-0f11-42a6-91ec-7ad6a23f3a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40a2cf5-9dc9-4fce-b8cb-f0d08cc73129",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b622c8-cd73-4a76-820c-d98714f18cac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcbb4ed3-ba72-4226-a0b6-10dfb3005564"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7c428b2-ae2f-41d3-b07c-0adb6007fa2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30a797c-bc42-4b0b-8794-1d2ceeb05d7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9ea527-374b-486e-9c13-7dce13f05bc0",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79900d14-6a2e-4cc2-b3ef-7a552070827b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07429b38-8c6f-4f66-8b25-d5f18840d869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a2cd88-29c2-4f6b-91f7-6aec5e9adfdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c66618f-b9de-41ee-92a3-d0df611e3c9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ad6a89-aa73-4f12-866f-a65b606bf4e9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3deee3f4-8423-4fb8-aad9-ec00b8b46586",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29250f90-6896-4d3b-b8f5-91a1d90cf693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcb664e-302f-4ed6-a0b8-e0d59a71421a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b876b58-a2ae-40c4-a39c-413b8ec9ab23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b09821-dcfa-4621-8eab-56941cd69d85",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1994ed-face-4472-b71d-304b4c48739f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7cb33fe-2df8-4cfb-a41e-44ec1d8199ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e00f1b-92b8-4ced-91d5-b28943eacb2d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c346f5-16b2-459a-8f58-442ad28b668d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9e2ae9-32b0-41d5-abcd-feb06b941cef",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8517e2e1-1d7a-4e4a-a2e7-a16739d5a304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d9ed8e9-e8b7-4210-af4c-ef7e53bef89f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be21463-357f-4055-93c4-b333299e2a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8334ca72-7d27-44cc-ad4f-f96cdaeb9cf4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a53d470-7f8d-4ff1-ab5e-c85dbd145724",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "289578b1-b495-4461-8b99-2577e0887331"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a465c29a-b114-40dd-988d-e315fb119474",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f1aee335-02f0-4180-b7f5-0a70f1dbfc57"
                    }
                  }
                ]
              },
              {
                "id": "dc24302b-534f-419d-a782-2700737ccc83",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f58f3c32-738c-48ed-995e-3c08eba18073",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43f2700-b6e3-4de8-8f48-fa9a8ab01a26",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0093cd02-ce49-4edf-8874-2c5679f40cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96128dcc-90d2-495f-888f-efd8d59503f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fca70334-e4b5-44c2-9739-d8e0a9a0ba5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a924eb48-6829-432a-9bb2-332ba9ff057a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa64a60-79a4-4698-92b8-41824d6f80ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3c3344f-aefb-40ff-93f3-29a14506146b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b12f1630-5895-4c89-8f60-559b4015219a"
                    }
                  }
                ]
              },
              {
                "id": "4e08861e-1311-4b5b-b6b5-471505f5aa3f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fb3ef4f1-b56b-47e0-9730-713204b94ac2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64fbc885-6288-402d-b76f-2cf0f16721a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7ef071f3-da98-47dc-b554-dfe0298d91aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468289bf-d19b-4325-ae40-7a14a532fbee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0fe072d-7867-4824-9e0b-8547fac287ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "da05f9c0-2723-4ee9-9168-0da62c294197",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b51f185-35de-4636-bc2c-d7b49cba3691",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b966a2d-6d61-4ad8-b741-a89d05703530",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ae34aaeb-aada-4fee-b9b3-eabe3e44e907"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7296626-106c-4743-9792-37867ea8fda8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a66cae2c-dfc2-4a65-9580-1afe12b75e7e"
                    }
                  }
                ]
              },
              {
                "id": "b87521c6-aac2-4d4b-897a-3cc02feb8f6a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc7b9bdd-8c59-4eef-bad6-6d42410b6594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "90f2e33e-921f-4dd2-b805-a9615be8565e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0e1c181-0ba2-4211-b182-95e81b0d0d4b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fd27f68-71c6-42de-beee-9ef2d5566c27"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26df2458-f37f-46e2-9070-83b2fd1942a5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "79543ad1-179e-4255-bbd1-dd7ba28c58b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a33426e0-790a-4b7e-aa52-fd2f78580b49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81f83f27-9ec6-40a3-8b6d-2bafdb8ee3ac"
            }
          }
        ]
      },
      {
        "id": "753f8003-2d42-408f-8623-686570bcbb21",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "95a6a984-71a0-48f9-b9cf-9d7b29bf54f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c5e086e-d1a6-4271-8767-81824135f69a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10e1ac1d-701c-4a42-8669-a171ec382bdd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c268b3e2-f764-4abf-b3e1-442cf1a033a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "de15ae75-9061-41d4-8a5e-6bfb930873ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2bf2c3-8f8b-46d4-9bf3-fb866e6ffe3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22601dcc-c025-4625-838c-2795ec348533"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb5dc9cb-8aee-4b12-a9f8-a5fbb0360457",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08a7f415-b35a-4c31-8492-f2a4e605030c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d148d9d9-dea9-4214-b039-7258557c6514",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2f3fe5d-8b8e-4b6a-8686-4ec3a0a82b8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "693cddf7-6d62-4e9b-b366-498da3718744",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "9f04ca4f-1bcf-4cea-a06f-a7dc4c9236e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "55543e62-9835-4d2b-806c-081401a645e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0567e88a-172d-4027-8fbc-e09d7ff69c97"
            }
          }
        ]
      },
      {
        "id": "d55f046f-4f1b-4a56-8379-1f058a3f55c3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "50eb561c-3ab5-4f0d-bed8-49b7d2425339",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c7ff928-93ac-493d-bbb9-d8ad5a1c1acd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3859d2eb-8c85-4006-89ea-4006f34673da",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11d2727d-69bb-4df8-b257-d4dd57689d3f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fdc29c7-0494-43de-af35-cd2b23702694"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ab903f-2b8e-443e-a22f-ba8f56ca28bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82edaa01-7a7b-4cba-ad68-3c925a7e3c59"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "070c5fc7-71f0-473b-8527-97de37df3588",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc793411-3f57-498e-95b7-d6a19c93ba1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "60b58630-b4c3-4293-a411-9437efe4f010",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72906aea-f34d-47f2-9046-036767a40cb7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "79752d12-7f23-4b7e-9d59-23f1ff5c5e10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "381fb151-9881-485f-9589-eec380cbc5fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64a9b8b8-e7d6-41a9-bd0f-f6614380435e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c9f735af-32ef-4520-900d-acc98a0196b2"
            }
          }
        ]
      },
      {
        "id": "25fc3a1c-90e3-4a74-be30-458dff7ffced",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9481a1af-1bc2-4d25-a3b8-f471a67fef6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fdddad07-98fd-4806-8669-e2d89382330c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e06174a3-200c-4491-8318-a0ad2f5bcbf8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58f1c94-cad5-40b2-818f-a57eda3e8b9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c89f109-dc6b-4cfd-bb24-c4d386e707cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "255645f0-a1ff-4df6-875b-1f5419fdd75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2229a4d-17a5-4580-8824-22a47079003b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "36134716-2ccc-45f0-85aa-c918fb6e9bb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02dc9f49-be90-4f7f-bd77-ccba6bff4883"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97fee233-f13c-474b-a20f-53ee766a002f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf1aa898-66e9-4c60-bae8-bc21d3d5ad3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa466b3f-6351-4e92-b86a-0e68914187b9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5675177-55b9-44f3-81da-065cfa3583cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afb6071e-efab-4eba-893f-08e96bfedc0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5cde62cc-44fa-4166-a382-819f8b9579d1"
            }
          }
        ]
      },
      {
        "id": "00e19462-31f3-455d-b29a-9704c48fba4d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83c6d524-07c9-48cd-9844-8b6787cb02f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d966384f-f57c-4334-808f-4169716e877e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fc35b384-6d44-42b6-b676-faa4170de9f7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c4c32df-e316-49b4-a021-10dde4baa57d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03200ed8-ae04-4579-a1fa-eeb61cfb10ee",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 316.36971830985914,
      "responseMin": 7,
      "responseMax": 8935,
      "responseSd": 937.5669857375472,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693701271207,
      "completed": 1693701373491
    },
    "executions": [
      {
        "id": "07e8a516-f0c1-4ea5-a642-6bab8ac32c81",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "477a3070-e486-4074-b882-13a90498b204",
          "httpRequestId": "bac3d8d2-dd4c-47cb-9ab3-5fdfc57f3eb6"
        },
        "item": {
          "id": "07e8a516-f0c1-4ea5-a642-6bab8ac32c81",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "36fe6458-2bda-473e-b7fc-145572befb7c",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "ac668a81-7abc-4dfd-a2fb-5fe69ea6c636",
        "cursor": {
          "ref": "f8575695-1f58-4af6-b104-6d5cf235270f",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8fc1e12d-e813-4e06-9db6-4aaaefc8d4b5"
        },
        "item": {
          "id": "ac668a81-7abc-4dfd-a2fb-5fe69ea6c636",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "75b163ed-9c43-42fc-96c6-0ba0713c6515",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "d8cffe46-82a5-4631-8f4b-88fc383dba58",
        "cursor": {
          "ref": "67fe48dd-58f6-4232-8ac0-4cd244872d36",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b6a4c873-68e7-4321-aed6-b640f64ace26"
        },
        "item": {
          "id": "d8cffe46-82a5-4631-8f4b-88fc383dba58",
          "name": "did_json"
        },
        "response": {
          "id": "34a16eb0-0557-43d3-8ac8-73d33d1f22d1",
          "status": "OK",
          "code": 200,
          "responseTime": 1482,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e0a16d-9018-4a2d-a51c-5284b37d1ab6",
        "cursor": {
          "ref": "eb78244f-7a5b-4cb3-88f6-9b84bd723b6d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0cfb00c1-590a-4ab6-b69c-734b177350cd"
        },
        "item": {
          "id": "d1e0a16d-9018-4a2d-a51c-5284b37d1ab6",
          "name": "did:invalid"
        },
        "response": {
          "id": "24312240-c23c-4933-b10a-3ee26b7120ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e0a16d-9018-4a2d-a51c-5284b37d1ab6",
        "cursor": {
          "ref": "eb78244f-7a5b-4cb3-88f6-9b84bd723b6d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0cfb00c1-590a-4ab6-b69c-734b177350cd"
        },
        "item": {
          "id": "d1e0a16d-9018-4a2d-a51c-5284b37d1ab6",
          "name": "did:invalid"
        },
        "response": {
          "id": "24312240-c23c-4933-b10a-3ee26b7120ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b00edf-160e-4def-91fb-d131894ea6f5",
        "cursor": {
          "ref": "56254d4b-e828-4356-b3b3-c854a619ba9a",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f0e8ac6b-7765-49bf-9b07-0099fa708635"
        },
        "item": {
          "id": "a2b00edf-160e-4def-91fb-d131894ea6f5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "68cb3da4-4870-46ad-a3fe-347c43382656",
          "status": "Not Found",
          "code": 404,
          "responseTime": 330,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9d61aa-44a6-45f5-b107-57d921a5744b",
        "cursor": {
          "ref": "03c61ca7-1733-4410-a4d6-857e2330c8d8",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b4102144-c423-413a-9195-9be0ab7286b2"
        },
        "item": {
          "id": "bc9d61aa-44a6-45f5-b107-57d921a5744b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1ba3d4d2-b522-4798-adfa-fceeb7127d1a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 248,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f782175f-77ef-4f77-8e0f-84d6ed1a4a58",
        "cursor": {
          "ref": "6fbeda15-ce01-4709-b2b8-fdf8e0b091b0",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "9a6cb2f1-e68c-4210-aa88-363c8ba14cab"
        },
        "item": {
          "id": "f782175f-77ef-4f77-8e0f-84d6ed1a4a58",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5662b81b-e65c-427c-8575-76e52f71dd57",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a40827-cbde-4b44-a63b-f987f36add62",
        "cursor": {
          "ref": "b9ae929d-c7b4-42a2-bc59-e56ff8a69b79",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4f53050f-f21f-440e-9019-2305a653cc4b"
        },
        "item": {
          "id": "c0a40827-cbde-4b44-a63b-f987f36add62",
          "name": "identifiers"
        },
        "response": {
          "id": "b5630039-0ff1-467e-822a-c25d783cd2f8",
          "status": "OK",
          "code": 200,
          "responseTime": 1195,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810bbbde-7e7f-435d-8eee-c8039b5cbd43",
        "cursor": {
          "ref": "9d853658-50d5-402c-bbae-9dcfbb84dcfd",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b56e5025-f34e-46d3-854f-609286e83cfb"
        },
        "item": {
          "id": "810bbbde-7e7f-435d-8eee-c8039b5cbd43",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7b3368c0-13d8-4e05-a2f7-f147c75b36ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "096a8f03-4f1d-4878-af92-edb57e2d3581",
        "cursor": {
          "ref": "d6e674a2-e60a-4d95-a492-9942811c8017",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "37554886-0665-436d-b593-8395fbcb000e"
        },
        "item": {
          "id": "096a8f03-4f1d-4878-af92-edb57e2d3581",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d9c48a8a-c004-46b0-bfe7-7bfb06792ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8ca418-5b28-45eb-9782-fc6f8d5e27f3",
        "cursor": {
          "ref": "ad7e125a-e446-4929-a81e-5f316679aa74",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e388144e-ecaa-47c4-9b67-c8e5da97a053"
        },
        "item": {
          "id": "8f8ca418-5b28-45eb-9782-fc6f8d5e27f3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3b61e76c-a951-456e-a36a-96077e7ee1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0720bb5d-0dff-4d8a-be5f-7b3cbd94c5ec",
        "cursor": {
          "ref": "69676aef-435d-4027-af64-d68bf294789a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "9e1b5e1b-438f-4680-9ad1-7e41a2f68c52"
        },
        "item": {
          "id": "0720bb5d-0dff-4d8a-be5f-7b3cbd94c5ec",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3eda213a-cc50-4e5b-908f-0f3ae5192375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc79c3a-d37e-483c-948b-956927b9e938",
        "cursor": {
          "ref": "571c7312-8c2d-4410-a9a9-8595309c2d3c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2b14bb1e-6c76-4082-8027-80f4cc5a97ab"
        },
        "item": {
          "id": "3dc79c3a-d37e-483c-948b-956927b9e938",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cb37d510-c762-4ac1-8235-08ddbda9137f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eabb1d3-ed20-4135-a317-c732d7e75414",
        "cursor": {
          "ref": "0cb1f2e2-59be-4ec7-8c04-6dace9ca5b82",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f2d11888-3719-4631-a2db-358eaebddc0e"
        },
        "item": {
          "id": "5eabb1d3-ed20-4135-a317-c732d7e75414",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b5423605-04f1-49a0-a086-99fdb768c653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a59dd43-d357-4157-bd3f-44ad700cbbae",
        "cursor": {
          "ref": "12939870-aa42-4d36-8957-51c8d2c0bef8",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9cc8dbfa-0814-4196-b06f-362563ca00c3"
        },
        "item": {
          "id": "1a59dd43-d357-4157-bd3f-44ad700cbbae",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9217200e-3542-4574-8d84-45c159ade836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7fbb1ba-4ab6-46c0-8303-9dea898cdb81",
        "cursor": {
          "ref": "93dba597-320d-4122-8b50-16965f66b7e6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a8918026-056f-4c48-b722-7fb7e08261aa"
        },
        "item": {
          "id": "b7fbb1ba-4ab6-46c0-8303-9dea898cdb81",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2fbfc4f1-ea7c-4c2a-9e53-e6a2c085263b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc059a3a-788b-4ab8-80a9-3355c9a56113",
        "cursor": {
          "ref": "2a034b07-16e8-444d-b8ed-0c9c3d8157b8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "11c988b4-bf78-48f1-a945-984921063299"
        },
        "item": {
          "id": "cc059a3a-788b-4ab8-80a9-3355c9a56113",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d45b539f-2f62-4a33-a432-6eb3b4356b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a63d974-ffd1-4327-b333-a3966994650b",
        "cursor": {
          "ref": "c676fa76-b3d6-4616-9ad2-d77e39672756",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "688397b0-e654-481e-b1aa-803000d99114"
        },
        "item": {
          "id": "2a63d974-ffd1-4327-b333-a3966994650b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "67023fea-a62a-46d6-81d7-42c6ccbfd191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4638bf-e2e2-40c7-941c-244302e51ad6",
        "cursor": {
          "ref": "6a8b641e-dd18-403b-8ba1-2341034d36f5",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b1972418-571f-4d3e-9fa4-07217b57928d"
        },
        "item": {
          "id": "be4638bf-e2e2-40c7-941c-244302e51ad6",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "273a0790-5e11-48c3-a8fd-25fd4bc80e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca0ac1a-f92f-46a8-bc6a-7740d4fdfa2d",
        "cursor": {
          "ref": "f4a162bb-e58f-452a-b2e5-c27c0f3dcd19",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7ba8abe7-3be4-4f51-95da-cf581cd0efac"
        },
        "item": {
          "id": "fca0ac1a-f92f-46a8-bc6a-7740d4fdfa2d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "62f1d8d4-666b-40d2-94b2-22e4d4d55979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a5a54b-4d2f-40ae-8c8f-d921997dc28a",
        "cursor": {
          "ref": "8f615131-84a2-43eb-acc9-6cf9f39d621c",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "4228b116-1096-4277-9192-3286c666dbf1"
        },
        "item": {
          "id": "e5a5a54b-4d2f-40ae-8c8f-d921997dc28a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "49eda2fb-1900-4428-bd1f-1e9b0eed44f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba35805-d239-4a56-81f8-a71641810471",
        "cursor": {
          "ref": "776b364a-254d-41f9-949d-5dc752c856ac",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1d86de70-fee0-4db8-aa4b-2cdf3a002fdd"
        },
        "item": {
          "id": "bba35805-d239-4a56-81f8-a71641810471",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "69dd89d3-f9ec-4ed1-9b88-50b0cb2fea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d117f4c0-91b3-439f-9a49-d211ccfde880",
        "cursor": {
          "ref": "869c68ad-8aae-41d7-90a4-9eaf0c3f5307",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "49e60c69-3015-4612-afd9-732b6c026a6b"
        },
        "item": {
          "id": "d117f4c0-91b3-439f-9a49-d211ccfde880",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b4ccd2de-17f6-43cc-8e04-626fb89252b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3d2600-b034-40a9-a1af-5298970e9e73",
        "cursor": {
          "ref": "4050a96f-d0be-4fef-9851-18d6e70e87e2",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4c0a2724-548c-49c7-91bc-2d9d10fb2397"
        },
        "item": {
          "id": "8c3d2600-b034-40a9-a1af-5298970e9e73",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b2afcf95-d991-4ee0-a2eb-2355c1f19579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05724d76-6ecd-46c9-8150-b3d70633c3fe",
        "cursor": {
          "ref": "d828ef50-1ee8-4ff0-93ca-90bea4d16f82",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4c520fdb-44da-4006-8ed7-4f6e97943a3c"
        },
        "item": {
          "id": "05724d76-6ecd-46c9-8150-b3d70633c3fe",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "45db7d6a-dda0-442d-9ce7-e66b8522da0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedf5af9-e4a2-4e6a-b803-c04782022949",
        "cursor": {
          "ref": "bc642fd3-85cf-4c1a-8561-6c0fa0903ad8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "56c7d48f-816d-47fb-8b8c-881656afe451"
        },
        "item": {
          "id": "eedf5af9-e4a2-4e6a-b803-c04782022949",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0ecbf990-c1b4-4120-b007-0a16d082b2a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d346c49-0dc1-4bf4-b9fa-b3f91b0812e9",
        "cursor": {
          "ref": "67c1ab2a-d52a-463e-b2ec-0c898c838964",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1249e449-2c19-461e-bde5-5112c3dcf629"
        },
        "item": {
          "id": "8d346c49-0dc1-4bf4-b9fa-b3f91b0812e9",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bd63323f-eaad-4829-8996-a74e756fa326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76caa891-1546-4de7-ab31-9acfaa95c327",
        "cursor": {
          "ref": "cfed56ce-2647-4983-97bb-4dd722c45fe8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "74135e53-bd4f-47b5-b386-422b5781bc07"
        },
        "item": {
          "id": "76caa891-1546-4de7-ab31-9acfaa95c327",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3c0cbab2-648f-461a-9314-2854b5555c1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d12ca95-97c7-4f7d-92d8-49dd842650a6",
        "cursor": {
          "ref": "42fc7d21-3a73-4ff1-a40d-6f7cd863fba3",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c644420-abd0-47b8-9d35-f20e613c06c4"
        },
        "item": {
          "id": "7d12ca95-97c7-4f7d-92d8-49dd842650a6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "04f3fa74-2041-46da-88bc-cfd0b220f57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c64317-0342-46b0-9480-09f4f3552f2b",
        "cursor": {
          "ref": "23f4aa61-e67c-42da-bbba-e9a93e7fd711",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "eb8191c5-65b8-4a3a-8a2c-df24354f98f4"
        },
        "item": {
          "id": "36c64317-0342-46b0-9480-09f4f3552f2b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e578f7bb-2039-412d-b041-14e1f8092eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d93287-e9e6-423f-a899-04f5770ab9c7",
        "cursor": {
          "ref": "5e7f88fa-4b2a-418f-8a96-15cf3c9fc074",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d5a4431d-c3e9-495a-bd70-3d4ec37b7cd7"
        },
        "item": {
          "id": "d2d93287-e9e6-423f-a899-04f5770ab9c7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "63975b25-a437-47a8-9f9b-8c93fb382993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74516393-1cfd-416d-9906-cd5f6d23492e",
        "cursor": {
          "ref": "cccc3803-9e2d-4657-b34a-861e730073f4",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1fd3f6dc-4bc3-428f-aa37-6cbc165abdbe"
        },
        "item": {
          "id": "74516393-1cfd-416d-9906-cd5f6d23492e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "08b68e1e-8da0-47e1-972c-715304e8794c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f51c3ec-7011-4d46-9675-89c8460d0f5c",
        "cursor": {
          "ref": "068ce15a-7b1f-4b6b-b0ae-18c1402b3b43",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a5935e3c-922b-424b-b257-34657ba99928"
        },
        "item": {
          "id": "1f51c3ec-7011-4d46-9675-89c8460d0f5c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dec909cd-66ec-4a68-9de9-73d1f2185cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fcad22-b43e-4241-a9d5-ef2b9477a530",
        "cursor": {
          "ref": "571beffd-8be5-40a9-87f5-7f2a77e8a718",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "198f3cbc-5549-46bf-9d9c-014f211164b2"
        },
        "item": {
          "id": "57fcad22-b43e-4241-a9d5-ef2b9477a530",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f3c330bb-6200-48bc-b565-fd8144381f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd72c55-2afe-4cd2-b781-0597e2ff0851",
        "cursor": {
          "ref": "b7787891-45aa-4317-8519-8019a1b723ee",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8baa3c0d-63b0-4445-99de-f02d28827f4a"
        },
        "item": {
          "id": "5fd72c55-2afe-4cd2-b781-0597e2ff0851",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "efc960a6-d5a5-498d-82c0-4bfe8f4ea9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b8725c-e207-43a2-8393-4afa595cd241",
        "cursor": {
          "ref": "bb1673dd-7260-4765-94e5-906f3bc6d1d6",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "92a4c277-d8eb-47c9-9efc-dfe673a834de"
        },
        "item": {
          "id": "f4b8725c-e207-43a2-8393-4afa595cd241",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6ec8d94f-7ade-43b8-a65d-716a740ffd96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e749d3-4cab-413c-8a27-0676359cbb60",
        "cursor": {
          "ref": "9f03ebf6-4d17-49de-bfba-5331130144dd",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "24547c69-7682-4192-94b5-22ef296d2661"
        },
        "item": {
          "id": "58e749d3-4cab-413c-8a27-0676359cbb60",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1c3b052a-d9af-47b5-a916-85573cdbddce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82195e6-dfe3-48f8-ab6c-aa2af809fc90",
        "cursor": {
          "ref": "d1f99c75-a7a9-4642-9199-6da548a40621",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "02a22d11-7aaa-4272-b9f1-3a572fa32471"
        },
        "item": {
          "id": "d82195e6-dfe3-48f8-ab6c-aa2af809fc90",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "8f2bc2c4-1f4a-4cfc-9641-d0a31ec29eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dc78372-a02b-466a-a3b3-cbd66cc77d2d",
        "cursor": {
          "ref": "44301dab-d2c0-4ece-abc7-a779aa58c35a",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "27272d8c-e4e0-4028-8405-9625de85cd9d"
        },
        "item": {
          "id": "0dc78372-a02b-466a-a3b3-cbd66cc77d2d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5ec3cebf-ba16-4545-910d-00a2b2d59fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87f6794-0a91-4b70-8c66-95527e513776",
        "cursor": {
          "ref": "894547e2-71d5-4536-81bd-475d7e5aa663",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "dfbc7a97-0cfd-46f9-bfb2-e4940f465fd6"
        },
        "item": {
          "id": "e87f6794-0a91-4b70-8c66-95527e513776",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7b85765f-b69d-4fc8-a77e-b6be6713d2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44198f2-c871-4edc-85cc-59cae3db609f",
        "cursor": {
          "ref": "94974ccb-afef-40af-b406-1f59e9bdebc9",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6b12a6d1-37e0-41b8-8a5d-a34d2f435981"
        },
        "item": {
          "id": "d44198f2-c871-4edc-85cc-59cae3db609f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ae5cf2c7-3f79-411a-8123-0e42c6c2a1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c93b14-d7bc-41ec-94c8-e7a74b2edb77",
        "cursor": {
          "ref": "e75b0fdf-bb03-463d-bd02-3f22d0d0170e",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "67de863b-6a95-4e75-b478-7703f6e96bf0"
        },
        "item": {
          "id": "e3c93b14-d7bc-41ec-94c8-e7a74b2edb77",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1390608f-cfda-4469-a199-1936a1c8eedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bce92f-7c5a-4d1d-a9da-27676caffabf",
        "cursor": {
          "ref": "00a6b9ed-e206-46b6-8e74-aae3ca3929ff",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "226a16bc-997f-40b9-9e5b-42d7b745fc4a"
        },
        "item": {
          "id": "61bce92f-7c5a-4d1d-a9da-27676caffabf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7cec1269-5e45-4dea-bfa1-569cf7b863c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65c8499-38b7-4000-914e-212f6675ff92",
        "cursor": {
          "ref": "e76163cc-1a4b-4ad3-b2d5-406e6d667f5a",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "2bb943f7-71e3-42f4-8495-49b0fdeb06e5"
        },
        "item": {
          "id": "b65c8499-38b7-4000-914e-212f6675ff92",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f45bd0d1-129a-4b85-a0ed-882c7ca2a9e7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 572,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8392e37-0193-453a-af7b-e656cebc6c4f",
        "cursor": {
          "ref": "b8e95269-2750-44bd-91fc-acc77faf08bb",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3a853bbb-0e6e-41c7-9c84-ea31f9357717"
        },
        "item": {
          "id": "b8392e37-0193-453a-af7b-e656cebc6c4f",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6b1328a2-7602-4d17-8ec3-1f6c6a89064d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5516768-0be6-4e4b-b8a4-f701bc2fbc87",
        "cursor": {
          "ref": "9b1cd352-614b-4e75-a862-c884679c0e56",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "19175d0b-b39f-4340-ace9-34deefd69557"
        },
        "item": {
          "id": "e5516768-0be6-4e4b-b8a4-f701bc2fbc87",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bc8c07c6-a0ad-4e63-81e0-e79995876785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6829b5-0680-4f7f-8f6d-a5e0eeaf6d70",
        "cursor": {
          "ref": "b3aa1ace-d673-4851-a125-9177338a1819",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4adfbc5b-3624-44ed-a89b-1988c6503895"
        },
        "item": {
          "id": "ee6829b5-0680-4f7f-8f6d-a5e0eeaf6d70",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e9aba1df-d740-4a09-ad00-545f486f648f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1134f90-0d15-4dc1-ac43-e1d1c00eab60",
        "cursor": {
          "ref": "ecb1bc87-4db1-4b32-9f6e-96565252dd88",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e56750d9-8b6b-48cf-aa6b-44a7964d18a3"
        },
        "item": {
          "id": "b1134f90-0d15-4dc1-ac43-e1d1c00eab60",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1ac51d2e-35e3-41f9-8675-770526284ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df14bba-8ddc-44a5-8718-0305120d843c",
        "cursor": {
          "ref": "64cc1b5d-112f-42b3-be0e-08e4da1e0fb9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c61594b1-402d-4b5b-bdc8-e46a903c3642"
        },
        "item": {
          "id": "3df14bba-8ddc-44a5-8718-0305120d843c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f38ceb4b-1a8c-4a56-ac48-b3a4188b160d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9363afbb-6f96-4004-bebe-f51cca87152e",
        "cursor": {
          "ref": "767d3e70-96e4-4b35-999d-d5053458b687",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f1c48720-958a-4c18-8955-1348f9a8daef"
        },
        "item": {
          "id": "9363afbb-6f96-4004-bebe-f51cca87152e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3bdf36f5-86c3-46e1-844a-beb1ce363b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f939764-75df-4cae-bceb-e88d4d85f576",
        "cursor": {
          "ref": "efb801d4-bf88-4c61-bac9-9ef4a98c9013",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "afc92624-a1ac-4425-89e0-382048837002"
        },
        "item": {
          "id": "3f939764-75df-4cae-bceb-e88d4d85f576",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0175d6fc-b033-41cb-b161-0d4024250804",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 570,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fe11b4-d8bc-45c4-a7df-782744ecbdee",
        "cursor": {
          "ref": "d8e0e28f-9b30-4b76-b66b-6c2ed0aa0937",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c5dadc86-3f59-45a2-9d2a-0b14faa1345d"
        },
        "item": {
          "id": "85fe11b4-d8bc-45c4-a7df-782744ecbdee",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "04c4f4aa-b458-4112-a1a3-c84d1690ec28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce1c275-d889-4237-aabf-6e0afecc12c8",
        "cursor": {
          "ref": "03f1eb55-71d3-4a5b-8c80-f072a60871de",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2e9573dc-c667-4156-802b-79ceb6e894ac"
        },
        "item": {
          "id": "cce1c275-d889-4237-aabf-6e0afecc12c8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "5dd45cff-70b3-4e63-a8a7-404a0069cfbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f6ecef-80a1-4f9a-ba7b-dc2689a4d2d8",
        "cursor": {
          "ref": "4b73be26-8c38-4d0d-9afd-29b8ca927406",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "898cf4f6-3d47-4a07-8ed2-bf7017ec4e38"
        },
        "item": {
          "id": "31f6ecef-80a1-4f9a-ba7b-dc2689a4d2d8",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1c31d14f-8e1a-4f5a-bb1b-e14f0eaa0091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7092eb8-62ab-4fe3-9192-0cb82e6d634e",
        "cursor": {
          "ref": "42cc990d-3afb-4a59-8ec1-37f9a01606e3",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8adaafc6-3a0a-4e08-a313-13f27f17da19"
        },
        "item": {
          "id": "a7092eb8-62ab-4fe3-9192-0cb82e6d634e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "5e9b1926-2736-4770-bb38-ea043b0754b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bf29a6-7b15-46e9-bbb8-937c47a9353a",
        "cursor": {
          "ref": "dd8a37c9-0b4b-49a2-86ed-e0dbd5075801",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "36aa9693-4de7-4fb4-88eb-0239b9908180"
        },
        "item": {
          "id": "00bf29a6-7b15-46e9-bbb8-937c47a9353a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "fd6a6636-5489-4e81-a4d1-bbc0e262aa11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd1aba5-1296-496f-bf21-918058bbc3f6",
        "cursor": {
          "ref": "2eccfeb1-db80-4fd5-814c-0a506d496ce7",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "997caca4-f10a-4019-a580-f72e9bd75273"
        },
        "item": {
          "id": "cbd1aba5-1296-496f-bf21-918058bbc3f6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "69156aea-8d1a-4438-ae56-8a56bb349fa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514d8bd6-1109-444b-94d8-8ded3e7fdf1e",
        "cursor": {
          "ref": "6821bb12-e96c-4c24-971f-349f0d668af3",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7ddb3158-f95d-40c3-8381-b1699ccd7c06"
        },
        "item": {
          "id": "514d8bd6-1109-444b-94d8-8ded3e7fdf1e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "47efa331-7cba-4ec7-b99e-4acd2f32c62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eb84b8-2212-433c-ae9f-d2d0a70bafb4",
        "cursor": {
          "ref": "85ea268a-5b1b-40d2-8779-aab13606cd68",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e77f8d42-03f3-47c2-bbe7-4eafd2197216"
        },
        "item": {
          "id": "a9eb84b8-2212-433c-ae9f-d2d0a70bafb4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9510c16d-1c29-4a1a-83be-19193583f69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0c3015-8e72-4793-88cf-d5505ef80976",
        "cursor": {
          "ref": "d74b8a1e-6ae7-40cf-88c0-184645f22660",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "cdcbe861-8c42-48d2-b579-34384c90754a"
        },
        "item": {
          "id": "ad0c3015-8e72-4793-88cf-d5505ef80976",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "118355b7-e99a-429d-8cbf-d6e2ae86ced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3195eff9-aa12-43a1-8ea2-2cedecb3f871",
        "cursor": {
          "ref": "fd38b845-6147-435c-a8e3-70a702b8e1c2",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "351d430a-40ce-49a2-aeb3-d497696ca2a4"
        },
        "item": {
          "id": "3195eff9-aa12-43a1-8ea2-2cedecb3f871",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "35e0a945-b1d2-42fe-af7f-0ee12d6e7b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa84c831-24db-4093-8311-a32c37f3c97a",
        "cursor": {
          "ref": "c2a322ac-84be-4279-b222-a6e968043eba",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8c120014-9245-45bd-a1bf-3038b04f1e3b"
        },
        "item": {
          "id": "fa84c831-24db-4093-8311-a32c37f3c97a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "a98e0e84-2eb5-4d6b-91f0-e687cca1c405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c5de8cb-4699-453e-ac18-cf9d81e993f6",
        "cursor": {
          "ref": "adf52049-a523-493e-9925-14662c3ead02",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "7f48a827-3639-4714-b626-61eac0474b1f"
        },
        "item": {
          "id": "1c5de8cb-4699-453e-ac18-cf9d81e993f6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "658a31a4-376d-4a57-a14b-87f07925688d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9eb24d7-3faa-4733-8cc0-9b0d3a6d690e",
        "cursor": {
          "ref": "a9eb34da-976d-44df-bf3a-343e827cfc17",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2ec31ce9-3850-443c-a674-d8d91efdda64"
        },
        "item": {
          "id": "b9eb24d7-3faa-4733-8cc0-9b0d3a6d690e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "466d3a2f-67d9-4d2c-a561-7d5ebc0f2cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9527d077-7e90-434a-b682-1539d52db5a8",
        "cursor": {
          "ref": "ff00801b-9749-40a2-a6c5-3d3b9ab0a1ae",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "01453ee6-5b8a-44a9-99b7-bb7872a20ffc"
        },
        "item": {
          "id": "9527d077-7e90-434a-b682-1539d52db5a8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "20cf4601-e127-49a6-9edf-98bc33cb10b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3cad75-4b01-411c-81ec-6cb39f278266",
        "cursor": {
          "ref": "6c7fdd6e-14d8-4125-9af6-2648f689f998",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "adda8730-3584-4d00-9b3b-db9827eb14f9"
        },
        "item": {
          "id": "da3cad75-4b01-411c-81ec-6cb39f278266",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "887b92df-92c1-4b8c-97d5-a806b1368ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70877c29-7fc4-4cfc-80a6-ce5414aae608",
        "cursor": {
          "ref": "b27a4511-7a69-46d6-aaa4-82d3b53aa829",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d81b28e7-70f9-424e-910f-341b32296edf"
        },
        "item": {
          "id": "70877c29-7fc4-4cfc-80a6-ce5414aae608",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e9cd5723-cb08-4f32-aac2-1a0b8c222c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "495d7a42-3985-436e-9922-3e99dafaa64a",
        "cursor": {
          "ref": "c5221cfb-a11e-4a6a-aa18-d68fdceb0175",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9bae68da-e1f3-46ba-894a-a7a000c8d71e"
        },
        "item": {
          "id": "495d7a42-3985-436e-9922-3e99dafaa64a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b87d3705-082f-47b6-bfdf-c735f50fab8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6be7d91-5c12-4acf-afc8-c39cc8b1ce53",
        "cursor": {
          "ref": "28555ea1-0587-42fe-ae6a-e6f784271bf1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "7dd4cc93-4d21-48b1-b087-db6b522b7a6a"
        },
        "item": {
          "id": "d6be7d91-5c12-4acf-afc8-c39cc8b1ce53",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b0bd8578-d3bd-4e12-8d2d-c711b4347d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbb2d5e-f88d-457c-9c1a-eafdf6196153",
        "cursor": {
          "ref": "da5fa9fb-d9c9-4b6e-85c5-1333587faf5e",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e8dbbec2-6d8f-421d-823e-508cd2c3fbae"
        },
        "item": {
          "id": "fcbb2d5e-f88d-457c-9c1a-eafdf6196153",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dd838af7-01de-4c13-8541-c6833b748c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af681df7-86dc-47ec-8a02-6fb18b612263",
        "cursor": {
          "ref": "cf035713-6688-4b88-973e-99f296773092",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6ee56314-204d-40b5-bbce-64cf9ecb46bf"
        },
        "item": {
          "id": "af681df7-86dc-47ec-8a02-6fb18b612263",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d9143525-590b-4a2f-8fa7-b845416a069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efcd051d-2c5a-411f-91ff-790e6f337045",
        "cursor": {
          "ref": "d27522c3-3e3d-4388-8b55-48dd8e94e8e6",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f81305b5-c204-496b-9f8f-45a88a6d2aba"
        },
        "item": {
          "id": "efcd051d-2c5a-411f-91ff-790e6f337045",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "67d89d30-2a71-40fc-ac43-e7b632830bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c95f135-43fc-44e5-8c18-3b5a142a7c1a",
        "cursor": {
          "ref": "4554b7f0-f770-4a47-8f6e-e871f3920b34",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f48ab1ac-04ae-4845-a36d-810462f8bf16"
        },
        "item": {
          "id": "4c95f135-43fc-44e5-8c18-3b5a142a7c1a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7539e192-5ff9-4017-a167-62cbd6ab69e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1ba05d-9906-4ebc-bec5-cc0289514383",
        "cursor": {
          "ref": "4cd8cfea-1f5e-4086-a64c-3f63d251caf8",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "947e183a-1dbe-4dd9-ab70-c3da52e8c47a"
        },
        "item": {
          "id": "5e1ba05d-9906-4ebc-bec5-cc0289514383",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "37826bd2-7b58-4cea-9089-2012102670e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6145e8ba-8f3e-4684-abda-a2a2a1ceece9",
        "cursor": {
          "ref": "fe6a6061-3e33-4975-9dd6-0e7c21d40665",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "dbb24e18-eb43-474e-95c6-90203a84228f"
        },
        "item": {
          "id": "6145e8ba-8f3e-4684-abda-a2a2a1ceece9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6c286ee0-0ec6-4392-af84-c6ad71ee6b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e90011-1cb9-4d5b-b756-be9c7afd905c",
        "cursor": {
          "ref": "e0a27cef-1706-46ff-ba57-f156dc00e950",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5a16bb97-963c-4234-91d3-ba4658a77c1a"
        },
        "item": {
          "id": "35e90011-1cb9-4d5b-b756-be9c7afd905c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d9c2a623-be63-404f-881f-f4e5f81039b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a566802-eea2-4264-bf96-3e7b0e8838cc",
        "cursor": {
          "ref": "759dfc72-1a58-4936-a381-88b24afac56b",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e8a1c58c-385d-4ccb-9974-0d06926373dd"
        },
        "item": {
          "id": "0a566802-eea2-4264-bf96-3e7b0e8838cc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "92d1db96-9a9e-41b3-b16b-32a32fd3f890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ab6ac8-ff91-4cbc-8d07-012d32052c6c",
        "cursor": {
          "ref": "64e7fb90-22ab-4efe-90dc-83522deff088",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "7ee9f85f-fa3e-4ff8-b251-12e4c14d34aa"
        },
        "item": {
          "id": "59ab6ac8-ff91-4cbc-8d07-012d32052c6c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "ed0cd2ae-fb8b-427e-b167-b016410e2d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4024a0b-cf99-4c96-b4c0-7788ef83674e",
        "cursor": {
          "ref": "59aa3c7e-ee8f-41cd-a0fd-a3630e9362bf",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "36ae9748-6066-47c8-aaa5-98edd78b6ad9"
        },
        "item": {
          "id": "d4024a0b-cf99-4c96-b4c0-7788ef83674e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "66d98c22-ac40-4d0c-9818-ebb291b8ec8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8ede98-4ab4-4064-9fe3-9c6f4aa23ff4",
        "cursor": {
          "ref": "b5496024-fe8e-42b8-92c2-368a72914190",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e68e5ac4-467d-453b-99ba-702d4a0043a3"
        },
        "item": {
          "id": "dc8ede98-4ab4-4064-9fe3-9c6f4aa23ff4",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "02e01986-2476-4991-ab37-6d10f56f11e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5eef37f-63cd-40ee-ac0f-3e37f26a5200",
        "cursor": {
          "ref": "1d698741-256b-45c5-ab1e-ee368822750f",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "53abed30-a04b-4cfc-bc21-6c5b42a91a0f"
        },
        "item": {
          "id": "f5eef37f-63cd-40ee-ac0f-3e37f26a5200",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "326a5f85-b0d8-45d3-bc61-7fd83fcd52d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10d2e7d-dda0-4eee-b9ce-a5bb1d80fe64",
        "cursor": {
          "ref": "eee5a228-1d0f-4bc7-bc8e-01ee40fc2580",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d324e4ee-2e34-4fb0-9f7e-c587ba4edf50"
        },
        "item": {
          "id": "d10d2e7d-dda0-4eee-b9ce-a5bb1d80fe64",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0bbf6784-cf51-4295-99b3-d31d59c02757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7faad4-78b8-4013-8fb2-01d6a2e2b503",
        "cursor": {
          "ref": "521d8f70-ccce-4960-88ee-8672c8c4fe77",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "747c8f8b-8548-4132-9d52-a40914cbebeb"
        },
        "item": {
          "id": "fd7faad4-78b8-4013-8fb2-01d6a2e2b503",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "051e8b0b-e6c9-43ad-be3a-20432cd02af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1701569-32f3-402e-bbbb-c33e05064bce",
        "cursor": {
          "ref": "cd939fdc-44f1-4982-9da8-5eb2a938152e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f80d4800-6bd8-4e11-8805-d14644fc4155"
        },
        "item": {
          "id": "b1701569-32f3-402e-bbbb-c33e05064bce",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fdf6271b-afb3-46bb-963f-110b30f99ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0708cb-f8b7-43c4-8801-d17f804fa916",
        "cursor": {
          "ref": "4bcee7c3-e5bf-4b17-8807-8cbf19904cd0",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "d782d73b-5959-45ca-9b7c-44e9a6bac908"
        },
        "item": {
          "id": "ea0708cb-f8b7-43c4-8801-d17f804fa916",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "731c0a79-1e7b-419c-b29f-cff5c3aa4590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1079cfcc-4805-4ad2-bd0d-b55d24a8f8ee",
        "cursor": {
          "ref": "c3c9a6b1-1a3c-44bd-a2ea-ade2c9c06529",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f3d62b3d-193b-43f7-89a4-34c40abaa4d0"
        },
        "item": {
          "id": "1079cfcc-4805-4ad2-bd0d-b55d24a8f8ee",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "08cfdcdd-69d7-4b76-996f-11958ea93a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9c1c21-ee97-4995-ba95-e956972f7a76",
        "cursor": {
          "ref": "81a97860-7a9c-44bd-a85a-d51f65a61658",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8259359f-b3be-4c60-9c8b-a3d9ac3f414c"
        },
        "item": {
          "id": "0f9c1c21-ee97-4995-ba95-e956972f7a76",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ac86cfab-4101-4226-8c81-1ee834f48b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ba95ac-abe1-44b3-8ffe-e476a2518ece",
        "cursor": {
          "ref": "c3aea2ef-7c2f-4308-9c7c-251d494a986b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "90221a33-f5ee-4454-b78b-b5986753726b"
        },
        "item": {
          "id": "21ba95ac-abe1-44b3-8ffe-e476a2518ece",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "74e52d0a-5479-4a6e-b5a5-18c5552298a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5ade42-4a18-46ab-8cb1-5ca79e5e7a09",
        "cursor": {
          "ref": "6becac88-cdbb-4005-bcca-24093996fcd2",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "652a3f53-1f51-425c-a666-3773d8298685"
        },
        "item": {
          "id": "6e5ade42-4a18-46ab-8cb1-5ca79e5e7a09",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "e8ffd5c0-0238-4413-a6e4-bb54daab2fa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4658c752-4480-4b6e-a8e9-14b1e7b8eaba",
        "cursor": {
          "ref": "0945e085-54f4-4ceb-a444-640f7cf7509a",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "259750ca-0c87-484c-b681-19756366219b"
        },
        "item": {
          "id": "4658c752-4480-4b6e-a8e9-14b1e7b8eaba",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "483c1a40-d543-467f-aa1c-b596f00024a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "386399e7-84ea-425f-a1f1-33e7c46de7d4",
        "cursor": {
          "ref": "808cfc31-043e-4828-b2b9-4edfbea427e3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "fe309cc2-265c-4ecf-ad10-65495bf35759"
        },
        "item": {
          "id": "386399e7-84ea-425f-a1f1-33e7c46de7d4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3350bff6-8f7e-4e69-82f5-23b947067746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78713671-3860-4d6a-bd16-aab98267b7bc",
        "cursor": {
          "ref": "68e03f50-b8ec-44c6-8d06-b99ce26b97ca",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b253f33e-41db-4b0a-bc1b-4200357a1e26"
        },
        "item": {
          "id": "78713671-3860-4d6a-bd16-aab98267b7bc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "94e205d4-4a76-41b9-a109-26d51b72a3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45455d87-5a46-4e43-8852-607a06e4b367",
        "cursor": {
          "ref": "ff0e929d-8b50-487b-8094-421607910067",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ad4d7112-fd6d-4c90-91b4-2b9023bc87f6"
        },
        "item": {
          "id": "45455d87-5a46-4e43-8852-607a06e4b367",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "3395d7f7-7e4b-46f5-971e-a2e24b1ef025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17aa14c0-aea5-476d-97f7-4961d5347538",
        "cursor": {
          "ref": "41e374d0-f63a-48df-8ef9-dfb2a9eb6851",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a2f6fc25-5e1a-4df4-ba7f-de7474014287"
        },
        "item": {
          "id": "17aa14c0-aea5-476d-97f7-4961d5347538",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0c7803b3-4efd-4050-a18e-4a9e335b9f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c95ba54-d88b-4dba-bac8-c43833e9d05b",
        "cursor": {
          "ref": "4cc242f5-cc5c-4ea5-864f-bb83290b01dd",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "998c9ee0-fed8-4f62-9acb-0725f2d152d1"
        },
        "item": {
          "id": "1c95ba54-d88b-4dba-bac8-c43833e9d05b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "1cedadd4-5676-4a07-bbab-557937c97245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3a1fd2-89cf-43a4-bba4-4fe07611f57e",
        "cursor": {
          "ref": "cc851592-9972-4524-b49a-c95d47495825",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "85119722-276d-4e6d-8cb0-694b94343fb9"
        },
        "item": {
          "id": "4b3a1fd2-89cf-43a4-bba4-4fe07611f57e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "793f0c37-a045-4f43-a514-996bd1f70637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cff5927-6b76-4357-93a8-e27a50c07f97",
        "cursor": {
          "ref": "ff72e78a-6cf0-433b-9682-20822c2b0ce2",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "db060f60-e12e-432c-af62-5188fc1bfd3d"
        },
        "item": {
          "id": "2cff5927-6b76-4357-93a8-e27a50c07f97",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "959586ce-66eb-4a97-a72c-a46a31b129dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5d66ff-bc1e-4174-b7f3-d173f1079ebc",
        "cursor": {
          "ref": "b4832c99-563a-4625-a784-c1495f7ffc90",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2313c9ac-b16c-4373-a86b-67c40570dfc0"
        },
        "item": {
          "id": "9e5d66ff-bc1e-4174-b7f3-d173f1079ebc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d4610ccb-383c-4f12-824c-e27c85688ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33b35e7-7685-4ae5-829b-eed63af365a9",
        "cursor": {
          "ref": "2a6ee983-3023-4f8a-9938-e42ad96f70f2",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f2fed59d-033b-4b42-ae2d-c4d933f9c4b6"
        },
        "item": {
          "id": "d33b35e7-7685-4ae5-829b-eed63af365a9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "066cc9a1-dc51-4eda-954a-0e30dfb41771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2c824b-eb1d-4c12-aa45-b4b765b6508e",
        "cursor": {
          "ref": "70151a97-18c0-4d93-baa4-02f9a4868491",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "715f6111-2dea-4fb7-ae23-044eb0ba5ffe"
        },
        "item": {
          "id": "bb2c824b-eb1d-4c12-aa45-b4b765b6508e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eb0f59f7-e31d-4cab-892f-5c26d80c5ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a8a5a9-1429-4cad-9fb5-5963c61ace7b",
        "cursor": {
          "ref": "0b9b13b1-120e-486d-8318-bdca28ccf34f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "39fd7eb8-8626-4cae-8be4-e9c831598771"
        },
        "item": {
          "id": "d8a8a5a9-1429-4cad-9fb5-5963c61ace7b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cb836b46-bc30-4ae6-b081-0c947be06c25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf44b4ba-af99-4e94-a139-a94cd4eafc16",
        "cursor": {
          "ref": "4faee75c-d033-4472-9339-8ce54f2d0c14",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4d5a1b04-0e16-443a-84a7-63097d010e1f"
        },
        "item": {
          "id": "cf44b4ba-af99-4e94-a139-a94cd4eafc16",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1cc3365e-1d87-4aa2-8528-593839754394",
          "status": "Created",
          "code": 201,
          "responseTime": 8450,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5ca43f-5f49-4b67-b309-3455355f401c",
        "cursor": {
          "ref": "12db5bfe-119a-4e0d-b587-0bc5e7a4282c",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0a6ebae2-e8c6-4c1c-91a2-cf7c51e26a13"
        },
        "item": {
          "id": "db5ca43f-5f49-4b67-b309-3455355f401c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "864b9379-3486-4baa-a96c-7484c9457f6b",
          "status": "Created",
          "code": 201,
          "responseTime": 8935,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "30878362-c832-42ad-aecb-8a89890ad6d8",
        "cursor": {
          "ref": "3178a88a-6e51-40b0-9c42-5ed0f5b1e2db",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a06c51d3-5270-4f92-b42f-593316c63aa8"
        },
        "item": {
          "id": "30878362-c832-42ad-aecb-8a89890ad6d8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fb0a1f51-38b1-4c37-98d5-421dbe8cefaa",
          "status": "Created",
          "code": 201,
          "responseTime": 5912,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ab9b9e-e392-43ef-9be0-83d76439f327",
        "cursor": {
          "ref": "7b0fa0d5-f189-4102-856a-d6eb4fcee06e",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ea79492e-bcd8-4c73-b72d-41f2b018a145"
        },
        "item": {
          "id": "21ab9b9e-e392-43ef-9be0-83d76439f327",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "7cb5504b-5c4f-4e7f-95a8-3b0605e72f95",
          "status": "Created",
          "code": 201,
          "responseTime": 6012,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "868dfbe9-2bf2-487e-a893-1a7c7d7c8fa4",
        "cursor": {
          "ref": "c4712a29-59f0-4e9b-8cbd-2ad7c84e7518",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "1ad3b534-42f9-446b-8a20-b02af27eb795"
        },
        "item": {
          "id": "868dfbe9-2bf2-487e-a893-1a7c7d7c8fa4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d9641f1d-71c8-4c3f-8079-1a84977349c3",
          "status": "Created",
          "code": 201,
          "responseTime": 5972,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9bfd6a-4170-46e7-ae96-6570b2bc3650",
        "cursor": {
          "ref": "50585f1d-a095-411d-9819-67ad38ec1582",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "000b17cc-58a2-4db9-8a34-4ba8e02872a7"
        },
        "item": {
          "id": "ff9bfd6a-4170-46e7-ae96-6570b2bc3650",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3a045828-ddae-4b41-be34-1320ecdb3020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "00354926-d499-48ca-8c73-b0d69145697c",
        "cursor": {
          "ref": "65185882-d1aa-44bd-a2f5-1ac28d3bfe5a",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2efe42e4-0cdd-40d1-bd84-15c0fe548ba3"
        },
        "item": {
          "id": "00354926-d499-48ca-8c73-b0d69145697c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a31972ad-7ee7-4a1d-80d5-8b4d2b22858c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb654749-9803-49bf-8531-b2cf41fbcce9",
        "cursor": {
          "ref": "1c1c464f-db62-46f3-a458-e14a725ea536",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "935ba62b-e5ca-4b28-ad19-74ac8afd5fe5"
        },
        "item": {
          "id": "fb654749-9803-49bf-8531-b2cf41fbcce9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "631a7b53-43da-4365-83b0-6a86971c4358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d97340f-fc02-4671-abcf-b8d696fa4c30",
        "cursor": {
          "ref": "64cb5cad-8db9-4ada-a302-2efa1e67dfa5",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "caf72784-9e0c-4e41-8b6f-9434dc036e06"
        },
        "item": {
          "id": "3d97340f-fc02-4671-abcf-b8d696fa4c30",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "30abef2c-500b-4f75-946b-52868baecefb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967367fd-59cb-4f27-96dd-f5956e835e64",
        "cursor": {
          "ref": "a3db1c65-2db7-48d6-9e90-1240bde8e2cc",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9419e02c-2b70-44cc-8bc4-9bfa72fb828f"
        },
        "item": {
          "id": "967367fd-59cb-4f27-96dd-f5956e835e64",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "201c4ff0-a268-4bf4-b3c3-8a0acea65413",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47b2138-c8c4-4ebe-991d-a782d758043c",
        "cursor": {
          "ref": "7a48d70c-02fa-4e32-bac0-306e8a71da60",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9ca4db91-d225-4188-997b-afc337912876"
        },
        "item": {
          "id": "d47b2138-c8c4-4ebe-991d-a782d758043c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9b91613f-cbae-420e-88ab-254712ffe1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c847544-6eb2-4c9b-bdf4-b60b150e8beb",
        "cursor": {
          "ref": "6f798d0f-ebc8-4402-becf-2ac5401d7cd3",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cdf1d6e2-31ac-4e8d-a688-bc59d85b0699"
        },
        "item": {
          "id": "9c847544-6eb2-4c9b-bdf4-b60b150e8beb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ef27ca5f-d677-4f68-9356-2f9022365712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbba552-786d-4097-82e2-6c529cef8de2",
        "cursor": {
          "ref": "dee725a8-824e-40c6-bd4c-72abeda87cf2",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "9336da1b-267d-4d76-98da-694d9c2e9ea4"
        },
        "item": {
          "id": "4fbba552-786d-4097-82e2-6c529cef8de2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "9ea6e3a9-914f-41dd-9bd1-8622d422b510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b0742da-3c42-4f68-8e3b-333266080709",
        "cursor": {
          "ref": "3701b687-0172-43ba-9c97-96b1367dfa87",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "122bd63c-4cdd-4971-b22f-86611d450757"
        },
        "item": {
          "id": "7b0742da-3c42-4f68-8e3b-333266080709",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "af76a27f-5403-4f4a-8a4c-d4f4c44c5404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7e4724-5f6c-4f68-9e05-7ef103216289",
        "cursor": {
          "ref": "07e00f7d-d7ca-4186-a5d8-8009865b8457",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "538af41c-a3f1-4a2b-bf50-2cfe49d2a312"
        },
        "item": {
          "id": "2f7e4724-5f6c-4f68-9e05-7ef103216289",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4854250e-8242-4f4a-ac52-dbcc6d0db19c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de04aba-f0b2-4b8a-a570-8aaf41317ba0",
        "cursor": {
          "ref": "68a22151-c42d-4fca-922e-b3893c13d7b7",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b6a05fb1-3d24-412d-a517-7a86e3cf39b4"
        },
        "item": {
          "id": "8de04aba-f0b2-4b8a-a570-8aaf41317ba0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "bcadd3c9-fa80-4569-8e92-2d002d4a27c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a8c70b-6f95-4d3b-8562-3f802f611eee",
        "cursor": {
          "ref": "6a152dca-86d1-4939-8348-22521ecc73f7",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "66dec175-108b-4dcf-ae27-a966a5858a04"
        },
        "item": {
          "id": "65a8c70b-6f95-4d3b-8562-3f802f611eee",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "edbdb364-6f29-44d8-a52e-25e0d67df977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed6310e3-4cbd-4c8f-aefa-bc208a0f32cf",
        "cursor": {
          "ref": "42c52660-f149-4ffe-9e0d-4fe306d1d397",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6b60ee90-feca-4d29-b60a-3f725316168f"
        },
        "item": {
          "id": "ed6310e3-4cbd-4c8f-aefa-bc208a0f32cf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f9cf130d-1926-4f0c-9da3-ba624189ba77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 303,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aae123ee-090c-45d7-b624-be7aa2faa576",
        "cursor": {
          "ref": "6fa3bcec-7ec8-4ce5-b3ef-c51ca0751b99",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "1bd9320d-900d-48a3-83a4-13fb83293503"
        },
        "item": {
          "id": "aae123ee-090c-45d7-b624-be7aa2faa576",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "371957db-97ff-41f3-b8d6-7f40d49a10a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a540f7a-53e6-4afc-acb1-195a6b2f7759",
        "cursor": {
          "ref": "e1354990-3c54-4090-b825-496440206469",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1d4d85e6-394f-4199-a45f-d6c627ad22df"
        },
        "item": {
          "id": "1a540f7a-53e6-4afc-acb1-195a6b2f7759",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "271ce710-c883-424b-bdd4-36b3fb1dc0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 236,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16f8eef-ea81-4053-8d04-df412a020cc3",
        "cursor": {
          "ref": "771e083d-bf17-49e1-abb1-7c33f4917542",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "930fb8c2-1009-4594-96c7-08570aeb3098"
        },
        "item": {
          "id": "a16f8eef-ea81-4053-8d04-df412a020cc3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3f939d47-55c5-426d-8376-5767b25a024b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fb9ccf-59cd-48ce-80fa-7354c486b595",
        "cursor": {
          "ref": "4a9cda79-e4a1-448d-bcc1-77fc7375be19",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cd1778d6-97af-42cb-8977-59fb5b767d8a"
        },
        "item": {
          "id": "c0fb9ccf-59cd-48ce-80fa-7354c486b595",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "54fcd10e-f2fe-461d-a360-0d8e4533135c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2a41d4-6927-4bca-8c3a-71db9b0f7b02",
        "cursor": {
          "ref": "eccb2e9e-08dd-4fe8-a3f0-e2f7bd5a257f",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ba516da3-ff66-4d70-b56a-3db9128cff07"
        },
        "item": {
          "id": "1e2a41d4-6927-4bca-8c3a-71db9b0f7b02",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "40433211-1a3b-48cc-a121-02161ed7faa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b275b722-da85-4263-8a2f-5edcd3079c71",
        "cursor": {
          "ref": "6315c191-d32d-4c74-b924-bdca0eaf05ca",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2ca53c4f-ffff-4223-a005-57361f7927dd"
        },
        "item": {
          "id": "b275b722-da85-4263-8a2f-5edcd3079c71",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7410ae74-9ee0-4754-94cb-b48c4f91d282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8008288b-7d1b-4ecf-9e95-34e24b0d6cfe",
        "cursor": {
          "ref": "a43e5b21-171e-461e-95b3-3fd0b9666107",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "02453dfd-1640-4593-a665-4bea928abe8e"
        },
        "item": {
          "id": "8008288b-7d1b-4ecf-9e95-34e24b0d6cfe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5f8b751b-55cf-4bdd-880b-8a11ebaeecb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb30f4a-d75d-4528-8575-72f0ea2860ab",
        "cursor": {
          "ref": "f168734d-156a-4c49-ad18-ed6469134763",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ecdd1529-ceb3-4f05-b668-fd0d4318928c"
        },
        "item": {
          "id": "5cb30f4a-d75d-4528-8575-72f0ea2860ab",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "67aef6c0-cd5c-48a1-8be4-55ffe74f47d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d947ec1d-0888-47e0-9470-8885c430c965",
        "cursor": {
          "ref": "8c10295e-f9b1-4ffc-9019-126014016ad7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ea92747d-1615-4f8a-af0a-ddad2e93e384"
        },
        "item": {
          "id": "d947ec1d-0888-47e0-9470-8885c430c965",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1004122f-3816-4fa8-ac4f-aee415546bbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ffe643-c5c4-4ddb-8cf5-dc5ef81e4c7a",
        "cursor": {
          "ref": "945c7dac-53f9-48d4-8570-df9086f074ad",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9c4343d7-e6d6-46de-af33-f129138e0879"
        },
        "item": {
          "id": "b8ffe643-c5c4-4ddb-8cf5-dc5ef81e4c7a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fc9826f0-478b-45e7-8333-5eb4e83f1fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7a7643-cad7-41c6-927a-3c054b9e1b8a",
        "cursor": {
          "ref": "48abf31b-be71-423e-af11-12d57d1d27bd",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ba937923-72b1-4114-84f4-46cc8d72726a"
        },
        "item": {
          "id": "8e7a7643-cad7-41c6-927a-3c054b9e1b8a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f2ba8ab2-2e63-4ca1-86c1-1a0c88bb9970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c1be07-1768-43a9-a73e-a0f19483177e",
        "cursor": {
          "ref": "afcb832a-f230-4c3d-8a70-776b8f9b097d",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c31ccbec-7ea3-4689-a75b-4a5392fbde02"
        },
        "item": {
          "id": "12c1be07-1768-43a9-a73e-a0f19483177e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c94a3481-32bc-4d76-8746-4a3b5ba12281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b128780e-1b49-4206-a879-a627b8b7a34a",
        "cursor": {
          "ref": "be582943-8734-4486-ade3-1cb3bd6e43a5",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "08673b81-de96-4ade-8ca8-42675359608b"
        },
        "item": {
          "id": "b128780e-1b49-4206-a879-a627b8b7a34a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1351c4db-dff4-4335-b020-880959397d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71748a5f-4b2e-41a8-b5bc-abce0a3467e1",
        "cursor": {
          "ref": "57433a9b-f194-4456-a7bf-acd3e9e193c1",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "73feb0f8-82bf-4c7f-a5c1-7c09bcd6e246"
        },
        "item": {
          "id": "71748a5f-4b2e-41a8-b5bc-abce0a3467e1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "62d8a99d-4847-401e-9f25-04a3953e8d87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785775dd-c015-460d-be80-47aabcf94374",
        "cursor": {
          "ref": "a178b0f6-79dc-49b6-9466-0559924aaa6b",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "22c9a60f-ae91-4141-8cc3-a8f2c9159f4f"
        },
        "item": {
          "id": "785775dd-c015-460d-be80-47aabcf94374",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f3bc503b-01c5-43ec-90a1-1bd331a4ae31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef39660d-11b7-4725-ae00-b4ce193d27e4",
        "cursor": {
          "ref": "4de919a5-613d-4e23-bf51-230ab7c83a78",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "34be499f-5eb2-49e6-b744-65667f8bdf3d"
        },
        "item": {
          "id": "ef39660d-11b7-4725-ae00-b4ce193d27e4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "00f6ca73-ccdb-472c-84da-240977b64520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 238,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250142b7-9b8d-4f5d-a82f-1773a435d091",
        "cursor": {
          "ref": "ba724407-49c8-45fc-b830-54e6fb361bc8",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "56938365-733c-4031-aa18-68dbbed91390"
        },
        "item": {
          "id": "250142b7-9b8d-4f5d-a82f-1773a435d091",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f6b0e45a-45dc-407e-8aca-ff1a3ffecf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70525780-3c04-401a-8324-d58f061d3647",
        "cursor": {
          "ref": "7cf62dde-d204-4944-b078-d5a71933baea",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ba0da747-567b-48a3-ace6-956605942f38"
        },
        "item": {
          "id": "70525780-3c04-401a-8324-d58f061d3647",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6d7e326b-7efb-4a62-bb4b-b9152250a23a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f98a5fd-ad16-412f-a7db-dd5f8997f4eb",
        "cursor": {
          "ref": "3968e69a-8ff4-4889-a9a9-6efd99851955",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5b26bff9-0aa1-4bd0-8e7b-22d6ce53f534"
        },
        "item": {
          "id": "0f98a5fd-ad16-412f-a7db-dd5f8997f4eb",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "afa68d59-51d2-4bcc-9736-5dda01cb2a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a354cf87-e92f-4dc8-a336-c6b682b07bc2",
        "cursor": {
          "ref": "adeb1145-3155-4bad-84ac-c177c2e8d0ac",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5389d764-1899-457a-8510-03c1348b346b"
        },
        "item": {
          "id": "a354cf87-e92f-4dc8-a336-c6b682b07bc2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "a196ede8-9e44-4582-93e1-a8d6a5412aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798b643c-90b8-47dc-a6a7-01e1e64539d3",
        "cursor": {
          "ref": "3e032f9c-5283-4695-afdf-8e332b9e8f50",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "96365f39-5c52-488d-b8d7-671dea941146"
        },
        "item": {
          "id": "798b643c-90b8-47dc-a6a7-01e1e64539d3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "03e3c408-93c1-4011-a658-e3fe54636472",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1183b704-2be8-4370-9bb6-fdf297e1007e",
        "cursor": {
          "ref": "afad7496-8233-4034-888f-4fb94f5771b0",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "593c1389-d48a-4924-9382-d4941baa3d33"
        },
        "item": {
          "id": "1183b704-2be8-4370-9bb6-fdf297e1007e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b195c4a2-fdb8-4745-abc0-8d44e127066d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 230,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8a202b8-0551-4b79-ab64-5bc76a17e8b9",
        "cursor": {
          "ref": "73475050-3838-4849-999d-6607d3821488",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "124dc1b5-1048-4765-a7a1-87b435cc14e6"
        },
        "item": {
          "id": "b8a202b8-0551-4b79-ab64-5bc76a17e8b9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "603aadb3-7177-4784-9a82-5f1889f69436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3098c945-65d7-45bc-befb-08d9db440d4c",
        "cursor": {
          "ref": "c6ea5d3a-89d6-40e7-8d73-52e161749208",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ecbc2cce-728b-43a5-b4d3-2ef44a60b114"
        },
        "item": {
          "id": "3098c945-65d7-45bc-befb-08d9db440d4c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "913518d5-97fa-4c8c-aba8-0dd066074aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b297e4-9055-47d8-9826-98785fa523b3",
        "cursor": {
          "ref": "7da747fd-910b-4540-a227-54ddb3c00f8a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "137a6dfe-193b-4dd8-b375-f9c6dd485068"
        },
        "item": {
          "id": "48b297e4-9055-47d8-9826-98785fa523b3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "91964f91-3383-42c8-afb6-ee1ebf02977b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcba03f7-66fc-4910-8b61-4f271c3dea99",
        "cursor": {
          "ref": "5bcafb40-8c42-4423-9602-6aaa6a980906",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "42420c56-e60b-4f4a-934e-03ce73c39f90"
        },
        "item": {
          "id": "fcba03f7-66fc-4910-8b61-4f271c3dea99",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4414cdec-d00e-4a57-ace9-de6c73424368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c006a727-ce79-4f2c-aeb7-22ee0638d7c6",
        "cursor": {
          "ref": "dd150e13-19f2-42de-a87a-f737b505d5bf",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a8524bf3-374d-4fa4-b9a3-ece887433f4c"
        },
        "item": {
          "id": "c006a727-ce79-4f2c-aeb7-22ee0638d7c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e014bf2e-36f5-49e9-a2ca-6d0be3904709",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26033ed2-4668-4b22-bdc5-2bf97da9c057",
        "cursor": {
          "ref": "5462a8d0-70ba-4747-ac48-a8e998181b18",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b4f54163-6ab1-49e1-9ab3-ed0f0bc15eea"
        },
        "item": {
          "id": "26033ed2-4668-4b22-bdc5-2bf97da9c057",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0a710349-7cde-43ea-9f3d-661f30580c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5331606f-dcfe-45f8-8b79-b7467a0d3db9",
        "cursor": {
          "ref": "55e8e888-be6d-4414-9cf3-d0738c018492",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "15cfcc93-8286-44b1-8887-4f276b317fcb"
        },
        "item": {
          "id": "5331606f-dcfe-45f8-8b79-b7467a0d3db9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f8c6610c-e29f-44e0-9eee-89a7abfb89e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1451f7bd-9a08-40d7-bfad-d39c41f08dd8",
        "cursor": {
          "ref": "b637c469-29c6-42db-98fa-4401da4b582d",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8795fd01-a3a4-4f57-a6f7-655f8bbf114b"
        },
        "item": {
          "id": "1451f7bd-9a08-40d7-bfad-d39c41f08dd8",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e6fd2ea2-8fdd-415a-8002-f65e5dbe4f0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02733329-8d54-46f3-84cb-0be8bb319d34",
        "cursor": {
          "ref": "cba4642b-0791-4dbf-a9f4-f8b330d9b299",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9c6e40e4-1014-45f1-8a7d-d13f6f5d6887"
        },
        "item": {
          "id": "02733329-8d54-46f3-84cb-0be8bb319d34",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9ccddc6a-225e-40ce-ab5f-42dda5d7f893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a8c3f1-d405-46cd-919b-12d1fac860d8",
        "cursor": {
          "ref": "9e718201-b1fd-4639-902e-af8927d620b0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b489424e-da8f-4de4-a420-d1b7b14b0b5a"
        },
        "item": {
          "id": "d1a8c3f1-d405-46cd-919b-12d1fac860d8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "04959fed-02c8-47cf-aa1b-cc125776d486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2e72a8-128d-4258-8f61-fd2c25fd3585",
        "cursor": {
          "ref": "706b7a4a-7f35-414f-a3be-4540c08a9c67",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f432d7c5-dc7e-4025-a4a3-80f1b466d949"
        },
        "item": {
          "id": "bd2e72a8-128d-4258-8f61-fd2c25fd3585",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3a20d491-d35b-4988-968c-feec7726f455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55ed22b-059a-4ae0-b59e-73761f62641a",
        "cursor": {
          "ref": "acc11efa-69c2-4965-90d9-9d0f0e55f5f2",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "da0922dd-1708-44c6-a4a4-fb94cc129673"
        },
        "item": {
          "id": "b55ed22b-059a-4ae0-b59e-73761f62641a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ccfc6f9c-fcc9-46ba-af3d-a4db77396a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0808520-8222-4c93-8b9d-0242f66cbc7d",
        "cursor": {
          "ref": "1b17b05d-e090-4b2b-9df4-4be39b04dfdf",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a3162b71-b255-472a-b20b-2f75887b3525"
        },
        "item": {
          "id": "a0808520-8222-4c93-8b9d-0242f66cbc7d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "58fb927a-9cbf-4e7a-ae89-ec1b4912e58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13562129-7f1a-4133-a04c-f113dbaf7072",
        "cursor": {
          "ref": "6dba1ca0-76ec-48a4-a987-4ecdb16db784",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7d67a6a3-4574-46b5-b18e-cc6a8578e4b6"
        },
        "item": {
          "id": "13562129-7f1a-4133-a04c-f113dbaf7072",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0910e574-1078-4f14-b162-d72f8cce4b2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7741d0b-4e76-479b-8bd9-a5d8be0b72ff",
        "cursor": {
          "ref": "3b69b5fe-dd47-46b4-906f-db180fc88eb7",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "11e190a5-cd45-4938-b89b-7d777700d932"
        },
        "item": {
          "id": "b7741d0b-4e76-479b-8bd9-a5d8be0b72ff",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "99fffe92-0ab3-4dcf-9bc1-f2c9b5811e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443cbc7a-faef-4283-98d2-f15c5cada845",
        "cursor": {
          "ref": "1f4e9e44-0ed8-41b3-85fc-8804d6038196",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e8032af7-df22-4bcc-b056-16359d381dbb"
        },
        "item": {
          "id": "443cbc7a-faef-4283-98d2-f15c5cada845",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c38331c0-e0b6-4c60-a6ef-081b3793155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8337b8-805d-43e6-b0ec-7edfaeec6034",
        "cursor": {
          "ref": "d18082d7-2367-4919-816e-f986151ae96b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9c3097e6-4a6d-48cd-9d70-97e6ef9df142"
        },
        "item": {
          "id": "ba8337b8-805d-43e6-b0ec-7edfaeec6034",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b134ad65-7c75-4cae-ac51-f824497111b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f33e44-4343-4209-bc8e-e9d9a4ee03fd",
        "cursor": {
          "ref": "a215aff2-0d5c-4a46-a82f-91a4bfb8cd82",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c9828a14-546c-40c9-9b0e-b9333d98e04a"
        },
        "item": {
          "id": "97f33e44-4343-4209-bc8e-e9d9a4ee03fd",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "29cc525e-801c-48ed-8837-2dbfba58adf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8682918e-cef9-46cb-936e-ea6de7c8c481",
        "cursor": {
          "ref": "26e2ab71-bad2-44b8-99c0-cc829cfd1a2e",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "95701b3f-df31-4145-991c-5a804b91e08e"
        },
        "item": {
          "id": "8682918e-cef9-46cb-936e-ea6de7c8c481",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a57bd6ca-dfbb-44c8-996f-8588d5cb5845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d39c795-2f23-4e5b-bb4e-c01d18706b93",
        "cursor": {
          "ref": "79f50ed2-d429-4343-840c-896aa8cbc223",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c8d2b4f7-9d94-42b2-a0db-6a4e7442f7d3"
        },
        "item": {
          "id": "7d39c795-2f23-4e5b-bb4e-c01d18706b93",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f2ba9dde-a506-429a-9820-b1b0f83dd5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d596024e-f813-4fcd-8dd9-e98b5e83bbc2",
        "cursor": {
          "ref": "13a26431-a30d-4814-8890-bc48db8e5b89",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4cd74fd5-a125-4725-bda1-12b52976732d"
        },
        "item": {
          "id": "d596024e-f813-4fcd-8dd9-e98b5e83bbc2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "169e65fe-ddb9-4b1d-b153-d39d4f8e063c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11a056e-48d9-4276-ab93-6caa822691e9",
        "cursor": {
          "ref": "a7006c3b-d4ff-42e7-aed7-7b76c7eb3914",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b4418ee6-65fe-4b5d-9eb1-570a89fb4ebc"
        },
        "item": {
          "id": "e11a056e-48d9-4276-ab93-6caa822691e9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5f5ea8fa-a14b-4520-8713-2897844090f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 237,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9d7349-a692-4fd0-8f9d-27d2ec276ed1",
        "cursor": {
          "ref": "b1204d83-8183-44cf-ade7-b4948411a386",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8aa61616-13c4-4aaf-9dd6-a4050889f751"
        },
        "item": {
          "id": "df9d7349-a692-4fd0-8f9d-27d2ec276ed1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "05fc9dd3-2ad9-49a5-ab02-d29e8a8805f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc4928e-57ba-4463-955b-479df51414ed",
        "cursor": {
          "ref": "a05f4979-7dc4-48ee-b6fd-9d4cf0b78c7d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d49e1125-fa28-45e6-b2cb-2fa81ccc3ed8"
        },
        "item": {
          "id": "0bc4928e-57ba-4463-955b-479df51414ed",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0ba67319-bcc3-4c99-b61d-c94636565d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf839d5-f729-4929-86b1-cc7bce0a03c9",
        "cursor": {
          "ref": "742df8b3-d9f0-4c00-bad6-c4f5e3030b24",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bb686eea-44ac-492a-b6c7-f473e5ecff13"
        },
        "item": {
          "id": "4cf839d5-f729-4929-86b1-cc7bce0a03c9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "23a84a8f-b060-451f-9a7b-a97ec18309c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 233,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd6fd85-18f0-4f3b-8cac-c76c7e446f97",
        "cursor": {
          "ref": "a709cd07-2bc4-4a9b-b17a-b2fc3e3f588e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "bf297ea6-00ac-4e1e-8268-4cd5e5c455a6"
        },
        "item": {
          "id": "abd6fd85-18f0-4f3b-8cac-c76c7e446f97",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d878503a-6245-4396-a62e-3fee5c72f8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5f52a01-c288-47ae-ab03-928f13cf36d6",
        "cursor": {
          "ref": "9c82a3fa-35e5-4be6-80e6-3c9d218b6153",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dd2b3807-3fd7-4146-86ec-174f86c578fc"
        },
        "item": {
          "id": "f5f52a01-c288-47ae-ab03-928f13cf36d6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "84ddfdc7-ecdd-4f7f-90ce-238cf47ef31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44104df6-b1f1-4a0b-b923-88534d21b968",
        "cursor": {
          "ref": "7614b025-8a57-4d3a-8faa-4e1685dc18ff",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d160b3e0-52f7-4e75-9cce-fe3a4cd724c3"
        },
        "item": {
          "id": "44104df6-b1f1-4a0b-b923-88534d21b968",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2087ed99-9eac-4b6e-91fa-6187b449d1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20730e01-7c65-4f22-ab7a-c2916180b6ec",
        "cursor": {
          "ref": "7c037982-f9da-42f3-9258-0a4aba1c4786",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "db3dc3e7-2137-46cb-a7d1-208405e3fd3c"
        },
        "item": {
          "id": "20730e01-7c65-4f22-ab7a-c2916180b6ec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e0acab02-4548-40a9-90a1-39b38063d8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70706ad-2248-4762-b52f-82b1fb8f1c39",
        "cursor": {
          "ref": "4d96c363-4e05-4443-81e9-988245bf00a7",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e21abb12-9524-4edb-b52c-814b4edc02c3"
        },
        "item": {
          "id": "f70706ad-2248-4762-b52f-82b1fb8f1c39",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0889d04e-cc0d-41d9-bc95-f7330f2f2839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3f2d49-ff47-4cb0-a803-785e0a752547",
        "cursor": {
          "ref": "bba1dc9a-49b6-4aae-9927-b51e50e54632",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "162074db-5078-4c90-90b5-06ad0d33d1e5"
        },
        "item": {
          "id": "ce3f2d49-ff47-4cb0-a803-785e0a752547",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "5f229311-df0a-4e44-a8b1-c798c650dfdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500448e3-a011-4170-bb60-7f0c453f8aa4",
        "cursor": {
          "ref": "b549d330-33f9-4680-9fc4-4fd7aff10461",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "567785be-b97e-43a4-821f-96bca31ef468"
        },
        "item": {
          "id": "500448e3-a011-4170-bb60-7f0c453f8aa4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "66578133-35fb-42cd-9514-f1d7bdd0eb21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894d9341-0df5-4fae-9178-5b11dc8968dc",
        "cursor": {
          "ref": "45684fa5-d476-4e7a-8422-b0ab1a3c6645",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "349b092a-9b8a-4bcb-a5aa-951c2169482e"
        },
        "item": {
          "id": "894d9341-0df5-4fae-9178-5b11dc8968dc",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "61fe25e6-be29-4688-8575-18a7f23ba907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fbac7a0-ba66-461f-af34-1039eaea2a7b",
        "cursor": {
          "ref": "911d1124-68c8-4a44-bacd-7acd6d0a1969",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "05089295-3661-4882-bb7f-c92d2c70bd5d"
        },
        "item": {
          "id": "7fbac7a0-ba66-461f-af34-1039eaea2a7b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "8d3cc93b-331a-4a58-a7b0-783a89ab4ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c67d88-824a-4b6d-82d2-6354246c2ad1",
        "cursor": {
          "ref": "2d6ea190-8b82-4f21-9dc6-2b437209f596",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7e6500c4-eff2-4162-8a3f-b98246bda220"
        },
        "item": {
          "id": "e2c67d88-824a-4b6d-82d2-6354246c2ad1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "030eb717-dd98-4ef8-b98a-85c468e0fcda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9c6461-c890-4974-a305-d892f6031fcf",
        "cursor": {
          "ref": "7542d9a8-2a86-4de7-856f-5cc85017c38e",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b072cfbf-1ff5-47f3-95aa-ad2077e89353"
        },
        "item": {
          "id": "4e9c6461-c890-4974-a305-d892f6031fcf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "66f7e3fe-e464-4b16-a3f9-882d29a0d8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be820236-c47d-4eea-974f-cdb4292b3dc6",
        "cursor": {
          "ref": "60c078a9-a79c-4bfb-beb8-cd986b14b43f",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2771dea9-f33e-4728-8f1d-fe87e50f9c4f"
        },
        "item": {
          "id": "be820236-c47d-4eea-974f-cdb4292b3dc6",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e4ea0ece-ac6c-4056-a62c-73339f3fa406",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bd485d-fe21-4ad2-844e-d37634ee9d0b",
        "cursor": {
          "ref": "a8cac0f6-d87d-4e7f-b27f-6475bfcb6a0f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "68b87706-809a-4d95-8f20-33524cff5415"
        },
        "item": {
          "id": "63bd485d-fe21-4ad2-844e-d37634ee9d0b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "47edd5c7-17a9-4d75-8d36-4491ea20e677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326a111d-a28e-4b28-8f54-d08f7c9d7109",
        "cursor": {
          "ref": "c7cc411b-9c25-460a-b8b7-efc4d0636fbf",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c28c6cae-0c80-49fb-a781-96584a72adb0"
        },
        "item": {
          "id": "326a111d-a28e-4b28-8f54-d08f7c9d7109",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ad3df449-4a96-486e-85cb-8c3fba652958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d0aae6-3933-4b91-b259-3ecdc899d292",
        "cursor": {
          "ref": "10203516-c637-4928-9e7b-a05457161791",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f9f2f9dc-f1de-4a7d-9dcc-e01ff46fc9ef"
        },
        "item": {
          "id": "42d0aae6-3933-4b91-b259-3ecdc899d292",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "866594b8-f398-4152-9ab9-d63b182472f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4433c4c2-913c-42a1-8c01-3fc436c1ff11",
        "cursor": {
          "ref": "dd6df85e-2d72-49c6-9b02-6f849451ac31",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "06b4d435-e360-4f38-bc40-1c28d72173a2"
        },
        "item": {
          "id": "4433c4c2-913c-42a1-8c01-3fc436c1ff11",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7a63c175-d717-40d5-9712-ee53e07793a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5986427e-3880-4012-a7e2-bef3e122cce1",
        "cursor": {
          "ref": "8cfaeec5-e2ce-4994-832b-2968691b5eac",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "271f6885-8e00-4f9f-b288-3278780a7561"
        },
        "item": {
          "id": "5986427e-3880-4012-a7e2-bef3e122cce1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1b08d696-8053-4e66-8dcd-e2fbdad6943e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ddd3d3-02b7-4f43-8aaf-107f28fb1a6a",
        "cursor": {
          "ref": "ac0f3318-ed12-496f-89ed-b0c4a29584fb",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "53ff8a80-2db2-45b0-aa93-4f54402c0b05"
        },
        "item": {
          "id": "f0ddd3d3-02b7-4f43-8aaf-107f28fb1a6a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "93f1d373-ecd7-416b-af3d-500f042478b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d52707-9cf4-428b-8b7a-650982ac2c5b",
        "cursor": {
          "ref": "6512ef5d-674b-449b-8742-24d528c418c6",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2634cd06-4589-46cf-9001-1464ac27ce3b"
        },
        "item": {
          "id": "26d52707-9cf4-428b-8b7a-650982ac2c5b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b3e5b57e-d50c-476c-9b50-7c415b5c2d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86144cac-81d7-4a42-b007-75ca83b40c35",
        "cursor": {
          "ref": "6e25500a-07f1-4ff9-8362-84a63822b019",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3776a0d1-90ed-4f89-9ba3-ca5cacbf7912"
        },
        "item": {
          "id": "86144cac-81d7-4a42-b007-75ca83b40c35",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b06dee8b-123d-4781-ab58-0a58ae387812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30be02bc-7f53-400f-853d-94be1e01536b",
        "cursor": {
          "ref": "e4694c94-b89f-482e-84fa-18a1cdd7b3b8",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1fbc965f-3540-42be-a060-1829aa3cf1fe"
        },
        "item": {
          "id": "30be02bc-7f53-400f-853d-94be1e01536b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "3390bf8e-7e95-4c0d-b85b-93209c112d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4387bc58-83d4-444f-9f9d-35de20509f27",
        "cursor": {
          "ref": "857cb81a-c961-4031-b1d1-7fb6e4587719",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c639e201-e8c4-4351-8992-447697361536"
        },
        "item": {
          "id": "4387bc58-83d4-444f-9f9d-35de20509f27",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "30e83668-da41-492e-82bb-feac6b62b05a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bb5017-0075-4875-a8e3-7690641505e3",
        "cursor": {
          "ref": "0fa8bfa8-06d6-4a37-9f54-40bd0e23de50",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "28066c87-bd40-4698-a981-6a04bb3d397a"
        },
        "item": {
          "id": "77bb5017-0075-4875-a8e3-7690641505e3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "960b63eb-c364-4fbe-834b-78e9a4928c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8226171d-1859-473b-b6d9-196df725232f",
        "cursor": {
          "ref": "08eb0d7b-77b0-4205-bfd2-d649434fff62",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4f99fff4-ed49-4b62-a9dc-d77344154c2f"
        },
        "item": {
          "id": "8226171d-1859-473b-b6d9-196df725232f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "24274b9b-d4bd-4f60-834b-352a41f7233c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf8254fa-359a-4222-9962-767a486bf748",
        "cursor": {
          "ref": "6b42882a-3ac6-44cd-9657-f9f1d28d6bc0",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "68ed3648-b122-4819-9061-7b01130978f9"
        },
        "item": {
          "id": "bf8254fa-359a-4222-9962-767a486bf748",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "20c213b1-4bdc-4544-9d98-de1f5908c89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e2bc83-8fb6-4c24-bdc3-df6ec79a3899",
        "cursor": {
          "ref": "22cf14a2-21a0-4b70-85e7-70e47cd4f279",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cf8ea495-9853-4f3f-9b60-d11be22ceb37"
        },
        "item": {
          "id": "b4e2bc83-8fb6-4c24-bdc3-df6ec79a3899",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5a227cde-2efa-4b23-b92d-fc8ad35047de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1cc345-0658-4d70-977f-fe6ca3fbce8e",
        "cursor": {
          "ref": "edd686ce-5e0e-4d2a-87e3-f267853d9e99",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b51ab3c0-a290-43ca-a7f8-f40ea6a0ca06"
        },
        "item": {
          "id": "0c1cc345-0658-4d70-977f-fe6ca3fbce8e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "69b005cf-0ce7-4bec-913f-20699f781839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca095cb-426b-4f30-aa69-08bb89ad4493",
        "cursor": {
          "ref": "4a0c1799-6a28-4a9f-a609-71d473bee6bd",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b3b1185a-b021-4f54-a802-a84306ef504e"
        },
        "item": {
          "id": "8ca095cb-426b-4f30-aa69-08bb89ad4493",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4ead9213-ffb7-4c9a-b871-49172588253f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f14708e-d6b0-4c56-8e96-ba874539e6ad",
        "cursor": {
          "ref": "9582b480-4065-4d94-9f06-bc594d365381",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a8486685-4e43-473a-9ce7-93527568a373"
        },
        "item": {
          "id": "9f14708e-d6b0-4c56-8e96-ba874539e6ad",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3fac5e4c-6eeb-40c0-9ff9-5f30e620d7bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da92b94f-f0d9-4c61-b4cc-d5abab85ffd7",
        "cursor": {
          "ref": "a9158f49-395a-4341-839a-1378854e13b9",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "38881fec-a2bf-40a2-9965-29ff5f895f50"
        },
        "item": {
          "id": "da92b94f-f0d9-4c61-b4cc-d5abab85ffd7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "21cd2532-275c-461f-927f-df66c6ed69b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd10a912-ee29-44be-b9a1-a4031b1b8cba",
        "cursor": {
          "ref": "846724db-a2c0-44e3-8f65-adc73661fc2e",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "bac3bbf6-c49f-420a-8e0e-f37d4e75e5fd"
        },
        "item": {
          "id": "cd10a912-ee29-44be-b9a1-a4031b1b8cba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "04fa97ce-4cbf-4300-bcf2-7e4e4463ac13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f236197e-b311-4336-9c5b-6ac8e72f37fb",
        "cursor": {
          "ref": "4e73d836-8f7e-4c35-8b70-f3ef08384c5a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f3c25861-a26d-49f9-8412-5ae8b16c2972"
        },
        "item": {
          "id": "f236197e-b311-4336-9c5b-6ac8e72f37fb",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f398dd08-b55b-42db-b1e1-4bde68cdafc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8847e3ed-0d4b-49e1-ac5a-d06d901bf8c1",
        "cursor": {
          "ref": "1091c17f-36fc-4581-8e21-9e765be87908",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "83335c0e-6390-4da7-aad7-6531b7710bee"
        },
        "item": {
          "id": "8847e3ed-0d4b-49e1-ac5a-d06d901bf8c1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "70ae0fde-a117-4b59-9ade-9dcac7e6a641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4770f93-ea19-4afe-a49b-aa4747765e00",
        "cursor": {
          "ref": "b7c1e749-410d-4cda-8c13-18ec7a3b2bdb",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5d3acdbf-5eb2-4483-baa8-8a14e2476843"
        },
        "item": {
          "id": "e4770f93-ea19-4afe-a49b-aa4747765e00",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4ebc096f-d48c-453a-b7fe-ed39c0f1e1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11658333-0c6e-40b8-8b17-53b3db18de00",
        "cursor": {
          "ref": "754c4e7c-5240-4f05-be5d-b7b32af1f420",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b4844c82-412e-4e7e-87d9-d658c266f6d0"
        },
        "item": {
          "id": "11658333-0c6e-40b8-8b17-53b3db18de00",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6e4b7494-0be5-4e72-b127-bf094ca82251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f5d898-b91f-467f-9c8a-d4c6c98b440c",
        "cursor": {
          "ref": "0eadabd1-58a1-48bf-8e88-1962cd21b2d6",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "33ded327-8763-421e-871c-f61d3c3cc283"
        },
        "item": {
          "id": "f2f5d898-b91f-467f-9c8a-d4c6c98b440c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1d54c840-27d6-4a36-98e8-20aa68a4f76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f82b97-eae8-4e09-9660-badcb7d1dd44",
        "cursor": {
          "ref": "9fb4c13c-9ccb-40c1-a0ac-b1493072d181",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "67c92584-0c0e-4cb1-b998-a5ef66dd766f"
        },
        "item": {
          "id": "86f82b97-eae8-4e09-9660-badcb7d1dd44",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "615d7794-b89f-479f-a815-3e263837a2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dc065c-0f89-4cb8-9ac1-62917d0f50f3",
        "cursor": {
          "ref": "5450a1d1-0f72-42b5-93e1-60e210040064",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e7cd9b2e-7284-43fe-8e2f-59e1f9e3d585"
        },
        "item": {
          "id": "24dc065c-0f89-4cb8-9ac1-62917d0f50f3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ffdb71cb-86f5-4f3e-9279-e7de6ea0e39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ac9b3d-f555-48c4-b24e-1b5d02fcbc44",
        "cursor": {
          "ref": "66653030-553e-471c-a22e-b0115d6a0374",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a3193bf5-28d1-4589-a116-a0dd96eb7b25"
        },
        "item": {
          "id": "a1ac9b3d-f555-48c4-b24e-1b5d02fcbc44",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "577ec281-b77d-4434-9a7c-35dab4f9ca48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d366dba-9061-4f4d-880d-6ce3dbbd5448",
        "cursor": {
          "ref": "aea4967a-9ac8-4ac9-988c-a0af589ecf8e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "439b8b45-491e-4d07-9754-219d4feeb9b1"
        },
        "item": {
          "id": "2d366dba-9061-4f4d-880d-6ce3dbbd5448",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9ba3a00b-3f42-4152-8e9a-6317d88b1788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba44c691-699c-4ab1-821d-6cb84f7e2c25",
        "cursor": {
          "ref": "44f4217f-d607-4072-abe5-93b984a62b65",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "68ba08d1-7cdb-4d8d-8464-e0c28632d0e5"
        },
        "item": {
          "id": "ba44c691-699c-4ab1-821d-6cb84f7e2c25",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0fa4f4f5-2f9a-4e75-830d-b545aae0c324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925baf49-706d-4808-be41-06087995ae5f",
        "cursor": {
          "ref": "9fe4717b-54ce-4089-8107-41548d2bf4ca",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "69a6d0cf-a915-4eaf-af1d-a3b324ec4c79"
        },
        "item": {
          "id": "925baf49-706d-4808-be41-06087995ae5f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6ef7049a-89fa-4acc-b345-568b4fa2606a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6007fe5-c1da-499c-868a-f81634559a53",
        "cursor": {
          "ref": "6f90c8b2-2f83-421e-982e-b1d364294863",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2a502eeb-c685-4fd8-bada-e86700700e05"
        },
        "item": {
          "id": "c6007fe5-c1da-499c-868a-f81634559a53",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "894a709a-5c09-454a-9a67-80cbdfe734a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11649584-a189-4366-bd38-e4d0601fb69b",
        "cursor": {
          "ref": "30f9d78c-b920-4409-8d6b-b851a8d366b4",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a45f2421-b281-4448-be98-100f56953a79"
        },
        "item": {
          "id": "11649584-a189-4366-bd38-e4d0601fb69b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7671e47b-c381-4b53-9d02-75255beec1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab690834-672a-4531-a0ec-aae83c19edf5",
        "cursor": {
          "ref": "44f8f13e-589c-409b-8ba3-b2c79d9d9c92",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7ecf920f-7568-4b73-9ef8-ad9c0522de6a"
        },
        "item": {
          "id": "ab690834-672a-4531-a0ec-aae83c19edf5",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "8d4c7b17-19fa-41ee-af15-e8a92ea0a179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b69e0971-70cd-4462-8349-4aa3809c18a0",
        "cursor": {
          "ref": "ac3927ce-50a7-4640-ac82-bcde149bc72d",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "021186f8-4f10-4459-bc0c-9db40b92214d"
        },
        "item": {
          "id": "b69e0971-70cd-4462-8349-4aa3809c18a0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e2a11aeb-62b6-4ea3-8ff3-5236ff86f2b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e0b6b5-6d80-4802-8851-d3e1162958b4",
        "cursor": {
          "ref": "92dc4b7d-3814-4c86-93ab-f0242a713556",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d500d885-0b11-45df-ad57-1e51f83064ba"
        },
        "item": {
          "id": "48e0b6b5-6d80-4802-8851-d3e1162958b4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6407b9d8-27e0-4b8f-9910-c448e44747f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e7ff14-b204-4e10-8bd2-89ab08752d7b",
        "cursor": {
          "ref": "ca502f28-a694-400c-8d9a-3df59840a57d",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "68d07fa6-714e-443d-a930-b15572e30a32"
        },
        "item": {
          "id": "73e7ff14-b204-4e10-8bd2-89ab08752d7b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "138cc94a-b085-4e17-b4ac-a83e2aa38216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29533df5-ead0-4475-9083-b8af351662fd",
        "cursor": {
          "ref": "c599a7be-12a3-48fb-bdaf-c05b0fae0bc8",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1c21172c-18a8-4b2d-8962-5a96f5b0f717"
        },
        "item": {
          "id": "29533df5-ead0-4475-9083-b8af351662fd",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7f199c52-b4f5-4390-91c6-174ecf8d6a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddaab2b1-776c-42b6-95f7-74ffd4136fa7",
        "cursor": {
          "ref": "7cadcace-c068-4d69-aa8c-847888920cfd",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "71b0e0a6-ca1f-443f-82af-c27f0e4bd82f"
        },
        "item": {
          "id": "ddaab2b1-776c-42b6-95f7-74ffd4136fa7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1f6d132e-1f74-4667-8ea4-1d4778dc16e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92687510-e3b3-4dbc-90a2-33e5fa0ecf13",
        "cursor": {
          "ref": "11026b2b-e3f0-4334-bc0c-c01dec7ee544",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "eba75ccb-6bde-40a7-a33c-1a1a98a4df87"
        },
        "item": {
          "id": "92687510-e3b3-4dbc-90a2-33e5fa0ecf13",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ddd798b6-5b32-4191-9fd4-7f7407476ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3b3533-71bc-4dd0-9cc0-384a866b8108",
        "cursor": {
          "ref": "2122c532-e9ea-4966-9ede-025feee615fd",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1d8f9960-a842-409e-9e2a-ac9da9a9dbab"
        },
        "item": {
          "id": "dd3b3533-71bc-4dd0-9cc0-384a866b8108",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "883482c3-837b-4e2a-8478-0bc45910c704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03c8c8d-b31f-4e34-9838-9c627ebdb463",
        "cursor": {
          "ref": "b974d8e3-3505-46a6-8c64-c3098b0349ad",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2d2135e3-af74-4bd1-8961-05c86398f0a8"
        },
        "item": {
          "id": "c03c8c8d-b31f-4e34-9838-9c627ebdb463",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "79d8e51a-dfec-4b1d-b783-beeebcee47ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba1911a-9cfa-47e0-ab19-fba882cd6b6a",
        "cursor": {
          "ref": "238e573b-5592-4189-aff3-0eb6fcf6bfe8",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1470e80e-8833-4bf7-a821-584cf10f47f4"
        },
        "item": {
          "id": "3ba1911a-9cfa-47e0-ab19-fba882cd6b6a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d8944bb2-088f-4248-ace0-a2846682c306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e091f88-5ce5-463b-9e3e-0a4eddea9b15",
        "cursor": {
          "ref": "fde30827-d250-42e7-80fa-be6990cced6a",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4abcd7de-27e9-4f65-ad03-73ce1ffa5683"
        },
        "item": {
          "id": "0e091f88-5ce5-463b-9e3e-0a4eddea9b15",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a99e3e86-ca60-44ee-b619-f30967e2a9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7f2923-f878-43d7-ac79-7df140ba7242",
        "cursor": {
          "ref": "56357091-b988-4e4a-a7a1-6ddcffd2fe01",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e7386d6f-f543-470b-a5da-d7b4e2e6aad6"
        },
        "item": {
          "id": "2b7f2923-f878-43d7-ac79-7df140ba7242",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8a165f2d-73a4-4ec4-bf56-e94bd2b4412c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda6472f-bfa5-4b93-bcf2-62d2dcef9df4",
        "cursor": {
          "ref": "8fdad36f-349a-414b-b238-b33fcc2f63ae",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "267750e6-e75f-469e-a2a2-3be04ef1911d"
        },
        "item": {
          "id": "fda6472f-bfa5-4b93-bcf2-62d2dcef9df4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "69b50f29-d51c-4eff-9156-a09a26b756ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4333aa0b-d0e0-405d-a5b9-012b3e426051",
        "cursor": {
          "ref": "0115a916-2726-467d-bc1d-0a20add76552",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e52e7417-d38a-424c-bf04-87f35894ba14"
        },
        "item": {
          "id": "4333aa0b-d0e0-405d-a5b9-012b3e426051",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "752b6178-df18-4a6a-a096-2649ffaece41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7bd0cb-ce5a-49c3-a994-b22ee5d747ad",
        "cursor": {
          "ref": "7be9a502-3218-45b2-9317-b035c2294cca",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f54dba48-c410-4c56-affa-a89f5ead5e84"
        },
        "item": {
          "id": "ff7bd0cb-ce5a-49c3-a994-b22ee5d747ad",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9fbca7a8-bd4f-41c1-a129-52085e8f4424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03861734-3fd2-4840-979a-35e32fd41d08",
        "cursor": {
          "ref": "b357bbbf-0699-4c00-ac6c-48459cd18364",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "725b7ef3-3858-4cc6-935f-f4b61dd52ac7"
        },
        "item": {
          "id": "03861734-3fd2-4840-979a-35e32fd41d08",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2c078a01-2e72-43b5-bdf4-cc79d759cdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00724e6b-1689-4b7c-a77e-5e7b528ef487",
        "cursor": {
          "ref": "47c6ce5f-608c-4d7e-b796-09793822bc68",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b5565e5c-fb58-42b0-99d5-6b5a590c8de2"
        },
        "item": {
          "id": "00724e6b-1689-4b7c-a77e-5e7b528ef487",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2848c7bb-cc88-402c-a978-7be400ccd38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37e16ee-4214-4731-a74b-158327ad29e9",
        "cursor": {
          "ref": "a8cf2209-1b81-4b88-81f1-e1c94492af99",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1f7d5f0d-bbea-4c27-bbb0-3f1e7e7bad62"
        },
        "item": {
          "id": "c37e16ee-4214-4731-a74b-158327ad29e9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "649fcf83-26b9-4ead-95d9-3bc6d22d3107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30307ef1-7eb2-46b3-a873-9d7756c54a99",
        "cursor": {
          "ref": "aee02212-1088-4a1c-8d82-f9b83a593354",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "333e45f2-1047-4eac-9716-caeb5b5f44ef"
        },
        "item": {
          "id": "30307ef1-7eb2-46b3-a873-9d7756c54a99",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "34174ea1-1ad1-4a45-83a0-ade68a88489c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a5c3be-fc46-45e8-af61-dcd99b65499f",
        "cursor": {
          "ref": "1b9f7368-da90-4001-8ea6-844582a390b2",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "90594e36-521c-4179-8ff8-1c474c4fe703"
        },
        "item": {
          "id": "47a5c3be-fc46-45e8-af61-dcd99b65499f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2fd9d52d-3194-457e-9700-824fe2081f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d3c913-e0cf-4fc4-91fe-3206403db56c",
        "cursor": {
          "ref": "ee1a71c0-48de-4167-896c-41e7832dc090",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7b760912-7a20-449d-b4dc-08900deba596"
        },
        "item": {
          "id": "63d3c913-e0cf-4fc4-91fe-3206403db56c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "deab4ee8-0915-452f-a1ae-277c60ad464c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8960a6-83eb-4ee7-a6c2-fe0c0dcef4ee",
        "cursor": {
          "ref": "54897f59-7633-4c68-9ce9-be021534cb0e",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dc692c36-e118-4acc-ad84-79533058bca9"
        },
        "item": {
          "id": "da8960a6-83eb-4ee7-a6c2-fe0c0dcef4ee",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "e8014a2a-ee5b-4fa4-b1a4-d4af3dfcdc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3742245a-5642-40c4-8e94-74e9b1e57e8a",
        "cursor": {
          "ref": "84bff9ae-cbeb-40e4-af13-754447f253cb",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1d8b97b9-57cc-40bd-b0dc-212e7c54c0f4"
        },
        "item": {
          "id": "3742245a-5642-40c4-8e94-74e9b1e57e8a",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d3104256-ae51-44fa-b82c-ac6627bc9f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ad719b-8846-4a39-80a8-790700386419",
        "cursor": {
          "ref": "5402dc8e-f30e-44b6-ba75-d6865f03e9df",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1a0327ea-df09-4823-ad8d-2d7b265dad37"
        },
        "item": {
          "id": "14ad719b-8846-4a39-80a8-790700386419",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "717836a7-aa89-4f4e-bdd3-a54f29eb4f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83627f9-331d-41df-a620-bc6595fa36ed",
        "cursor": {
          "ref": "b247bdae-f3d7-45af-b2b5-b92d6aac2370",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "4ce7a352-fbdb-43f9-9310-23c6d1151bd4"
        },
        "item": {
          "id": "f83627f9-331d-41df-a620-bc6595fa36ed",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3d2d552d-a0d8-459c-8086-d52615f0daa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b2ebc32-787d-47f2-8532-e5c098e480d7",
        "cursor": {
          "ref": "884077fa-bb1c-44ff-ab1f-812c07f03762",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3e28fe44-1204-494e-9e2c-3006bede9603"
        },
        "item": {
          "id": "1b2ebc32-787d-47f2-8532-e5c098e480d7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ceb479be-2c8a-434e-b27a-fa97e40ee0fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a171db12-9ea0-4cdd-963a-5898341aabde",
        "cursor": {
          "ref": "737911a0-d0a8-4f7c-987e-40ffe6d4ca57",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "90cfdd95-b8ff-432f-80b9-c3c122c1ebff"
        },
        "item": {
          "id": "a171db12-9ea0-4cdd-963a-5898341aabde",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fba63cd5-4854-46d6-b5ce-8d8926d06a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34ede91-5bf9-4f52-97ab-6406f83f4cee",
        "cursor": {
          "ref": "a54fab12-a09c-4f6b-9dc1-12f6f1e58e13",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "175c2219-13e6-4ee2-802c-e263ec46db2c"
        },
        "item": {
          "id": "f34ede91-5bf9-4f52-97ab-6406f83f4cee",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c3625187-214f-429b-802e-7a8927d319df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "624883a9-f0e6-44e5-84ce-0bbca801dfc1",
        "cursor": {
          "ref": "ad46407e-2017-49be-8c9c-8ccc856d4a3d",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "efc93832-0f8a-4e31-bcc9-c75a3a503208"
        },
        "item": {
          "id": "624883a9-f0e6-44e5-84ce-0bbca801dfc1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e200f4e8-40bd-4bda-99bf-99376bd9c5a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0e3a2b-2efb-467f-b17c-c53a63bc432e",
        "cursor": {
          "ref": "41835a4d-272a-4906-85a1-7181dbc1897c",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "03f597df-3881-42f3-93b4-397fd67242c7"
        },
        "item": {
          "id": "ec0e3a2b-2efb-467f-b17c-c53a63bc432e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "fde27d79-627a-420d-8876-54725c64e3fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75603329-9669-4860-bc4c-78cb9dd81380",
        "cursor": {
          "ref": "9a23f376-dc5f-4069-9dc1-2963dac3c31a",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a226beba-b116-4204-85a5-29806c2c1431"
        },
        "item": {
          "id": "75603329-9669-4860-bc4c-78cb9dd81380",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "067a3177-365f-4c45-88e6-4f94dee4b07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7f96ea-9be3-4f23-bbc6-fe08c0467e1d",
        "cursor": {
          "ref": "897b8721-ccc0-47bd-a62e-f6c05910f661",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "df50f5dd-fe25-47c3-a43e-73e9e264a121"
        },
        "item": {
          "id": "4d7f96ea-9be3-4f23-bbc6-fe08c0467e1d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "415b9cca-7ebe-46a7-ac44-3e5e6326c81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849c3ae7-35eb-437a-a00d-3d1a56071049",
        "cursor": {
          "ref": "a5d153a7-6ca0-4d34-8379-e33238347296",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "128333ac-ae1c-4560-a6d0-d6d044e2daba"
        },
        "item": {
          "id": "849c3ae7-35eb-437a-a00d-3d1a56071049",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d3b86527-45a7-4402-9e8e-f4aedf7199ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b20dcd-b897-4186-81fe-6ea0b642a6ff",
        "cursor": {
          "ref": "80aa8aeb-4508-4e34-9e79-60ccf5caef7e",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "bc1ff227-be12-40f7-8099-84aac52a3e01"
        },
        "item": {
          "id": "94b20dcd-b897-4186-81fe-6ea0b642a6ff",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dd0072d2-2142-4f59-b534-fb2ad686d1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa54f3e1-7257-4670-b8e4-ff30a8e47639",
        "cursor": {
          "ref": "4fc83d4b-08a7-449c-b238-6a3c60b1b9dd",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "58fcc304-5f26-42c4-a3b4-8eea364cb330"
        },
        "item": {
          "id": "aa54f3e1-7257-4670-b8e4-ff30a8e47639",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e55b81de-6974-46ab-82b3-114cf1154ada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bed5ebf-a1d8-426a-b908-c8ce281354d6",
        "cursor": {
          "ref": "9c762b70-7e11-4127-96a0-572b4488e570",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1c271b1c-afc3-45b2-acdf-94ed90402965"
        },
        "item": {
          "id": "0bed5ebf-a1d8-426a-b908-c8ce281354d6",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fb67be59-285a-452c-98d5-1ae6b44a42d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d67772-a803-4cb0-90bf-3aa43148c267",
        "cursor": {
          "ref": "c4cb07ac-dbc8-422d-8522-d772722aabfd",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "2e4ca124-7193-4d32-bcb9-951e6497faf0"
        },
        "item": {
          "id": "76d67772-a803-4cb0-90bf-3aa43148c267",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e6af81de-6339-4348-8b8b-e30a529220dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6eec49-0d00-42c5-a75f-18a0ec2b6c79",
        "cursor": {
          "ref": "24a5386b-be36-45de-a946-76dc24688a66",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8dada71a-fe2d-4bd3-8cbe-eb9b1cbcc12d"
        },
        "item": {
          "id": "5e6eec49-0d00-42c5-a75f-18a0ec2b6c79",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "afba5bef-7222-45f6-bb0e-3ce880778618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96ff9a2-730a-4a0b-9036-7551d52126ac",
        "cursor": {
          "ref": "ebf8aff9-7386-4dd7-aa47-85ab364bf76d",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "00001c10-b4de-4113-9962-5a811c50b2f4"
        },
        "item": {
          "id": "c96ff9a2-730a-4a0b-9036-7551d52126ac",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3bc3164d-a382-473a-a43e-def8e23bde61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9628fa3a-4009-45cb-9262-ec4b64cc54a4",
        "cursor": {
          "ref": "82650dd9-c6ec-47f4-bc1c-ee6633b7c9f3",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "890481ec-3d39-4bee-b3e4-eac21c3d409a"
        },
        "item": {
          "id": "9628fa3a-4009-45cb-9262-ec4b64cc54a4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ea36a831-e250-4105-bd97-30b7165a8d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d5b03b-d61c-4106-b648-a48f110811a7",
        "cursor": {
          "ref": "e6e2e2cb-297a-4fec-9cfb-a2bd1b858495",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5bc0e8ef-632e-47d8-a971-36bd7aa91e19"
        },
        "item": {
          "id": "89d5b03b-d61c-4106-b648-a48f110811a7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "19bf2c6b-5ff6-4425-b732-8710b8900ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faabb2e2-fd05-4371-b87a-855720c0e0a2",
        "cursor": {
          "ref": "f2752d85-cdf2-402c-90a6-7ebebaff454d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4fdb041a-4cdb-4c4f-9db9-15f8d078ee3b"
        },
        "item": {
          "id": "faabb2e2-fd05-4371-b87a-855720c0e0a2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "407c601e-082d-4258-9551-f93769c4fb05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da91d46-6946-422d-9616-5f7ec73cbdce",
        "cursor": {
          "ref": "713dd0d3-a760-40bf-a10c-092d06d7b0a0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e6b73eb1-385c-4876-9721-7e9203d37a0d"
        },
        "item": {
          "id": "2da91d46-6946-422d-9616-5f7ec73cbdce",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "db4588c0-f7d4-4791-bfe5-caf83b0afb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5f5128-6c13-4945-9c42-a20bf8f468c6",
        "cursor": {
          "ref": "6d497ef8-dad0-4a2e-ac72-deeac26a8350",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "defeb071-f474-4f89-9df0-8256c52fb1f4"
        },
        "item": {
          "id": "2c5f5128-6c13-4945-9c42-a20bf8f468c6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "33e73e2d-6c18-46e9-9d84-f8185e19016f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef29b44-79cf-4b54-9594-e03afa7e3895",
        "cursor": {
          "ref": "42d62587-de85-4f2e-8d35-84623f307a0b",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b52449d6-78be-4560-a5cd-68e1f3c52c04"
        },
        "item": {
          "id": "5ef29b44-79cf-4b54-9594-e03afa7e3895",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "15c34641-d927-4415-8539-439d929d92c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b256a83-31d7-4de9-b405-935616476cd5",
        "cursor": {
          "ref": "babab634-2f2c-432a-8648-d3365c742356",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "11a0f41f-d218-41ee-a598-4f6f6a966652"
        },
        "item": {
          "id": "7b256a83-31d7-4de9-b405-935616476cd5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7fb8c820-7612-42f4-a386-4794a42b2c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b121f4d-bdb0-413d-bf9c-96e238206657",
        "cursor": {
          "ref": "80c837f4-c72c-49cc-9994-b825d02ad643",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2abafb98-9110-4586-8a0e-57a8d9124fd2"
        },
        "item": {
          "id": "3b121f4d-bdb0-413d-bf9c-96e238206657",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "dfde84f1-1fd1-4630-8010-53776430e234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e87bbc47-a3b4-4784-9e29-22ed238d22a2",
        "cursor": {
          "ref": "68cd87c0-4073-4b46-b6fc-ad4d6e4e993c",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "fc63f1ac-5b18-4bdb-85fb-f6781a2e4694"
        },
        "item": {
          "id": "e87bbc47-a3b4-4784-9e29-22ed238d22a2",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "9e300d81-a482-4ace-9cee-1bf8d9da4fa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c150e969-5fa1-484d-b06d-4e66264e0da5",
        "cursor": {
          "ref": "2dc558ce-3ed8-4caa-9540-de15e6fe5965",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7992e6a6-2fb2-4753-8263-8b1bf3ad2dbf"
        },
        "item": {
          "id": "c150e969-5fa1-484d-b06d-4e66264e0da5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "15fe3f8c-f3ad-4179-bd64-25490e018517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9470495-4cbe-40b6-97d6-a112a6d3585e",
        "cursor": {
          "ref": "c75379c5-0a7e-46d8-a5aa-d3b919be8969",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9bd56ec0-a8a3-42e0-9344-69f262f63915"
        },
        "item": {
          "id": "b9470495-4cbe-40b6-97d6-a112a6d3585e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "127e93e1-5c1f-4765-bd97-76f137437ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac33e561-f57f-427a-8b04-c792ff587681",
        "cursor": {
          "ref": "36c77bbd-8610-4919-bc8c-ca57241d1084",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "d12a36cb-78f0-4619-acac-775a6620a60e"
        },
        "item": {
          "id": "ac33e561-f57f-427a-8b04-c792ff587681",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ef6c59b8-e331-4aed-ab16-f2bf62d676e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce97fa28-c0a3-47be-a528-21099eeef16e",
        "cursor": {
          "ref": "3428452c-0c4e-4a8e-a961-644f9b1a7b24",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4cb8f10a-f8cd-451b-9e1f-34c8f91be6e4"
        },
        "item": {
          "id": "ce97fa28-c0a3-47be-a528-21099eeef16e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f6d4b463-02c3-4a36-8b28-a0887d7664ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f57e6eb-5d99-4692-af08-a86efb1587b5",
        "cursor": {
          "ref": "c82b1d68-7171-4f27-b8d4-5e77a2d23cf8",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "762b6ea3-b0fc-480f-8935-f9fe30d97ae8"
        },
        "item": {
          "id": "8f57e6eb-5d99-4692-af08-a86efb1587b5",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "40017a7e-955d-497a-99da-a2f85559d65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a03d31-550d-4422-9b1f-0593ecd0f210",
        "cursor": {
          "ref": "765fbd5a-3b9b-4b26-80a7-eee59febdf5c",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "1ed77bb4-694f-4123-a44b-bcaec2f7cfd5"
        },
        "item": {
          "id": "41a03d31-550d-4422-9b1f-0593ecd0f210",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "32f0bd0b-0b74-43d7-b20a-b47eb9783e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25738f71-90cb-4271-8bb7-d99d1aa09b03",
        "cursor": {
          "ref": "8eb3dd1d-8ff4-4e19-91f7-3369eac853f4",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "3300cb18-3e0d-4d9a-a846-830086dc56cc"
        },
        "item": {
          "id": "25738f71-90cb-4271-8bb7-d99d1aa09b03",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8e809e5c-a180-4513-8bf0-a9cf60948384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f704010-df51-4116-9e9a-2c39836d7831",
        "cursor": {
          "ref": "3f4009ff-8bcb-4fb5-8067-37a2b79cf6ca",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "b3756343-0cd7-4774-b017-df6483639c27"
        },
        "item": {
          "id": "0f704010-df51-4116-9e9a-2c39836d7831",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1e747892-6731-4fbc-913b-c8ca7fd1952c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4302727-eb77-4d99-b72c-2c299b8af56f",
        "cursor": {
          "ref": "9003dee3-bfec-48f4-bc31-3a1cddbd5297",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "81259c05-6903-41fd-bae1-cbafc9527060"
        },
        "item": {
          "id": "c4302727-eb77-4d99-b72c-2c299b8af56f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ff3f9169-4a42-485a-8bdb-923574ee805e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0077d4c-638f-453b-8fdd-77ba83976de5",
        "cursor": {
          "ref": "f4f44132-9e66-45ab-af23-679465c5d683",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ca68bb95-d713-470b-bffb-b56494af3001"
        },
        "item": {
          "id": "c0077d4c-638f-453b-8fdd-77ba83976de5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a50dd39f-f840-4432-afe2-f3a2b5ac7f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beed7ab2-254a-4627-817e-c72410c30c34",
        "cursor": {
          "ref": "62aee534-a394-450a-92fd-05b0b2b9cf11",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "13efe451-9752-46c9-87cf-63a7c9bf57fa"
        },
        "item": {
          "id": "beed7ab2-254a-4627-817e-c72410c30c34",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "64937bf8-919f-4df6-8443-915b44d79409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8d1dfe-6f5a-4c23-b8f9-f58688b6580a",
        "cursor": {
          "ref": "eca61ff8-5cff-40f9-ae5d-c27aa67598dc",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "f50c4606-5b46-4fe3-9076-ac106c3ae283"
        },
        "item": {
          "id": "0c8d1dfe-6f5a-4c23-b8f9-f58688b6580a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "562385b1-a786-45d5-a183-c0f3cc7c2ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40a2cf5-9dc9-4fce-b8cb-f0d08cc73129",
        "cursor": {
          "ref": "0b993cc2-c884-49c6-950f-bd9f7c9b70c9",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "786a3734-fb96-4329-b851-393997b34649"
        },
        "item": {
          "id": "e40a2cf5-9dc9-4fce-b8cb-f0d08cc73129",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c7359a12-8fb4-4e8a-8cfe-17769d52861c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9ea527-374b-486e-9c13-7dce13f05bc0",
        "cursor": {
          "ref": "2753c932-c2d7-4ec7-bc9a-f187b7b2c53e",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "3c8d990b-a800-45a9-b6ae-95c65e00906f"
        },
        "item": {
          "id": "5b9ea527-374b-486e-9c13-7dce13f05bc0",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e51056a9-798e-4ff2-be75-2a451b8b3385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ad6a89-aa73-4f12-866f-a65b606bf4e9",
        "cursor": {
          "ref": "5d1e03bf-f879-449d-b5d1-3d66ca09ae7c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "9551c46c-e195-47d7-a3d5-d81d0b4b8cda"
        },
        "item": {
          "id": "91ad6a89-aa73-4f12-866f-a65b606bf4e9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f4e9ab87-f364-4cf9-af15-176ffbc24dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b09821-dcfa-4621-8eab-56941cd69d85",
        "cursor": {
          "ref": "422a87d8-0391-4a6f-a121-38045ffe81c3",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4dac2fc4-238b-4d04-b5e3-71bd3ce8170e"
        },
        "item": {
          "id": "d4b09821-dcfa-4621-8eab-56941cd69d85",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "5210662a-eede-466a-abea-e0ec6f211a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9e2ae9-32b0-41d5-abcd-feb06b941cef",
        "cursor": {
          "ref": "05c3af57-5aa2-4b4f-bca1-ebb06ed5ebd3",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "cf62f82f-48c1-4fd1-b7ac-918be449833c"
        },
        "item": {
          "id": "bf9e2ae9-32b0-41d5-abcd-feb06b941cef",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6c7c110b-82b3-4471-8d1f-70cba0b0085e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58f3c32-738c-48ed-995e-3c08eba18073",
        "cursor": {
          "ref": "7a565b36-ee31-40bf-868a-9a8a79175726",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "12b8e332-8ec5-4f05-b8e2-062ca3b87a76"
        },
        "item": {
          "id": "f58f3c32-738c-48ed-995e-3c08eba18073",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1d4aa6ee-4e18-4a3c-95cc-0ced93489eb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3ef4f1-b56b-47e0-9730-713204b94ac2",
        "cursor": {
          "ref": "ae105672-2891-4759-880d-d6dc3d799dd4",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a1f74db9-d712-4a4d-8307-3f3c2698c9d4"
        },
        "item": {
          "id": "fb3ef4f1-b56b-47e0-9730-713204b94ac2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a529ed4e-10b7-4cf1-8ac4-4038f3cdc950",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b51f185-35de-4636-bc2c-d7b49cba3691",
        "cursor": {
          "ref": "94343141-b645-4067-a346-d3f89052ae07",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "ca8a73eb-4e61-4a67-8c1e-83327d4cccab"
        },
        "item": {
          "id": "1b51f185-35de-4636-bc2c-d7b49cba3691",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3655238f-7442-42e1-9321-30b145372a44",
          "status": "OK",
          "code": 200,
          "responseTime": 1404,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87521c6-aac2-4d4b-897a-3cc02feb8f6a",
        "cursor": {
          "ref": "9f6dc87b-179f-44f8-bb90-7d00052c3c1b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "72612b81-51e2-498a-92bf-12b81c734689"
        },
        "item": {
          "id": "b87521c6-aac2-4d4b-897a-3cc02feb8f6a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b415809d-8a56-446c-9019-0dc93f5e52a7",
          "status": "OK",
          "code": 200,
          "responseTime": 1406,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e1ac1d-701c-4a42-8669-a171ec382bdd",
        "cursor": {
          "ref": "4409052a-3e00-4c8e-937c-7b7f9f4db516",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ba67c8ce-de43-4386-bff7-d05070b05319"
        },
        "item": {
          "id": "10e1ac1d-701c-4a42-8669-a171ec382bdd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8f89fcc-b5d0-4d5e-9dd3-04821779bd72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e1ac1d-701c-4a42-8669-a171ec382bdd",
        "cursor": {
          "ref": "4409052a-3e00-4c8e-937c-7b7f9f4db516",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "ba67c8ce-de43-4386-bff7-d05070b05319"
        },
        "item": {
          "id": "10e1ac1d-701c-4a42-8669-a171ec382bdd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8f89fcc-b5d0-4d5e-9dd3-04821779bd72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3859d2eb-8c85-4006-89ea-4006f34673da",
        "cursor": {
          "ref": "90bb289f-f898-418a-a1f1-29b80956290d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d6a3097b-3eb8-462f-87f7-4dcf075d72bb"
        },
        "item": {
          "id": "3859d2eb-8c85-4006-89ea-4006f34673da",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "de4343d9-1485-4016-84e2-d2689d75203b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e06174a3-200c-4491-8318-a0ad2f5bcbf8",
        "cursor": {
          "ref": "7b3c7e7d-015f-41bc-acde-cc0bc9e0b55c",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f7beb8a5-61cc-4e4b-a06e-913cb83e1a6c"
        },
        "item": {
          "id": "e06174a3-200c-4491-8318-a0ad2f5bcbf8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "79ea3803-bc0a-4b18-bdcb-72079ad8b527",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}