{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b95869c5-39bc-47c3-9396-e2d874e9cf4e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e603d644-0ff9-4419-91ae-a620ee71ff70",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0361bed4-d8c1-47cb-9506-4d73b12d6165",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "79db47a4-2fef-4013-828d-a6304eadda6e"
                }
              }
            ]
          },
          {
            "id": "efc2ebe1-0af9-47fe-864d-c4c5113c9938",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90995672-58bf-456a-9a9d-d3bde09a186c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "db130160-9d01-4b69-84a7-cf930527e271"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9555a8f8-a10f-4277-8eb2-c60b4666cec9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5a23e359-717f-4d69-a617-c93c8b3a57bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "191ead9f-9dee-42a8-9a5f-b1acbff69e19",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac77126f-73fb-4f90-8840-a8e59ee4cf85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc6e59d0-14b7-43e8-a9d1-ea4fadef1b98"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cfd3489b-6a4e-460f-a32f-daf05c83b941",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68c0cbb6-5d2b-45df-bd18-f4a5824ed8de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "977decd5-785b-4183-ae2f-07750e6e31dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bda0c46d-e4e7-4467-bf28-87a3ff6de04b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d045858-3e68-4453-94ec-8c29c9cface9",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5074891f-0c41-445f-b7a9-7c5f7716f28a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2aeb8e43-c9ae-48b2-8f8c-55d595568be4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed7eb6e7-6a9e-4f23-8e12-d356fbf500c6"
            }
          }
        ]
      },
      {
        "id": "64ae3ce8-0f51-41d8-ae8a-4744d123a625",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4c42006d-ab9a-40ed-94f0-e7b64286fbfb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bf42eaf2-9ad0-4a2a-a09f-8c4f08642045",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0f52103c-513b-49d9-b0bf-fa53d38cad15",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0853746-3185-413b-8569-e56155c61a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "211c0fd7-dd4d-4b5d-b45a-7a700e5ab0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64334ade-5c8c-40a4-a0ba-6aa03afa5b25",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f8dbf9-014b-4bec-8653-c0469edb40e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93aaadb4-77d4-47fd-9d48-64c756d777c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f37dcf2-7f24-47a3-8685-82f3af780b85",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b9963c-b2c5-4cb6-81ef-f89871d8773c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c86d743a-0952-4b16-be65-229f03456ff7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2bcd434-1a43-482c-a786-3536474c7f81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "332f5ebe-6e38-48c5-b72d-0e23d34724cf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d7f3b4-71ab-4e1d-bda9-44db6c86c90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0796ae1c-260a-47d2-8e25-49ddd4ddf2b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80809618-db67-4e41-9465-ae9f061e217c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17683a39-a6e8-49ac-a799-6a4ea5a5a779"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6274de17-08ab-4068-b54c-571eacb78e63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "69a1222b-2e4b-4ff3-993b-5c49302bb5b4",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e014a99-08d1-4de7-9058-1787a7d507a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "301c2603-54c7-4a4a-ae5c-659aa65c5bcf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0492d437-161b-4e03-aa60-aa16318af8f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "bea6a898-d459-4c1a-8e8f-55c28a26298e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a6e3593d-8597-48d1-acc1-c6a2a76857cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87c6e2f0-ca54-423b-bb8e-485bc8ab2512"
            }
          }
        ]
      },
      {
        "id": "fa615a70-fedc-473d-97a8-5be273498b14",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "bf7c2c99-b78c-40d9-aa89-99ed15831c20",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65c97139-b64c-4f47-bcd4-3ae2141d7c79",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fdcdb33f-bca6-4556-8ac5-0b5fea26da94",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "743c83de-132e-4e99-876f-7583e2aec4dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e0207e-9565-4f36-b963-d2325b136d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8973c2-bf5d-47be-8476-c101299e4561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c289da78-628d-40af-a528-e068ff47cc43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14418916-9b5a-4747-a1d7-8ecac70396ae",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92ba4cf-5fa8-4434-beec-b5f8e52043f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5169be9d-e6b3-404f-bfca-092c912d8db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30bb7e51-2d5f-4f30-878b-1d8a03cbf270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1b4aa1f-3cce-43fa-8bc6-5a5c1bd23409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d63ea9f-781b-4931-a070-1d8324d1f2cf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25d1788d-13f6-42eb-8e08-a52016ba20bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942ae84d-f707-4d51-b611-1539edcd0a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662f70d4-06cd-40c2-9019-af717bf194fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c0237e8-72e0-4cb8-ad4f-4affc19967d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d691b3f-9b29-45fa-9504-e0b82e7fb4f1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc97bbb2-3db7-4cd1-a50b-2fab21592afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0692ea48-4cf4-4398-bb4b-f5f5b642783d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d7a2ab3-6782-4588-bc36-7a793d0e2734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc131a61-9284-469c-9e74-d760a7b5b044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4e836e-7221-47af-a8a4-12eaa2f01fca",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b8a5e2f-213b-4f33-9042-e77dbca0aeee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d996aa89-0ade-4434-b8bd-51fb3cb47363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a9ecfa-5135-405f-955b-89df5829f288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd3b3b11-f9b5-482c-9bb5-40e3db180202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3dc1366-0636-4e29-b9ef-cd47a4b3acf0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2700c7f6-5c44-4c36-9891-392d09876426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba4e8fd-e7ee-4a8a-9caf-026f888d4b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c7eeaa-92fe-48c3-98f2-7588d7836b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d71263a6-8f81-4f09-a24f-3ea43278776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f461be55-cf98-4925-998d-240a2dfc659f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e23ff2-0092-49e2-a879-149a37050c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b6d0ad7-4f6c-4320-81ff-cf3c52c07e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7091f768-632f-4091-b0c8-3c94bc0041ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7415026b-1f9b-4093-ab0a-fadf62821624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785ac88d-8eff-4e2a-9a02-dc1db27caaa0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9790d7b9-a642-487a-a8d9-0c0273da3461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d87fb1c2-2886-4063-b755-0a693dd3f6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da6b20e-be11-46b6-bb4e-6c124d93f611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e68495b-2526-4c21-ae4d-9e78f853b91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44017a36-67c0-4cba-ba5b-7667cfec864f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acccd950-36b2-4b9b-9cd2-c3660d504cee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "452d18b2-400d-44fd-8511-c69190dc69ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee486280-defc-4989-b97b-fb88e5ef56b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8164455-9173-47c2-b4c2-04c1fac52979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23a9ef4-1b20-42c0-8c6d-8426beb88521",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3accbe-f9cc-4f2e-97bd-25fc80a5ac49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba13e10e-9a56-4739-be8c-b19bb9f2ff73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2312a7-2c42-4049-a81a-40843d04f4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54da7d99-a997-4b79-a29d-a2430e091c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690cf028-ea21-405c-a18d-9825b9ce1b69",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac284763-d5fa-4e50-8436-405702d29bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e692f243-1dc3-459e-8165-f4daf61ab8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "736499f2-19ca-42bb-b2f1-6850d7f090b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "948644ce-c11c-4448-b0f7-71d7c7bab499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a461a23e-e26a-47e3-a38c-3df778b4aeb6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a253e01-971e-4c9b-8089-328be7508586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5bfc4b-b16d-4362-a693-136f26d900f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25256189-a2bc-49ca-b319-74016c3c85fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9133429c-c1b1-48f5-9508-6144ffa36195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de510f2-9ea2-43fa-b46f-1c20ce388ae1",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d357e99-2ab8-49f8-80fc-79b66443daf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14341d46-62ab-4a48-a7a6-12d2f33d3e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22da36f1-f9af-4dc3-8541-47adef3e143c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e90fba75-de10-4178-9da9-5fec88f7f4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2449b005-d60e-4c0d-bfc1-e9409e688061",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f917e33-0994-4008-bf0f-240d7efefc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e06fd77-b046-41bf-bbd7-52e660873a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd7184c-16c8-42f0-9568-27cfe8cf400f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31bf3b86-fd1d-4328-b49b-d7ea64087f3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190e06ac-c1c1-4827-9c1d-63ceed8c687b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7787b21-f7df-488e-9d9c-f90aea7edca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f90be21b-dcf6-4235-82f2-7ea0f5d862bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2322460-0b85-4f3c-9ae3-eeb0aad045b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "623ddccf-d7f3-4ca4-9e71-e30722422b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45e4a3c-d24b-4977-953f-a8c52c1a489e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7749be-7119-4eb2-87c3-e9be1d6f1332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902bdad1-8b3d-421a-9c4f-606c4ab2b795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2d6b99-0e12-4381-b470-308b723d5146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c88915d-d376-4c05-9caa-dac71436c32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b6e4d6-4dec-48fe-9374-71489fcdad0d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d936b308-f10e-4804-85e3-ab131e9604e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8935cbd-d63f-4ea0-9ffb-b7fb5b4b45bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d755a19e-2dc0-4abc-a4a0-a0f3b5bfb691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c137e42a-7284-40ef-bba8-0d90010f4f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c673da4-72f6-4d2f-a1a8-2394b100cb8f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9bf117-5dc8-45ce-9238-29be58c9db84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "670b5a2f-d8a9-45d9-98ba-c1db2cbba4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e97a83a-adbd-41c9-8d66-44e8d11075d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e51462ed-53ac-46df-b55f-53567cae1e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3986c9-9cdb-4037-a994-5ca98ca744fc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656ee5a6-c8f9-4c81-8895-048355d61aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6faf0e-b3f2-4724-a82e-564d29e7b847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae0d6dc-5a62-4fd2-ae38-a7a4ac85a1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9a72609-2b6c-43bb-b9ec-97afa599ce9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fce6614-e0f7-4aba-ab90-9ac7a8456781",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b4d488-8db3-49fc-82f8-129ed4623294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c948405-38ce-47f9-b4df-49cab1a846b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6e7422-ca49-408e-88ea-756ead157c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f299e3a8-1371-4338-a675-2d2c31ac087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79ad8bbc-6816-413c-bd4f-740105d4e037",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901d139a-593a-483f-9ac5-d9b6b69e001b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80110645-9f97-4722-8630-54008ea49502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb1c2b32-1be7-4ccb-b55a-7ec5edcc13ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2339232-6d84-48fc-a043-a51140bfdd5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f7676d-af18-4cb1-9ad0-1f94b2f8d593",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ec0c83-3dec-4b1a-a5c9-9dc32febec15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d266963-9c17-47ba-b362-86db26dd79ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04ec5f1-e1b4-453f-ac46-34cb77074471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eeb3f834-8d18-4e91-b09a-9bcd90a26bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8b2560-c802-43f4-8350-4e9ea935468d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402a553e-3262-46bb-ad10-c91dc663056c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588ebd10-0f1c-4ce7-9fe2-9ceafd1b3448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7c35b9-37ef-496a-95f9-5eeefc72cd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cd0d17-8029-4531-ab24-b43d321c7d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5973a596-bcf7-40bf-88e0-f2cb9c67f9da",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2e2d97-0946-4057-9993-0babbb30fce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bef1d81-3e9c-4aad-b83b-2dc578bf74e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8960097-1d74-4c3e-9c2a-c24de2ece6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "42be365d-4009-477c-a73b-3eaed7181356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54a1326-f2c0-4cb9-b9fd-c8123f5e28e0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6462cc8-bc43-4a65-8868-a2cf8cbfff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44edbafd-1782-4edb-8278-b758b271c0eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fcea25-d03f-4112-936b-659e9531f173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "30b3ee36-a33e-4a31-97e5-4edc6cc71f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39e3b8ff-ff85-46cd-97d8-1dc002f7b8d9",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270e9f27-506b-4e0b-bb61-32accb9738a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ebfed79-7956-4ceb-8fc4-d1d8f21ad983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd99a0c-5ac5-4bf6-81ee-2f34e0c2fce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7187bf5e-b2cb-45f5-b1f7-76827f35566e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d552bdc5-58ce-4c4d-9f0d-bc6847dc8549",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850d59ae-22f9-4aa3-801d-236a8de7e8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c483422-57dd-4dff-8c88-1c23ec60bf4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fd0756e-adf9-440e-8c5b-ad91c8ddc6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e74be3-fdf9-4e29-aedb-3b0b9027ddda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446e6bf8-22d4-45aa-b114-d451441828ad",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b3c6b9-f6ee-4ed8-8af5-b442cad195b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31199ad-01a7-4def-9cb0-6011134d3b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fee1fc6-3e87-441c-89c0-d2ebc337dff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96f3373b-33e5-43c7-afdb-d2d8f5e5a664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16214420-ee3a-4b6e-ab6a-408175184ba9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf4fceb-4297-4eae-a37c-bb2830a818f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5b5ca2-dab2-45a4-bd5a-1748990acada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff21a2b-399f-46c5-81f5-e172d1147ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c500dea9-eeb4-4e2a-976a-e93d002639db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7eeaaee-c99f-4139-bbf5-d5dc22e95522",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03acb97-c3c9-4f98-95ee-1322322ffe40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ab72e9-49da-4906-81fa-cad1de3b2a97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4da6ea-4616-432f-9277-a1906b07e950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff46026-e0f7-45e3-8ae2-6db9bad7d35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7887cb8-64ee-4aab-8f19-fcb0bbd56301",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62b18c0-7def-4501-a598-1adc78637cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc75431-fcb0-437a-a60c-3625e989a8c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568d5972-4114-469e-bd84-56c1834cb883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5f7851-54e0-4d75-a7c0-b603bee2aed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12397616-61ac-400a-a54d-e76ddde30575",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6191dcad-30f9-41fc-9fca-a03977373ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051449fe-c000-4aff-b35b-add4373cd39a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8386646b-ce75-4447-9d49-2a2496b30398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "329e6b94-f4a0-4dc3-ac53-a6cd542199f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b8a1bc-801a-497f-a348-fbce32f723ab",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9901039b-a107-41cb-b160-cc86ccc73523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b86a9f8-0c4e-48ea-b41a-a8222b0a3ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7074b681-9fad-42a4-bd0e-ffa4ab644748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4fdc5b3-9223-4b9a-8ae8-66a63814982e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3276f490-4007-489c-a5c9-017a9220068b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942bae60-48ed-4786-9281-796c07416ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8a14fc-4571-4466-8032-6256400ea291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9075a15a-401e-4400-bf44-94b1d95aa2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4be5f8a5-9ee4-415e-a4f3-568df9ff093c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdef509-7d19-4458-a3c6-9eab9e49fc74",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e27aad54-3a2f-453b-b7b4-8af8bb885944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614794d3-4606-4779-9412-dcdd65f0f515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32605885-4986-4737-80d8-06d5c7437c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dcb51b-33f9-41a0-99fd-5e60e37e66af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7050ba38-1a84-41fa-8ec0-b001901b1feb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebe0bff-da3b-4184-a761-fb3e281f899d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19667edf-2b3a-48d9-b2b6-7ab65d14127b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefca30f-4574-48ec-b7e8-b62ed67e122b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b6a62e-8168-43fd-beda-37056660c135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7037b21f-96e8-4097-83cf-dbe3b4f7b575",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e56e4e-3248-4971-966a-eb5cc4e7c762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892c52c6-b643-4c02-9c93-a81084ae8e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251c2a9d-4f30-47a4-a881-b9d33243b8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "064d1ffb-f4da-46ed-abdd-48710ca8c381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1572808b-b63b-422d-8b93-42a31fc76280",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f085660d-856c-48d8-a8cd-2f36ad0bf879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2bd370-1564-4bf0-a5e6-7a7fe33536b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e605f076-d9d3-428d-aba6-0f9f7403dd1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f60cdfd0-e209-4585-b222-d13c662ee17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309b1062-e29e-461a-ac3d-acd2d4f74190",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc14fbfd-4f5a-4cde-9cff-2571bdd1e911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b3bc24-a506-4ea6-8c1a-b5e1a095e2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692edf13-c789-47ee-8857-4824e3f356d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0536f07f-edf4-4db2-a59a-f5c1361ec15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4e9d54b-e6e6-4cee-bd85-cb304744db6e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07608547-632a-4a5a-b9aa-01e025dfd740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5186f0-de3e-4e4a-9f1f-a372a86f9356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8022d440-4c71-49bc-913d-3013ed2e6cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b80ec378-57da-4aa5-853f-f9f4f1a18eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1e95c4-744b-48ef-a199-868ca8f88fca",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23ab658-6d03-4d53-91e1-34ca4bd86a3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aebe58b-b83d-465a-ad6d-3e925fbf8a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "360cc516-d69d-4f82-bf08-7aee93bcb4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b11f25-d854-410a-8e8c-9c49b338704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa1fdc0-aab2-435a-90c2-f157263e83cf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f576a42-ce87-49d4-82f3-76d633cc6155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee46112-8f64-4aeb-843d-2bff86a836a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "565d2542-d1ff-4528-8441-e00b6f4b898c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "79ca30ba-4500-40ef-870f-34e5e4759b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfddd14-2bb1-482b-a5fd-d6b0bc027458",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70268e03-9a84-4573-b488-96313185cd88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7ffe87-6db2-4fad-b652-ef5b84f1c10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540e6d3e-a22e-40f6-ae66-4046a398792e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6f38ae-130b-4fd3-85e8-66680590d7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8233c8e7-53bc-4e69-ab25-f889e0fffc09",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9669eef5-ab54-4bdc-99d5-40007bd850d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033e590f-551f-490c-aec4-8b5b94326e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397f7c6b-148b-4d19-aba7-672b7a2bd75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f44be01d-0580-47fe-af55-64bd567c7643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6238d8e-8f08-4cb7-91ad-6449346cc8c4",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72664f59-3bad-4967-a626-d0dedb6179f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecb4f888-7240-4968-b990-5dbefb9816cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e90654-384c-4f8b-85e7-316d91aa235d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3509989-d32a-45d7-a89c-0682a3a4fa10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498d3e41-4def-4f6d-aa51-1c26aefc7d76",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf0ecec1-9c03-43db-b799-8e9273904ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce9048ea-ace4-4f4e-9ec3-34164224ec0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0fccc0-8c73-47a8-8b3c-c6c3f6f85475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35ad0020-e564-4e32-90f4-24127a7f055f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f972ed7-bce4-4143-97e0-f4691900f0f0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8328fdce-276d-4355-9726-7a709ea9f036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c36563-d85e-4a5e-916f-fa7dc59a79a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eda5c0f-5b2a-4990-8728-1f7181e32f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1680dfd2-00f2-413d-824c-723062654c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9336c5f1-2981-426b-a82c-9460bd7bb8b4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ef59cc-b0fb-421b-ac41-6aafb0ef65fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea63223-fe61-4506-8d67-d43f65a603f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cf196e-c48d-4e16-b490-a6f04b5221b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bb7aa72-e0bd-47ab-a0a1-bb1f7fc5b386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8eec9f7-3f1c-4dec-8006-0a3388f74829",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0640f9-149c-4d00-b61a-74910359443f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1d3f06-3588-42fb-9373-36cc3e3cc7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7edbe24-e999-4ac2-905d-f2a751e785f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6eb6cff8-2d9e-4f0c-9d54-95ffa91d4edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5369b12-d942-4741-b156-f48c194f6426",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654c8844-5eac-4d8f-b173-50931f570ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423220ee-71ce-41ff-95b9-b137b3287d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8f6d807-58c7-419c-ba5e-c5f9687f8e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe11b56-466a-4faa-81a3-a56338064f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a190796-9bbb-4144-baa6-83f50ab5ff25",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd124f7-5d8b-4c3c-a144-aac8ef6cf79e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8b4794-59e2-4a38-ac6f-40cbea29bb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8efd33a9-158d-4866-b917-a757e9411122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c37a1a-463e-41e4-a4eb-106dc95f82fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130fd955-1e73-4b98-b377-6aec8a56f29b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d655615b-9593-4080-a0e2-ea4ba554be12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2454a026-57cf-4d89-97ff-9636119c37e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8298a5-bba6-40b4-9702-3fddf11b5887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcc94d59-b307-4e0e-bffb-9682d9255bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b49d23a-8d16-411d-911d-bdf6f6b8b799",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1417a77a-079d-4d06-a276-30230ceae866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c6670fa-a36d-4c7a-825c-2763bf6b0281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202aa3eb-4dff-4bcc-9c74-75eaff60fbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e27594b-d386-4ed7-a885-e5ee03f898ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263a8830-a1ad-484a-8f02-ffee0521c993",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50edfac5-3fa2-47fc-87e5-c8f67599a7e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9da8c0-f7b2-4a62-a188-2899542e6185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e63547-868a-442b-bdee-f36b857e9e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc4f32bc-f754-4c42-9703-8379f0cf1d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca1256-aced-47a3-92af-895ccf905de2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ec6b78-36d7-4382-88cf-aa09b1368b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edf529d-a419-4451-87d6-21e5ed395c01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ba54e5-d2c5-4ffa-95fb-0bd7ea962d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75cec9c5-65a7-4366-8ad6-726f08049cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e12f8e-8aca-4df0-8d5f-6cfbe9a2fe8c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9788c6e-01c4-457d-befa-ce3e94e895b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbeff33-06e9-4932-9d3a-47535583fa66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db97c750-cfc7-49a6-9f6d-bba60f137d28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4ebe5c-21e2-4507-a74b-783b5514d621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b782781f-aec9-4aa1-a7d4-63b3f2d48784",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65cd0162-6ffe-4f68-b05f-09103a02c216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a57a5d59-b215-43d9-abb6-9038be9a122e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8687da0-3de0-4762-9e8a-624423c6891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1662f8a9-6696-4b93-a111-99ca9b2af50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6c0ca7-72bf-4680-8fdf-ec47c864a77e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05f6937f-321a-4a10-af7e-748a7b1c16a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61363d3-6b9c-42bd-8eaf-ebed949dac6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc05d2b4-b452-4e58-b609-1eed29b75dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "573aa3e2-5865-4d92-be89-1947207c6f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "755bea9f-8b53-4e2c-aae9-ffae65730732",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354a9bd7-7624-499e-8b48-6ae34514518f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99039307-72b6-43ec-af48-e6ab7aa7c681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89c2795-72c4-4779-a68a-1c791d28e632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec13122d-b874-4075-b954-6bafd2b63483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb24059c-1bb6-4caa-8264-633090b82281",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd57e45-7ee7-4af3-9cbd-57503c8de40d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e69c09e-4855-40b3-a7e0-5c2401df6a86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c43d709-598f-4858-bc2e-e70f6c8bf4a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "601a3839-66d3-49ba-a4f4-9500742a9baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6caa33a9-adee-4293-a9a8-e83d4db2e092",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3353bf1c-c8d4-4b4e-9ffd-25585d63d016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816c29a1-297d-442b-ada4-8348bd804b23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e152a6-abc6-409e-9baa-ec15e42c24d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3234e8ed-8e28-4a2c-b0fb-8f55fe2f083b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a217df-1b8e-4a48-bbc9-6823ffd667c4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc8705d-b3a5-42e8-8b7c-91df3e31f70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6244bd4-62ca-4d68-9ce2-fb4cc0c94ff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17b26316-5d6e-4df1-a114-97367e4a4dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "787f1560-4552-4955-a62a-f1dd93fb6f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d3c244e-7a2a-4dc6-9e45-151b53e18ae0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def0e49f-5208-405b-9569-0b4e33e5a698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4a731a-fe9a-4c75-b898-b17dc0d80971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdb0e1f-c92e-4db3-bf82-3a5082ecf277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9a1eda-d19e-4be6-a992-b41f9fb7f0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2edd08-d072-4a73-9beb-d073164d513d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdee70c-a304-45de-abf2-594b24ccd965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc38e82-7f47-4c4c-98e4-43eab5731227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b786abf-6e1f-492e-8ad5-eb8f1abda088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4620d8-dadd-4d1b-b5da-8220bebb833f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fecd2fd-3873-4ed4-afcf-281edbee74cf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2ac140-128c-47de-a851-7346fa26c64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0167c47-1898-4dce-935d-dcec57955da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3af6b6a-75ae-4b03-bb0e-c14160922e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab692c13-178d-48d3-bfbb-956296e8f7b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0168b5df-4e82-49d7-98b9-93dbf4a1dad7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd45ace-55f6-4947-81aa-5448827e57ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "585b590c-6b0a-44ca-9b13-d96349e36217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c1372d-7b41-4845-ba82-8e3478bbb9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "91383765-ac42-4d28-a624-e4dd50f8eb5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d1de4c-08f0-4694-9d21-08937dcc546d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadf296c-b1ef-4ea6-b60f-02279b532311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ee89e93-a7d8-4fd7-8ef9-b0eefc43e240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a226417-a1c8-484e-9cc4-7c6bb2aff6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75e5f7a2-3a44-48a0-97f7-a9b4b906354e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f061dae-db90-4348-947c-75e61c35cdf2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70073154-0c82-4d9e-bf75-b7e84b5de9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa4fcd1-f0d5-4a36-9931-dbefd76e383d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4efc86c1-0cf2-4885-a09b-0aff52db4bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "020f3db8-f670-47c4-bc4e-f9098419aebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4810dbf-fe57-44a1-8d35-942af957599f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042f49dd-fb9d-41e7-9b50-221fd32004d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2190068-56bd-4d38-9a44-ad3f4f7034f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6995eb24-dc34-41a0-b7ea-66ad3d164d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "92641c41-609d-4c48-bf88-2e61fe0e75b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8efa745-e6f6-4aec-a006-7066ad113f96",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c195a7d8-cfe1-4652-84dc-4a48a04f8554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69ac48b0-361f-485a-9c25-c28a029c96f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49736ac-0749-444b-8496-32b546000351",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6c5d80c-7cba-4f0f-a633-ad8c76dfe2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db278a4a-7da6-4b57-b59d-ae8878c93b3e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "795ef88c-cb73-42e3-a3ea-afbe26d93703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0da9b29-300a-4b35-8753-8798471f9557"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eccf2fe-13f9-444a-8d50-667e6b4903f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b517d1-0bd7-4fc0-adf3-dd7edb52a634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d7ab343-42d3-41e7-a8cd-3b8494e55738",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d52af5a-d97a-407b-8d1e-ae95ae56d8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f822ba1b-3dc5-4d00-bd42-a0863545958f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0234c6b-87eb-42bb-bb47-6da27b7a03ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "143c4568-e552-4c89-bb11-24431283443c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562f06c8-e733-4f76-bdba-fcfcf0fc399a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac3756c-366e-4fe5-a64b-ea352f063ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0789e82d-3543-40b8-a247-c60d7c0b87ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80b1fe7-0d11-46ed-a2cb-7a41beef4758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2e40d0-ef34-4991-826e-f20a382b7089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7a0fd2-fe30-4536-9f31-443d6e3a64f6",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ba1d8c-c215-4f35-a8c8-0a999f3c9ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c653e9fe-f58d-4ad9-b7b3-f043719f5588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98538c35-cc0f-4c4e-9331-655375508762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eac4b00-017d-498f-a83c-9f034ff589cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7aab48-605c-449b-ac19-5c644acd3ed2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a96e476-be43-4219-bbdd-9adc29027302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a5deaa-5c0b-4c81-8db4-9977455a33a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bbae8a-f918-4cfe-ac22-a9120e346061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fb004e-066a-4144-8aac-b66654285414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc49cd1-2c4a-48bb-864b-f7e49eb5233f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c47e7e-d113-4ee1-8c69-b9082d7cda95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8523c528-6ed7-4719-91ee-943a7f794676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7879430b-a4dc-4915-98a7-f7d5b0548589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d2405b6-9ac6-40b1-945f-a98f715234e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95259f25-bd17-4719-b070-e3d21f592c7d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b36804-52c9-40ec-9685-4f50be340334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d6e28d-cebd-4593-8db6-ae271f0abea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3bb9aa-94d6-4919-801e-3255dde0f65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77bd5988-62b7-46c6-a394-71aa16fac35c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bb0d78-9d2d-4c80-9fed-f758f80e7188",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393e7d65-4424-4ef0-9d2d-0adbf3c9c832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345205f7-3ce7-4dcd-86f8-9cb592fb96b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f76a470-610f-4edc-bb45-637c96502341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c7966c3-f7c8-481e-a52a-ab15d8a43445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09798576-59fd-42cd-9b09-0c4ac582bbb1",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005216cd-7cb2-4893-997c-6849a290d612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57398cd-b6cb-4198-9d1a-dbe81c63bd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae044e6-b60a-492d-9046-06d44d96e6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52789e00-7480-4733-8487-1f9cdbcd67c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49606f35-33ed-459d-8f09-18e3a0a10b93",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bc7df9-2909-49d3-8380-4e6c60e13c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a194fc5-58cf-48dc-b7e8-4bb124377def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ff4e2c-092a-4fcd-903f-33fa60f94b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "55c04523-253d-497a-857a-1944ee27a1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca3e747-e7da-4626-a748-92ed0939f758",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c910cb74-660a-4b33-85d1-094e6d175dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2fad02a-2aed-45f2-b9d7-52a506b00f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f40074-8e33-4e03-af9b-25f3d17c3f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bd1fba-628e-418b-8c4c-27c707981e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea78fed-5025-4494-9dfc-ce182537ed8b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aee11c-807a-4b68-90a8-b0bd161d966a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01aaa0d4-2eeb-498b-99a3-2b1d7dbc8525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ac595b-a758-4769-91da-4eea5f5e23b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bca034f1-f174-4d45-82e7-c1afd6202082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf22aed-9737-448d-be83-a7ac7ee2f02c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cc10314-567f-4d5f-8e4d-55e06283d0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecbecc4-6cb5-4358-98e0-fb1ce50aa661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c8b616-c5b5-4a2d-881b-2283302fc538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f53a8387-0c24-4f4a-8b7b-1358ae728240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3615e953-56c1-4c1a-9b13-eb7e2d189f24",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86506b3-a76b-48fa-a62f-5b5e832efe35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5721fac9-2962-43ed-ac39-93c81b63460b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d44e10-f287-4262-b089-26e7b573c232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6779f0fd-9f05-4b67-b968-2855d8f8ac26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10deef03-6342-471d-89ae-d904796e73e0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80dc2a7b-90fe-499e-8ac4-0b00bea804d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5677c05e-b3af-4731-9d42-5cbb8a10a245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e994a706-a961-4538-85ee-7f759f9b7b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3285c568-9721-4c61-84fe-3c125eb0fdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a172e24-6281-43ac-b35c-c2320b4280f9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84a7a10-b666-4069-abe8-d26030d1d672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee764dc-5430-437a-a03f-79083a5c7f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1a1b12-71bd-4705-8f88-ae2205330dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f97973b-592b-4783-8152-d22d1c3dc7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84577ff-8251-4feb-9da7-ceb003783e29",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8add97f7-e603-47d2-b518-39a63bc23b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce43087b-ed10-46ff-9815-cc2bd8355677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0982362e-4431-4314-bdf3-2e34dde2ca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "76854bcb-4ee5-4ce2-bda6-ddcc3e0bc054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed91151-455e-484c-a5ba-dc2933c5ed4f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aecc5a9-dda0-424d-9aa6-4518e7e4bcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f658481-a826-4a82-a2ff-934e357a2f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b18ec121-6dea-4048-a92e-062f109bc04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cce3039e-0a41-4434-bbf9-ccc02f1969ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77608f4f-b807-4ff4-9156-8a55a51ea32c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2eb9d19-cf98-446b-a862-5a0ea7d33e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48fbb903-b0f6-412a-864c-0cd5e972a79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62794387-88ab-408f-a5e6-bb173a2639db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "65c17c1a-9362-48f1-8a62-07ff7e5119da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022aea1b-8682-4742-b58f-17e2ad1ae740",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80367658-211b-4a99-b0af-d0347f99db89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7f76ff-2819-4fa3-9eaa-594b8d667b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efeaa2ae-e0b3-4502-8151-211934bc2a44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff409270-6da0-4e21-abcc-e8759ce3fced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fb4b5c-2156-4182-ac29-2cbc921d00e9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085c96c9-20db-401b-a166-0721055fc0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf5c22a2-442b-4ab6-b81f-c59c831c0c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86875da5-0daa-44ea-94ba-cd940f71fc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "acfe7279-6561-4c77-8965-865082e0eafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd3251f-df3d-4a34-9f1b-c741ee51e549",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "837561d0-e72f-4df5-92da-3b212c19b9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "77f6a466-fc61-488e-8ff1-67cd54db93c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6016f304-ce61-4e5b-8bed-cec7c99c66a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c89b3f2-4c7f-4d24-9093-fa0a927e53ab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "973f0b69-5a98-4750-adcb-a3d8f5246f8c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b7df2071-1154-484f-a611-1016e52bbd73",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c586154-8fa6-4e5b-b956-8529c850a93d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e94a2e08-0a4e-4e26-be9b-91c8747d1c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e617347e-da36-46b9-acd9-29f3b4fcabc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fba78118-3cb3-474a-991d-d1b194035fc0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d198a855-e795-421e-b77d-d09baf28114b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abef5cad-9d5c-425f-ae78-ae78a9e8b326"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c30ee4e1-2b90-463b-b527-da4e13e71580",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cf8a89d-89b8-428f-8441-8450ef681052"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16891fee-2e29-4a3a-9c3c-89faf8311027",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7f1ed1e3-bc1c-4b5e-af01-bb58ed19216b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "471ce7d8-586f-418d-8372-a1f67856d174",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b172ad6d-b01e-4298-94f5-4f8fcf57c011"
                }
              }
            ]
          },
          {
            "id": "5c29f953-b916-46e9-8910-7b464106088b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8698aa2f-2cc0-4689-a6b0-a1830e7236b1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6e6fcd3f-773c-4fb5-b94a-94bd5fec97e4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dfe16a-b932-4e42-a85f-5f2f59550621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2d872bc2-ab74-40d0-9cd3-54defd592b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd823fb-bf00-45d6-a125-a0328d52d833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fb61fa-f6a3-49d7-a9df-4b1619f9e6b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ef3d433-79c2-47fa-b842-7cc574709f47",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4c6850d-4c1d-4bda-865b-927ad5445858",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f235b62-4ee4-4c1d-bb1e-f47872a338be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "65a3218c-075d-4942-be24-bc7726450bea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3b7d29fe-2977-42bf-a560-5d10bdffe1e7"
                    }
                  }
                ]
              },
              {
                "id": "98529964-4d5f-468e-a677-d0fd460f0b8b",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0bc49deb-4f05-49a3-8925-1a97013d75f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc8e2a1d-4d4f-48ea-90e2-2d59009b63d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dea7aeab-30f0-483d-b1b4-3bc4f542abea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04ae8cfe-1fce-4673-9854-8a9feed1af8e"
                    }
                  }
                ]
              },
              {
                "id": "ad63143a-ce2f-449b-87b8-99dcc1c63d02",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "15bfb45a-a6f5-4b53-a337-140a2971a751",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da8ca484-b965-4f34-ba40-54b38231043e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d76d035-700c-457f-9027-de5223ca2359",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b3f2ed65-5309-42e8-a22b-604b32c71f20"
                    }
                  }
                ]
              },
              {
                "id": "7191f497-8c90-47dc-9656-0cae6fb741c4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "846cf183-d589-4630-8b60-88b63a3a17ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6f65ccb-5ba9-406d-a726-b27143c3f6af"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "08e9597c-9c25-4d57-bd8a-11d09f1c3182",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c0218fdf-733e-436f-8392-94a65d4effb8"
                    }
                  }
                ]
              },
              {
                "id": "170bb886-2b74-4ea1-827b-a211d0478e24",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a91bb3c2-ccc0-489c-8e2b-f42fc14ce29a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b3eef04-5cdc-49c5-ac14-30742278ec0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bcafa64-ff84-43d3-a71d-652d669a8ff9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ff14d208-fee0-4805-aeca-c02159ebdf73"
                    }
                  }
                ]
              },
              {
                "id": "953c3558-311f-495e-bf73-03d7f1fda213",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "911bca13-dba2-43d7-93b0-6721629e390c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c5c911b2-e864-4b2c-ba2e-5f105fd4375d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05d3725b-deab-4c52-8779-9198b198c50f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c974302b-9758-4df3-8b46-6d751a77a470"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "352b3847-750d-403d-8511-d0c843e67453",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5c52b1f4-d449-4076-a7b7-aa81bf83f735"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "007b994d-38a1-4a9d-90a9-d72b5e99dafc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f06d6b24-f931-48b5-90d6-4e5be8dcd343"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7d16425-3c99-484d-8d18-bbc5cfe52717",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "30da88d8-139c-4b57-be2e-0fefe512a8bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11b87162-53d9-455c-97b3-c6d026741041",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b0c8414d-68dd-4e96-bd30-386555d07fe8"
            }
          }
        ]
      },
      {
        "id": "930f514c-b8d5-4466-abe3-ea90509f5c8d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2b67c426-2664-451e-9767-39c7f42f99dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7dc86577-d7c4-4ba1-9762-2abdfc169de3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "95a8baab-c4f0-48ea-90f2-64f4711f11f5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30449087-1008-4f0f-9df3-d0032bff8d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a917ce98-1322-4d12-954f-3355772e82fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f3c3d7-32c0-4835-9dc5-6b6f4a5701c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "089ec378-98cf-4298-acd5-7113c7ea5d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4990396b-6f3b-4f33-bae0-59afe096c292",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea3963a-0c3e-4db5-a66f-aa80e1ea4457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8bb82e-fe77-4dda-90b9-de737d4be06f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e5dd877-8b6a-443b-81c0-3ea781abfd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9dc269-9038-41a0-8f55-e847cdd7e96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d4bd9e3-df73-4a24-9628-0dddbb282dbe",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e09b9bf-e5de-4003-a325-ca9ce80733ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f064131f-802c-49d1-9a3a-ec4aa4086ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d364f77-c656-4cde-a7eb-313dbd9e897c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bde7efa-d02d-46f0-bfe3-3c82d09fd8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07c079b-1266-4e83-83ae-e5abf1245be6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a91d78e0-7db8-403d-bbe5-c5e365648d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe4ced1-3b5f-47ee-8a60-cac1b6cab841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048a2816-1c6d-45f8-a1d1-62ae25a84bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60a37ff1-c648-4d3b-ab32-2669fc5ca214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45266169-88b0-475d-a273-0ed8cca5ce1c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cae69a2-0485-4847-b62d-0e98d48c217e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880bec7c-6aea-4394-8887-b434da10df37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84b279a-bc72-41c3-bf82-e4943a0ec776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e812850-84cf-4c74-a8bd-db3402df2809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bed945-c8ba-445f-ae60-bd9c540874ee",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cdf30c-687e-45f2-b183-45fe8ae5fd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e09c797-2449-4a65-9aa6-ffdb0d3acb8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557811d1-a70d-4f18-b980-3fa3154a2ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e014ee65-63be-48a6-8986-6c7a24fd0778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcfe3e3-c060-4095-80af-f657e879d14d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6daff92-7cfa-418d-b36b-326c2ece7847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e483d0-c5e3-4c67-a7fc-3d7416a6ef9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4de1b7-2070-4d7e-b955-41ea21962f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "51924726-b81e-4bbf-967c-4ea29740f128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3382a6b-f58b-4bf4-9543-d46f5a65b13f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a200dcc-85a3-462b-aa60-2ac40fce6433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c2d7fa-bdb7-4b84-8bc3-9d433e3bb0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a95478-7795-4ad1-bc70-ed9abc159ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12605725-a9a7-468e-aa57-ea6311a601e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce5705d-f05c-410b-8900-53cdf7539e2a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6b3db1-31fe-4ea0-95f9-f2f63383891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690713bc-6f32-49c6-abcd-fe8918ac7ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "825e2430-e5df-452b-a2e7-c0baeb512da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecfbdb93-acd2-46ae-a32e-f40ca032bdf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e1f6bec-6a8f-4a70-9560-387efe37a06e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84616b54-859f-48d5-b2e2-fbedcd8c9e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75863d31-8d86-4f9f-8329-3cd75632b28b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34654a2-e99f-43e0-85be-6f248c883618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fe83d72-707a-4192-8490-9cbce73e6411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6dccb9d-2031-4a42-bbf7-c5ee14d38e6c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2389b51-b006-4325-a8f0-0941e61f5162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d540c372-8a06-4141-9486-719af58b4e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6023fc3c-c60b-4307-a841-25f073504801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "29b9bd78-1313-42ed-b331-72d5ded83486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7454775c-98e0-4e9e-aea0-71825f413f94",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76007f5a-c932-4248-b5c1-5ba8ac3f3846",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b5bbb3-f908-4c63-bfb2-143924791aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4b4d74-23e8-4c5d-930a-28e621e1a7c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3a45e0d-4987-4363-8ad9-0a85aea3be18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "986a032a-4d1a-4381-8a81-cddc3e421b64",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4187fe-fcb2-460b-9669-5b851f8e6792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc10d310-46bc-4d3e-8e1a-58c590390cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d16e5df-bacf-428b-9bd5-aad65dec9855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "523096ba-814d-4778-a634-8aef84d44ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "292c8bae-059c-43af-a816-b95ddb6699ed",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4075642b-b5df-4767-b03a-2cecd187070e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c71f324-6525-4da7-a437-9520605508da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7595d4b4-3926-443c-bfd0-832b81c8bab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "281d528d-d15e-47ea-ac28-031ac3a25171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c4db615-d3fb-4658-87f0-93556f710046",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c48ab5-34cf-430d-87fb-3a4edf76e2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcf374d-164c-4689-9522-e8ab2c3cb2b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1312b9c-a926-4c06-bf50-dccf62b944f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f67191-368a-4f7a-b798-2b447ec11cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc8ddfe-bbd9-42be-b514-255288b0cc33",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "231f74ab-ccd0-4b44-bc6e-603cecb5d23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70d6b85-2fdb-4906-8d5d-0bbe4e6ba68f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d91374-a9e8-4846-9b08-535f27d409d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc63eb6-fac1-4288-8766-afb193611815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f6ba83-6b26-4cf9-bb57-c146fab052e4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872ed3ab-4efb-40d0-958b-46b38f1fd82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc120a4f-bcc1-48e8-9fad-3b3d90992609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbba3cf6-2f68-4d75-a9f0-aa454bfa8b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bd96733-80ed-479c-996b-598012a031e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e6e640f-e2e0-4376-bd79-f95554d56218",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6718a83d-e61f-4ff3-b1e7-fe4cace54407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c75943c9-207d-4c99-9cda-e0cfc3656e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e85490d-3dc2-4606-b89c-39b50fbbf5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffabe2af-287a-40cc-86aa-8be0ff351aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e503b8af-3c55-4818-9b85-1c2713de58da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04311bd3-51a6-4d74-b5df-7a331b43fbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0944d25-466c-4a46-8ab8-b1e6656af254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "858e14f6-6965-4e74-a4f4-54996750a295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d469fc67-ed61-4747-bf7e-5e150f713b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bae8dd-3eec-46c1-9ddc-f6f38c1e952a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d96c71a-e2d5-4b12-aa31-2315c3a67528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28ec758-2e1d-4af5-b360-157a3b396c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0623593f-ea18-42f3-9eab-59527d074d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66a3c714-bc37-430f-9c3a-88a9f976d25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3d5bdf-142c-4203-a247-47afd1de5c84",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deaffebe-851e-4b2b-a3e1-fd3c2fbc6d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a93f523-e220-4f10-89a0-556c24310b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdd70bf-7dce-4234-bcda-54ac580ab3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f116bcd1-5ba6-4445-a828-9eeaebd7319f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94d295c4-9414-4d98-955e-7bb185bc6c89",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3edb65-d8f4-4e3a-aa86-5ea546c77fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdc850f-07fd-4bd9-b0a4-6205808ab307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7455ca03-cb2c-4b73-a058-afcf66c915fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21022739-67b4-48ce-b3b5-48953b5d833c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da8820ae-8e5c-48cf-b536-ad031a8a76c5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd522544-dd23-440b-9f5d-37d2efde0884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b563975-7f77-498e-be10-e752974bc5a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8513dd6d-779b-4368-89d5-38c44a3ca20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cc264b2-481d-4e61-bc76-3abc7c036ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bd5f99-1373-462a-9a02-b9a02c2a2631",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb0f2c6-94fc-409f-8bb5-025effd7c08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe9fb39-3fc6-41b0-baca-6f9942de94ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32aea49-da0c-4241-9995-45d628dea4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1c225c-6d3f-4473-8378-0d727acd2b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cc7638-b3fe-4316-b32d-d32572d6c379",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "106b129a-9602-414a-b0e1-5b0a15357ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496e1513-79a8-45ab-a943-ece2878513be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd3c77a-cd3f-47f6-a87a-f388ca6dc209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b53a94-4dd3-46ee-83b5-e3d57db43fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c7e837-2df6-4dbf-beb4-135f09e45b6a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62a91b9-8fb5-450d-8e8c-1b0681f5c6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ebc9d92-0004-4067-ac0b-1a0a9f8eee5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466d9f33-6095-494a-a181-502414827bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81cda32c-1ff7-4aee-8830-fe78a13f707d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c43a5a-94df-49d7-bfe6-baad41dc98b8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c04f0c-46d7-48cc-836c-2157a5180b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0fc5a5-8eaf-498d-92df-e8b24c26fab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff202120-eec0-4037-817c-b96d36c66c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6615fd7e-acac-45dc-bf6f-f72feaf4b68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1362bf43-49ab-4c1e-887d-f34c9b936d86",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5860a0a5-e233-4e4a-aec2-8e6c4981a80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f89b1952-dcb7-4c52-82bb-24e8c150fd76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0b4d0b-f129-4b54-b344-77abb1c7549e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1665461-645a-4dd2-bd87-4dfb5d5c118a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb8c240-cd36-42eb-9a8c-00eaa31ddde8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45cc5218-4196-4ff9-b17f-ce7eb996d449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728fbbef-9940-427d-a9e6-e73bfd352028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682495e2-36f7-4ca8-a5f3-5b5c5e4047bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d045fb55-12ef-4d3e-8922-804725256230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe3b7c3-8e94-4184-97c4-ee66c60ccaed",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcfbb9b-ef64-45e2-ad00-d523affbd5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7f4d8d-eaa7-428d-8fe4-53f134f34c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07eb2bb-6725-4f97-9f1e-cd55655108da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dfed5d-72cb-4376-9daa-b71148185bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1afdad-466e-41e8-9208-6be49f7f5ee9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167bebdb-e04d-458f-af81-03383115ec4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28b3878c-f62c-44df-879c-556efe051444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b27904-2d8f-4a33-85e2-d65856381db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7631e36c-98fc-4e20-992d-5ea500eee2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2e9534-f0a1-46d9-84ea-9d0df9f75dde",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f29ef24-51fa-4274-bc18-5bba09752a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee40d680-2415-4fc6-9aee-05b774b7615a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454f8204-3ea0-4545-aae7-0d4810ee3497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8734287-b17d-425f-a0cd-fd07c29f7905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a96e793-03ce-49eb-a57d-f5c66458693f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e599d7-bda1-4f9b-8d82-559971e839e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b30b1491-ed8d-4ded-baf5-35db4e7ed8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd95398-2235-450c-a7cd-41ac80acc26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "19e54fcb-c19e-4f6b-9775-7a5dfb3f645c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad697d6-629e-4b6a-9bfd-5b6db9ff553d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073c5075-a837-4131-a3ef-97be262d8dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6785610d-62c8-4b0c-acdd-9b8de0e30e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f326ec-b6e1-40ee-91bd-35625664b62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7980b5-be7c-4304-ad4f-45cb57f2b4eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710e5ec7-ad57-4710-b1a4-93cad0234de8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765753e0-ded7-4629-b86c-3a176adfcf1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd05364-40b8-4460-8882-74d18eb1b445"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6da5d2-125e-470a-bf2b-74495b40ab48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc0cd08d-d8ac-4a4a-b0ed-ddcfcccea48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c711dd-7f1a-4fa9-bf51-7bae773f70ee",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc12a57d-39b6-4410-8858-0debd01d3cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf80a61-5dc9-410b-9c6b-1b275143b88b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b4e01f-b056-417a-ba44-10f2c91188fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94abed4f-edae-4cce-8c2e-f2f080304f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b045b849-01c9-43eb-9dcb-3927049ca0ba",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf35e79-1b65-4499-9fda-26af21ec4d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a34c88b-d2fd-4428-bcca-0dbffb56b60b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca8af25-3c88-4398-9f40-ab7175eb2b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26fb9b1c-ed91-43dc-b997-30672d7319a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "146ebe30-94fa-4376-a162-4a0498bcb559",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f022e84f-8bd1-4e84-9256-360ed9b3c98f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4338b1c-0496-404f-ae57-a6642b494931",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "806b6098-5326-401c-a39c-f41de5ea55a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873c6413-db24-4ae2-a02b-f72c43251f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd17743b-cbe7-4ba1-8c49-28c9f4397429"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd767db2-61f3-44bd-be8a-c67b7e2fe070",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b98d964f-15fc-453e-84ae-79cdb45a9ed2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3f19ddb-8009-4f85-a7f1-48dfb5ab607b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e06fe875-fafc-479a-b88b-a87857a38467"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2842baa7-36b2-4140-8486-e39ca48cf6c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "79eb3309-132f-4a82-9556-1303521549f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "47770d43-2b3f-4bac-8520-aa665bd98604",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8af19c06-08b5-432c-9e72-665ccd652e7c"
            }
          }
        ]
      },
      {
        "id": "bf8b10db-b01d-40df-adcf-b63fcc16706e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "b46943e4-8a53-4de3-ba99-77b86bf8f3a5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51ae120c-e704-435a-b709-bb4a5b105a02",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2736d5c-40d6-4f69-bab0-560966e2f31a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09b6063-59ae-4b5e-82c2-b1ae1fed2777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b4eea0-57d5-4b63-b6d0-946468bfe445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf063776-c1ee-4850-ac12-3307833ed39b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e422ead-47b8-4a29-824f-b585ff234388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70265d3e-728f-4f01-9c38-07667247b506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07544e85-e4d1-4812-b5d6-ed28135532fc",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af67624-9e15-4404-b38d-9616281fab84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd82a466-b307-441d-aa05-af26afcf478c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e013b35a-977c-4856-af39-1ee6e3049d96",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee1ea05-953b-4628-8f1c-4b2a2ec48638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c959d9-d5e7-46ab-b643-073c38f3a770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ec5ae9-fa2f-4559-a223-9df41d67fc33",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7253b8db-21e0-4e2b-aabb-e55a8e9d88fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69cfdf7-3787-411c-85fe-85d65f1518ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4597b509-69d7-4f07-80b9-ab746e9ba3a4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90a8549-65a4-4c70-ad71-c2ebd617e5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa61de4b-f9d8-4ada-a341-4a42a9b90faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7038ba8c-0747-4c0b-8ee6-efa2148fe208",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20a16003-474a-4e79-b6d9-dda6eb08fe0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a44ad59e-3ac2-4549-a494-19b8516d907a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "907f64ae-1ede-4924-b0ad-fe6c59e2bfae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a9d6e6-1d2b-4e68-bf63-65379f5ecbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb77b6f-3ee3-487e-b339-a58a0e6af147",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466d0151-1187-473d-a2a2-73cea94b0ccd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b594374-5bf7-432a-877f-25ae7b89afff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc483608-4f00-4042-a47f-c0ccc57a89e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7103593b-c930-4d67-b4b7-e6dbfd53d0f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9849590-8f23-423a-b77b-9bbf91a7486b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6638e998-8ff5-49e9-b32f-3cd2a1125f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c61132-ab49-4938-bafa-b712badeb1dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a64119d-ddfc-4e30-9e41-b3da97573536",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258091cf-50a9-41f5-a0dc-0653f948e39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b7f777-0427-4c92-89df-069d17a7e06e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99207e40-1e00-4cda-958f-74bc7e90a36e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc8d0425-22a4-4c6a-b1d9-632f429e649d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbfb34d-c33d-4f9c-b322-4a145dd5e37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407c2916-7f82-49ef-8b0b-aa2eb0e35df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3126eb44-422a-4541-a69f-0cb829a05b4b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614c8f9c-1e66-4742-ac31-90813de1a06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c81d62-5893-4ab1-ad35-6407766d33b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56662c43-6471-4d9a-aca0-44d2321386b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6e0985-3661-442d-9d8d-a29b41643ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98891f3-58d2-4bdb-b111-f8439bb171d5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe2c66a-9b9b-4436-980f-e8156aaae410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a16fd34-6cf0-4bc3-8329-4a62f49bc2dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bcea53-2b19-459d-af36-20a34ff5820e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b89040-62bb-44be-82d7-ec9d95519577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1bd5733-f151-407b-843b-051c84a03521",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21aa5eaf-e981-4669-849f-85a61e70243b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d5e2415-8ec6-421c-a825-ad610f3c070b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263c7d8f-41af-4918-9e1c-43e07f4f4a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9c5c35-5901-4e79-a90d-16988e4a296a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1021267-fec6-4bc5-8f77-f50a3e834211",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010d2414-d339-4bf4-af0d-772b699ed5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42359d85-d9ba-46d2-8faa-228a245a03c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2f0c57-beae-46cc-8c17-b47c1373f8ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac74804a-e067-4bbe-bbb9-3c7f64720bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e793ca-7c57-49fd-b53e-19245de11804",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffaca4e5-ff74-4c23-8220-075f3d8af050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8c7c017-c4fb-4a31-ac78-d27eedd525de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708df5c0-27cb-4b82-8724-08f93c2664cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd494a44-b503-431d-afb1-fb27bf4a7632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de16ade-6389-41c9-b5cb-57011b7a26a4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2357fcd-c315-4759-bba1-391610035337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51754c63-e463-4bce-907d-f157fade5120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e8055b2-52d9-41b3-9c4c-e91bd8ef09c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdfeed41-8fd8-4345-85fc-cecd947422b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6bab82-f724-4dcd-b02f-8260504a2fad",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8180cf7e-dea7-47c3-9e78-29a512ff580f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d3e97d-dff6-44c5-b6e3-dde0cd6f29f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ee4d14-c748-4fa5-a023-216c432bdf8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76b4336-43c9-46ef-b326-f8c13c05665e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d9e6f5-dbba-43b4-a2c3-bc14c150a18a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4ec7ba-14ba-4135-a296-228850172214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef457a7f-8dc0-46fe-9062-5bde54924397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000cf920-a9e7-439f-a950-d97a846ddcb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b49c49a-c877-4b7e-9217-52cdc6ec7c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dc42c69-ea50-4fce-84b6-cea9a7eba953",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e812c26d-4821-4b23-8ff5-2ddf3ad35e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8a5bf1c-6d00-4001-8b13-e6c09684a9fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ce33a7-64d5-4af2-8724-b6f72b0bfd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2f5f6e-1339-42c5-94b2-bda190800e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c32f309a-6ccf-4293-b6b4-579443f75131",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ae8b58-777b-4e9d-819b-bd78046597e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1413629b-7703-4a80-bf19-b32c02448379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25f2743-5438-4e49-9422-7091c630ed72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2434563-7bff-4f40-a461-0f32cbc34c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de502411-041b-43f4-834c-84e90f59f47f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a86986-a85d-4ff8-ab62-0af1f7a639a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c0c422-f6fc-45be-bbb1-1e06824600aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd671fe-faf7-4d1d-90fb-41f1cfbb5aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a0b6e5-6055-457e-91e7-c6f5f9c3fd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8154b1c4-e49c-4272-954d-06a1f74d447d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1517d834-14a7-46b6-80e0-70d0b9c9eb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e342250c-715b-4264-9747-9f1d34338820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3249d79a-c976-44dd-8b1a-2db9033a45f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d28eca7-88e8-4f19-b07c-0ca5f05e33b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc3d45c-6347-4b5d-b17e-abb2fc7e5e6c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220acf5d-4d23-4bd1-acbd-a1e7aaf7e7cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ff883a9-a5bc-4b83-b3b5-299d719895ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0aa2a0-c3ab-4f26-9e07-3f962ddce8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7c257a-72f3-4c43-996b-a2d6439365a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eca8f98-573b-4346-a67d-36b498a94f2c",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1732fb34-f8c7-4551-89d7-1e37987bdc24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac84f29b-e84b-4729-b2cd-97431383f4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc56cf4b-48df-453e-a3d3-9a95d0d4455d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c36685e-13b4-400d-8e54-cb844f7c9e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9d9d4a-126a-4c74-beee-de787892aa1b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02c99ab8-c5c4-4432-817f-4c38c33b7805",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ba3e9af-a9c8-42a7-bca5-a78fdc9439af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b296cef3-ddc4-4e7e-8cb8-a70051ff46d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "984c027f-b23a-4952-8ba3-2615bf93a214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b38d9d3a-50e7-4238-ac51-983a8a2522fc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3680a416-5a0e-4ce2-b1cf-d6fe62328e72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21ea50f2-f80f-4f9f-9133-e72eff6b9fcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a941915f-7147-47be-bada-966a4c270af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c73fc3a-62ff-4fea-abeb-ad241e60ad42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d22e60a-d188-41bb-b2eb-de1e9fe4c861",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57be3451-b1be-4ce8-812b-998fa857d688",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528f3c11-7a39-4978-80c6-2db01f646db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008b850a-e513-4c24-bea2-3346cddd18a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aada0b4-2d06-487a-b544-96f8366064ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229d3138-dfc1-4b42-8934-e5356c86a8b2",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a32afa8-5749-42a0-93a8-f1edb50d9cc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0af33669-6c95-402a-93a1-8878866bdf17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f0c387-f4f8-4759-a230-cb48c3064faa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0e8a72b-a19d-472a-9288-6df89f5b3af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de0de5d5-a126-4fd3-b724-d4ba1ac49e74",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c789c34-7c11-4b06-aeb2-bcb4d3bd5b2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d65f6cc-f10d-41dc-962d-15c873378c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7369850-e0e4-4a41-9cf3-326385246b76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5caf8e05-a7bb-41e3-9973-8f76fecbc55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7523716-9136-427b-87fc-771086793535",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad6bf8d-3112-4c1e-a5fe-0b597a43c66c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c462b7-96e6-4379-9e34-959d3e373659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ba5688-fed3-4cbf-9c43-25e682c56f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1368bf80-cfd1-4803-881b-6a35a62ceff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc51a305-12e6-451f-9e61-d979c161eb90",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa46e2a-cf5b-4cc4-ad3c-4128d84e5791",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a89c59-c85d-4a48-b582-e217c867ddf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07447805-aef2-4cdd-956e-f0c526e98b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec8a28a-3397-4b46-a8e2-7ed556a06b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "703f227d-5556-45e3-bb97-e23b2eecd878",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c24265-b5e1-409e-bd21-326966c2abd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8102ef2d-d0d8-49c6-aa4f-1a463093518e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da96662c-80c5-4b6e-a5f9-a72da29bd1fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8875a15-3585-4b57-8a1d-9d052751b6b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302c1c2c-0d98-46cc-b869-aae94ed501d9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aa05bf7-1f7f-45ce-9e00-638bcbe12cb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01d4135c-9d36-4b79-b7e3-77097c5a92b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c919b21d-89e8-4a99-b981-7fbedbaef024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e0768a-73a6-4610-9fdc-94a4a8d26585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4750d8b6-06ec-443b-abdf-3bf2f66e85de",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ff77c9-5885-4ae4-ac24-7780e61d6d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa52828f-a39b-4c03-a044-859b3a50fc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08deb55-140b-4fe4-91e5-ce7741766854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1a24ca-b287-4e6b-b2ec-ac9191b15495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c83326-8a2b-4767-9091-b2587edbadae",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33956f3b-bdc4-460c-b481-5a57d26a4615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ade56a-bad7-4506-aa0d-5eca91131238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597eca6e-7f3d-4e76-9b8e-6616dcc0ffaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b345f74-d287-4a34-be4b-7f70e5378c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1ab478-d010-4152-a295-5c22eb26ade5",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c3630f-70d9-4311-9879-3c112eb1f8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14efa5c9-9323-4ed6-8617-5285a323bcc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a75f9db-b83f-4a35-b3dc-d462c8d1d576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347df7a1-89f7-4691-83f7-8e30ca85183a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecb2180-3b44-434c-9dfb-dfac5c09bafb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c742ae-d08e-4aeb-9278-08b8fc0bbb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75ca6143-8945-4f94-8081-6aa4ffa795c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21452ef5-b6d5-4c1e-827e-18bf26616e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01bc4203-8025-4bfc-b662-f3875801f288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d983ee76-4b65-43d5-83b6-522ccf1ebdef",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e573c40-e5cb-484d-a3bb-4c5602b8e0c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621987d3-3dea-4a2f-aeb4-a217d67b6972"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35737ea-a3ed-486f-9b8c-df01cc4bee02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8732f6f5-03fc-458e-9451-59b40bd3f7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc21d5b0-8144-46fc-9fb9-af1c06a12251",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33427b06-67b8-440e-a827-edbd1496e413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79ff014-0082-4128-8524-ddd002f3d1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10ef9ef-4438-402c-ab09-0ee173bc15e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cd4abb-5ec3-479a-8921-f08ca27fc5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8413b2-8087-457d-8888-5c447b3e21b4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b672b6e1-4d35-4447-a32a-d49db1c24f49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07222ce-359f-4ffe-82b9-fc86aa7d4c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8100b82-9cb9-4c85-9f96-cf124de99eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c75ef9-7248-4a52-b5fa-f4105a717c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea3030f-7f48-4893-8d48-bffb1b1bf1e8",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c462dae8-959c-4a01-8df5-423f7496ae1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c950d70-1149-42cf-8cab-bb1f8aed05de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a385ae8-9453-41eb-8112-dc606c4a7041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fc07ef3-0e02-4798-9774-763d04566992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5d2203-865f-4382-9a39-628bc02c43cc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "995e4950-36cb-4bcf-880d-0a19e066e3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df4bea1-a8be-49a9-8ae7-740d2ea46ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41eb4d16-8769-4b03-9d90-e7ffadbc477a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0656d05-374d-4f16-91ac-83dbd5fb7162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0783a48-05aa-4464-8fe4-e350a07f6295",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb03c25-347d-48ee-879f-4879848e3eef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f313e5-28b0-4ec7-8ffa-9ad236e8f6c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfd6105-57c9-46ce-8870-97b8b1d88e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37ef7b6-df32-4c9a-9a69-9a399a3191b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42f61b4-5554-4dbe-9480-f963ebc9da44",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e02cf4-c129-46bd-81f1-27f828f0edda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29610cb2-f9a4-4f81-914b-4f9d0954c9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe48d1a-1375-4df9-a79a-b9accb9aec8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3971cd92-3367-4dc9-9d4c-9509ae9c3c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f1f75e-d746-47e5-b2c3-17e089c0e277",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c9223e-f591-4e7a-b164-f9e5326f0d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da44c3c-d40f-409f-8470-9da89962d670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dcbf6a6-37b8-454b-9049-a3b3f3a13428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d18d57-56c8-4e62-a522-0aa2b0fa4022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906f925d-0a11-478d-b209-e33eefa3948e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c948de4e-2209-4d3d-bd9c-e34b4a39eaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a3877a-9276-4b86-995d-0bc5b5a88dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28b5356-e8c0-4c89-95e0-c58f2a9dbbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5962deac-981c-4050-a11a-2e3d80602a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72ae4326-6417-42a7-8057-6387bd2fec30",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ec7f93-50a9-4771-b35a-7af9206d4d23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ee6a7b-b5a7-43ec-b6ed-87372cd0aa3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea20daa4-98c7-418f-a3d9-6003d27b2c26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5cab1f-3a2c-48bf-a109-75b649264725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5a45c0-932b-4826-a9d3-2c4e5ea17c3a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5594f261-c266-49c4-bc9d-f8ab72367c30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f361bb-e0e8-476d-8cd4-75f1a2ef204a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451a1732-46ef-4664-a322-b8f3a2937a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a2cfb9-ac54-465e-a5cd-65de3ae42197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de8846d-f19d-4860-a840-136c4edf92ae",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b979504-6385-466b-9bc0-eeeeb5cdca6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f138129-b269-4d23-9cfe-b67d29fc0ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "597052de-e4fe-4b7b-8068-ec83ebf62b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982cee97-30ae-496d-94a2-153c19052ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b8cce6-9437-4387-8c85-5dea551fa180",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a347262e-73c9-4700-92aa-229f0d06f095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfa09402-4fd1-4886-98f9-95064fc2b733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e656a10-24be-4810-8824-99e2233806f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00ba53c9-33fd-4057-bc2f-a25e2e7a9204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4abb58c-a781-4455-ac57-25fcfa39326e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8575b692-1816-4871-90d7-1cc20ddbfaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d2844e-9f96-4c85-95c8-bf60a7b7feb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57dfabf8-bf35-49d2-9927-f6ced0e46d85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf079de-19e2-4d12-bfea-c50488e7cff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99f9245-69f6-422c-adf5-d8e9fbc875c3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c559ff-6af3-4d82-a317-23578d109008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ed6eae7-ed28-44fe-a13a-f439ed4045c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a86946a-c4b9-4f7d-bbba-5da4e73f03ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81575936-e014-4cf0-868c-68d0a0ef0936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dfc5d0-061e-461d-a0d6-f4a78f791526",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9778be98-0193-4981-88fc-3f6bc479b74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1515dd92-ff3d-4348-ba43-30cbcea08b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f66574-5ce1-48ad-b54b-a6f3cae5d1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b31b2b56-dcdd-450f-bc7e-90aefa321a3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23482d2c-2714-4439-b29a-dee13d23740e",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff42389-22a9-4f8c-bedf-8e38cab29079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5f6e83-88e0-40b6-bacb-9dc07773756a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b04c381-59f4-4426-9a38-7425c6e5b3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172b466c-be6b-4062-89c3-d038e1dc5c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c571410-e3e7-4bb1-91dc-fe1330c123a0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3aee08-a999-41ab-94db-2a17e7c1873c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787aa17f-3025-43ee-aa04-bf50f93c8a57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13904cbe-a2c6-4e1a-b7d5-3254a9955fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "892a3466-97a9-4cf7-9bad-29cf5ea6aef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a495915-3392-4056-ac9e-bdcfbdc76400",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3fae83-4cf8-4d57-9d6a-1b5d4a8c6618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685569c6-188d-4e1e-871e-16b7e30054f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4efc8b5-a3a8-465a-8356-2a3549f2c64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b216f6b-10c9-4233-a171-8b69b69fa3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4810a230-e542-433a-84db-53094aa83dc6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ccb09d6-0ce4-4fd8-b619-5b92ef4a771f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0e9052-2694-4ff0-b8b5-54e74de781f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2544a7-9e93-4cd4-8d00-bfd913565704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c316871-8c5d-469a-9354-66620cf3d33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de78c30-6ea7-43a4-acee-e075045cc4ad",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69816160-2b9a-462e-8c3e-e3c97d723d87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e62609-eadf-4f6e-ad2e-f83c682c7516"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b1287e-feb9-4d7e-8aa0-aa4a63f7a9f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edba084d-c431-4a04-a82d-974e08c1eaef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916d8b74-06c4-412b-ba05-bb4ef21bdfe8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb08575b-66a2-45b5-ad4f-02c0a0e24cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfdf7d28-c60a-43b4-a274-591bf1467050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "084892cf-17a2-4dd5-8189-eb3bdaeffa70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6da357-a6b0-4dfd-9a80-87614d60a274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7b1e71-3d5d-4fde-bb46-3165e93c2688",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1732b871-dfcc-41f2-bb4c-9ffe45d42a2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada105b0-3006-4465-b189-29579810f622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae6bac88-0d0f-4f84-b8c0-cfec19dd21ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58b37ea4-d544-4678-8a91-c9c7950a7355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c122741-befc-4934-98a9-44372a4b2973",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d813798c-a022-48b5-ae86-a59a5c4fa9ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01d670ba-c5c9-4a51-bf90-551a24ee8d03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4742b8fb-730e-4e27-8431-22b622de9c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b17a7bc-2498-44b0-bf0b-a493a570a5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6199219-0e92-41fe-bf7b-20bfee3e8b80",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c889df58-971f-4556-a67c-c56361c7df93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b204b57a-c1b9-4211-b471-dd45281f3704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573b3636-917e-4ff3-b3e9-b249b787c4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca28043c-409e-478c-8b46-dd1ee295fcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fa1593-e4a2-4eb0-872b-3fdd23b71037",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cb1903-56b9-4127-b903-df5d6f3739b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3a6eace-5cc2-439e-8f70-0481947f3804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7faa67-821a-49c3-b710-2fe640472319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "160f85ff-40b4-40ac-8d77-d6ae8cd18a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634b69b5-45a2-41ce-bad8-67906bbb2fa9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9f30db-57a1-4697-9ec2-253a8dd04b69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d6ff41-1f78-4c77-afca-5edc76b0f3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7517f49d-e5d9-40f4-981c-951f57dfc817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46651779-6db8-40c8-ae2f-299ebd635da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e738f24-7cb9-4e20-9803-98b4e8924bda",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81afa0b4-2c22-44b2-bcc5-eba693336d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd4aafaa-55c1-4c08-8084-a83b4f8ca858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d258f5b3-dbe1-4658-86a9-a071618f5e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbec0642-9b7d-4e3d-89db-c96d848701f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d32431-6d98-430d-a409-39d261b0cdc4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0082304e-6881-477b-8f9d-b7a05e475dab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7e5dafd-1018-4df4-8efa-3550af8ba116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab83da51-c2a1-4e31-a73e-da74b6c6f51f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307dbbc5-c474-4d50-8530-383776078373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbb8923-865b-4d3b-b4cd-38a3820252dd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a2578d-37ee-4f01-9a07-d08453119d4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9c2628b-7a86-49a3-b72b-a0eba6b258b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20c8d3d-cf86-4860-888a-bc22600950e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8771a1d-cb4f-481c-9680-6ddbd0d2e46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ac9606-368b-4dba-b6ec-0fa84427372b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8113d4-71ed-4be2-9304-134f7aed1183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab331c9c-83f0-48f3-9849-b0139e5f90fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df34c96-7fb1-40f6-a81f-f84ef1d5f4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cb7a7c9-1c70-4d84-b599-e00a57e75e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60347e9f-a4ff-49c1-8917-1e7ce96975e7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24bc554b-3a7b-4ce8-8e85-aadca31a827b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d534ed2c-d0a6-4b9b-9fb7-7bbd5e8bc84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7080b329-6964-488a-ac25-70eb7b69f286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4abcc606-5ce2-4fbb-80b6-7b29fd1a5d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed0251f-8265-4a99-93b1-d9acd04a5c3b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8644e9ed-aaac-4092-8902-a5fb88028bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db2471d6-e287-4743-ad6a-5d38dc8c21a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de24f1f9-5edd-41f1-bb61-5b229edb2db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fe9b090-910d-4589-8ce1-fa5b916f29d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0862d498-1860-4092-a259-6a798e907c76",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a30c8a-78fe-40ff-90f3-c98d1ff03207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf647e9c-dd5f-4fc3-8b56-3b19107ebcd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c85678e2-06da-4509-9f08-3f1c94562960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f84d96-278d-478a-bf24-2b68d7b16362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d0f8c1-c5da-473f-a5c8-c8aba614db36",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03963744-90ad-4191-8c89-34bf2cbcb884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03924615-4e88-434f-870d-f541280230f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d27161-aaf1-4884-b100-c77ea9f92775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512fea55-b128-44c2-9491-29cfdc9aeb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ca5502-3862-4cd0-8337-dd2e13f6bd83",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812526ce-d51d-4c68-aa6f-ec0e80ad240f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "415c5188-47ca-44cf-96e9-d63ed4363d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f525a6d-9d66-41c1-af9a-12f4cdadd85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a99ab2a-6a36-443a-86cf-ff76b0430c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585c1586-1192-4e5f-8fc2-2a5b243f7658",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7095aa-7faf-4198-8384-f919d20e2555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95342788-f513-4a6b-b67c-3471d2309072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c940c3a4-7ac1-4b9d-b659-5966ac7bf8f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9f510db-0628-4008-aa0c-2952b438e946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c945ca0-4b96-452d-b681-23c59f2c0427",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db493a0-f159-46d6-8479-204d8715ca9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d971507-23ec-49da-a2ca-906fd7dc1d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9527a9-e512-4037-8237-a70b1c39a25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d41681c-39be-4be1-be4c-5eaedd554b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2852d6cb-5a41-4671-a590-4e89539019d1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a296f6db-2ace-4555-b35c-052997e3e091",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e44d4b9-71f8-4d7a-82b3-a22a72bb9b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759bb441-73ae-444a-90f6-9be375d74274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b37938f-fc83-4036-a6a3-b183446a884b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100c1970-9287-4454-b1b3-2fd9f2d0dee1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d9567f-0f8e-4edf-98e6-ce24405baf5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40a69f56-b2b5-4309-a61c-007a24813ec3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7028bce5-5d9a-406e-9955-4b5448e213d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245974f7-524b-4436-abaa-edcea7d9d49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb092b2-4969-4bb2-a2a3-e3e087f2f58e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f13e93dc-6486-4708-82b3-03f56c3c53f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7848af08-4100-4baf-aaf9-46d1dca699b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6770c7d9-ad13-4fd3-b65d-98a4a4293203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d1c07a8-056e-41f3-9822-8e8171845254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599a7b53-ef81-456b-9a9d-ce27f0429996",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec265d7-44df-447a-8a06-b3347c1b1331",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "841ced2b-6bee-497d-988f-ef36772f3a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba280635-571f-452f-a0fe-0fcbd4994ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a7a04c3-98ab-4a26-a707-553d5d36041d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb890c70-8cc3-4fff-85df-142c477e67b1",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8faeabd2-ac62-4f6a-a40c-e382a0166c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "428aeb63-d03b-4e2d-8ff7-f00d4feb21e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318b88ec-03ab-4635-89bc-8a832ae6974f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef87ba68-877d-4e95-b404-5d040cab383b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e5a9a4-ee72-4a6a-b7f8-aec6fb9aa400",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ca4d85-e157-45b8-93ab-0e1da74e3219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc38e81-63c4-47fa-8a7a-281cdbf40954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb69cb26-3301-4f7c-89bf-8ff5bdf4353f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ca1c80-256f-46c0-88c2-fbb7dc17687c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb1c885-cd3b-45d7-ae22-db0358619c72",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee73aa1a-6a4e-42ff-a850-03274ace0d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "746b1860-86f7-40fd-b5b9-4a911f42f8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5a05f6-5bb2-426b-95c3-4c55902a735c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5520e577-5a1c-4417-b066-a347fd0a3fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab749970-9d0f-49a5-bbdc-4faf96027c5f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "062f2785-224a-4eef-aa1f-fe3fa2ca4b54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "012a060f-b7be-4843-90cb-4220b1708a82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fefc35-a898-4a7c-959a-e4824ac60a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a6dbb9e-2161-4d63-91cb-a8f039120780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0e9f2f-84c2-4e94-a5f9-a6128c541c76",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a40f7c-17ba-4ee3-a100-fc885c6c1444",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4d079d0-c061-4b8e-8c64-e982e4854c37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e92a115e-636d-4ccf-9dc3-794a1424660b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c94572e-3541-4c11-897a-9fc1e71c9006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d5adaa-0f9c-44d9-a134-2215c7105b69",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c681f6cd-350b-4581-a32b-6da37e1bbea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f365bb04-1938-45bb-9ad4-1630e00cc4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32db4b63-8224-40e4-a896-9384c9ed8119",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a95b34f-06fe-4851-a360-1114c22cde39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97c05ef-c792-431a-a94a-3d4d4a4e9169",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2fb40bb-80ef-4306-96d6-a09cb07d79fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9ffa0e2-02ce-45d9-8a16-5524fa0d0875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca1e16e-1288-4bd0-a241-04d0702424c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f91a5e-5459-473f-86ee-43471304f764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bca8521-da19-433c-b11e-b90751a6b664",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8828a731-7130-4f88-9e87-51ef330e321e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03b75e7e-670c-4078-9df4-036cbc66ca31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a49451b-76f6-4d16-8bc7-199f21e78e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "111a3da0-bb6f-4f5d-99ba-dfc68b991b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b97611b-db62-4765-9792-2216fadba704",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3036f84f-a75e-428e-b3be-d54d610fb78a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0f596c7-6ad6-4ec4-8ddb-2a7bfcd03d51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce02a7a9-8b8e-4180-833c-719773be3972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e3eeae-c715-4e6e-a47b-548be746bded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9b524c-c218-478e-8ea1-55cf668c4d96",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6235b8bb-d746-4561-86e5-4d72d3bc35a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5cba3ba-aed6-4b23-850d-baa5d19e72b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016dc811-d225-43f9-8cc3-b46fd6be105a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6903866c-7f18-41e8-be0b-543869f2e4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68347496-8928-4ae1-98a9-d1981513f960",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11aedf67-c777-46d3-85a1-9ca98e16cc57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf1be9c-b6d3-4a8e-8dee-63332b6a9476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7da424-935e-47f5-82ea-c196fc1fa52c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a90f823-840d-4076-a549-1decc9fca672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45de70ba-9d14-48c5-a08b-cac2a55efdce",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3182b309-c147-4212-9349-69a66861c4e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba768c04-f3f7-41d9-86b7-928dac9025d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47a162e-a895-439a-8456-bc9fbddd96a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2efa744-1332-46b4-a75f-34e54c064030"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f9f85a-7a51-4012-9ee3-43b4b8aed916",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060b7141-d1df-44ae-9b7f-1f33c0660e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cff5735-ee64-4b22-8e67-acb1832653dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862819cf-c577-424c-9729-2ef8b1660908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e4b9ac6-9b4a-4f6d-903a-41e68e86f497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38259cde-b14b-4b5f-bf7c-3c922d09b8fe",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da3f29be-5c62-4da8-bbf0-bcab11c02fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "957d0e1a-4e42-4442-affc-f3db1e9281f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2673fb8-d623-4ab9-8761-1a1353de4de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b8aa8d-e820-4cfe-800d-7789e0d3ecd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc42511-33fb-4712-8418-45b4d3b973d8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2180537e-d767-43e1-9f79-47bf16cf0341",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b067f6ef-dac4-454d-bec5-9fb4e6c1f701"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84459a81-02fd-4bf0-aa44-472269be1594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd85fed-c766-492b-a5e5-e8a9aa03f547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19fea823-dfe8-4eb5-9f2d-f9a94e22e20b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9611b52c-f27e-4609-9c0f-a9c0fc6d33a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b4d522b-4da6-434a-9d07-73cec07cf49a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f9bac2-530d-40e3-ac62-be4a2692ff66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6cb893-653e-4f2a-a8d6-f4af0c1c6f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9b96f6-9799-4700-a011-de24cb0d35c3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba73bc23-a5c6-45d7-9057-556eff82b29d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "966de797-8aa9-4680-9d7a-9d6653febfa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6438983-54a5-4e15-84f0-55f96cd38b04",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec52224-25f3-420d-ac9a-cb35ed89db5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2cd4e0-616a-4254-a2d2-a4f9fab95373",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65831bc0-9785-4ad5-bf33-18cccd2d72e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b9afa7-98f8-45c2-83b9-fc2780e58ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928553cf-420a-4af0-918e-3f951bb6ff29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0987ab-68a2-41a0-a993-ea9e106c4f8c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea0f98fa-5fdf-40a3-bcfb-d9169c4c12de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aef3bfc-4c06-40ba-80b7-f579b2d74f63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9e9d905-9ded-4f82-89af-4c65e274d90a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01f33784-7d1a-4902-8274-5b09204a5be1"
                    }
                  }
                ]
              },
              {
                "id": "2d5f57e4-e5dc-49e8-85f4-ce52af0952e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a452688-98a6-45a9-83a6-52da0582a91a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcdc33cc-f4b6-4790-b81f-b610ce59aa3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3d8d6f08-b79f-4826-8562-3a6110633fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8713df12-75f6-4dd8-b6cd-f532915daa9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "60045648-b1ca-46f6-8705-9be82b062f9e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7a20ecf-2e87-42dc-ad64-295f746eb2c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c060f6b-7045-40d2-b9e9-e56317e76faa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "054f92e9-0f94-47af-bb48-872b7b0338d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48283e03-8da6-4fdc-8925-90735b018b96"
                    }
                  }
                ]
              },
              {
                "id": "cbe0fef2-75ba-4754-a815-c739de9f017c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "202ff6dd-8a13-4c2d-97ce-273c36f6d24d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee64c16d-d665-491d-8300-e8588f73f18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ebd9f38f-208e-45d1-a297-b6e8e46d4110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972a35e8-df8a-48e7-815e-8177a0f7c26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9d2fb11-d3e1-4f09-a1a2-44632ceb66c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1d2889cb-1cac-418d-a7fb-51398f50faec",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b59c7db5-87c1-495d-816a-b74920f2274d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d1b1fef-87d1-4f81-b017-a2f648bc4731",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "851c9d25-d494-4a5a-9b7b-5d1df34ca8ed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9055f323-fcdf-43db-ad58-9b20a28eb870",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0c407a2-7c0c-4992-bb74-0aa6f9d696bc"
                    }
                  }
                ]
              },
              {
                "id": "1c47a0e2-7321-4858-9d8a-7f83051a8105",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd2c1fbc-04c4-407a-86d4-9d60190619ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "13adf983-05e4-4c6c-a846-32d889fa8695"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "146d3bb6-f686-4e71-8f01-c2e177aec0e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "beddc029-814f-42ab-96bb-a45b6550aac2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eba4dc0d-4125-4596-b2fe-51d93021ea9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a801519c-3a30-4ad9-ac8c-d1289ee21ba4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e34b47d-f85a-4f00-afe0-042f57b2f944",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "701db21f-c35b-4382-8683-01b1a1363a2d"
            }
          }
        ]
      },
      {
        "id": "2c65e5f9-6741-467c-a7ea-8cd1e8b18fc8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "084edd71-2650-4384-a165-450b05d1edeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b0537a5-75e0-475b-8779-06b0209864f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68400f86-a42d-4948-a75b-212da15cbcd7",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8aaf4c-9823-464e-bae0-d3a181746c7c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6cab22ca-258b-4260-b99f-a97f6a325837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d68db8-8474-4a6a-9dc7-2b6a5bdf3666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3aa6d866-5c66-4f8d-9434-3b15fcfb56d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7039b35-b4f2-4e4a-b2b5-c91ca9fe5398",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30c573cd-6c62-4163-8b8f-0b3f59d8b460"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4747a9a9-4c0e-41ad-9fcb-6d9294a3c356",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9db9b9a2-12bd-40c1-9efb-97bb70547802"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cd7c218-1a68-4ec5-adc6-da06c91a3345",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "200fe333-a47b-41ec-8514-5370edcbb4f6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67b559f4-ec66-49cc-9aee-edd812502e2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9dff062f-6635-42dc-90e7-7ecdf18f74ae"
            }
          }
        ]
      },
      {
        "id": "a888e922-959f-418a-ae8d-fd730bc5c910",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "524fa3a0-1f1a-48c2-b2ec-4257259cebad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "884593b3-0ea9-448b-96d3-8beb58fbab71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76c34de5-de2c-403b-aae5-39d6ed1e1aa1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae5d951-7c4e-4233-8339-82d466e69b9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e28cbb0-1519-46e9-a79a-cec4cd681875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fb8378-195c-429c-93f7-2fbfbbdf5df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a30e1e57-84a3-4153-947b-948ca207d3b6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fbf3045c-7680-4023-85b5-6c916bfd4300",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35aa91dd-c326-4c69-8a1c-fe7934536911"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43eb8893-fe1b-449d-88a4-a0247b4d0e30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "851aa072-e8b1-42e2-854c-8dae399f190a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "10ea7d14-1337-4340-bbfb-d44c16f91bbe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2e056a4b-2461-49a9-a6fb-7559fda1f892"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "35c1a90e-ca16-43d3-a98a-db51bf0e3008",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0513d9b4-2b07-404b-b740-87895f220a6b"
            }
          }
        ]
      },
      {
        "id": "6e01d810-efe6-4e0e-93ee-abdd3581269f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "26798de2-ef6d-4491-ac22-1e783ad4a256",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4510c372-dd27-41f2-a24a-4220551e2e4a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbc179d3-d77a-4db3-aee4-8a5c5bddbc3b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d1482ce-894f-46b9-a244-4e495821aed4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ccdcfc23-1657-4229-b31a-e4fa5cad328e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb234d4-b27e-41d5-a339-7aafc2edffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5488e49e-1457-4e4e-b086-6c1f83dee310"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2a5abcd-9dd1-498a-8423-2c2619684df3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc2e6ab4-a93e-4548-b826-46622f5d5309"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cb84d0d-7060-4db1-b196-21cc378e0846",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5a2ffdb-01df-48f0-a9d3-eee62980a852"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4cdce733-4656-4ee6-bb38-23d7dc85b9fd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "073ebcc1-048b-4d66-aaab-34b9b0a51279"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "410d4bea-9eb5-4a54-b8be-f1736f17a8e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b21ffe5-9abe-4a1a-adb9-395d90af1b3d"
            }
          }
        ]
      },
      {
        "id": "9c56ff78-aa5b-4093-833a-9dda22ef8fb3",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2859ae2f-0d8a-45d7-ab34-a6e3fb914b85",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d50b6c85-6e11-427b-bd19-d9b21e9e0450",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "13a003ea-98ac-4e74-82ec-387c3ea4f463",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "450749a5-ca63-4ae4-b8a2-41bba33ce2a5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42fd2eec-4d60-45e8-9f84-38501dbee7fd",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.555555555555555,
      "responseMin": 2,
      "responseMax": 772,
      "responseSd": 50.62561864102594,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726966184919,
      "completed": 1726966194640
    },
    "executions": [
      {
        "id": "e603d644-0ff9-4419-91ae-a620ee71ff70",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c7948abc-5def-439d-bc92-28e1e04ce925",
          "httpRequestId": "c87cc47a-8676-4840-a249-3ef8915d5628"
        },
        "item": {
          "id": "e603d644-0ff9-4419-91ae-a620ee71ff70",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "42ff612f-cacd-437f-90db-27f83e01aeb7",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "efc2ebe1-0af9-47fe-864d-c4c5113c9938",
        "cursor": {
          "ref": "ee367532-2be5-4fa5-9c5e-00d72e4ce405",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0af64608-c4c3-4892-9cc6-42368ea21807"
        },
        "item": {
          "id": "efc2ebe1-0af9-47fe-864d-c4c5113c9938",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9ee8f6d9-78c0-40c1-8441-97b2b23a6565",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "191ead9f-9dee-42a8-9a5f-b1acbff69e19",
        "cursor": {
          "ref": "700c7a7d-6aaf-4625-b1b3-8108e971a7f8",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "9fbb0cba-21ef-44b8-a61d-d5105d951d2a"
        },
        "item": {
          "id": "191ead9f-9dee-42a8-9a5f-b1acbff69e19",
          "name": "did_json"
        },
        "response": {
          "id": "0110d7cc-7605-422b-b478-b867375324f2",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f52103c-513b-49d9-b0bf-fa53d38cad15",
        "cursor": {
          "ref": "da0f02e1-8fbd-4346-aec8-0dccc842e3ac",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9db2a3a6-e185-4c08-bfcf-013e62158905"
        },
        "item": {
          "id": "0f52103c-513b-49d9-b0bf-fa53d38cad15",
          "name": "did:invalid"
        },
        "response": {
          "id": "17144c59-19dd-48d1-b0ee-be91bf81e507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f52103c-513b-49d9-b0bf-fa53d38cad15",
        "cursor": {
          "ref": "da0f02e1-8fbd-4346-aec8-0dccc842e3ac",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9db2a3a6-e185-4c08-bfcf-013e62158905"
        },
        "item": {
          "id": "0f52103c-513b-49d9-b0bf-fa53d38cad15",
          "name": "did:invalid"
        },
        "response": {
          "id": "17144c59-19dd-48d1-b0ee-be91bf81e507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64334ade-5c8c-40a4-a0ba-6aa03afa5b25",
        "cursor": {
          "ref": "38b65b5e-2696-473f-a47b-598cce82a0aa",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "de289cf5-f918-446a-87dd-8cee32075f9e"
        },
        "item": {
          "id": "64334ade-5c8c-40a4-a0ba-6aa03afa5b25",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8bced084-871d-426c-875c-5306da335fa2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f37dcf2-7f24-47a3-8685-82f3af780b85",
        "cursor": {
          "ref": "2363dd22-8901-42f2-935e-e394f8bf23b0",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "eca7626a-2344-429f-999a-65945872b9a2"
        },
        "item": {
          "id": "5f37dcf2-7f24-47a3-8685-82f3af780b85",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "ab690d8d-9ff8-49e3-a9a0-36e43a65ec46",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332f5ebe-6e38-48c5-b72d-0e23d34724cf",
        "cursor": {
          "ref": "b7bcbc43-f49d-465a-9534-90c5d67754c6",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c40c9ee5-6535-4545-a43d-750e25c7f0b3"
        },
        "item": {
          "id": "332f5ebe-6e38-48c5-b72d-0e23d34724cf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7618b1a7-c62f-4d01-b718-afba6de5f644",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a1222b-2e4b-4ff3-993b-5c49302bb5b4",
        "cursor": {
          "ref": "b1964533-7eb6-4df1-8e9e-af8ac49e20cd",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "94f54065-fce9-498e-a070-021b74f17a1f"
        },
        "item": {
          "id": "69a1222b-2e4b-4ff3-993b-5c49302bb5b4",
          "name": "identifiers"
        },
        "response": {
          "id": "031cd612-3327-4fbf-a849-5f4ccc1311c3",
          "status": "OK",
          "code": 200,
          "responseTime": 225,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcdb33f-bca6-4556-8ac5-0b5fea26da94",
        "cursor": {
          "ref": "0aa31842-9217-4e4e-9ecc-cea2361d21ff",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3842a758-f610-47df-a9c3-09a50ef4f615"
        },
        "item": {
          "id": "fdcdb33f-bca6-4556-8ac5-0b5fea26da94",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d6e80234-9315-4520-bce2-61615ab0baec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14418916-9b5a-4747-a1d7-8ecac70396ae",
        "cursor": {
          "ref": "e7a29f2f-c521-4e2c-9e70-1979edd87293",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "9012bd58-b5be-49c1-b95a-edca26a7bfd8"
        },
        "item": {
          "id": "14418916-9b5a-4747-a1d7-8ecac70396ae",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e8bfe04c-76b9-4677-a4ec-dd5697dec870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d63ea9f-781b-4931-a070-1d8324d1f2cf",
        "cursor": {
          "ref": "b914a819-e1d9-4b2e-a90c-91d3ca1b9121",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3f586b48-842a-4f66-8fde-09cbef35e037"
        },
        "item": {
          "id": "4d63ea9f-781b-4931-a070-1d8324d1f2cf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1f0ab644-db0c-4edd-a6e0-29a3836dd14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d691b3f-9b29-45fa-9504-e0b82e7fb4f1",
        "cursor": {
          "ref": "5512e989-cfc5-467d-9bdb-2ca6a5b8120a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "83ad763d-c858-4caf-a75c-ab432ee60e06"
        },
        "item": {
          "id": "1d691b3f-9b29-45fa-9504-e0b82e7fb4f1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "82fa5a1e-0696-4096-82a0-e3f91ec6aa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4e836e-7221-47af-a8a4-12eaa2f01fca",
        "cursor": {
          "ref": "1bbdc99e-29fe-447d-af22-0dafe16fd2c6",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3efa7f96-3aa8-492a-a3bd-17de96b889a8"
        },
        "item": {
          "id": "de4e836e-7221-47af-a8a4-12eaa2f01fca",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3a34d0f0-83f0-4e09-95d6-c8a55ac1eea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3dc1366-0636-4e29-b9ef-cd47a4b3acf0",
        "cursor": {
          "ref": "a9df8d7d-3cc2-4032-9942-b3c4e25e444f",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "fa6f49f4-4fc0-4691-9f83-1adad9a65670"
        },
        "item": {
          "id": "a3dc1366-0636-4e29-b9ef-cd47a4b3acf0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9f027012-55aa-44a6-8981-3c71bf8a36ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f461be55-cf98-4925-998d-240a2dfc659f",
        "cursor": {
          "ref": "eaa90635-2603-4450-9267-b378aad99b06",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5860d0e2-29ff-41df-b209-e62af88974ea"
        },
        "item": {
          "id": "f461be55-cf98-4925-998d-240a2dfc659f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "523123f2-761f-465f-ac4b-94be3e10966d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785ac88d-8eff-4e2a-9a02-dc1db27caaa0",
        "cursor": {
          "ref": "8e44a3ea-71af-4992-a994-58039d3676c3",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6e0a843f-b383-42e9-b1d3-288edd2cfc63"
        },
        "item": {
          "id": "785ac88d-8eff-4e2a-9a02-dc1db27caaa0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "710513fa-d895-489f-b586-175d7e364f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44017a36-67c0-4cba-ba5b-7667cfec864f",
        "cursor": {
          "ref": "3229ce64-4691-4e9e-ae09-4ce535fff148",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "09de0654-7952-48d7-b14f-a6a980262f88"
        },
        "item": {
          "id": "44017a36-67c0-4cba-ba5b-7667cfec864f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6a802520-0bc6-43a2-b79f-2b017a0ab700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23a9ef4-1b20-42c0-8c6d-8426beb88521",
        "cursor": {
          "ref": "1960ed1e-25a0-435f-a7d9-5a5f77126f3e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d974c05e-7dbc-44e9-bedd-3416e9c4bcd0"
        },
        "item": {
          "id": "b23a9ef4-1b20-42c0-8c6d-8426beb88521",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "7b846d4b-b524-4b48-abba-c2e948c160ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690cf028-ea21-405c-a18d-9825b9ce1b69",
        "cursor": {
          "ref": "e0a6cf3b-e7f7-4315-a851-8ff48ac33cfb",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9d1b83fe-f6cc-4a1b-ac82-103db1295a9f"
        },
        "item": {
          "id": "690cf028-ea21-405c-a18d-9825b9ce1b69",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "655000b4-a3b6-4084-940a-bf00673823de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a461a23e-e26a-47e3-a38c-3df778b4aeb6",
        "cursor": {
          "ref": "32a14b71-c402-4355-8145-bc62359c5e72",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4f35cf2e-7c6e-4832-8af9-2fc92da9deda"
        },
        "item": {
          "id": "a461a23e-e26a-47e3-a38c-3df778b4aeb6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "777027cf-c713-4abf-ab88-369e040c2ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de510f2-9ea2-43fa-b46f-1c20ce388ae1",
        "cursor": {
          "ref": "26092ba1-4c2d-480a-8697-f9f973049b3d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "9e2a438d-1a0b-4d12-a3db-368228b14a94"
        },
        "item": {
          "id": "8de510f2-9ea2-43fa-b46f-1c20ce388ae1",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7d366e38-1d45-4ac3-826f-4b23e83e018f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2449b005-d60e-4c0d-bfc1-e9409e688061",
        "cursor": {
          "ref": "c4723e24-a2de-4f31-9d6a-257b432f4359",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "667d6f99-b4f3-48d4-bcb9-e70b589a9247"
        },
        "item": {
          "id": "2449b005-d60e-4c0d-bfc1-e9409e688061",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "efd2a5c1-996f-4502-b8f0-3c04b2917828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190e06ac-c1c1-4827-9c1d-63ceed8c687b",
        "cursor": {
          "ref": "97d6f9c5-5cdb-470c-8dfb-81f9ea9adef6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "63d73d35-7f65-4790-98a9-72e2b4bfd126"
        },
        "item": {
          "id": "190e06ac-c1c1-4827-9c1d-63ceed8c687b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3ba0e910-8987-4528-9373-c6df36d778c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45e4a3c-d24b-4977-953f-a8c52c1a489e",
        "cursor": {
          "ref": "697ba7aa-f3d8-4512-9fdb-9474b17ebbff",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6dcd96e4-39fa-418b-a5a5-e534b721a3eb"
        },
        "item": {
          "id": "b45e4a3c-d24b-4977-953f-a8c52c1a489e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e4e0a138-1543-4554-8f2b-8481f33edd95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b6e4d6-4dec-48fe-9374-71489fcdad0d",
        "cursor": {
          "ref": "fb49d669-800b-47ad-a569-8d23956207f6",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a9288aa3-5fcd-4b74-8247-abcba9e9f643"
        },
        "item": {
          "id": "36b6e4d6-4dec-48fe-9374-71489fcdad0d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5295acf8-5bd8-4b30-a2eb-979a5026254c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c673da4-72f6-4d2f-a1a8-2394b100cb8f",
        "cursor": {
          "ref": "bd3e21fd-f9df-456a-b66e-0966d5ca01ce",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "151046cd-5417-40de-a887-3526d54d7ecc"
        },
        "item": {
          "id": "1c673da4-72f6-4d2f-a1a8-2394b100cb8f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dd69c620-a7a3-4d60-b378-876ecfef871a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3986c9-9cdb-4037-a994-5ca98ca744fc",
        "cursor": {
          "ref": "40cf9517-8a45-43eb-8421-008c949b70e8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "4239336a-8c36-4462-acb7-ca99c2c95c37"
        },
        "item": {
          "id": "5d3986c9-9cdb-4037-a994-5ca98ca744fc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "90e55b29-89d0-4183-a924-2baa834d06d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fce6614-e0f7-4aba-ab90-9ac7a8456781",
        "cursor": {
          "ref": "857ce420-d3de-4e65-bcc5-bc07a4c2297c",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2ab047de-f1ed-4997-9fd5-5e3f0386b7d9"
        },
        "item": {
          "id": "5fce6614-e0f7-4aba-ab90-9ac7a8456781",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e2f57288-a83c-40b0-9556-373b384b0c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79ad8bbc-6816-413c-bd4f-740105d4e037",
        "cursor": {
          "ref": "596e68f5-0ead-4688-83da-3ac4e61edb72",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "16b57feb-391b-4fd2-9d5c-47d590c827fb"
        },
        "item": {
          "id": "79ad8bbc-6816-413c-bd4f-740105d4e037",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "62e147fa-30e6-4f8e-8da6-03192c37dda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f7676d-af18-4cb1-9ad0-1f94b2f8d593",
        "cursor": {
          "ref": "e38dd580-7592-4048-be8f-9b0dfed317b0",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8cd50b21-cf02-45bc-b4b1-1870dbe3e250"
        },
        "item": {
          "id": "71f7676d-af18-4cb1-9ad0-1f94b2f8d593",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6e228740-3c5d-4eb6-9aab-f227ea44c633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8b2560-c802-43f4-8350-4e9ea935468d",
        "cursor": {
          "ref": "d20faeca-2405-48a6-b537-4583d34ca6fa",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e518fd48-3c08-444b-9c25-f6e2c35b31d7"
        },
        "item": {
          "id": "7e8b2560-c802-43f4-8350-4e9ea935468d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "95f95183-cf59-41ea-b367-e51a01024afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5973a596-bcf7-40bf-88e0-f2cb9c67f9da",
        "cursor": {
          "ref": "11eb07fd-bafc-43c0-85d0-6e708256fa42",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9cc5c147-3345-4182-9d60-77a574184a86"
        },
        "item": {
          "id": "5973a596-bcf7-40bf-88e0-f2cb9c67f9da",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a00255bf-3d3f-48c1-8085-3b80a0e74aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54a1326-f2c0-4cb9-b9fd-c8123f5e28e0",
        "cursor": {
          "ref": "3697bdd5-20a2-4569-841d-363bededf550",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bc0db034-820a-42f1-aec2-c37e181c3022"
        },
        "item": {
          "id": "b54a1326-f2c0-4cb9-b9fd-c8123f5e28e0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a03ad6bc-81c9-4f1d-904c-977dae403900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39e3b8ff-ff85-46cd-97d8-1dc002f7b8d9",
        "cursor": {
          "ref": "ffb94195-b22d-49ba-b84d-99944417f4b9",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "424a107b-f997-46e5-87db-bfbaa5dde0a4"
        },
        "item": {
          "id": "39e3b8ff-ff85-46cd-97d8-1dc002f7b8d9",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "368d0488-fa4d-474c-87f7-b63adc7eb2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d552bdc5-58ce-4c4d-9f0d-bc6847dc8549",
        "cursor": {
          "ref": "6a9011cb-4c2d-44e4-9f3d-a482f8a19c95",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c6dc495d-ae3b-4b43-a59f-49555fdde0d5"
        },
        "item": {
          "id": "d552bdc5-58ce-4c4d-9f0d-bc6847dc8549",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "97568daf-97a1-4c01-8bfa-6ab714934c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446e6bf8-22d4-45aa-b114-d451441828ad",
        "cursor": {
          "ref": "8abc11cf-643b-464c-a4a7-b1e3fa9a9720",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4baaf485-d204-48eb-a5c8-aa3341d35325"
        },
        "item": {
          "id": "446e6bf8-22d4-45aa-b114-d451441828ad",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f551b2a0-6e97-4d22-ade6-bb58f0b7e3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16214420-ee3a-4b6e-ab6a-408175184ba9",
        "cursor": {
          "ref": "8b48b8fe-2927-49d9-9ccf-92994896d258",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "933cb280-b08e-4784-83fa-038b532e3383"
        },
        "item": {
          "id": "16214420-ee3a-4b6e-ab6a-408175184ba9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "16f15dc2-1868-4924-a2d1-421cbaad2447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7eeaaee-c99f-4139-bbf5-d5dc22e95522",
        "cursor": {
          "ref": "8f2c8374-e8c5-433c-85be-a06c70139141",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "06aff7fb-ad6d-4571-9a71-e74417c54dbe"
        },
        "item": {
          "id": "e7eeaaee-c99f-4139-bbf5-d5dc22e95522",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "880a030c-2d1d-4504-b0dd-33ed5ace2fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7887cb8-64ee-4aab-8f19-fcb0bbd56301",
        "cursor": {
          "ref": "2418609b-c6cd-4578-a9f3-2b21b11c686f",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "521cb97c-bf22-483c-9a29-34812fe4f747"
        },
        "item": {
          "id": "c7887cb8-64ee-4aab-8f19-fcb0bbd56301",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8d084e95-89d5-4f63-9e7b-9d091005e66c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12397616-61ac-400a-a54d-e76ddde30575",
        "cursor": {
          "ref": "a7cdd95a-a59f-456a-8c7d-5e19b0fd590d",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0488e4b7-800c-4f7f-b36f-41d50bfbd0c5"
        },
        "item": {
          "id": "12397616-61ac-400a-a54d-e76ddde30575",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "324cb5de-cd7a-4a7b-b9e3-c31a399534ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b8a1bc-801a-497f-a348-fbce32f723ab",
        "cursor": {
          "ref": "188d963c-704b-4e8f-86d2-3287ab5f3746",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "58f54b9f-bb65-4563-a524-2a0830e282e1"
        },
        "item": {
          "id": "24b8a1bc-801a-497f-a348-fbce32f723ab",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "6bc5240d-4e09-4e56-9b84-fc81a361de07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3276f490-4007-489c-a5c9-017a9220068b",
        "cursor": {
          "ref": "3471102b-2a68-4e68-9b1d-41a580f7e5a7",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0d8c27c7-4174-4219-a6c8-bb9f9608af18"
        },
        "item": {
          "id": "3276f490-4007-489c-a5c9-017a9220068b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "83fff873-86b5-424d-b7f0-77e03744aa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdef509-7d19-4458-a3c6-9eab9e49fc74",
        "cursor": {
          "ref": "b02a8779-644b-45c6-9784-296d4ac60e4b",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ed1f8557-96d5-4030-b0ae-3ee4141cbea7"
        },
        "item": {
          "id": "2cdef509-7d19-4458-a3c6-9eab9e49fc74",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1dc9c062-c105-4dbd-bb7a-a22e77a5bb85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7050ba38-1a84-41fa-8ec0-b001901b1feb",
        "cursor": {
          "ref": "81850178-d023-4ff9-9f3e-ac45eccd1360",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "41ba5e9e-88d1-4e00-ac3e-35b96ce0c1cc"
        },
        "item": {
          "id": "7050ba38-1a84-41fa-8ec0-b001901b1feb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e03531c9-dab0-41d6-be2f-250d8f75aec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7037b21f-96e8-4097-83cf-dbe3b4f7b575",
        "cursor": {
          "ref": "69e851f6-b2bd-4e0b-a428-b436d592e9be",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f11e21a4-972c-48c2-a540-37be4e164313"
        },
        "item": {
          "id": "7037b21f-96e8-4097-83cf-dbe3b4f7b575",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "4f3da759-f5a8-4c65-a2d5-be94125777c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1572808b-b63b-422d-8b93-42a31fc76280",
        "cursor": {
          "ref": "1d86f469-f0ce-43a5-bad6-f076de4dd1cd",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c87e8643-b69d-42e6-ac6e-6ce2a309f913"
        },
        "item": {
          "id": "1572808b-b63b-422d-8b93-42a31fc76280",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f432da6b-c53c-49fe-ace2-484b4adb8338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309b1062-e29e-461a-ac3d-acd2d4f74190",
        "cursor": {
          "ref": "15454667-b9e2-4c97-b02b-95fb7c8ab55c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b09aaa42-d969-4ba2-80a3-4bc07721de98"
        },
        "item": {
          "id": "309b1062-e29e-461a-ac3d-acd2d4f74190",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1dd22413-2429-40ea-9207-87dd901cbd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4e9d54b-e6e6-4cee-bd85-cb304744db6e",
        "cursor": {
          "ref": "6971346c-09e1-489f-8cff-dddc62d35906",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1f68a441-ee5a-477c-8a21-83fedfd7757c"
        },
        "item": {
          "id": "a4e9d54b-e6e6-4cee-bd85-cb304744db6e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4324a095-0be9-4252-8ab4-2bb7a9a0ac4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1e95c4-744b-48ef-a199-868ca8f88fca",
        "cursor": {
          "ref": "38157b3c-d188-443b-a5cf-abbb96551aee",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "70004379-9daa-4c73-af77-6b641c5a7f12"
        },
        "item": {
          "id": "5d1e95c4-744b-48ef-a199-868ca8f88fca",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3792ea90-787f-485c-8924-ddedac086e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa1fdc0-aab2-435a-90c2-f157263e83cf",
        "cursor": {
          "ref": "1148c28d-72db-42be-aaad-e9a75800c1e6",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d20b8d9c-65e4-42d7-96c3-d63b6017ea31"
        },
        "item": {
          "id": "7aa1fdc0-aab2-435a-90c2-f157263e83cf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ac979708-9b47-4ee3-92eb-6da4b8f3c7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfddd14-2bb1-482b-a5fd-d6b0bc027458",
        "cursor": {
          "ref": "95d4b293-1adf-4dbd-b610-0ad9b1304389",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "79146704-5102-42d5-8880-4a0d62e8cc32"
        },
        "item": {
          "id": "4bfddd14-2bb1-482b-a5fd-d6b0bc027458",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "587c3ff3-61eb-45c3-8c34-9826e9136388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8233c8e7-53bc-4e69-ab25-f889e0fffc09",
        "cursor": {
          "ref": "b62f0353-494f-406b-a05f-84a289e8713e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3caf4ecf-28f4-4f6f-b965-f48835c14b87"
        },
        "item": {
          "id": "8233c8e7-53bc-4e69-ab25-f889e0fffc09",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2f7e00cd-e258-4bb2-8dce-872a01ec7d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6238d8e-8f08-4cb7-91ad-6449346cc8c4",
        "cursor": {
          "ref": "4c31ee99-2f72-4a01-84dc-7d09a8013384",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "697e5a50-9934-432d-ade4-b757f435484e"
        },
        "item": {
          "id": "d6238d8e-8f08-4cb7-91ad-6449346cc8c4",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "bba6836d-8f76-427a-8e75-722224f56445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498d3e41-4def-4f6d-aa51-1c26aefc7d76",
        "cursor": {
          "ref": "e834a218-c036-43cf-ad3f-fbe2baeb84a8",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a811aed9-a477-4fcc-b0d9-fd082cfffa0f"
        },
        "item": {
          "id": "498d3e41-4def-4f6d-aa51-1c26aefc7d76",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e67c41d4-fc23-42b2-846e-e7cda697decf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f972ed7-bce4-4143-97e0-f4691900f0f0",
        "cursor": {
          "ref": "9f0e8807-c2f7-45ce-87ce-a8a1ec80264a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "73f766c7-a219-4df5-bd51-378c3281efd1"
        },
        "item": {
          "id": "3f972ed7-bce4-4143-97e0-f4691900f0f0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "018112dd-76e7-4641-b2eb-979968df03ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9336c5f1-2981-426b-a82c-9460bd7bb8b4",
        "cursor": {
          "ref": "7476d43a-e9d4-4a5a-bb40-1cd92f99eb11",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "7229892a-220e-4253-8b24-c2470f6216b9"
        },
        "item": {
          "id": "9336c5f1-2981-426b-a82c-9460bd7bb8b4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "806665fd-8da1-48ba-a09c-dcb1ca77c89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8eec9f7-3f1c-4dec-8006-0a3388f74829",
        "cursor": {
          "ref": "45e292a2-e390-4de2-9dfc-322128ecff30",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0a262bdd-2116-4060-8be0-3ebc8e389ee3"
        },
        "item": {
          "id": "a8eec9f7-3f1c-4dec-8006-0a3388f74829",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9510beeb-df61-4717-84dd-81ed28665c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5369b12-d942-4741-b156-f48c194f6426",
        "cursor": {
          "ref": "450a393f-215c-43d5-b4d6-9afcfdc8eb38",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7c9dc8a1-34d2-406d-8a4b-5ff795beb62e"
        },
        "item": {
          "id": "a5369b12-d942-4741-b156-f48c194f6426",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "038b3d07-234c-40a4-acb0-66133ba4d672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a190796-9bbb-4144-baa6-83f50ab5ff25",
        "cursor": {
          "ref": "5cf1178d-1051-4f1e-9dbf-bd59d0963724",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "3069b22c-fb7e-4774-965d-a59141c97349"
        },
        "item": {
          "id": "2a190796-9bbb-4144-baa6-83f50ab5ff25",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7dd69145-bb57-44ca-80c3-ae8c14c77b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130fd955-1e73-4b98-b377-6aec8a56f29b",
        "cursor": {
          "ref": "0d33088e-6cb4-45de-912c-facd851c590c",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0ce07a84-0b6f-475d-9eb8-fe31fb81636b"
        },
        "item": {
          "id": "130fd955-1e73-4b98-b377-6aec8a56f29b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "22de726f-a759-4976-a58b-2a98a48b794b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b49d23a-8d16-411d-911d-bdf6f6b8b799",
        "cursor": {
          "ref": "242fcf07-d387-4a7c-88c9-e1da775dc19b",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d810dee7-38fc-4d79-858d-6aa4d7e262e2"
        },
        "item": {
          "id": "8b49d23a-8d16-411d-911d-bdf6f6b8b799",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "981c69c5-d207-4ab6-ac18-0ed290d6c068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263a8830-a1ad-484a-8f02-ffee0521c993",
        "cursor": {
          "ref": "4d5f318a-69eb-4600-a6d4-fa60115635ec",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d6eb56a2-8300-4095-b33c-543c5d6e122b"
        },
        "item": {
          "id": "263a8830-a1ad-484a-8f02-ffee0521c993",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4c9de48f-32b0-48dc-99e5-6fe93795a38b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca1256-aced-47a3-92af-895ccf905de2",
        "cursor": {
          "ref": "043a078c-e613-4bbb-9280-1871b9ae64d3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2e40c8e8-f1fb-4e0f-a9d9-6b883bb90580"
        },
        "item": {
          "id": "55ca1256-aced-47a3-92af-895ccf905de2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "aff4bd0d-945c-40b8-9b97-317a68764797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e12f8e-8aca-4df0-8d5f-6cfbe9a2fe8c",
        "cursor": {
          "ref": "cb8a7e45-c428-4e85-b865-b5f9cd52eff6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2ea28afb-68e0-4672-b2e1-21664bc7e9d1"
        },
        "item": {
          "id": "98e12f8e-8aca-4df0-8d5f-6cfbe9a2fe8c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5890dcff-d587-46db-b029-2699102b9020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b782781f-aec9-4aa1-a7d4-63b3f2d48784",
        "cursor": {
          "ref": "f037ba82-e884-47c2-9ac9-08ac55c61fce",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5e5d87a2-3fe2-4b8b-a7a5-6dceb37fe011"
        },
        "item": {
          "id": "b782781f-aec9-4aa1-a7d4-63b3f2d48784",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1a7bdcb0-9e78-4864-ae10-fd7ac0dfd14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6c0ca7-72bf-4680-8fdf-ec47c864a77e",
        "cursor": {
          "ref": "b4ed19ba-9410-4bb8-bf42-34890b0454e7",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bcb24d40-c060-4dd8-bad6-95708df9364f"
        },
        "item": {
          "id": "fb6c0ca7-72bf-4680-8fdf-ec47c864a77e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e7bab62e-33ea-4587-ba40-c2fa42bcc5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "755bea9f-8b53-4e2c-aae9-ffae65730732",
        "cursor": {
          "ref": "a92fe846-541b-4c57-bc84-e52b7f4b3515",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9c150d06-77e0-4a98-b0b9-212b3c00a015"
        },
        "item": {
          "id": "755bea9f-8b53-4e2c-aae9-ffae65730732",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a6f4dd51-9809-4f53-846d-f9e69297aa7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb24059c-1bb6-4caa-8264-633090b82281",
        "cursor": {
          "ref": "b0420af1-ebaf-417f-b18d-591a87862622",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3b38dc9b-6532-4ee9-a625-16c32463d5b6"
        },
        "item": {
          "id": "fb24059c-1bb6-4caa-8264-633090b82281",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "972b81e9-b9be-45ca-b9bc-16706d938345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6caa33a9-adee-4293-a9a8-e83d4db2e092",
        "cursor": {
          "ref": "7ae46e81-da2c-4cb8-bf99-d22590084d3d",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "68dfecf1-b067-4a92-b227-19827b1865c8"
        },
        "item": {
          "id": "6caa33a9-adee-4293-a9a8-e83d4db2e092",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4cc72da1-eaed-44a1-8cf7-26bc72f67893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a217df-1b8e-4a48-bbc9-6823ffd667c4",
        "cursor": {
          "ref": "9d75d7e0-4523-47b2-9db4-3dc92ba58953",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f1841c90-c364-4eba-9f41-4d6878a3d7c6"
        },
        "item": {
          "id": "d7a217df-1b8e-4a48-bbc9-6823ffd667c4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7ca22364-cd88-4876-9722-2fc3472248bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d3c244e-7a2a-4dc6-9e45-151b53e18ae0",
        "cursor": {
          "ref": "4071d347-b219-4efb-a4ee-82a682eeb235",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6b25cf01-b73c-4d2b-a369-d9fa78b18694"
        },
        "item": {
          "id": "5d3c244e-7a2a-4dc6-9e45-151b53e18ae0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "2a1066cb-9d18-4548-97d6-b1fc4cbace69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2edd08-d072-4a73-9beb-d073164d513d",
        "cursor": {
          "ref": "ca920bb8-37a4-4a3d-9242-d494b167770f",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4e1e833f-a18b-4a6d-9f5f-669fb2ce55a7"
        },
        "item": {
          "id": "6b2edd08-d072-4a73-9beb-d073164d513d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f443b339-5375-4dc0-aaf9-906642ebb247",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fecd2fd-3873-4ed4-afcf-281edbee74cf",
        "cursor": {
          "ref": "cd5c6ac8-d2db-49f8-9293-38a704cb551a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "642ea5fe-bfbc-4970-a93a-c02be2fb5361"
        },
        "item": {
          "id": "9fecd2fd-3873-4ed4-afcf-281edbee74cf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "73dba02d-6c44-4188-83db-427b09675ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0168b5df-4e82-49d7-98b9-93dbf4a1dad7",
        "cursor": {
          "ref": "41c7ecb1-a2d8-4d91-a656-63c41cbccda6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "640f17e1-1c2e-4de2-abbb-097e6b188fae"
        },
        "item": {
          "id": "0168b5df-4e82-49d7-98b9-93dbf4a1dad7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1f211ef8-9d50-4ba9-a6a9-fdea8e1bf752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d1de4c-08f0-4694-9d21-08937dcc546d",
        "cursor": {
          "ref": "062f053b-c3a6-4adc-8ae8-98eb1f1e5cfd",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b86c3142-e5d1-4343-bea1-bc97866d8123"
        },
        "item": {
          "id": "b2d1de4c-08f0-4694-9d21-08937dcc546d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3690ec3b-218e-4bc7-b14b-9f5773d5d579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f061dae-db90-4348-947c-75e61c35cdf2",
        "cursor": {
          "ref": "613f983b-dc49-403a-ba16-fc488d5b587b",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "180b4dca-57e6-4976-b6fe-c5431aedf84c"
        },
        "item": {
          "id": "5f061dae-db90-4348-947c-75e61c35cdf2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1dabeea1-2f02-46c5-84cb-217e7bbdd94f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4810dbf-fe57-44a1-8d35-942af957599f",
        "cursor": {
          "ref": "a9427ea6-4e9d-411c-97e4-6805866d05d5",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "13fc2541-fe80-4116-94d7-9bd0665541e2"
        },
        "item": {
          "id": "e4810dbf-fe57-44a1-8d35-942af957599f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7b5c4cde-4759-4fcf-9f09-6a50f9be6968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8efa745-e6f6-4aec-a006-7066ad113f96",
        "cursor": {
          "ref": "88e9848b-6e13-4bd5-9965-cdf4d5c1e455",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "89091c4e-e0ee-4dbe-b28f-085a5da5f416"
        },
        "item": {
          "id": "c8efa745-e6f6-4aec-a006-7066ad113f96",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e05a4a7d-8322-4a1b-ad20-218e58d51581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db278a4a-7da6-4b57-b59d-ae8878c93b3e",
        "cursor": {
          "ref": "ff0c7f8e-01e3-4a7d-9c1d-17bd787f664b",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2fd40291-6723-47f0-a26b-a28e035f5f90"
        },
        "item": {
          "id": "db278a4a-7da6-4b57-b59d-ae8878c93b3e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "75813b23-e2f9-4a5a-ac91-63d9ae7e4c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d7ab343-42d3-41e7-a8cd-3b8494e55738",
        "cursor": {
          "ref": "820e0818-e51d-4757-a159-25b61c654c08",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "dbbc226c-6485-43b3-b2bb-a49531f31ae4"
        },
        "item": {
          "id": "1d7ab343-42d3-41e7-a8cd-3b8494e55738",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bec08d97-a0d3-4dd9-a1d3-3c71dae65191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562f06c8-e733-4f76-bdba-fcfcf0fc399a",
        "cursor": {
          "ref": "0783197c-5f9d-4656-9a64-532f9bcfe70f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "4116eaaa-e1a1-44cb-b5c6-27ca7551fac3"
        },
        "item": {
          "id": "562f06c8-e733-4f76-bdba-fcfcf0fc399a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "64026ea1-6eeb-411c-acae-c46843fed105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7a0fd2-fe30-4536-9f31-443d6e3a64f6",
        "cursor": {
          "ref": "136232a9-5b8d-4e23-aa5b-135e206f9a8b",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "995f112e-c154-44fc-ada5-c11f5fbb5cb2"
        },
        "item": {
          "id": "ef7a0fd2-fe30-4536-9f31-443d6e3a64f6",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "929df333-80c5-45f8-9692-4e83073fa7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7aab48-605c-449b-ac19-5c644acd3ed2",
        "cursor": {
          "ref": "a413c0de-c616-405e-9aa4-c29b8ebd3d03",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7c495dea-0b54-47db-9cf1-5e672ed18559"
        },
        "item": {
          "id": "fe7aab48-605c-449b-ac19-5c644acd3ed2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "87234e60-eee9-4b91-945b-46699c170b95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc49cd1-2c4a-48bb-864b-f7e49eb5233f",
        "cursor": {
          "ref": "b23b3563-66a0-4e8a-a181-a505e2cb32ba",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2bd2bb7b-46dc-42c5-9cd5-46e612f3c565"
        },
        "item": {
          "id": "6fc49cd1-2c4a-48bb-864b-f7e49eb5233f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "20ab95fe-eb37-4493-b62a-2eef84c15cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95259f25-bd17-4719-b070-e3d21f592c7d",
        "cursor": {
          "ref": "6f5bbf4e-66b8-49ab-a33d-4fc44f2dba9d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4ffaa71d-d98e-4cfd-b1a1-b306eb4f850a"
        },
        "item": {
          "id": "95259f25-bd17-4719-b070-e3d21f592c7d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6d04c55-2cbe-4024-a698-3119c62d5b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bb0d78-9d2d-4c80-9fed-f758f80e7188",
        "cursor": {
          "ref": "c8bd1db5-deff-45e8-9387-6ba983e15d43",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "df773f97-5309-45eb-8dde-937b3d45d422"
        },
        "item": {
          "id": "f6bb0d78-9d2d-4c80-9fed-f758f80e7188",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "34c5619a-27b4-4532-9f28-441046bbaae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09798576-59fd-42cd-9b09-0c4ac582bbb1",
        "cursor": {
          "ref": "6744b550-b55d-4004-9f0b-c352639e7005",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aed98bdd-0d16-47d8-b932-0bdeb3128b80"
        },
        "item": {
          "id": "09798576-59fd-42cd-9b09-0c4ac582bbb1",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "53abe818-a979-4aa7-be37-eb8bf059e89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49606f35-33ed-459d-8f09-18e3a0a10b93",
        "cursor": {
          "ref": "506482d1-8e0f-40a0-9638-e2811ce61ec3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "62976997-9c3e-4452-9947-1d1166b673b0"
        },
        "item": {
          "id": "49606f35-33ed-459d-8f09-18e3a0a10b93",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c5bc11ee-8c7f-4b41-a4c4-56c233c650be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca3e747-e7da-4626-a748-92ed0939f758",
        "cursor": {
          "ref": "e40c5c16-4e9c-42dd-ba25-667eb9bc251e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a6cd40ed-e779-4095-b0c8-b7c0337b54cf"
        },
        "item": {
          "id": "7ca3e747-e7da-4626-a748-92ed0939f758",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a02be05b-b8bf-45e3-a82e-d3613fe10295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea78fed-5025-4494-9dfc-ce182537ed8b",
        "cursor": {
          "ref": "dd4ab43f-db5d-475e-b7f8-d519a09b0d70",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "245d8c40-d411-4dec-b351-4ce36238b1b0"
        },
        "item": {
          "id": "7ea78fed-5025-4494-9dfc-ce182537ed8b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "001b05dc-cff2-45f6-aacc-3e59020dcb34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf22aed-9737-448d-be83-a7ac7ee2f02c",
        "cursor": {
          "ref": "24fc0576-5aa0-45a4-879f-852283fd122a",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f78c1a84-b15b-47d1-bad4-aba567fd32c5"
        },
        "item": {
          "id": "ddf22aed-9737-448d-be83-a7ac7ee2f02c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "53a63ea8-3986-41de-ae5a-238dd0b28e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3615e953-56c1-4c1a-9b13-eb7e2d189f24",
        "cursor": {
          "ref": "f2d9a82d-9597-4e27-824d-dce252c1d4d7",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "714c8ca5-ca18-4c99-99af-2b8373e416e2"
        },
        "item": {
          "id": "3615e953-56c1-4c1a-9b13-eb7e2d189f24",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9dc41bf9-b2c1-47db-90d7-84c003e75a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10deef03-6342-471d-89ae-d904796e73e0",
        "cursor": {
          "ref": "4b09a6d1-37ee-41fa-bd49-744ed78f0539",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d5b85c5c-10ce-4d73-8ea9-b5f9d0f8c844"
        },
        "item": {
          "id": "10deef03-6342-471d-89ae-d904796e73e0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e0411b9c-7795-4317-82bb-12274b38b110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a172e24-6281-43ac-b35c-c2320b4280f9",
        "cursor": {
          "ref": "3ed720b0-c435-4f4d-a206-9ffecb79a24a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "86b2411b-1661-45e3-bace-cc43a3a8eaba"
        },
        "item": {
          "id": "6a172e24-6281-43ac-b35c-c2320b4280f9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4cdc720a-0d03-4bed-af11-e7b89d2923e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84577ff-8251-4feb-9da7-ceb003783e29",
        "cursor": {
          "ref": "4f934b93-e644-48a8-aeab-b7b4bd566290",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "70486ceb-8b40-4c03-829b-7915dac21cf2"
        },
        "item": {
          "id": "a84577ff-8251-4feb-9da7-ceb003783e29",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fece8d3b-2574-4990-86b8-10999abb964d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed91151-455e-484c-a5ba-dc2933c5ed4f",
        "cursor": {
          "ref": "c099f442-6f07-4efe-8df9-49b27d90f9f1",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "84f27d10-924c-4462-b115-5a54d4956ff9"
        },
        "item": {
          "id": "6ed91151-455e-484c-a5ba-dc2933c5ed4f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "86199478-291d-4575-b1e0-d49e8f59aae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77608f4f-b807-4ff4-9156-8a55a51ea32c",
        "cursor": {
          "ref": "85197278-33ea-46de-8f1f-87c894a3cd7f",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fd050fe7-a407-4993-9849-6e513ee1c42c"
        },
        "item": {
          "id": "77608f4f-b807-4ff4-9156-8a55a51ea32c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "00f80c0a-ff13-4875-9988-d5cbb8b20525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022aea1b-8682-4742-b58f-17e2ad1ae740",
        "cursor": {
          "ref": "eebe5c55-f625-4212-9110-d07570fcbfba",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1272e130-6c85-4f94-9e68-c99b41053a5f"
        },
        "item": {
          "id": "022aea1b-8682-4742-b58f-17e2ad1ae740",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c35ea61c-6900-4ef1-a766-e5f8ee9fcf50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fb4b5c-2156-4182-ac29-2cbc921d00e9",
        "cursor": {
          "ref": "48cc7d68-faf8-45a1-bc93-641c894685b5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f3ff6912-998a-4cee-b186-d978f4b5e16a"
        },
        "item": {
          "id": "82fb4b5c-2156-4182-ac29-2cbc921d00e9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "599a28b3-be0d-4b83-bdda-1b0a420b6634",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd3251f-df3d-4a34-9f1b-c741ee51e549",
        "cursor": {
          "ref": "01ed4a5a-d9f8-44c8-b051-92d34f94a09d",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e99f5a84-26a4-4b55-9723-d1969ac5f4f7"
        },
        "item": {
          "id": "bcd3251f-df3d-4a34-9f1b-c741ee51e549",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0c829448-66c1-465e-93e2-49ecf18a6e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7df2071-1154-484f-a611-1016e52bbd73",
        "cursor": {
          "ref": "7b46f54a-f4cf-4c2c-8558-2306f54e9361",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8e67df1a-e06f-465d-91b2-155754134821"
        },
        "item": {
          "id": "b7df2071-1154-484f-a611-1016e52bbd73",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c63380fc-e83e-4614-916f-f2a4523d491a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e6fcd3f-773c-4fb5-b94a-94bd5fec97e4",
        "cursor": {
          "ref": "022edc9b-8f37-497d-8367-a0dbe2a01342",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "1d0ed1c3-b090-4919-b93e-ee74d54f3046"
        },
        "item": {
          "id": "6e6fcd3f-773c-4fb5-b94a-94bd5fec97e4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1e28fa05-1fc5-471c-96d7-ec3abdf7ea1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7ef3d433-79c2-47fa-b842-7cc574709f47",
        "cursor": {
          "ref": "08aab2f6-1918-4e4b-bd6f-8f978031416e",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "89da1d49-b072-48a7-ab51-7f23424ce169"
        },
        "item": {
          "id": "7ef3d433-79c2-47fa-b842-7cc574709f47",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1ee7a344-1345-4849-a443-f303712ba311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "98529964-4d5f-468e-a677-d0fd460f0b8b",
        "cursor": {
          "ref": "e2af1455-17f0-4d63-b178-1e1091de11fc",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "199c926c-cd50-4e62-86d1-ad785acf58e4"
        },
        "item": {
          "id": "98529964-4d5f-468e-a677-d0fd460f0b8b",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "657a3d8a-2a4f-4519-8e73-0898fd35f229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "ad63143a-ce2f-449b-87b8-99dcc1c63d02",
        "cursor": {
          "ref": "e2b619bd-a8e6-4bd2-920e-86efa4196ee6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "91a80a30-959f-4cb1-8e5c-2f2a4b34a68e"
        },
        "item": {
          "id": "ad63143a-ce2f-449b-87b8-99dcc1c63d02",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a3f1a851-8d24-40e4-9f1b-ce670f82d08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "7191f497-8c90-47dc-9656-0cae6fb741c4",
        "cursor": {
          "ref": "d600be4e-05c2-4de9-8375-394c7ccdfcb4",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e4260b60-ab07-4fb3-9141-02da6bfedd96"
        },
        "item": {
          "id": "7191f497-8c90-47dc-9656-0cae6fb741c4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "cc0d9f33-a531-4108-be8a-f8ebe599adca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "170bb886-2b74-4ea1-827b-a211d0478e24",
        "cursor": {
          "ref": "3ddb24e8-0fa8-4e21-9152-2dde95129a12",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "fd42f9cc-fdee-41e6-a527-7ed1c0949010"
        },
        "item": {
          "id": "170bb886-2b74-4ea1-827b-a211d0478e24",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8ec0f944-d2bb-45e4-86df-4d980b2e652a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "953c3558-311f-495e-bf73-03d7f1fda213",
        "cursor": {
          "ref": "b2d4d052-c515-4154-b7b1-ef9454a1c2ee",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "dc9cd13b-cb68-4514-b8e0-d4ec705fc8eb"
        },
        "item": {
          "id": "953c3558-311f-495e-bf73-03d7f1fda213",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a6a44653-9fa6-448e-98ad-6addb9b8dbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "95a8baab-c4f0-48ea-90f2-64f4711f11f5",
        "cursor": {
          "ref": "bb9d0a05-9c14-481d-b4e3-260ce41aa37a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "626390a6-4213-4d7e-bb4e-a24ccac7db4e"
        },
        "item": {
          "id": "95a8baab-c4f0-48ea-90f2-64f4711f11f5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ce85e7d2-9d5a-4e9b-9903-0858482452c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4990396b-6f3b-4f33-bae0-59afe096c292",
        "cursor": {
          "ref": "9b413dd9-1fa2-48d5-b497-753b3db9d4d6",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "50340d80-8764-46f0-8cdd-bc645b5cd24a"
        },
        "item": {
          "id": "4990396b-6f3b-4f33-bae0-59afe096c292",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "66b15d3f-5cd1-45b0-ba44-ded4e8ed72e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4bd9e3-df73-4a24-9628-0dddbb282dbe",
        "cursor": {
          "ref": "77709635-f954-4220-8d82-035a25fd3823",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1cdbf49d-361f-400e-8887-228373a6485f"
        },
        "item": {
          "id": "5d4bd9e3-df73-4a24-9628-0dddbb282dbe",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a1cd7ee1-ced2-4a9b-9447-436de6086e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07c079b-1266-4e83-83ae-e5abf1245be6",
        "cursor": {
          "ref": "00e70cf7-7aec-44b7-ad00-0a8a7151f0ed",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "90ad72f2-2cb4-4f42-9887-8a456732f276"
        },
        "item": {
          "id": "a07c079b-1266-4e83-83ae-e5abf1245be6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e86ce617-360c-41dd-9ae6-50dbbc338358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45266169-88b0-475d-a273-0ed8cca5ce1c",
        "cursor": {
          "ref": "50b585d0-0273-46d7-a3ae-b94131ac08cb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "83028ef4-c793-4fee-a10c-f454dd968766"
        },
        "item": {
          "id": "45266169-88b0-475d-a273-0ed8cca5ce1c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bffb0807-6e74-4ee6-a099-523aa1d77a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bed945-c8ba-445f-ae60-bd9c540874ee",
        "cursor": {
          "ref": "4964a68b-eb96-4dce-8a10-7dfa9157be18",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "404ef5e5-5295-40bb-8141-39cb5d3e8409"
        },
        "item": {
          "id": "67bed945-c8ba-445f-ae60-bd9c540874ee",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a582d89a-3e34-4e17-8af9-2ed781a6e083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcfe3e3-c060-4095-80af-f657e879d14d",
        "cursor": {
          "ref": "cfad3775-1ae5-49d9-88f4-ac43e4382020",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4ee473bb-c03b-4892-b73c-198da2ccb57f"
        },
        "item": {
          "id": "0bcfe3e3-c060-4095-80af-f657e879d14d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "70f0f2a0-76ff-4982-b4b2-085608760968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3382a6b-f58b-4bf4-9543-d46f5a65b13f",
        "cursor": {
          "ref": "9974b072-6d42-4c46-beaf-e8bd6ba5e747",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3bd90047-5a76-499e-bb14-a5f7f654eca0"
        },
        "item": {
          "id": "b3382a6b-f58b-4bf4-9543-d46f5a65b13f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b5e494c7-df4b-451b-aeb0-044fb3c6f1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce5705d-f05c-410b-8900-53cdf7539e2a",
        "cursor": {
          "ref": "7fb7ae26-e32f-4169-83d4-484312ebbbb3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "dfd32d20-0396-49cd-902b-8e896634bbea"
        },
        "item": {
          "id": "2ce5705d-f05c-410b-8900-53cdf7539e2a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0b7e4893-3c36-4847-8887-8545c2afb011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e1f6bec-6a8f-4a70-9560-387efe37a06e",
        "cursor": {
          "ref": "7bc38d95-6d0f-480f-85f3-29137d4ffead",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f0edb656-c7b7-4889-9dc9-5a1b8088a49b"
        },
        "item": {
          "id": "6e1f6bec-6a8f-4a70-9560-387efe37a06e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f54219e7-73f5-449e-b69b-0a7111f9150f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6dccb9d-2031-4a42-bbf7-c5ee14d38e6c",
        "cursor": {
          "ref": "051f4c05-e2bf-4bf1-9bd2-fcbd45fe141a",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f32eef6e-fec7-4090-b1a2-1a4810b74027"
        },
        "item": {
          "id": "e6dccb9d-2031-4a42-bbf7-c5ee14d38e6c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fd158e13-5c72-42c4-ae67-7dcf1171afee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7454775c-98e0-4e9e-aea0-71825f413f94",
        "cursor": {
          "ref": "d16dd374-e5eb-45a1-82fe-0a1092aecccb",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e1d0d2ba-e32e-4756-8568-aa862cb84e3e"
        },
        "item": {
          "id": "7454775c-98e0-4e9e-aea0-71825f413f94",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e4f85716-636d-4aaf-8dc8-713dfea58a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "986a032a-4d1a-4381-8a81-cddc3e421b64",
        "cursor": {
          "ref": "597e764c-afd2-4edd-bf3e-83b10a9edabc",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "148183d7-54a5-4f5f-b332-2c23ab70cde1"
        },
        "item": {
          "id": "986a032a-4d1a-4381-8a81-cddc3e421b64",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "561b8545-a5eb-44e7-acb4-67c141df1b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "292c8bae-059c-43af-a816-b95ddb6699ed",
        "cursor": {
          "ref": "4644b636-5d43-4a77-bcd8-f0dea4ff17ac",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b1360751-536d-473e-9f31-0351342279db"
        },
        "item": {
          "id": "292c8bae-059c-43af-a816-b95ddb6699ed",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "14d0b88d-635d-4433-a184-2baeb5047b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c4db615-d3fb-4658-87f0-93556f710046",
        "cursor": {
          "ref": "aad6a6dc-9f4d-4ccc-9662-1412503401a3",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9756fe6-13ac-408f-b077-3238aa6d7f6a"
        },
        "item": {
          "id": "1c4db615-d3fb-4658-87f0-93556f710046",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6def6757-447c-40d7-aac9-47a216af607c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc8ddfe-bbd9-42be-b514-255288b0cc33",
        "cursor": {
          "ref": "46e49e27-90bb-40c3-8463-3bc3aaf175eb",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "74862575-9535-457a-9e7c-4c5a73dcd6aa"
        },
        "item": {
          "id": "6cc8ddfe-bbd9-42be-b514-255288b0cc33",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "28ed8edb-89dd-4fa1-bd88-6d628494b462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f6ba83-6b26-4cf9-bb57-c146fab052e4",
        "cursor": {
          "ref": "e7f49b64-296f-4768-80c9-4f9876484b73",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "2fc03fdd-d7fc-4783-b86a-3a304036cde1"
        },
        "item": {
          "id": "96f6ba83-6b26-4cf9-bb57-c146fab052e4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6b60a453-7eaa-41a1-a8a7-145181f3419f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e6e640f-e2e0-4376-bd79-f95554d56218",
        "cursor": {
          "ref": "3b05a8a8-2179-4efe-878a-9a1ffbf26914",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c0828479-1db5-4beb-9dd3-ecb17e18ae9d"
        },
        "item": {
          "id": "5e6e640f-e2e0-4376-bd79-f95554d56218",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e6641bcb-55f0-42d7-8941-fc04f133a3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e503b8af-3c55-4818-9b85-1c2713de58da",
        "cursor": {
          "ref": "ac64aab9-bf87-47a4-bece-da492c9dc551",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "76a3b936-7c92-4bfb-b0b9-ce4f1716b445"
        },
        "item": {
          "id": "e503b8af-3c55-4818-9b85-1c2713de58da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e9c40f78-49da-44e9-9c50-82c08f9f5fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bae8dd-3eec-46c1-9ddc-f6f38c1e952a",
        "cursor": {
          "ref": "39f8c209-e079-4070-99bc-1ed1181ceae5",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "fdd0a361-0838-4252-9892-5059ac8fb106"
        },
        "item": {
          "id": "c1bae8dd-3eec-46c1-9ddc-f6f38c1e952a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5d18e316-0219-4c78-a5a9-090ebe21079b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3d5bdf-142c-4203-a247-47afd1de5c84",
        "cursor": {
          "ref": "0b855a7c-090b-4240-a9a7-bfa9d76a3f27",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c35497bb-a9e0-4fc2-91fe-615301b6820c"
        },
        "item": {
          "id": "0a3d5bdf-142c-4203-a247-47afd1de5c84",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "5c17c38d-1a6a-493c-ae09-92a3c5a787a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94d295c4-9414-4d98-955e-7bb185bc6c89",
        "cursor": {
          "ref": "1ab62c6d-80bf-4596-a115-866eb350df2c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "29cb0ccb-b4ac-42c4-9736-84961dfbba82"
        },
        "item": {
          "id": "94d295c4-9414-4d98-955e-7bb185bc6c89",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c07038ef-c1dc-4644-ac5d-261944491805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da8820ae-8e5c-48cf-b536-ad031a8a76c5",
        "cursor": {
          "ref": "bbfefe2e-c383-4400-a4d6-e1e3a5f7068b",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fc4d80cd-29d2-47e1-884d-9f1ad9e254c8"
        },
        "item": {
          "id": "da8820ae-8e5c-48cf-b536-ad031a8a76c5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0b2fa0d1-1d76-4d12-a332-a231b5f920aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bd5f99-1373-462a-9a02-b9a02c2a2631",
        "cursor": {
          "ref": "847dd6d8-9026-44e3-90f8-981a745ed84b",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "101f4810-d7d1-4972-be30-e1c137c46031"
        },
        "item": {
          "id": "d7bd5f99-1373-462a-9a02-b9a02c2a2631",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c7d0fcc1-1219-40e9-a507-646e2b38639e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cc7638-b3fe-4316-b32d-d32572d6c379",
        "cursor": {
          "ref": "2e78bf57-7d7a-4ef7-804c-6fc64fd4a598",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "242d1fa2-a083-4953-a68a-0dff1605b6ad"
        },
        "item": {
          "id": "97cc7638-b3fe-4316-b32d-d32572d6c379",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "58d850bd-2a42-48d3-9da1-d7504c8a4950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c7e837-2df6-4dbf-beb4-135f09e45b6a",
        "cursor": {
          "ref": "86291289-433b-44c4-9d3f-3afe971dcadf",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b590859a-6174-4289-b02e-527a18fd7174"
        },
        "item": {
          "id": "c1c7e837-2df6-4dbf-beb4-135f09e45b6a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "84c12d9c-569f-47ca-a74e-e31090166cf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c43a5a-94df-49d7-bfe6-baad41dc98b8",
        "cursor": {
          "ref": "b2df07f2-174f-4e6c-a655-572298bd0ebf",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2bc42c9d-5dde-4307-9d4b-6c57bc95e103"
        },
        "item": {
          "id": "d7c43a5a-94df-49d7-bfe6-baad41dc98b8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "361663f1-ae75-407c-926d-ef68b7015430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1362bf43-49ab-4c1e-887d-f34c9b936d86",
        "cursor": {
          "ref": "d10b1c22-a6b6-45c3-a4f0-3079ca82d3c2",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b23653ab-69cc-4d0e-ba6f-3f47f2f3cdcc"
        },
        "item": {
          "id": "1362bf43-49ab-4c1e-887d-f34c9b936d86",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3af2a90e-e38c-4a8f-a8c5-5c8d50b644f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb8c240-cd36-42eb-9a8c-00eaa31ddde8",
        "cursor": {
          "ref": "28ad0aee-a642-43b5-bf62-4218a6b5bc58",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a02d1522-2e90-4c8d-9468-79051b1d8bf3"
        },
        "item": {
          "id": "8cb8c240-cd36-42eb-9a8c-00eaa31ddde8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c4e88173-e2d7-4cfa-a11b-2cd440013fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe3b7c3-8e94-4184-97c4-ee66c60ccaed",
        "cursor": {
          "ref": "8f5e78f2-b4f3-41cc-89e9-008676594ab3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f1e9cb33-8bfe-4cdb-b2d3-055d1110b480"
        },
        "item": {
          "id": "bbe3b7c3-8e94-4184-97c4-ee66c60ccaed",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8d1b6157-622b-474f-ab09-115e640b3433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1afdad-466e-41e8-9208-6be49f7f5ee9",
        "cursor": {
          "ref": "1543d609-7083-43bd-81aa-233e38db2eb4",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4475a0ce-bdff-45cd-9b32-eb69ebaad1c7"
        },
        "item": {
          "id": "2f1afdad-466e-41e8-9208-6be49f7f5ee9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bc6c0d64-56c5-4dbf-934f-c8b282ad6f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2e9534-f0a1-46d9-84ea-9d0df9f75dde",
        "cursor": {
          "ref": "51b3a456-45e6-4af0-8bd2-8fb5332fd20f",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "4fc4e237-9024-4ca7-ab4f-bdfb26f14ae3"
        },
        "item": {
          "id": "3b2e9534-f0a1-46d9-84ea-9d0df9f75dde",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "870ac47e-2927-4cc3-9262-7e0b891466fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a96e793-03ce-49eb-a57d-f5c66458693f",
        "cursor": {
          "ref": "a10333ef-0263-47f6-9f87-b7fb9b9b1c76",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "156e52c4-a7a2-45be-977e-f078ffead463"
        },
        "item": {
          "id": "7a96e793-03ce-49eb-a57d-f5c66458693f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "72bd385a-912d-4d33-8b32-aa9a29e0f795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad697d6-629e-4b6a-9bfd-5b6db9ff553d",
        "cursor": {
          "ref": "741c3fe3-5b52-4fcb-b135-fd3b34225aad",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d9bc48f6-dc4f-429a-8e89-af203e200297"
        },
        "item": {
          "id": "cad697d6-629e-4b6a-9bfd-5b6db9ff553d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ff9b32ec-53d1-4cf3-9c67-161dc25e5438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710e5ec7-ad57-4710-b1a4-93cad0234de8",
        "cursor": {
          "ref": "527985e2-ea2b-425d-ac55-04dcd92245fd",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a2cc76b7-46ac-4735-96f2-48bbcb234850"
        },
        "item": {
          "id": "710e5ec7-ad57-4710-b1a4-93cad0234de8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "09de3855-e2b6-4658-8974-b15e141726f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c711dd-7f1a-4fa9-bf51-7bae773f70ee",
        "cursor": {
          "ref": "7bed8aeb-eb65-4666-8636-3a6a12a4bd96",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "899a0e93-2f34-4cbc-aa56-fe38a3556ae0"
        },
        "item": {
          "id": "67c711dd-7f1a-4fa9-bf51-7bae773f70ee",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d2bd2b9f-5a48-45fd-be43-0cd2d0958eed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b045b849-01c9-43eb-9dcb-3927049ca0ba",
        "cursor": {
          "ref": "9bf0bd5c-16f1-49bf-8888-e6826f48ba18",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d4e987bc-4818-4769-838b-9575fd4354b0"
        },
        "item": {
          "id": "b045b849-01c9-43eb-9dcb-3927049ca0ba",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4c0d390f-8c17-4bf4-b57b-4fd60b03448d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f022e84f-8bd1-4e84-9256-360ed9b3c98f",
        "cursor": {
          "ref": "342c9727-1a87-495d-bc48-79620778dfa3",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7db97dd4-aa60-424a-b702-8065b1090eac"
        },
        "item": {
          "id": "f022e84f-8bd1-4e84-9256-360ed9b3c98f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "20d04395-a9b0-42c0-bfba-5eaec4278513",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2736d5c-40d6-4f69-bab0-560966e2f31a",
        "cursor": {
          "ref": "59217c5b-5018-4094-a00f-76efac1bad92",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f1e88465-135f-455b-b499-4cb8a46c18a2"
        },
        "item": {
          "id": "d2736d5c-40d6-4f69-bab0-560966e2f31a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "db11ea57-01e6-4774-9873-cbbaf538c407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf063776-c1ee-4850-ac12-3307833ed39b",
        "cursor": {
          "ref": "15694844-b7b8-4d3e-993f-797117ab4b4e",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8bb97958-d7cf-4c2c-bcf4-7ddeb7935d96"
        },
        "item": {
          "id": "bf063776-c1ee-4850-ac12-3307833ed39b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1f693ea2-f8cb-4535-b0f9-9a43b222fed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07544e85-e4d1-4812-b5d6-ed28135532fc",
        "cursor": {
          "ref": "1e9ccd14-5b01-486e-8b87-481e834aba0b",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "60d29071-c08e-4063-9343-0ba1d4c07bad"
        },
        "item": {
          "id": "07544e85-e4d1-4812-b5d6-ed28135532fc",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "4c5dd5b8-d21b-4dce-8dbc-c3f969e40321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e013b35a-977c-4856-af39-1ee6e3049d96",
        "cursor": {
          "ref": "5ddbe01f-60f2-4ee8-a730-dd995f070f5f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1578270f-4f97-4a44-b423-73a8e607b7df"
        },
        "item": {
          "id": "e013b35a-977c-4856-af39-1ee6e3049d96",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "cf0b6fdc-292f-4510-9ffc-4eeadc94a223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ec5ae9-fa2f-4559-a223-9df41d67fc33",
        "cursor": {
          "ref": "5b1832ce-522a-43d7-9bcd-229079342172",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "06ae179c-1fb3-445c-aba4-27cae3481d4d"
        },
        "item": {
          "id": "63ec5ae9-fa2f-4559-a223-9df41d67fc33",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5e01360a-9f8d-4d22-8c28-bbe288c7a200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4597b509-69d7-4f07-80b9-ab746e9ba3a4",
        "cursor": {
          "ref": "2f8837ea-e04e-4c63-be92-f1d393b44a69",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "a9c92617-784a-4f81-a64f-bedec1a8cf3e"
        },
        "item": {
          "id": "4597b509-69d7-4f07-80b9-ab746e9ba3a4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "efc6f97c-d58b-4dbf-be51-8ab69c4dcee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7038ba8c-0747-4c0b-8ee6-efa2148fe208",
        "cursor": {
          "ref": "70cf5d85-f662-45ff-9c70-d2186b18a2f0",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "77590bb1-c9a1-48e6-b208-c7e0b4dac617"
        },
        "item": {
          "id": "7038ba8c-0747-4c0b-8ee6-efa2148fe208",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d34b145d-06bc-4326-ac15-5db79ae2c026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb77b6f-3ee3-487e-b339-a58a0e6af147",
        "cursor": {
          "ref": "4adc7cfb-bf5a-4387-bfac-8cac797dcc34",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7b41bdac-a636-4353-8133-713d06876099"
        },
        "item": {
          "id": "9fb77b6f-3ee3-487e-b339-a58a0e6af147",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4e10f92c-2cdb-4390-bf48-569763c9b45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9849590-8f23-423a-b77b-9bbf91a7486b",
        "cursor": {
          "ref": "9d855385-aa08-44f2-b490-e6a32b619016",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d2bc3a1b-3565-4ea9-8749-8948c1678027"
        },
        "item": {
          "id": "d9849590-8f23-423a-b77b-9bbf91a7486b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9f8e9a06-64fe-43d7-9212-ca2da2aaf26c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b7f777-0427-4c92-89df-069d17a7e06e",
        "cursor": {
          "ref": "4649cc0c-99c1-4399-b1fc-b1f4ec13aefd",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9c275e5c-ebf5-46bf-9504-1210d6f560c0"
        },
        "item": {
          "id": "b3b7f777-0427-4c92-89df-069d17a7e06e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "6210c97a-ef4b-494d-b927-561aea7f4d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3126eb44-422a-4541-a69f-0cb829a05b4b",
        "cursor": {
          "ref": "9b043cb6-a05a-4acc-b1b7-4a04f3101e15",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "190760b7-357d-49e1-9b43-01ce03acc721"
        },
        "item": {
          "id": "3126eb44-422a-4541-a69f-0cb829a05b4b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "87622c4a-3b4f-4012-b7f3-7d43f611bd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98891f3-58d2-4bdb-b111-f8439bb171d5",
        "cursor": {
          "ref": "91ef93f7-1c6f-4ba6-8b92-294f7ecb1f6f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f4b16dd1-fa37-49f6-830f-babe98698161"
        },
        "item": {
          "id": "f98891f3-58d2-4bdb-b111-f8439bb171d5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "804e6fe8-be40-4aad-b9b3-e5dd1186cd63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1bd5733-f151-407b-843b-051c84a03521",
        "cursor": {
          "ref": "8bbce97b-3358-488e-978b-dd5f4e85b092",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "a7c841ab-f0fd-4938-98ae-7697540f5c76"
        },
        "item": {
          "id": "e1bd5733-f151-407b-843b-051c84a03521",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "fd4187fa-9e23-42c9-911b-3d0140909a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1021267-fec6-4bc5-8f77-f50a3e834211",
        "cursor": {
          "ref": "d3319df1-d9fb-4d40-aff4-9e3f19a06373",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7c72d7df-4b44-4504-a360-e7e8efd22bbb"
        },
        "item": {
          "id": "f1021267-fec6-4bc5-8f77-f50a3e834211",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "19e239aa-8f54-4219-b2b3-36ec53c29020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e793ca-7c57-49fd-b53e-19245de11804",
        "cursor": {
          "ref": "052f56ba-b2f0-4651-8357-a951efc67b6e",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "bc214043-c950-4069-b30f-10890a367233"
        },
        "item": {
          "id": "b7e793ca-7c57-49fd-b53e-19245de11804",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ebf1d9d-272f-4957-b417-684639f8ee8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de16ade-6389-41c9-b5cb-57011b7a26a4",
        "cursor": {
          "ref": "fbeb90ab-4707-4d40-a68a-7466f1b360c1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9ad668b3-9997-4cac-9346-e8b0ecce3002"
        },
        "item": {
          "id": "7de16ade-6389-41c9-b5cb-57011b7a26a4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f37fa76f-7139-4986-a617-61c8eaa8ddd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6bab82-f724-4dcd-b02f-8260504a2fad",
        "cursor": {
          "ref": "d0ed4270-7a4d-4656-8537-106ec57e8197",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ab89b4f9-eb39-493e-b6f0-3d092c3d5ef0"
        },
        "item": {
          "id": "bd6bab82-f724-4dcd-b02f-8260504a2fad",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c812dd6f-5f1b-44e7-9682-16bd39368f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d9e6f5-dbba-43b4-a2c3-bc14c150a18a",
        "cursor": {
          "ref": "c8a56f1e-b77f-405f-9dbb-2a1a874b9a33",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "50ec5366-e7da-4733-819d-460d6aaf0b07"
        },
        "item": {
          "id": "a0d9e6f5-dbba-43b4-a2c3-bc14c150a18a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "91d53391-7105-40ef-8e7f-a89eae00d885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dc42c69-ea50-4fce-84b6-cea9a7eba953",
        "cursor": {
          "ref": "861435d0-68de-4665-924a-67d3a9b8d718",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6dc9367e-1d23-45a5-9bcb-7b4308f5c5ae"
        },
        "item": {
          "id": "3dc42c69-ea50-4fce-84b6-cea9a7eba953",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "77662f5a-c66e-4c31-8603-4c5ffc196563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c32f309a-6ccf-4293-b6b4-579443f75131",
        "cursor": {
          "ref": "84e1179e-f124-44f3-837b-016518da98ec",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e331ef71-996d-4c52-8bd7-d33d46f83000"
        },
        "item": {
          "id": "c32f309a-6ccf-4293-b6b4-579443f75131",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "18674da3-b40e-448e-9128-538add12b85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de502411-041b-43f4-834c-84e90f59f47f",
        "cursor": {
          "ref": "43b9f062-3ae0-4e74-9398-7d01ebda3aa9",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "df1a39bb-1262-4fb7-ad3c-b02b0df390a7"
        },
        "item": {
          "id": "de502411-041b-43f4-834c-84e90f59f47f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b736e86d-9550-401b-a718-5169548b4666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8154b1c4-e49c-4272-954d-06a1f74d447d",
        "cursor": {
          "ref": "c9a9908c-f2d0-4221-a995-ce1accd00847",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "994481fa-e0f6-4171-b227-5860cf80f87d"
        },
        "item": {
          "id": "8154b1c4-e49c-4272-954d-06a1f74d447d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4d813939-acd2-4660-96bb-3d789a36f0df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc3d45c-6347-4b5d-b17e-abb2fc7e5e6c",
        "cursor": {
          "ref": "f13fe845-eb39-495a-b119-91536dca55f4",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "40fbc50c-7084-4a1f-9966-5417aec42670"
        },
        "item": {
          "id": "9cc3d45c-6347-4b5d-b17e-abb2fc7e5e6c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "608ee7f1-9430-48f1-8610-40d2a21cc677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eca8f98-573b-4346-a67d-36b498a94f2c",
        "cursor": {
          "ref": "f653dabe-1fdb-44fc-bb51-a36b656ba19d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "fa1187e6-44e2-4480-b6ab-a5a685e540ae"
        },
        "item": {
          "id": "2eca8f98-573b-4346-a67d-36b498a94f2c",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "13bfdab0-646d-461c-b454-a3185ec43e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9d9d4a-126a-4c74-beee-de787892aa1b",
        "cursor": {
          "ref": "783597bb-be8a-44a1-87f4-137c7a553f97",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ab070760-2bc1-4c53-8c4f-96a8fde2fb9f"
        },
        "item": {
          "id": "5c9d9d4a-126a-4c74-beee-de787892aa1b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ad2e5a9d-87e6-4137-bf04-beb8dcb821af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b38d9d3a-50e7-4238-ac51-983a8a2522fc",
        "cursor": {
          "ref": "2e025b9b-c691-4d11-b2a3-e27c719bb5e1",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "250cde4e-b897-40d1-a9b2-b68f2885ddca"
        },
        "item": {
          "id": "b38d9d3a-50e7-4238-ac51-983a8a2522fc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9540f6f5-d419-4dcf-bba4-53dc48da638a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d22e60a-d188-41bb-b2eb-de1e9fe4c861",
        "cursor": {
          "ref": "5eb02e60-eaa5-48bb-9a00-555b5aeb8fb8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "05c7c22c-3c3c-4698-8e42-7eb168997c53"
        },
        "item": {
          "id": "8d22e60a-d188-41bb-b2eb-de1e9fe4c861",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ca46d94d-777e-4c55-8013-10ee0150ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229d3138-dfc1-4b42-8934-e5356c86a8b2",
        "cursor": {
          "ref": "6640265b-745d-44e6-aeaa-87a19e7d3339",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c176300d-c7b0-4909-b418-b9945e81c3ca"
        },
        "item": {
          "id": "229d3138-dfc1-4b42-8934-e5356c86a8b2",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "014d5ddb-bea0-411b-89fa-c191f5cbe5c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0de5d5-a126-4fd3-b724-d4ba1ac49e74",
        "cursor": {
          "ref": "1f26680e-e211-4ca8-bc64-53ed65d73444",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6b07ee33-4618-4971-950a-28aaa051afb8"
        },
        "item": {
          "id": "de0de5d5-a126-4fd3-b724-d4ba1ac49e74",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c1c82e1a-0757-4de2-93ae-db056acd7829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7523716-9136-427b-87fc-771086793535",
        "cursor": {
          "ref": "3260bb98-4ca3-4750-8f34-50cc964775f9",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0be4f0f0-9c0f-4853-b9be-7c704af75c67"
        },
        "item": {
          "id": "d7523716-9136-427b-87fc-771086793535",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "696102dd-d2a0-474d-bac6-c961b08e12f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc51a305-12e6-451f-9e61-d979c161eb90",
        "cursor": {
          "ref": "70d6b0d8-a0a0-4de3-9e7e-8a0337e2926d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "040e3b86-01d9-4551-9faa-eeff5bce6603"
        },
        "item": {
          "id": "bc51a305-12e6-451f-9e61-d979c161eb90",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ff925f06-e314-4dfa-983c-a6ad12914b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "703f227d-5556-45e3-bb97-e23b2eecd878",
        "cursor": {
          "ref": "60c61cec-50a0-4899-881c-30b677c910f9",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e6a70ce2-1283-4283-89ed-53ff6f9a776f"
        },
        "item": {
          "id": "703f227d-5556-45e3-bb97-e23b2eecd878",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a83d1d3e-4cd8-4b5a-ac01-f5cef73533ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302c1c2c-0d98-46cc-b869-aae94ed501d9",
        "cursor": {
          "ref": "681dd3cf-277f-4f05-913f-4d6c285f8f6c",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3a95c790-0056-4f25-8db1-ea09510c020e"
        },
        "item": {
          "id": "302c1c2c-0d98-46cc-b869-aae94ed501d9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9dcd5a90-6d1f-4307-b1c7-17edce1b3468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4750d8b6-06ec-443b-abdf-3bf2f66e85de",
        "cursor": {
          "ref": "d496ee45-cd66-410d-b91a-84c1826b6c13",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a3687c08-27c0-4d6a-a304-1a64272c0a4e"
        },
        "item": {
          "id": "4750d8b6-06ec-443b-abdf-3bf2f66e85de",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "994e012e-9a7f-472e-92a4-91a1706f9eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c83326-8a2b-4767-9091-b2587edbadae",
        "cursor": {
          "ref": "151fd388-5180-4a68-8ae1-2171ba94c478",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ddf610bc-6dbd-4f3a-b717-e472625dbfce"
        },
        "item": {
          "id": "59c83326-8a2b-4767-9091-b2587edbadae",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9d0af58c-ff45-4c3f-9ecf-2af2a883bfbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1ab478-d010-4152-a295-5c22eb26ade5",
        "cursor": {
          "ref": "64e0f76b-bcb9-4ba0-9cb9-168a5b05cca8",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "324d3448-f96e-415a-ab98-bfc4a63a7238"
        },
        "item": {
          "id": "3f1ab478-d010-4152-a295-5c22eb26ade5",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e1e555de-699d-42ea-b75d-0e2e18bd66a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecb2180-3b44-434c-9dfb-dfac5c09bafb",
        "cursor": {
          "ref": "574605f6-c450-4e67-a3cb-aac9ebaa1976",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9e8073cb-e5b3-4be3-9ffb-409163b6d122"
        },
        "item": {
          "id": "6ecb2180-3b44-434c-9dfb-dfac5c09bafb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2034cbf3-103b-4c16-acaa-cabbae66f3da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d983ee76-4b65-43d5-83b6-522ccf1ebdef",
        "cursor": {
          "ref": "d12ecffa-7546-406a-ae63-9383a4be97dd",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ea753073-1e88-4613-be4d-167bb6bff997"
        },
        "item": {
          "id": "d983ee76-4b65-43d5-83b6-522ccf1ebdef",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "a83aa637-9f3b-4925-a636-cbc6883bb332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc21d5b0-8144-46fc-9fb9-af1c06a12251",
        "cursor": {
          "ref": "e691f1d2-0d16-4f77-9d1e-6fde741f6b37",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a04900d1-49c9-4637-87a6-cfc5be7d8868"
        },
        "item": {
          "id": "bc21d5b0-8144-46fc-9fb9-af1c06a12251",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "24e89da7-a17d-4249-b073-d80b3513c32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8413b2-8087-457d-8888-5c447b3e21b4",
        "cursor": {
          "ref": "663db20c-7076-4b90-afdd-4458d637fd66",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2ebcc27b-6cec-4d00-bd40-83a35a9010ce"
        },
        "item": {
          "id": "cf8413b2-8087-457d-8888-5c447b3e21b4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ce0f4d0a-bb8c-4839-89d7-60b24e75a943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea3030f-7f48-4893-8d48-bffb1b1bf1e8",
        "cursor": {
          "ref": "cae6fda3-ffb1-44f8-b518-5983d0063600",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b031e860-1a68-492a-a7ee-3ea6a064bb9c"
        },
        "item": {
          "id": "0ea3030f-7f48-4893-8d48-bffb1b1bf1e8",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fd5388d5-6775-4a8b-8aa7-714eff7c1ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5d2203-865f-4382-9a39-628bc02c43cc",
        "cursor": {
          "ref": "5d7a4ef0-d906-4810-b1d9-dccbb69a9d4c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e4395a9f-c49b-4ab7-959b-11e30783b9d9"
        },
        "item": {
          "id": "4e5d2203-865f-4382-9a39-628bc02c43cc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6598d3f4-7aa2-46cc-b519-6fb74e32bcd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0783a48-05aa-4464-8fe4-e350a07f6295",
        "cursor": {
          "ref": "05174953-9504-4037-a872-0976f28fc501",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c30d65ef-5543-475c-8b7b-56cacc482fee"
        },
        "item": {
          "id": "c0783a48-05aa-4464-8fe4-e350a07f6295",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "96043383-bc9e-4c78-a65d-c8d7b88bedf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42f61b4-5554-4dbe-9480-f963ebc9da44",
        "cursor": {
          "ref": "8bcb98e8-d4fc-4872-ace0-6acbc2c42585",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3f7fb18c-0db0-4252-9689-8d3bc431f4f1"
        },
        "item": {
          "id": "a42f61b4-5554-4dbe-9480-f963ebc9da44",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "cbd85fcc-ef20-4294-aafb-0b3139dbd53f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f1f75e-d746-47e5-b2c3-17e089c0e277",
        "cursor": {
          "ref": "5d957a76-6680-4b81-a492-b7bae94c6976",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "60645412-8e2c-4678-8cdb-928b26b0670c"
        },
        "item": {
          "id": "26f1f75e-d746-47e5-b2c3-17e089c0e277",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a29e4552-33fe-43b6-9d06-122182a82134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906f925d-0a11-478d-b209-e33eefa3948e",
        "cursor": {
          "ref": "a83653bd-b5e2-4d14-ab86-0f3a9f8f975e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3a1213fd-3112-4058-9b47-cbe553ad2bef"
        },
        "item": {
          "id": "906f925d-0a11-478d-b209-e33eefa3948e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "676a4cf5-1bba-4d1b-aa67-8eb3bb4f224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72ae4326-6417-42a7-8057-6387bd2fec30",
        "cursor": {
          "ref": "5a98260c-4166-4c6c-9501-1f75999f0dbd",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5560175e-1d88-488a-a5a9-19227ed23689"
        },
        "item": {
          "id": "72ae4326-6417-42a7-8057-6387bd2fec30",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "e28d5c04-8e31-401b-b909-ee2c5dfa6f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5a45c0-932b-4826-a9d3-2c4e5ea17c3a",
        "cursor": {
          "ref": "4caba563-abda-4d8c-bfb1-2834a3517e8f",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "cfbd0c4d-4be2-4783-9747-329a2ac4d04f"
        },
        "item": {
          "id": "9b5a45c0-932b-4826-a9d3-2c4e5ea17c3a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "65dc0fb0-9d9a-44a5-a3da-2f7b5a551b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de8846d-f19d-4860-a840-136c4edf92ae",
        "cursor": {
          "ref": "8b7c895a-3814-42bb-b031-ad008bdaabc9",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1314aa0a-b161-4cdd-b2a5-28a0c498d91b"
        },
        "item": {
          "id": "8de8846d-f19d-4860-a840-136c4edf92ae",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "138c94da-f464-4eee-8e89-a32cc2b56758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b8cce6-9437-4387-8c85-5dea551fa180",
        "cursor": {
          "ref": "fe0743bf-c493-4133-b0df-6afc8266e681",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "925e5c22-d65c-44bb-b883-73d923d6796e"
        },
        "item": {
          "id": "71b8cce6-9437-4387-8c85-5dea551fa180",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "675d8857-e9ce-4146-af85-9cedafd1dc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4abb58c-a781-4455-ac57-25fcfa39326e",
        "cursor": {
          "ref": "4889486c-d9e2-4b05-8cc7-eaefbe57aefb",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "025f2403-5b9e-474e-87ab-529e8b866655"
        },
        "item": {
          "id": "b4abb58c-a781-4455-ac57-25fcfa39326e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4a1125a0-399e-4ca0-a926-bbd3f88ed514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99f9245-69f6-422c-adf5-d8e9fbc875c3",
        "cursor": {
          "ref": "008333af-6436-44af-a7d0-c337a3a342f4",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b26b32ab-ec4f-4af8-88ad-93d3729c7e37"
        },
        "item": {
          "id": "c99f9245-69f6-422c-adf5-d8e9fbc875c3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "03e7914a-14e7-4a51-ac5b-0b0e0b465724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dfc5d0-061e-461d-a0d6-f4a78f791526",
        "cursor": {
          "ref": "062b80a2-39fe-4c59-bdac-3086ba219d3e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7962e519-9372-4648-83ca-e022fdc86b83"
        },
        "item": {
          "id": "b8dfc5d0-061e-461d-a0d6-f4a78f791526",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1d50e3d6-fbc7-47bb-98ab-aff4abd6d310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23482d2c-2714-4439-b29a-dee13d23740e",
        "cursor": {
          "ref": "b6074fc7-d531-42d4-8080-aaea267e85df",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "4f4c02bd-5c3f-4727-ae27-59adccbcf54d"
        },
        "item": {
          "id": "23482d2c-2714-4439-b29a-dee13d23740e",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3549d57b-1b63-4ea0-856d-83d7462117ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c571410-e3e7-4bb1-91dc-fe1330c123a0",
        "cursor": {
          "ref": "f0e06a66-76f3-48d3-b588-a73da741a756",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "24c9968d-9836-42ab-927f-459cc22a3d1c"
        },
        "item": {
          "id": "2c571410-e3e7-4bb1-91dc-fe1330c123a0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5837dcd5-f824-4778-ba9a-925b34cd8ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a495915-3392-4056-ac9e-bdcfbdc76400",
        "cursor": {
          "ref": "5243684e-c118-442b-a54a-234eed41eb5a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cd5f5bda-a4ae-4462-96af-ed820d193203"
        },
        "item": {
          "id": "2a495915-3392-4056-ac9e-bdcfbdc76400",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c2d60961-d6b8-43a7-a358-f1f14ffd11c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4810a230-e542-433a-84db-53094aa83dc6",
        "cursor": {
          "ref": "cb2a98df-b618-464c-bfe6-9e2c4d78e7f2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "1b6ed71b-d6d2-4009-bed6-74484716b537"
        },
        "item": {
          "id": "4810a230-e542-433a-84db-53094aa83dc6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3db08766-0d70-41bf-9e30-069074340064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de78c30-6ea7-43a4-acee-e075045cc4ad",
        "cursor": {
          "ref": "8e9caea9-a881-4b2f-ae38-3877609a335f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d6c411fc-be6f-4996-a329-165f46ffb44d"
        },
        "item": {
          "id": "6de78c30-6ea7-43a4-acee-e075045cc4ad",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e9ea6b19-02ea-4d7d-9cb8-34661c6758dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916d8b74-06c4-412b-ba05-bb4ef21bdfe8",
        "cursor": {
          "ref": "a0668aa1-7daa-4a44-8f04-3c1814536521",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4575dfa7-f22d-45b0-b6ea-e9388718869b"
        },
        "item": {
          "id": "916d8b74-06c4-412b-ba05-bb4ef21bdfe8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4c2824ef-27a9-4cd3-953b-0ff39ab7ec28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7b1e71-3d5d-4fde-bb46-3165e93c2688",
        "cursor": {
          "ref": "265c66eb-5617-4c94-a127-6ccb60e0da8d",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "e8e8df1b-a0a6-47eb-afcd-3853d35cbbaf"
        },
        "item": {
          "id": "6a7b1e71-3d5d-4fde-bb46-3165e93c2688",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "30398223-3e8f-4a48-b36e-f89aa3f0df1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c122741-befc-4934-98a9-44372a4b2973",
        "cursor": {
          "ref": "c8d51f53-1104-48b5-9822-71fafca94bdf",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "660f5653-1ef2-4058-b1a7-051ff6103b53"
        },
        "item": {
          "id": "9c122741-befc-4934-98a9-44372a4b2973",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0594134f-2e6e-4bbd-94ca-7de3322d21ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6199219-0e92-41fe-bf7b-20bfee3e8b80",
        "cursor": {
          "ref": "a259f7a2-ac90-4d95-96d1-7d697fe2857f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "46edad1d-6655-42bb-85aa-550a52790eee"
        },
        "item": {
          "id": "b6199219-0e92-41fe-bf7b-20bfee3e8b80",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "0fa46dbc-967b-461b-ba90-b861313a504e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fa1593-e4a2-4eb0-872b-3fdd23b71037",
        "cursor": {
          "ref": "6ec7366a-17b9-48ea-a9cb-5ebbbbc3dba6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a1f8c264-3861-4c61-b35e-e46d679cecc9"
        },
        "item": {
          "id": "74fa1593-e4a2-4eb0-872b-3fdd23b71037",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c4627870-600d-43ef-a7fc-2d53d59bac31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634b69b5-45a2-41ce-bad8-67906bbb2fa9",
        "cursor": {
          "ref": "df27bc9a-1085-4645-9042-9ea2bc4e15a5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4cd01d5f-ded2-4124-84b2-e5dd119d6eb1"
        },
        "item": {
          "id": "634b69b5-45a2-41ce-bad8-67906bbb2fa9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2efff675-b6c6-4a2c-acde-00272cd450f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e738f24-7cb9-4e20-9803-98b4e8924bda",
        "cursor": {
          "ref": "640cfce9-2561-408f-9693-0a931373ca96",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fd1b2df1-5a92-44fa-a793-c628b6de1435"
        },
        "item": {
          "id": "5e738f24-7cb9-4e20-9803-98b4e8924bda",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "02708b91-0755-498b-a3a0-1be19f99a0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d32431-6d98-430d-a409-39d261b0cdc4",
        "cursor": {
          "ref": "9c9ddc2d-05d7-4a26-9ec9-9e859c6968a0",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "389fe8f7-7413-4720-b8fd-5a8cbf91355e"
        },
        "item": {
          "id": "c5d32431-6d98-430d-a409-39d261b0cdc4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b02028d1-f796-40d3-bd7e-683f231acfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbb8923-865b-4d3b-b4cd-38a3820252dd",
        "cursor": {
          "ref": "eb81d511-8250-487c-b1a0-b0d5ad0b7448",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b2a615b9-da97-4ca6-a9fa-c9d4829a3006"
        },
        "item": {
          "id": "cfbb8923-865b-4d3b-b4cd-38a3820252dd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a2d2d7d5-89b1-4347-b5c8-62c36e17d2e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ac9606-368b-4dba-b6ec-0fa84427372b",
        "cursor": {
          "ref": "b9bcf1d4-b6b4-471a-8772-76b2a5e4e408",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "84ac8087-c5da-481e-b008-31058d8366c0"
        },
        "item": {
          "id": "60ac9606-368b-4dba-b6ec-0fa84427372b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8e6cb821-7ea0-485d-b349-1bd6a56cda87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60347e9f-a4ff-49c1-8917-1e7ce96975e7",
        "cursor": {
          "ref": "2f9fa11f-66bc-4d78-8d6d-352f55cde652",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d41db95c-7265-43cc-a7c9-5331a680704a"
        },
        "item": {
          "id": "60347e9f-a4ff-49c1-8917-1e7ce96975e7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f3da4976-6454-43c6-b613-3bbb4f617248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed0251f-8265-4a99-93b1-d9acd04a5c3b",
        "cursor": {
          "ref": "a3711a4d-5939-42c3-a502-4eff4aff726b",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6ac6dbc1-4ef0-4859-a8d7-840e3c2baafd"
        },
        "item": {
          "id": "eed0251f-8265-4a99-93b1-d9acd04a5c3b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "5e4e3387-33b3-400e-8e5b-f5a7dd1ef8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0862d498-1860-4092-a259-6a798e907c76",
        "cursor": {
          "ref": "f1cb9948-c68e-47da-af6e-2c141be0acdb",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7a4cda91-6dec-4fc6-93a3-4d9513042ad8"
        },
        "item": {
          "id": "0862d498-1860-4092-a259-6a798e907c76",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "620c9057-b266-439f-b9f6-8e7c5f0529df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d0f8c1-c5da-473f-a5c8-c8aba614db36",
        "cursor": {
          "ref": "fe3e7de2-30a8-4322-9fd1-e080ae67eafa",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cc1d01ba-6c15-4a2a-93e7-f64823b60c66"
        },
        "item": {
          "id": "73d0f8c1-c5da-473f-a5c8-c8aba614db36",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e87cfb9f-bd05-4f98-948f-fda017b24d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ca5502-3862-4cd0-8337-dd2e13f6bd83",
        "cursor": {
          "ref": "07b562a0-9813-4d37-bce0-61c0ccae5aba",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5e1dd5a7-7e82-4cdc-8f2e-1bacd40c2d3c"
        },
        "item": {
          "id": "d9ca5502-3862-4cd0-8337-dd2e13f6bd83",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "735042bc-b862-48e5-85ea-7aabc438c01a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585c1586-1192-4e5f-8fc2-2a5b243f7658",
        "cursor": {
          "ref": "5b5da9cf-2dfc-4d1d-a52e-19465f36c507",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dff7d267-2d2a-44b0-ba7c-13d428010da3"
        },
        "item": {
          "id": "585c1586-1192-4e5f-8fc2-2a5b243f7658",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "540e956c-f641-4dfe-b859-8ca61e903b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c945ca0-4b96-452d-b681-23c59f2c0427",
        "cursor": {
          "ref": "6d35406d-3846-478b-ae74-6a2896a7bff9",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4efd04b1-edf0-49ee-9d95-1a582f950ae9"
        },
        "item": {
          "id": "8c945ca0-4b96-452d-b681-23c59f2c0427",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d39123be-e1c8-4ac0-86ee-e21a1ce701cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2852d6cb-5a41-4671-a590-4e89539019d1",
        "cursor": {
          "ref": "97b64896-afb0-4aed-9749-116020c45c9e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7a23d040-c269-4a8e-9932-ab49fee66067"
        },
        "item": {
          "id": "2852d6cb-5a41-4671-a590-4e89539019d1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "06e743cc-50d6-4de9-91e7-4cd5be168980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100c1970-9287-4454-b1b3-2fd9f2d0dee1",
        "cursor": {
          "ref": "74609d43-c13f-43d0-a10e-eeeedd2ee4d7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "174a54b9-8a1b-4de8-9369-44d7ee743793"
        },
        "item": {
          "id": "100c1970-9287-4454-b1b3-2fd9f2d0dee1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8fba86a0-bb42-4694-9408-32f4cb958dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb092b2-4969-4bb2-a2a3-e3e087f2f58e",
        "cursor": {
          "ref": "f2e59d54-4543-4ed6-a52d-63b59e64ce66",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f5435cf9-6910-4a06-918e-e5c027866dca"
        },
        "item": {
          "id": "bfb092b2-4969-4bb2-a2a3-e3e087f2f58e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8e2b402b-6b98-4037-879b-e067b204ee0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599a7b53-ef81-456b-9a9d-ce27f0429996",
        "cursor": {
          "ref": "ec7f26e4-a132-47d4-afbe-221c20ac86ae",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "dbdefcbd-4425-40b6-b633-4ea3f2e19a03"
        },
        "item": {
          "id": "599a7b53-ef81-456b-9a9d-ce27f0429996",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "568e2f62-9a1f-4635-aed2-902e81d5ac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb890c70-8cc3-4fff-85df-142c477e67b1",
        "cursor": {
          "ref": "9158938a-dff4-4a65-ac79-1a2c2f2d82cc",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "aca0e061-5fbe-4128-acce-0ac203c1c357"
        },
        "item": {
          "id": "cb890c70-8cc3-4fff-85df-142c477e67b1",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1a03b6bc-e196-41fd-b5b9-b8edea700394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e5a9a4-ee72-4a6a-b7f8-aec6fb9aa400",
        "cursor": {
          "ref": "cff327ef-9719-48d7-a218-d8f4261cdf52",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "22bf3639-5a08-48fd-87db-247e0a5bb09e"
        },
        "item": {
          "id": "32e5a9a4-ee72-4a6a-b7f8-aec6fb9aa400",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5f84426c-4421-426a-97af-6362c80bc7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb1c885-cd3b-45d7-ae22-db0358619c72",
        "cursor": {
          "ref": "16e0f303-4928-42a3-8585-2a347cb916d8",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "d250d240-14c6-42d1-b4b9-863230729b90"
        },
        "item": {
          "id": "6fb1c885-cd3b-45d7-ae22-db0358619c72",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "78138cb2-59ee-454e-89df-6217edbf3528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab749970-9d0f-49a5-bbdc-4faf96027c5f",
        "cursor": {
          "ref": "dd2c477b-31ab-4c84-8177-caa303290e71",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "781c1a06-3da2-41bf-84ff-8dee227ddc7a"
        },
        "item": {
          "id": "ab749970-9d0f-49a5-bbdc-4faf96027c5f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "08811a10-487c-4f80-ab7e-b8e777ffbdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0e9f2f-84c2-4e94-a5f9-a6128c541c76",
        "cursor": {
          "ref": "428c9dad-8412-4931-afe8-6bdfff7e6695",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ae71ac0c-1bbc-43c4-bb17-dc2a24795093"
        },
        "item": {
          "id": "4c0e9f2f-84c2-4e94-a5f9-a6128c541c76",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "62180f1c-2510-4ab7-860f-969f083d5efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d5adaa-0f9c-44d9-a134-2215c7105b69",
        "cursor": {
          "ref": "9ce4c763-2836-4218-ab6b-65a71f5659bc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8ff2caea-89ad-404d-bcbe-7aa5a3d9400a"
        },
        "item": {
          "id": "e5d5adaa-0f9c-44d9-a134-2215c7105b69",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2484fb5c-edf0-4014-bc2f-19d28cb69d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97c05ef-c792-431a-a94a-3d4d4a4e9169",
        "cursor": {
          "ref": "ebbc85cc-bcab-41a4-b952-4cbf8e506d09",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e9d3c9ee-8311-4c93-a6f8-a1a025a59d3a"
        },
        "item": {
          "id": "a97c05ef-c792-431a-a94a-3d4d4a4e9169",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6757a48c-c41b-4110-a40e-f79dd9dbae6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bca8521-da19-433c-b11e-b90751a6b664",
        "cursor": {
          "ref": "589ecc1e-be18-4439-beab-a91112c92028",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a4dd6f56-fa68-449a-bf0b-543039e493a1"
        },
        "item": {
          "id": "0bca8521-da19-433c-b11e-b90751a6b664",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9375819d-f571-45ca-89ed-1ce6fa59bb4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b97611b-db62-4765-9792-2216fadba704",
        "cursor": {
          "ref": "23a4d654-a565-489f-91f7-452bc37d258f",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9005defc-cc62-4d45-8de4-d7a5e00ade7c"
        },
        "item": {
          "id": "9b97611b-db62-4765-9792-2216fadba704",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "df781ed0-11d6-4550-bcf6-9be018e44703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9b524c-c218-478e-8ea1-55cf668c4d96",
        "cursor": {
          "ref": "4f5ca52f-d113-43cf-9ae8-7eba442e0955",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8fb7f748-d2c5-415e-8cd5-1173356d5b91"
        },
        "item": {
          "id": "ab9b524c-c218-478e-8ea1-55cf668c4d96",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "985ac869-4ea9-4db0-92d6-0916831202e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68347496-8928-4ae1-98a9-d1981513f960",
        "cursor": {
          "ref": "89e7033d-54a7-4884-b53f-ce13bbbc0907",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e02052a6-fe53-4297-ad83-c2c48c4b0bf3"
        },
        "item": {
          "id": "68347496-8928-4ae1-98a9-d1981513f960",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bb4fb3ce-0aa4-4671-9e54-a098f817224e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45de70ba-9d14-48c5-a08b-cac2a55efdce",
        "cursor": {
          "ref": "937c65dd-d500-4f6b-af17-d8db0421e1cd",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "8cd848e3-bd44-44ce-bf6d-cd8d64a7b4f3"
        },
        "item": {
          "id": "45de70ba-9d14-48c5-a08b-cac2a55efdce",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b2fe98a6-4b1a-47c8-9684-ecec164998a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f9f85a-7a51-4012-9ee3-43b4b8aed916",
        "cursor": {
          "ref": "c9ff4b4a-df32-4561-8c6d-7dd814a13d06",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2900069e-f543-4aa2-89c4-7730dc1a7129"
        },
        "item": {
          "id": "13f9f85a-7a51-4012-9ee3-43b4b8aed916",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5ebd6fec-6681-4678-a4fa-e27139945782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38259cde-b14b-4b5f-bf7c-3c922d09b8fe",
        "cursor": {
          "ref": "7fba3ecd-4f67-45bd-a488-7ff5ec33f9b5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fb7878eb-34bc-4c51-8b41-ee814690633e"
        },
        "item": {
          "id": "38259cde-b14b-4b5f-bf7c-3c922d09b8fe",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "19e580f3-9050-4d89-97d8-c575df206e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc42511-33fb-4712-8418-45b4d3b973d8",
        "cursor": {
          "ref": "73616534-e81a-4744-8dce-9cad149c480d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "308db13c-47f0-4206-8118-f732b61c9df0"
        },
        "item": {
          "id": "bdc42511-33fb-4712-8418-45b4d3b973d8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b908a331-d852-4c71-a327-abc95d5e4bb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19fea823-dfe8-4eb5-9f2d-f9a94e22e20b",
        "cursor": {
          "ref": "fcafe0d2-65a5-4657-bc24-d74c04789b1d",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "538f7a1d-8463-4e76-8ab6-5110c3ea6399"
        },
        "item": {
          "id": "19fea823-dfe8-4eb5-9f2d-f9a94e22e20b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "acf8803b-74c7-45d8-9bd6-36a818bda628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9b96f6-9799-4700-a011-de24cb0d35c3",
        "cursor": {
          "ref": "e525edeb-6eb0-404a-9cb3-602d9aa3d2ab",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3db0553e-1cfe-4df8-a3cb-faac488ffd2a"
        },
        "item": {
          "id": "3d9b96f6-9799-4700-a011-de24cb0d35c3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fec64fa4-abb6-4299-8a69-e57246094312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2cd4e0-616a-4254-a2d2-a4f9fab95373",
        "cursor": {
          "ref": "a15e56d2-f1ca-478d-af89-a063e64f017f",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "64f98634-9b1f-4c59-978d-4857a61d2634"
        },
        "item": {
          "id": "6b2cd4e0-616a-4254-a2d2-a4f9fab95373",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c2266e86-42e0-4459-a924-ae17a7cc9130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a452688-98a6-45a9-83a6-52da0582a91a",
        "cursor": {
          "ref": "d04a659f-0ca3-44a7-83b5-f56d3b310326",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "79e63f29-0cbb-429a-b717-2c3792c224f2"
        },
        "item": {
          "id": "6a452688-98a6-45a9-83a6-52da0582a91a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "352a17a2-0569-4468-9884-3f8f90b00586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202ff6dd-8a13-4c2d-97ce-273c36f6d24d",
        "cursor": {
          "ref": "b83fccba-383a-4ae3-8040-b0579538beca",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "63d7521e-ce32-445d-9f01-432ea270e81a"
        },
        "item": {
          "id": "202ff6dd-8a13-4c2d-97ce-273c36f6d24d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6d96071b-8627-4ec5-b084-0104805863b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "b59c7db5-87c1-495d-816a-b74920f2274d",
        "cursor": {
          "ref": "1a0afa9e-9c3d-4cd1-b172-2041147abe01",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2822c630-d80a-48ae-879a-d672dff09f8c"
        },
        "item": {
          "id": "b59c7db5-87c1-495d-816a-b74920f2274d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4c2e4df3-a401-44b3-9177-b9f5f8a843b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "1c47a0e2-7321-4858-9d8a-7f83051a8105",
        "cursor": {
          "ref": "c5d5d016-ea12-4424-ab52-a77abc8837c9",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c4d65994-2e59-4928-9171-178332902191"
        },
        "item": {
          "id": "1c47a0e2-7321-4858-9d8a-7f83051a8105",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "de74256c-1964-47a7-a9ee-9b6fb44a183d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "68400f86-a42d-4948-a75b-212da15cbcd7",
        "cursor": {
          "ref": "c9ad18f9-a138-4ab8-867e-06d21a1b2b49",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ff68a7e4-8a07-405b-800b-f9c975f11b21"
        },
        "item": {
          "id": "68400f86-a42d-4948-a75b-212da15cbcd7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0265ab2c-6a48-4284-9f0f-c4a40a9d4be4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68400f86-a42d-4948-a75b-212da15cbcd7",
        "cursor": {
          "ref": "c9ad18f9-a138-4ab8-867e-06d21a1b2b49",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ff68a7e4-8a07-405b-800b-f9c975f11b21"
        },
        "item": {
          "id": "68400f86-a42d-4948-a75b-212da15cbcd7",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0265ab2c-6a48-4284-9f0f-c4a40a9d4be4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c34de5-de2c-403b-aae5-39d6ed1e1aa1",
        "cursor": {
          "ref": "b7342a2d-2d9b-4896-aa3a-a35bcf37e4c0",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e966a5f3-f823-45a9-b8e4-d4dab70d76ea"
        },
        "item": {
          "id": "76c34de5-de2c-403b-aae5-39d6ed1e1aa1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9418c9ae-4aed-42d9-a088-627504018493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc179d3-d77a-4db3-aee4-8a5c5bddbc3b",
        "cursor": {
          "ref": "271dccba-0e10-4563-90d1-9a571de8f763",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "76774f0c-2e02-4da4-b654-4afd2f12b5f2"
        },
        "item": {
          "id": "cbc179d3-d77a-4db3-aee4-8a5c5bddbc3b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f7109c0d-f977-45c9-90c9-1f8694894902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}