{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e317ccbe-a9b9-4b58-88b9-e4259a8cdcfb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3e0d0449-7eee-4ed4-b321-4cd4910a5b3d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d9ce9ef-6fcf-4f82-bfff-f74c918a51fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "f4be4aa5-eaee-4222-822b-9c1ca1785660"
                }
              }
            ]
          },
          {
            "id": "c7a00588-f086-4b04-b796-fd7424e86fab",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "abaa12e3-eac0-4776-abc6-89824be17564",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a643d120-acc4-400c-b89a-7be3353955c8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b177ea11-77d5-438e-8d53-633db7c4523a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a09c14b7-f768-4afd-96a4-913245f8da04",
            "name": "Positive Testing",
            "item": [
              {
                "id": "978f89ee-d6ec-401f-b3e3-2067a9cae4da",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e9ecc1c-18d2-443c-a3a7-2c0a535067c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2b156e96-dee9-480a-9e9c-9b09eabd6d31"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4e4e057-c2e7-4099-91d6-c15c8e3d9fd9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "315ff702-4e72-47fa-b387-c3212625b21d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "339944a8-7976-4716-8988-f00bc613568e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2654e10e-72f1-423c-b52a-714f676431ad"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92537ef0-6bec-4e7b-a0e9-78927da88259",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "83a2f7dd-1aa2-4911-b911-dc51afb18caa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8f98da6f-4dce-4246-a8f9-d11c62a6f437",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "677c00f4-657b-44cf-b6e7-8890f7a90f05"
            }
          }
        ]
      },
      {
        "id": "dd27e643-e896-429c-9f0c-84acec88c932",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b36b131e-88f6-43a3-a2c9-02829b827adc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9eea7118-693f-41f8-b24a-605795b2e3b7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d44ee250-67d8-4a7c-bd9f-e119fc37d858",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92940f55-88b6-409c-88a4-76635770ed8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e6605d4-eb9d-4b16-9767-1bca1b5f9096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34ccabc-c4ad-4176-94f5-1bb6790cd2e5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc5b22ee-2c86-4d5d-8e7b-ca38841a0515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f3487b9-4092-4918-a7eb-17c21d5b05d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b8621f-f267-483e-b825-d023543c23aa",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9c0d59-fff1-4bcc-af11-78df10473e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bba5a1f-4ee9-4b7c-87ea-b0127ab05ef7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d02c482-677e-4516-b768-2a8533fc1556",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3da054ed-f433-44ff-a6a3-6bb10a1ce42b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5688921-ff5e-4d62-aad8-2008dab5228c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73cbe012-35f3-45a2-be37-1ff0db899388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edfc33a-8639-4b5b-8f1e-a8c9e9cf1617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "067dce44-d76d-41cb-b9fb-c39f8f9bf4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5a3c3b-6250-4e89-b030-be9057a4a6ae",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992ade82-bdde-47d0-9598-015270d1b585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd7546f0-6830-47aa-9cf3-131947df1fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c330a086-fe94-42c1-a71f-13da254aaabd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3caf2c8c-05d9-4635-865e-7da0689767b4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6140f06f-a1ed-42bd-b6ca-c110bff2735c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb5ef2a2-6742-41a9-a6ac-5b526beb9172",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8e9c593-6416-4430-869e-280e6f127565",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a88f7be9-2315-4583-b76c-4de79c196f76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f3fb9c4-65fb-4762-86b9-55e71656d847",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "8b2a0351-1a4b-44dd-8d09-79954f27725d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a68cb455-2f41-4054-abbd-7e0b065e2ef4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e81e9c74-dee2-4e2c-b17f-0a0e3c5b786c"
            }
          }
        ]
      },
      {
        "id": "da163bd5-3267-4e0d-abdd-cb16eaf226a3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a5e3ff43-4f9f-4304-9785-a3923d2dadce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d367f83-c704-458d-985b-b5bad900ff0d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5b9ee52d-b00b-4eca-bd47-2e3cbde4c758",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee431805-9ed5-4627-b0c6-13722e74f4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be59207a-56a4-4af1-9022-bb4b8082e862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f48cbd9-b353-46c7-8fbf-001acca05e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7b3dc6e-a1ce-4b07-9a3a-76d38793b988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7be7ab-d05d-4e6b-a175-b6bf65f4f94a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1743699-e0ca-4b44-b4a3-479c0a13ced5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca2808e-5872-4877-84b9-301f903387ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c645f826-2836-4770-9a7c-63436cf65b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a80e4fd3-1d3f-4a10-9580-09ec7e8eff57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f8ff110-efa7-465a-8a07-74e20bbaa417",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de74bbcb-2b60-4a71-a318-4ad394ee9d59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c415a7da-bf76-4691-afb8-e2e101c20cbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a21df5-c77a-4033-9cac-8abcaa7f19a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7eed803e-88e6-4fbd-b391-d9111f6f3184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933d5442-9740-4e62-85b2-fe5452a8fb60",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba62faa-6259-4b5e-9abc-89bdaa7f293d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afee405a-cba6-453e-8ecb-b20c90d0eed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d33440cd-d6cd-4a77-83aa-bfe7bd020392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa52e190-6e4f-4a63-9772-2fa732cf20e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55e5269-d253-4bcd-8ee0-3afd13d048e8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bad2c376-edf2-4a97-9542-fb849dd9e440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59cb15c-8f45-40d1-a0bc-cdf5f5695d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4221e921-ebc6-41b4-b02e-6a77c7616b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afac8502-7951-424b-ab26-14301156cc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdae098-1a42-4678-a471-b642ffec8293",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89bbe768-39d0-42b4-85c6-55345000f41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16a1abe-9585-458a-87b4-51f5a67d9004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb5723e4-3bb0-45cf-93b1-a5edcfaae870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb81d9ec-ea1a-43f0-a44d-3e6869f4f766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f211f9-6afa-4a11-b148-51eda871ee54",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ec327d-a603-4399-84cd-c364e912bbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2205a33-c228-4108-b2e8-d1c4d481cf57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eac58a-43b0-4445-bcb3-6c663af3ef8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7331eea0-e1ab-4380-8452-9256a305e510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c625320a-9199-4acd-9c2b-b76b71751850",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68473d9b-812a-4378-b585-91bb4feb8270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b8e53a-c411-4ddb-abe4-74c8ccaddf38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef028d3-dafd-4df3-997b-2251a782ec8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b207ed01-52b5-4ac2-b8c8-8d6991c4b8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d96e290-f1a5-4ea3-a804-76a8874ed826",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b43102-f37e-4828-82b1-1b6c6e937004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "383deaa1-a6f4-4131-a929-4333fdf886dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105eabc9-92d4-4217-a413-c9c47951001f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e821c041-4a4d-41c5-8fa9-705cef1570bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae4f7e7-2f36-4164-a2f5-cb1940263998",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "007e6c35-fb98-46e4-958b-885a676d1124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d4dce5-5203-4817-80c2-132389461759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1427d203-b070-42db-92a8-573d7cfb6f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9259fb54-876f-4308-af13-8e159d356f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd755db7-cfdb-40ba-bbb4-94bc71fead6c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbe7650-1673-46e6-b97c-2b1ec9dfe1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf624f4c-4d74-4421-bf3f-c818cef302e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d10c66e-917b-4737-bbae-1c721e880c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53b48262-b1ac-4ed2-8c83-bd0e03e1a1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838fff1c-a3b7-4bc2-bfbb-a6742ff687e9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89402c16-9e79-44bf-b33b-eeff7a32892b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3dbf91d-3420-4673-a78b-2d2ffbdfdb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a2d481-2096-4185-9de8-653b1fe9616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "818988f4-fe30-45bb-b464-05127263871a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc756912-9494-4b2e-b0f0-8b552acf050c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d85c26f-7fd6-4886-963a-3c8824513968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f330c27-7fb9-4d81-a7de-8f3f4e89760e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b09eb11-2a32-4f32-abf7-1ddedad91f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe175664-235d-4579-95b0-7461ea719de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf30cf5-84f9-4c11-88c6-b087d5ee8e27",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a3bd5da-2caa-4066-a8a3-d2d2e3640ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d9c0f2-398d-4bfd-84a5-b50d2fb7cb26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11758776-2de9-4c03-9383-398f17a97f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b4b2663-8780-4226-b123-bd3eaccb4d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbac58b-b68e-4d0f-84a4-a3a8dd2c14cb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8037dd-6256-4341-bd2d-b115f746b440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd13da09-c563-461c-b02f-73b8c11e0ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fc2aca-57cb-4a33-83c9-d661e3cb8802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abab01ba-8d4e-420e-80b8-5b2888c5717b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1726b5-f0b0-474d-9f39-b7776e737fe2",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e527b366-1103-40db-8935-926ce551e23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5bea9fb-9573-40bd-ac5a-e84c01bc9b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1ea38b-8258-475e-8188-cbf58c1bc724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a735a01-28b2-44fe-9f74-f47bb5b4eee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa9e9ac-5c5d-4dbd-9825-341380cf45b1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57bb3838-4a97-4c54-9b39-106f4550669e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc13163e-37a7-4841-8106-b2667b64d650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d8c12a-8dc3-4c81-9e70-e552e897c085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b747f62d-706d-4872-af61-85b37bda5b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f04efd-1710-43e5-9f10-f96a596aabc5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1efab2c-12e3-4fe4-b9c1-b1422b5affb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32f340e8-9039-4226-bde7-7ee140c55b12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803705a1-3e43-4e4e-bbda-49b33af9b324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "578fe0e0-9258-4897-826a-bb189a9b86eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e090cd7a-3ff1-4b6f-a629-b1fa45300f8a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df70a3e9-d65c-45e8-abe7-dbde7c4ed053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e0ab78-34d5-4a48-a8c7-d7ee00ee2e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91182e2-72ad-4757-a33a-77469446bbc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5000b3a3-041a-4be3-aa0a-d4dbba84789f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c81ac2da-eaf5-439c-8e63-94fb983db822",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aa5e143-518c-44c0-9df7-717da7ff4b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38f338c-6d51-44e5-ac3d-cab2362941fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2247846a-c2d5-4207-a3ff-1a1842caa15e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f61a46-7c6b-4430-9115-6f99f4df99fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32ad692-c914-4bdb-8894-9d7826dc9f52",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff6d74f-e8b7-4f82-ae19-a5b939399afc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0897f276-4ba5-4742-b666-bdd746bbdb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1717b019-0d3a-477b-a372-393f09320ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "65992505-0da6-4af5-92c4-533758c404ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bf3445-78c4-4166-800b-910a37317c65",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d3f90c-70c6-4cc0-a30b-0f067914d45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb8d0c1-1080-4f53-b453-cfaa4b1785f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8263aa4-0aab-4209-9cc4-bcfbb5e51da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d086987f-62e2-4327-8a4d-33faf388b1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227ca608-14d9-4c16-aa81-4c20d11ef944",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2dd2e77-79b8-496d-9c3c-c1d8e372086f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8f11135-318b-4078-8476-48977659700c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6059156-2013-45f5-84c1-930be784c213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85b3a1ee-5aae-44bb-9980-a8622ab158a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af44675-f6ff-489b-b020-9e15039cc084",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6935b672-699d-492d-839e-d33289fc35f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d88c7a-8b15-4504-900d-2f5e3c805e20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b434bc-a2dc-45cc-84b0-2435266327fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd39301c-f536-46e8-9548-ed6c0a9e535a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e26b749-46ea-4f77-afe5-e7b4695b2ae0",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad4b7af-9e04-4d57-a994-ddbc3932e255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461897e2-bf1c-437b-a3e4-fe2ce033e03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1a3ba2-9936-43f8-8bbc-a05806a9be4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a27aecf-f296-4b56-9570-97b48313c4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d925f62b-6994-4e40-906d-aaaacd274db3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41252f85-459a-43b5-8a56-fec2234f4a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce5f19eb-8d44-4ae1-8e4e-97313868a995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cc330f-a5a1-4b01-92e8-88ffd4be42a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a63a6c0-bf9f-4fd2-9795-912b1f603bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e138c0a3-f4c8-4bbd-9d34-77abc4f6d66b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453b8f0e-240f-4199-bd18-e6363b7e205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b2cd24b-0f5b-4283-b652-1552c25bb189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a4dfaa-f2db-44db-bd57-d637ff1c4ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9271df0a-3ff0-4946-b077-ab6557ab75d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eebcdd-4603-41dd-b406-d59b408187fa",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5911f414-0e8b-493e-9c25-8061b4f5fad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756ffc20-6b40-4164-aac7-82de2b0a4e03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc2e078-7764-4fe6-aaf9-1b1bc6f88026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ae316b-f510-4c11-9762-2330208fa2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f086a1-bc81-45b2-a00d-2b6093790a9f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd2bed9-5178-4e61-8e18-44b078940959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96bcba6f-f3fa-4862-8399-a8093af13c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc206a95-9b8d-49d3-8252-fcbd2ae74a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdbd8816-ec5f-4f9f-ab07-4df9d4f4e868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef2b3ab-dafa-427c-80bd-55f92ea14b4a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317f1bd4-f06b-4bd0-9e00-b6cf5a376b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec59561-374a-493a-9551-fd77c52e6325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4350af1d-4cd3-4d62-98cb-cfff57e5c465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f0cb1f4-8f27-4f6e-a9fd-5e53d8ce2e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789ad70e-4189-4b4c-9a72-58e7162032ce",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ed6e007-65ed-4212-a6c9-32aab024f3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c336fc98-310a-4f96-8ecf-7acc76904924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88282dc0-ceba-4d27-8586-2158021f7f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de9bf07-a4c1-4d9b-a2cc-ef1c1226ce71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7004933-8e52-4a96-b80b-05f34809749e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef436c0-aa10-4b69-8df6-288773b2b7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b91cc11-9b90-43ea-b60c-7e9fb3e25048"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f09c6f7-e9e3-4355-a9e0-c8865726c9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9aaee4-981b-40f2-967a-2ff15b2ee38d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7455620d-f797-4f39-ad61-57ef9c103a82",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943fab68-cfab-4a47-8357-4083affc290a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80af495-bdaa-4d22-b4e3-76262804511d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29e7459-babd-43ac-831c-4829f5321d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "104e2f2c-bb15-4a48-a0e7-83cc33587190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f0a9bb-de8b-4011-bde5-d02742736bdf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6172968-a777-4267-9054-e7c2712cf3f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4866633-0b82-4c62-904a-f5a1b9525241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e481d33-c22f-4709-8c32-635f5dce939f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87e0c7d2-70d9-42d1-9fa1-22a3e89f9b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de1f4b2-d891-4580-9e9d-4c463603a6bb",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe249c5f-08de-4a6a-b936-308c430f2f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f237a79a-9b3a-4af8-9b52-1c6fae1993e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defb2e3d-fbe6-43f8-a17b-3ef6910f00bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ccc8b2a6-8dd5-4bd4-aa53-c6ef0186d92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452a45ab-7ff4-4e22-a73b-65f489ede877",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4320c7-e0e9-4cbe-98f6-66dd3533db46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54bd6662-7d00-4604-be48-79f6f1cfd66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f75d738-6b89-44b4-84c0-a36ad71cc7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3aae8a62-f943-40f9-9e2d-568f5bb492b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db5416e-372d-4e1a-b9ff-07bb13eba8a7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5cb2d6-114c-4e31-92a4-ef5754525779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94f8f8f-326b-48af-9bd5-5a00abf56f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f952295-5f91-46ec-b6ea-a8b873e960f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "add17e13-51ac-486e-a32c-0450a5144259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a592f43e-e170-4dff-bff0-be7ee506c01e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb781ab8-38b2-4fcf-bd8d-c37b1fc806f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcea4996-6aee-4ae9-bdda-7af076baf838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8c17c4-e7d9-495b-84f8-176e31f4349b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa429866-56f6-4e0a-8f5a-dea9bf1e2170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3148e1b0-680b-482f-86d0-24976f5ebf44",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a438f5b-8633-49b9-b69c-c0774a461609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b600565-4ade-4870-976f-41c4081ce9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d275be8-352f-464e-95c9-07e6f5de2372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a94df40d-903c-487b-bdb6-c014f41af6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6452b79c-9c7f-4c0f-a700-1b14e390ac17",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4e0f7a-31ea-4e53-9ee6-3a51ea59a912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b4f574-4ecd-4950-8828-bc9c836fa049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be4493c3-07d8-46d1-a0d1-af4712873773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "31c88c9a-5276-46a7-8269-e8cb77fe6b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fce1df-b35e-4b01-b6ab-700c63ee24e9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1295d19b-f8ff-4520-8c17-7d4603d91a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d0c9ef-71eb-414c-acab-2461fe05d24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2df53f1-a8b4-4168-b1d2-dc52ab3ec96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d17499d1-55ed-45d2-bd1e-b4a234c4bd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bac4f6-243f-4179-a704-a60fee7d7e1c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770d0a25-4670-4299-bbd1-0469351eb6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2d119fb-7140-4e44-8a3c-8c33d622535e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "886e3d13-dabe-4019-8665-7e3bd8d9d893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "de128ddf-4330-4cce-9a4d-c94946fb1da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade6b0b7-2d0f-4ab3-87c1-1f6251abd071",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3205f947-721d-46a6-a4f2-e974d08f54a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "680c3d9c-ad3c-493b-9b5b-a8760539aa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df387b8b-67bf-4db5-911e-d193de23aa94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f09bbf11-f8b5-4939-af34-45ab91afa9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7efa1519-fc4c-4d0f-851e-bca9370b638d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e508e69-bc30-4218-abcf-ca466baf177a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db07bb0-7bfc-4394-9e26-7b949d3ddfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0f4370-ac73-48c5-a351-fc0ec3b12903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "301d17bb-1e54-4dec-ab71-ee928562b3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79df5f9c-2005-4d85-9429-7ef8dfe58fab",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c70febf-04b7-4d77-8332-67aa79117466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018573fe-2984-4c65-bade-efa70290eb2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0f56fe-3b97-4251-a153-032b443664cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a94cb8-a63e-4dea-8ae7-508dd902f842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4c5caa-6e07-4f1d-91df-6362dc70a526",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0c9b76-e2b1-4b0a-9429-2ead9ac9414e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713b8206-5a48-4c73-8b7c-979509ab00cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ffcf23-f33d-409b-9cf5-0358e874bb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e18599f-a47b-4b73-9175-659bc6ba67d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0633e14b-89d4-4b1b-a91e-d79c71143190",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833a6153-34e5-4137-a3ba-ab8264c87243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf9f169c-010c-4400-b948-a52aba21e48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc924671-4509-4c57-a5bf-eb99739dfa66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23e75f0e-5156-42c3-b808-55bb8558062c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070c0a1a-9fac-413a-ba15-ba07e91b9e27",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10632628-6f8e-4f41-b4b8-c24e5becc1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbf96f17-ea5d-4f61-9cd1-835583085163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7db9ff-8619-4afa-bcf1-a61822fcb6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7591ec92-a75e-4a3c-9b61-9d9165341dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07132cc0-33a8-4aa6-b3e9-ddb5c950c4af",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77a2c60-8999-4a36-bbff-23e30c76f22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9a738f-632c-4688-bf10-f92e744da191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f91c6a-26fe-468a-8efe-1825a3894eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ecd5f46-2872-4338-aa7b-f7e1a76460f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "972afe7d-7c6a-4a3e-b307-f035c06c7f73",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500b8594-4813-440a-9624-d3c2b53709c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da556378-f928-45fb-baf2-013ab16ee5c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1951db60-6508-4c7a-a427-05ba74b76b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcc7ebc-fa2c-4c1e-bc46-1b9cb5f66aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c168e2e-9983-4438-beb0-6c583b8f428c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3264158c-2a78-49a0-909e-af51863fb63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05861967-787a-4785-b893-ae539823de84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94a5c64-ce38-4b7f-a4ac-9d819bb7936a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0519e6ba-76d2-4c3d-84c0-cb07fd706248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557418fe-b7a1-40a9-8941-12d047fc7fab",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "907e385b-840c-4b6d-be18-36c420f49194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420b2a95-b25d-40a6-8ee3-1f9b5f547947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2059a575-31c3-4331-920e-3499a3478307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d2d5f69-ad52-4655-b9df-d4d25b77b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513b3091-c527-44e2-bce6-ef600c975bc1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "456d790f-7eb2-4487-bfe0-44ee6d79ce12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217b927e-e93e-4428-9011-1431c1ed9ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42715996-3ac7-43a0-abd6-8fb888fa999e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9199e5f4-f503-4937-9c46-b5a23f5c0db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54654d63-f7e8-4c70-85a1-a82d4e88a00c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c389e6-7865-41bb-a5c7-c9b644ba4d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9a8a27-c2fa-44ba-97ff-c76db052ef8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a21cbc-e36d-47c3-ba05-38ad61d66836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae526ccb-5f47-4110-80cf-deeeafd43d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9029389-73f2-4e09-befd-d8d4ce02bf14",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f624d7-505c-464d-95dd-1cbcd624cc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d30955-8b0f-462e-9a44-1d2e12677428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1840e0bb-b3f6-458d-beb6-1cb64a9fbe81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1da7bd7c-a5db-40ae-8b36-1294fbec8d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecce424b-9f79-440a-a44e-d5fcd97040c5",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97997477-73ed-467c-b80f-124338aa59ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a9d4d4-416e-4db4-a2f4-c60a03c10d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0adf331e-243d-455a-9018-b48a43da4a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb36b20-c10d-4b11-aae3-264883c5785a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5343802-65b1-4354-82a7-d5513bf4aecd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9346298a-94a3-4237-883e-95ca3b1cda54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d89702b-b920-460a-97c4-03393ae8e73b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98abf4d1-ab4f-423d-85c4-627c8e52b6fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b49782e-3607-4225-b928-b70491728681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26567e57-b7df-4688-8dd3-b0b17c436916",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edad4e1-55af-48e4-8140-60e31beba266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b269e57-492b-4bd9-b1f1-ca6089f37bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50821583-20cb-4733-af7d-a5d6ed3abdcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "adef3f69-83fc-433f-bb00-cf14aeee8c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d16af201-133c-4132-b844-55dfe1d7bc32",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98093dcd-d4fe-404a-a6a0-cddd41f37c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03070402-a416-4d86-93bc-ae927ebebdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c75d21b-c7d5-4b5f-9f18-b62dbbf6e70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdb05bd5-9bc1-4d01-bb85-e6bafe3e3eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a1577a-d2f9-4c2f-b467-99e8b5512b0a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c905bcf9-b6b4-48dd-8514-2f02ecb63ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6cc80f-c8ab-4097-b669-2604e7871a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05f60ac-f198-49e3-bcb6-ee659c4e366e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "21e28090-d155-4dc1-8193-44787b6c5524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f1aaca-059a-45b2-a8d2-d363c5dcb6c0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01128c6a-bb3c-4abb-a184-3c2500d12982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92d18a2c-bfe6-4465-b86d-dd20676cc3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c726a311-be21-46ec-bdfb-1431ab666e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc096194-adf2-43fc-b2fc-bb11bb68f776"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d647c1-4c22-4fe8-b69f-76a4c076fe90",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc8fb847-a63b-45eb-8241-67a4cbc2bc98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4e5641-e0aa-45bb-987a-ffbdec5fd6a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ab7e6b-99f6-4506-8827-c97301c43737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "714e0f82-1937-48ea-ab03-40775e854ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9c2806-2143-4a45-927e-ef0b1751b3fc",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e004218-0762-4273-827f-051b7249e136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb5adbd-3633-4ae1-b4a3-c0f5e0ee059c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8d1775-ede1-4cff-8d5f-af504fa9a9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fad5e17-0fc4-497b-a6e5-0a48fe5264b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71594462-f323-4ed0-81d2-714bd10d471a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4be038-4bed-4242-82be-34b80de33d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae9df50-3b59-4a15-8f2f-11f21d163973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202464ea-6902-4a59-887f-a24cbfefd128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41e08bad-0dd8-44f5-834f-358ac4da723e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff208b92-7f36-46ee-b2f6-493a0eab8188",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a272750-9ccd-4ced-ac23-08350dffc021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3735d934-b796-4fc6-ae44-a1fa43e0b255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ea902b-e390-4b24-ba10-b381a2658e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5972a775-b57d-4791-a088-6dade779bf53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2379b28d-bcb3-4791-b4f4-2c92dca002b5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdfa275-3787-4372-bb0c-6a11eac3328c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "499427d5-d570-4dcc-865e-0d3b1d04c9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1fec59b-d06c-4d8b-9f0a-76439b43d676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe81c83c-646b-45e3-a54c-6a06609a6392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74901e09-5bd4-4b96-8632-8c6c0a8f21d8",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6218f0-cb3c-41f1-a17a-151dc675c964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ef867e-4bd3-452e-9b45-d53e719f94ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc66cb3-d5a3-4a95-926c-0637fbf5d4f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c4a993-12e1-4984-ad5b-c639877abb9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64a8864-3d21-42a1-9c67-1d61ec95b4fb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f906c38-88ee-4816-a4f4-a114727bb48a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d10f406-6659-4c22-8c78-33e241bb41b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f0f639-20d3-4c51-9f05-d2bc7553127b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5453559-c53c-4cf2-8e9f-a84f787d3dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c8b4d2-905f-4b8c-8a25-059c49a65f7b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b4ad34-045b-432a-8c5c-25874b8eabaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d4207d1-2597-4dab-890a-978e4402af62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95159c3-6c32-44fd-9a9e-9c96005493a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "66033190-5802-4f80-bace-84b6b5c0cc2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0b2d24a-81e8-4aec-a20d-ba49b2632b23",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2130388-3718-4dd0-b53d-021556fb853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd979f07-b767-478e-85f8-3926c3846f31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6705c7de-a65a-4036-bc80-cd5ebb19b546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "178aa67a-cfdc-409a-832f-b14325df42a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0bc3bb7-fb02-47b8-8cef-70af98c339a5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a55ef4-41e4-4a03-8bc1-c678f71f3ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e54234-5c74-46e4-b3ee-253447ab199b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573c2e7c-56a5-476c-8415-82b2bd220feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a790310-9c3d-407c-a81f-934c9f393cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a0ec11-daec-4970-aa40-75e2bca0bab2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea64fb40-cd4d-4148-94be-26a5c906d504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1eab3b-40e7-4145-b81a-e414ad3e5dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a1e110-835a-4102-8be9-93128c2299f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "213fcdc8-c21a-40c3-819a-4b6ee3e7c9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c44b10cf-6351-45d2-915d-b568f72586d1",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d502a3-f8db-4fad-944f-303ab6766c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541019d7-adf1-4c2c-a0d5-91c1b8b2e00b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "377c7121-0c93-4149-8bff-ec338d92b7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d27b143-b624-416e-b84f-d76f8bb361e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c301d4d6-b631-4306-bd51-724ed7c43a69",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9a5297-b326-4245-be3e-feac1d6b2e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fed3905-c842-454d-b700-a8c0998543ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aef1059-6b54-479e-bd03-c04ec9487aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "387bc9ed-70de-426e-acbe-f83ac3e694f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61cb8d9-9dab-43e7-b7f6-a797ef487a2e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e26156f-341a-4356-9b22-b7a482fe2028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1beba50f-19fa-457e-b944-4fcdde88c62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f71045-e5a7-4260-8f02-cbaa6094f783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a66fc270-9e86-458a-ad26-1857194694f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40bd655c-fa0e-4cae-82e2-8afe85f882af",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6af02ae-7d0b-431a-a39b-73a522fa2d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88d32007-fbb9-491e-b408-ff8db4d06717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d4e95f-6bf4-4f75-b0df-e340cbaea0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "434a280a-a3bd-457b-8311-9e8ccab52e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbb78b6-11a1-4343-b363-286c177c4474",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bb82d8-91da-42ee-b76d-5f5c7ba57d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0ae45ae-5bab-4dc7-a128-41e6355af686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b65657a-354e-47de-bd53-ca46ee064680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "899c1aa3-3ddc-4131-92cc-d7ea6c54da43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34c1f9a-100b-4231-9c09-f07bf0d6eb69",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd36ca2-f30c-4806-abe5-282081c42ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9312b900-36d8-4b30-98a1-aad620022127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b4a1a7-3973-4efc-8961-30018ed9bd9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc6b02a-aa43-46a8-80bb-9fb5662b5f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab92e93b-c811-42ba-b03c-74fae2a69bc0",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd74af1-07de-484f-b606-fb5ca1995080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2b0c4c-d385-44f4-bc23-2bc765f62338"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a3a7ad-4095-439d-bdfc-07a534a4c2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1bf741-edb4-42bb-92b6-710890f92483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee51409-5c2f-4a3b-8256-533ed5a6a337",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc25433-510d-4cbb-9794-f12e478f24b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfbe799c-c864-415c-b6ad-b2fec699a4d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b547b7d-59dc-46c9-ba6a-72d53de3daf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb96a1f1-b38e-4063-a479-ca0898220861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cf08ed-1797-4878-964e-97bcbc037108",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d03a73-4595-4513-b78e-d6542f07f544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a59bbc1-67ef-4273-a1fe-7d16f006426b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d2ece6-326f-4ceb-bd26-c5cf3334e9ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eabd8a7-01af-41a8-b12c-5c516e2b5f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad6653e-ce6f-4d7a-9b4d-8aaa16d8c042",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3994b88d-c65a-4d69-9a4d-45ca87406a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75403dd3-713c-4dd3-8bb1-a0fec23ba680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44940d94-c8eb-41e0-999a-6405673c17d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dabd11f6-f318-4677-aaef-b085521750dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed67920-bfa7-4981-af0d-ec9b07eb2059",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f42733-7824-406b-a0ac-d47c2a1790c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9924c142-8d59-4509-8b36-eff54756501a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d538f915-b389-48f9-beef-c83cb8a0a80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ee4ed1-5cb5-4b71-b251-cd9618fbbbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2aba1b3-a7b3-42ee-864d-378182dae6a6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde74bde-2168-4ed0-b2d5-6ce170ce6a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76eceb58-a85c-427c-a8a5-beb7767453ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79026b6b-f128-43e5-97f1-c8d0ca9bfc60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a78891-5094-49f0-8b75-fc8fc6d5c82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c9cf04-ecf6-463b-af36-52bbeeb1e6c7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885f396e-65f3-4cc8-a585-5adb93b7dd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fffd8ae2-2782-4ee7-b585-4762c2909ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8723208-f9d2-4c1f-a3de-0bd4ab45a1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "11d2501b-cc9a-40b9-8c9b-3ce6d3e3beba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc04b2f-3ec9-41ea-a5aa-6b7ebb191161",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0301fa29-d3ff-4bc0-9c70-b767ff01e394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d77b9c0a-e4d7-4bda-a0f6-972d8b47b79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3b65d9-f7d1-4af0-8f91-f9bb913d45a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8b8394-c0da-4242-b3fe-faed10965a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c70ccd-9316-439b-9b81-e4f84519ed5c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c7e8d9-b876-43e6-aa5d-b2a9e81c8687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6aafdc8-f838-4f40-bf37-4bbe1d18f637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5d1801a-26f2-4950-bc6a-9d97169c2a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2b94e8-ce6c-43f9-8a22-337e763d38bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c739e911-993f-47e6-acb9-3ddc10ede75f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30302188-284b-4431-8372-62dfac6d3489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8155bccd-7b56-4ffb-a0ea-6fcc06da343a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d48da9-d11b-4d4f-b1f2-2cde92873d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "765bf584-be17-46b8-b550-46f2c1eb627c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4577d5c4-5465-4d6a-b6db-41628b8f7345",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53d9d76-20cf-4012-8679-b35ae69e89a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015ed734-9558-460e-b4bc-0bf2d45788ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849b01e7-9a4e-48d3-b2b6-30385ce2cfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dea4bb4-f884-431a-bace-505848be05c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "358d67cb-8ef0-47b0-9241-d0c29975ea86",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ac22eb-7928-48dc-8191-d018af004db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ffe546c-1dc0-40a6-9552-a5a7ba06cc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296b8076-ac13-4199-9ff3-9a200fc4d9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d92a29d-ff64-4327-af0e-aba93374f9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "278fe7ec-90e8-4593-8448-1af3c37d79f0",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87a1b955-cbeb-43bd-a121-11f0dc0d1813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e31611-adc5-4e2b-a8e2-3002ca49a4e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28ca7b2e-daac-4cd8-abcf-e2a09ac34b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9cbf2b-3efe-41fe-b7d7-afcde5cfa399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ad00fe-6a07-4b9c-b0c3-242670a3def9",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1d4b044-e108-4c7a-ab6a-838fd8e697da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f43b9e28-8632-4a00-9549-ac182250e9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "913622b9-42b5-4e09-8c03-128f1414f2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0809836a-8b1d-4b7d-8874-43de8ed8d7fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "917ca6be-741f-4c75-9fbb-324140a4099e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb0355fb-9416-4a8d-bef8-b32a8293d4b6",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d2fbab-b099-4c21-b158-f6a395767d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8563e7d-eaed-4682-937d-1dd492ce8180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310c3e62-89e4-4c84-a365-40b10fa2539b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "28e9b6b5-c7a1-4703-b5e3-dca059a77ad2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7fa7194-7b97-494c-95b5-ae437b275864",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2009eb6c-edaf-472a-bb98-be6a2e5d17a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23a70b44-76b5-47a8-845b-f294f2740b4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb39b3e-9edf-474e-b799-2b7445597743",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d1df9d2-d14e-4ed0-85bb-bad4688f7425"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a258e49-5f27-460c-9a26-35047f6b9357",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bd7a6ba1-e4f7-4cb1-8592-7584876560e3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e82288f8-da73-4b2c-880b-ea9cf155f0fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "158337ab-c1e0-421a-b7be-566f650f1740"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d5c1a50-57c6-43fc-a99d-60b3161c2c82",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e524665-6b7b-4218-8bb5-094f9b9971dd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c997e711-cff5-481f-b772-a477b5915dad",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "328cbcd4-9be7-4377-82e8-70458ed950f0"
                }
              }
            ]
          },
          {
            "id": "133fb7d5-36b7-41b6-8c75-73523d3b5bf0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "686b2c37-35cb-4533-97a7-70ee1c885024",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14144d75-09a4-4b01-a215-06ace82aeecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd551005-68d9-451b-863a-9e4e6bf33bed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ca5a268-84a4-4b36-bc5e-823380bf9379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d372d30-aa1a-4762-82af-dcc638699ffc"
                    }
                  }
                ]
              },
              {
                "id": "27933ec5-7687-4798-a47d-4502475f1809",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "87b94cb8-21bc-4c3b-b7ed-911125296719",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0ab9577-6dd1-4e10-9373-827d57551606"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a052a86a-25b3-4fd4-9560-611d19ef1cfc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04457f34-54b8-498f-98ca-ce35517ada1d"
                    }
                  }
                ]
              },
              {
                "id": "ed1020f3-f668-4dd8-bb7d-383d54c687f1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "175e1306-5724-41a6-ab5e-eb2f3c04ce77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03507015-0ff2-4b2c-a8bc-ab8f69612341"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18792756-8a05-44e5-8284-145a2469bd45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "12ffcd02-871f-412b-8f7f-a41d484df472"
                    }
                  }
                ]
              },
              {
                "id": "a5540139-bd2c-4d91-9412-dbced45cb246",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e545c4c8-8cb3-417b-a5f5-d760a00409e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3042f79a-0975-49c0-be00-8a0ea88f7397"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85b72209-4d54-497d-9ab5-c5afe87b7916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1715abca-646f-4029-b9e7-a39c84bf7046"
                    }
                  }
                ]
              },
              {
                "id": "ffc88e30-806f-4a54-a775-42817b75ace1",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc13f727-20ad-4633-833d-4b9ba26f3a0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7427574-f2b8-4257-9be7-a37d7f1fcc44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0abc9a26-d613-49bc-b4aa-3a165f6ebbaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3177d765-90b6-4fe3-a093-6f6c6e65375c"
                    }
                  }
                ]
              },
              {
                "id": "c3b71eb9-1b85-4c15-89f2-0025d76f4277",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20aef492-fdff-44da-9058-4b61c01752c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "845411a1-5c7f-4eeb-a8dc-0d926e1bdb7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13675416-36f7-4ce8-99d1-01bceeb08396",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d8b4c7df-f3d1-49bc-a289-62ab880cd40a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3b734f2-a1e3-4bf5-b622-28a93d5401d9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65f38530-63a2-4128-84a9-448ccd5ce33c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09b15757-952f-4955-9329-330aa2f308dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8eebf14a-f870-4ca5-ac09-6faf5fc2f6a7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "530eccdd-bc52-460a-9f49-d15a6e954bd7",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "68ca7184-2aec-4257-a7c3-2ee86f13dfdf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0add8f17-aadd-4258-895f-3c8d6d5aadd8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc344f05-8cc6-46af-9e06-a6b97e948c84"
            }
          }
        ]
      },
      {
        "id": "fd09d9dc-b503-4743-a731-eee289ab113c",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9c8c873d-e140-4ff5-a039-4268ad9a9921",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffa9a63c-d3d2-47ab-98a6-c9371c3d7f66",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "63477359-66b8-49c8-b485-da378197f0c7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "658bd171-daf2-4654-9ac4-59a920eed255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1868261c-e088-4110-a491-c08ea4f28b7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a381d2dc-51dd-460b-87e4-a8c2101f7a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b714b0fc-4280-4997-948d-f0ff22ae7e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980f5b34-3282-4b82-bf3e-778cfb9d3337",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "288b5a10-1362-4107-9fd9-740cac92e3f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9756ccf-16f2-4ea2-9ce2-06cace9c0971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b1bcdf-3b67-49b6-88ce-08c88c2282ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b77bf29-1c9b-4043-8c9f-acdf72efe74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ef3fde-60b0-4f51-b051-1d5c8c19d8be",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a13af9e-4674-404d-af60-050ce8ee17c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5f5673-f753-41b7-9a23-2deab1ee453e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c1343f-0ff1-4717-8813-7fc3dc443460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca45d2c-62da-4080-9757-fcdf5a9b6b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa00c14-bd5f-4bd8-9180-f7649aec6803",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afc33389-6531-484e-bd99-8ec4b8bfae66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a92c91ac-4c29-47d6-a2ff-da9803c85ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95750343-0ac2-4b75-8ef2-43b7a355a13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a5dce77c-161d-4273-9b3a-6aa5ef1c592b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a116b8-3d98-4d5c-89bf-48fd81a8b040",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5085d0bb-e509-48a9-9f00-39bbac6d9e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7318928-7ddf-4390-8186-36dcff10e31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c049ae-51fa-4b69-b569-82fdb22d4b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab7971d-b207-41cb-b9f9-ac9f4345160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c41593a-f3f0-40e2-a7c1-0fedc27e44be",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449f1af7-077d-4529-907d-02e1e9d86e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8202ddc9-f7d7-4d93-a968-9a190df7b708"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c453cc43-641f-4337-96cd-b43a62417756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87d5d715-53ca-45aa-912d-2f67d9a8581d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3447951d-66e0-490f-9bd9-91a0711106ea",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c0dd18-e106-4c9e-ba3c-cd1860d2c501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6010044-cac0-40cd-b1aa-7fc5397c428d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea29a3c-2947-464c-b7d1-ca0993701d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "654e4c3b-cffe-4499-ac20-601a9f9adc84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65464756-fa73-4cf5-85a5-8f8c3e4968d5",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fca0664-b965-48e4-add0-cfdd75c4a323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8438bfe0-658a-45d5-a5d8-65e8289b7186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5784e1b-1e7d-48ad-be8c-d772ae72f6d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "084e6a62-2649-43a8-b71f-1fa7c3083321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5e83e37-5340-4e25-b4dc-2c36ec5f170d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5adebb21-8031-4c48-83ee-bf89b874dfb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84da60d4-794b-4eaa-8ca9-f0a1439218c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2661032b-7c7b-42f7-aeea-fcb31541a9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3742ba14-f307-4021-9e54-0fecd561811b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dc8d99-71f7-4359-a8bb-e24ee0dfc1b6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01484028-8352-45f2-ab6a-4f3c4882f2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66494c25-d344-46e7-a3a2-399f57a76a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4b15c7-ee84-42fb-ba77-9b5b3197edf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b21ce15-547b-4684-bf39-ffecf84ce931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bee5fa-5a10-4568-9085-d2911b7a271c",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af265557-8110-4af6-840b-8d7ab651bf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a631a29c-70fa-497b-9467-10becf5956f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2755f774-7441-471f-abe7-29909a14b7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "228643ef-fb4d-46f4-b367-9f90637813d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3e1354-5d9f-4806-a6a1-dd781f14a940",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5da168f-bb75-4ccb-945c-a0834475de79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61da8779-1f74-47e6-8e90-8142bc731d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531d5d29-1847-4a54-8286-8bef9493301c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a60b42c1-18d3-4e5c-9a0e-7ab35b726c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2939d28c-a240-49b9-b797-eb7fa8238f02",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcf68ae-c3fa-45e0-8e29-cb89f7ee8c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfb90fd-b33e-4e07-b8ba-cdc45908ee45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f41d86-3e70-4e8b-b6d6-b288225d0a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "853df530-c8a8-4cae-81a9-a6a6cc921932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2098524d-fadb-4f9f-a2d4-cd81ddbe25a3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f687405-2140-41c4-82ba-e672061f6400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ea9f19-e60d-4d0d-a0f1-d015d587561f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd488a0-4c1e-4c0f-9222-1e068f2906a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a8f3d58-2410-4cce-84c1-c6aa2225d07b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfef8201-15a5-40a7-ad6e-72a003c8bf4e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ed3e62-07d0-4a66-9963-fd12c8785b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bed970f-e320-4049-99d0-8140ed7d8201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba13f8c-ae93-4c72-9ad9-fc91728d4132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8f59dcf-f91a-4f15-b066-f13417caebfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3640c7-fc95-4c3f-845e-d572c589a778",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf12a07-f1e8-4432-a61f-19ae6ce9980a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "697d2b5c-ba03-4c31-993c-dc70a6ebd515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a5d5e9-1a7e-4484-a1ca-2fff01513a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccaf2122-f684-4bbf-b5c7-a9da0ec789b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc00547d-0b49-43aa-bc64-6d9013a4dbef",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d62ad7d-1dd2-4824-ad00-9f194d07049e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbecd3c7-94e6-469b-985d-6e2139f884d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3aacbb-7f58-4a7a-aebb-2e0c8235aa2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b033d3-fd7b-43ad-b693-afbf492b6a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a06614a-49b0-4e12-8db9-b59824a45cc2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fb4332-8d11-49f9-b845-426a4909fed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426a9f5d-e8af-4ee5-8f8c-83c37cb669f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "690c3776-4661-4fb2-9424-f70317f49e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ead556d7-9c2c-470f-a641-8eea8316d106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb713e8-492c-453c-a513-1a2d88566a35",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905efcb2-08da-4923-88f0-c907e21d8f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aa07f1-1de0-4cf7-88e2-feb8be108ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a873f3-c5c2-4712-b5df-2c797c3625aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1e2ef20-f687-4bc2-b084-e135d9956190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea5d5e9-babe-41ba-8640-f8bd0766da8a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca19532d-e484-4a1d-9397-60a04a285e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3ef9ae-a477-4ed7-a800-80c100a15eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435ddcb7-0495-4c38-a8fe-903a05e8f404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aef275f-aa86-44c3-9055-004c2691e739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "763a9ce2-f701-4719-bf91-f54220860239",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a80c3a-c174-4145-ac6f-528e5307d151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32ec9c9-e263-4481-b5d5-a28b7786e05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e31201-4d64-453e-8e50-1390f5a176a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83f7a5c9-86e1-41bd-b78f-ead74bd2f702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fc5937-1c4f-4705-accc-0c8e20758e37",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecf18aa-23c3-45be-b3c8-d031b152d356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85832853-b969-40bd-99c7-061a2cdcaee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206bf2fa-ccc9-48c2-91b3-5e74aa942bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcd1684-435e-43e8-bb44-87733a9e7777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371ff687-4d88-4c50-a19a-cb48d995d52c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cea8ccb-703f-413f-968f-7767883c3c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ce2710-5206-4fba-8006-a99bfa545f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27df0ea2-4e17-4c8b-acf8-981407430c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9abe085-84c8-4aaf-9bd2-783c21b8cac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a55b3e4-582b-48eb-97aa-e09b743954eb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df1167f-980c-415c-a473-0abdcaeebf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "814de50e-4051-4895-86b8-48568a52d470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84231f0-6bcb-4571-9c3e-fc257745027d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd302ed-f3f8-4df4-a961-ba36bb19d4f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea18100-4b83-4ff8-adcb-9b4b0f5abe18",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d4194b-322e-4a02-bbff-b0bc967c84fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f6bd02-7f7e-4605-8e52-23bd1d2fa66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf61f63e-f6af-4051-b5a7-a5287e136dde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a054b42-6165-4da5-916a-de41acea176d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56851e62-ce2b-4bb8-9fc1-fd522f2e3103",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312a7a4c-e49d-4c5f-abab-982013a5eae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1faa0ad3-c78d-41bd-af94-338456d7a36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0518c7ef-1802-4c41-ab46-033ccd521ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66ba1d68-e4a5-4e7f-80b4-3298a754d98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015a414c-411c-47d6-98c4-262912b8ef77",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9c0421-ca62-46b2-aca4-46fb94e2aa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2365c3e7-69e3-4459-9a4c-2945252f7ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d44f4cd-d4f7-49e9-8dae-3d294ccd7316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df01dbcb-2074-4589-b97b-a141f6ea544f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332d5c94-ae90-4b91-a996-d958f853fb7d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec328a34-1b40-4b70-bc61-f13362a7c787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d057309a-8796-49b6-87d0-e3e9717aaac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a059f57-445e-4cb8-a317-6ad7f7d9e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac78fb6e-99c2-4d53-b42b-b044f5ea2cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7b3897-798f-4e6b-8981-072cef10395b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666b0ef1-4100-4432-bf5b-8b295dbaf649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc4e727-ab79-405d-83d2-8fcfd9504326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d39057-ef34-4b73-b2d5-7f15f687a956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a0ff95-f530-4de4-830f-1b49d2d10722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69010372-26ae-448a-a1e4-85e2919b3c39",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f1460f-58f9-4494-bbee-392f1c0e8c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddcbb968-eaac-4bec-8eeb-a7936b4251aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff71f51-1952-4c2a-afb8-8d07942ea69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beac5117-3dae-4ac6-99aa-2da6e505aadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69382579-b450-4194-817d-a36829af63bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4366c960-aa2f-4db5-8491-604285479ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197ed16a-74a0-4d39-8216-b8a64fda38c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "921ff945-8752-4fa0-94a2-ca676fd64974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b4b4a9-28f8-43fa-9ff5-eea0d810c727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6877ecf3-d4d4-47dd-b1db-25d3ae112d4d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530a36c9-9a4c-4ebc-bf5c-68b9472c7a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fece7563-2004-4c28-a0af-e8fd14df77a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71a0666-15e1-4cf6-8bfe-4ec1cf22f946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03648058-798d-4c78-adbf-0b932aac6f6b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96b15ae5-7992-4de7-8d3f-06b14ff2f044",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "43bbbdba-4915-41bc-bbc0-3e97068b4198",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a82c6fff-a0e5-4379-b321-610cb2f2d008",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc2deee-d221-42ab-ad0c-87b202afc99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7536b336-1bae-433b-874b-5503df4daefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d0df0ca-02cb-402c-a024-2d32737892a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d154dfe2-31e2-4961-8242-b8678a0b0516",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d2507f-ba08-4185-b164-d94f870bd4ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e29a0d40-4378-423c-bc90-9e9dc4ae226a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4a1a45-8261-4023-a101-d73eed60f8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5b99e10-5eae-4d45-95d2-0bd07e6b2ab4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a7a4361-aad9-45a0-9d4c-0c077a88a593",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "072b3c89-6154-430c-907f-53262e2aff61"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6e0b893-8487-4945-893a-250cc5d878bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfbe5874-83fb-4d29-a1dc-84cf9365e54a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5d128cc-b30f-4042-8326-51153d542d3f",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5c6dfeca-0b97-44d8-90e2-4535202cb862"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86c61c2a-ba53-4669-bda5-612c6cf11f46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dbac209-9d69-414b-8885-0a040bbafd5c"
            }
          }
        ]
      },
      {
        "id": "5ddc7b8e-fc93-4ddc-94d7-b0c850f1ef83",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c05d679f-3a60-4ab4-bc6a-6d48ef401abc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8142742f-ffc7-4fe6-86dc-ec51afa65554",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "166df358-f0b9-4e02-8255-c8cac8843eda",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d4627f-a310-4333-ae7c-ea778d7c3284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47aa6256-d187-4eac-b3f4-cbcc7916e636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e6c711-27b5-444e-8ef8-a898364d2646",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815932ef-f198-49c2-8ea4-8dc7c992742e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2678477e-7fad-4a8e-99eb-dfa6d7eeadad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9632ce-e75c-4a96-96d6-7d5f7bf201bf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed435b84-4515-4be7-89f8-32e27fcadcaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2942e2-b268-47a2-b325-ae504330efd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e97d06f-c9e3-43ca-b4d4-d9100b12741b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ae9af4-2e41-462a-ba7c-ed7812a02c11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcaf5ea4-f4fe-48a4-bc5d-12e7ddd16f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e19354c5-5100-4d26-971e-735fe885b5fb",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37110d08-0147-42f8-b947-702d4cc6f870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce3d521-ec54-44ac-aee1-df68b3caf7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72198f4-2052-47ad-ba4f-0e2fa3b0fdbd",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eacb4db1-5f97-42e6-a801-4dd840eb66b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "876aab90-f217-456f-b875-a01d828c1179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b739c47-11bc-4604-b7f1-e2957581b0ac",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbda84a4-f540-4688-a246-fecc4637b63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fa45f8-7c82-4c35-9b1e-9024a34d9cdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fe3950-6915-4770-8ac0-3562012cea17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f871545-8990-42f0-8eaa-802e4b1c43ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c67fa7-2323-4878-a446-1cf29afdb3df",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4635348-6ba4-4047-8662-51937a009aa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caf91ae3-218a-4d35-a1dd-247930dd842a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02aab3d-e82e-44cc-8f32-2b83dddfeac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902f69da-d3fd-4b25-a453-37894499d7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e3bf5ff-6c29-476b-a7e8-e64f6a0cdbcc",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d896caeb-21a7-4919-b344-b608ef23b6b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "980baffc-54ac-4c46-81b5-8a99f760dc07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce06a1d-344b-4bd6-9062-4682c5d43a7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4ebba5-a1ad-49d4-8e18-cbcd982bc883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207fdaa4-4a47-4625-8c8e-20b3c8c8f31b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d65a2aa-ba95-413d-bdca-71453b8780ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dd6e108-98fb-45ab-983a-d2c9972bf285"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c84b369-5174-48bf-9c42-98e0cd56ae45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499b7337-4eac-4e8e-b5a5-141eb4da38a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b84ae57-67f4-43c6-912b-37e90cf8c58f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "557df9bf-114b-4efa-95d7-3b6d1318593c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad99289-1505-4336-90a8-1e359cecf6d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09096dfd-a145-4959-bc7f-b6152bdd5d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70933f83-a2bd-48d9-9825-cc4f80772d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9287fd64-5008-4ae6-a42f-da5465f2fb49",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a22c85-9c20-40d5-b37c-75e621c547ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00442a14-65f8-49bf-a9fe-dfa6f1ff34e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54387fed-fc09-4883-809a-1648c457fda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "febf2e28-4b26-4182-a49e-3cdb45508581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3f451d-7184-4071-a71c-6a956e61400d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aef64a95-7e34-4461-ade1-5c6d88f6bc1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a799bff-4d07-4ec8-9720-862cb7855f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "054aab83-895b-40a4-88ec-15485899cb96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10199e9d-157a-49f0-8299-aaa65be58ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3015d52-d465-4574-9530-12042ba1d762",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d5706b-3296-4854-96c8-14d3194aaa9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6f6142c-9b6e-41c2-9e67-c1cceacbc6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19be6032-4a8d-4be1-b436-750655e41504",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b89f3fa-8cd3-47eb-8167-611faeeec537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a29e290-c21e-465e-9c17-55597374c392",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13c4a47-2cb9-4bbd-a0bb-1fd37e3ba1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e239bee7-6d7b-4df5-96f4-dea00f9cf84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f21c6e4-dd2a-47f5-b311-17599a87c01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a11f02-60e4-4843-9b6c-ad52509cc786"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab25d559-1970-42cf-8ce6-cdb45fced750",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02516076-c9de-4ce8-b607-2947a5bc648b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd37283-ffd4-497a-b206-3248e1e542ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9561a267-2da1-42ce-a5d9-135f6e55c738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8b828ec-87cc-49f2-a4b0-eb7152f8b5d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc60e89e-7506-42d3-8132-5ae4e3f2b0bb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b743cba-34da-4737-9168-73abe5bacae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79e975b-a190-4210-b117-3a607dc771f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fa0d072-3a29-4433-93cb-520204de81a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3db4e07-b92d-497b-8e8c-14e17f9cc7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982bd790-02b8-4a56-9de9-2b4efecdaaa9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0d7c08-f011-4fe5-a13e-b45c17f23811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5072084a-bc4b-4f7a-a41c-ff6347716632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81581b7-39bf-46f8-9b84-301fbc82f644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb015f39-e15d-4dd1-9700-7b7fe106b6a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328a3aa9-c7b2-4dce-938c-b31e10f3a4ab",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013d03b5-4fa3-4824-b760-41e71dba8554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3994f85-d3ab-4f72-bdb6-aa392aed0b95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16934fa0-54a2-42e8-bb21-dead38fb88bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68106cc6-c0bc-4c1f-8399-04ab4abd0b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc4e43c-3a96-4176-9cad-caa8b18f4d9b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58c2688-a1a1-4293-ac64-430c6ed7ffd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5527645-52da-4801-9972-b02a72598dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "322572cc-ba4a-478e-91a9-2a362d21a2f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4faaeb88-f56c-4a69-b45b-239f5aaa31b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adc89dd-356e-4bca-8b30-7134f2f09642",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d246e0-baf8-436a-b875-c1e83da22f34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6610dc-6908-44a4-bf85-5690d7e5ebf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a7dc0b-9ec7-458a-94ce-9ac7ac3d173e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4959bb3-1bdd-4adb-adfd-6238889aab3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929a083c-49c5-42f2-8cda-0ef462fd1562",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277a9357-2c70-40e7-9efa-f3f58abac075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebe72e72-f170-4962-ab55-ec7784930088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37ed107-976e-4c74-a1ea-6872abc9b6b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24d8c92-5b16-4587-a9eb-a3055ff81a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62086bae-4321-423f-8315-718d6f3b4687",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc41bed4-44e2-4468-9c1b-b6a0a02c0579",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d46a91b-66ac-4c2f-8e6b-2478b60cf8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4501f57d-eb4e-4397-b994-44dc910c7da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b46eb9c-a4d2-4970-9812-dc495e578527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bdea30-c069-4f1d-be8a-a6990a60eb1d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e00983-6d61-4357-86e7-28548cb4f22a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d2aaa7-beec-40cd-bfae-646589d9fed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "476cf389-dda5-4b7d-86a0-d41c15fedb2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84907768-6c6f-4942-903a-0c96d3a5516b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1352cfd1-0388-49b1-ac7a-1a643015bb36",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40024664-4dd5-4896-b129-2c71e51e79e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c742681b-d7d6-4ca0-b450-c8ebb6fe992b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c3b0b6-5d45-42dd-940e-3702704d9cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b803a36-3cc4-4d58-9ec0-65a87eaaf69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17de7695-05c1-4dc9-b384-828ed060838a",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3f8a77-8636-41eb-bfae-93a3be65dc79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1dde729-7258-4b60-972d-682af3f559cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4f0732-9786-4c7a-a3ec-53ad2f852f9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3333477-14ed-4911-bdc0-05b913df6936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee70fbc-5280-49a4-abc0-387c2f985751",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa31f64-8020-47f3-88a0-a99fb9ae716c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a4b4c0-e3bc-4e82-8c82-2bcc3195b591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c797c727-678d-4824-b97a-aa95b3125ca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f975832-0b39-4b50-a2c5-c8dbeaee42e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07c7daf-aa15-4e1d-aa5d-fd1312ad05d6",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40eaa917-d095-472d-971c-8a5c2ccfbede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c7e386b-3504-4822-95f7-a2cafc9a3916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e20c65-f94b-49f7-84f6-dca5ec3638c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82861c99-d1bb-4a5b-a2cd-d47b78b65a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbbe0a5-304a-4eec-96da-2e35300b7b50",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27e35e4-9ab9-4f5d-91d2-c43306ce095c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3577add-c8a6-4905-a658-6673ec975a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "659384ee-1df5-4ea4-b27c-dfb73513b875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "045c824a-7c3e-4f00-86e8-9113ba9150bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d27d8c-5a60-4ff5-a7da-c2da58ad74c6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79aba3c8-75d7-458c-9991-f7bfc36b2c77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58926cef-0beb-4caf-a60f-5156632c6381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a246f2e-7c2e-4ff6-8449-a23562b10673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc06936-3e17-45f9-b371-49aee884aeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e824ac07-c13d-4cda-8d53-c3c31f608377",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d619c1f-c40b-4659-92f8-631e4de15274",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73ecbc41-6d88-44cc-a045-c477f180bdc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55d87ad0-5a5e-478e-8a87-4dff2d85c943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1b0539-1a18-43bb-a928-839b6e4fcd54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e536bf2-3fe1-44c9-bd93-68d604ffbe7b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8cc5fe9-da04-41f4-a3b3-b26e62263a76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "577227f5-98ba-443a-88d7-e5a40b8dff55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c6db15-819a-431e-a9b8-ea060a701c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f1296d-dd23-4c37-baf7-2a82c73ec154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b076255c-5472-4c5b-ab9a-1fc0d9c5aa5d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2486aa-6af7-4d12-86a5-cae4e2f85102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c7af561-3450-415e-8eb8-3c2f03dd6d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "387eabf4-a762-4fff-bf20-d7d828ca30ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5360dbff-aca5-488f-80e5-d93ccdc61f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ad9bc9-35ef-40b4-b698-514d1e6e8f3d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ca0113-8de2-49ea-9303-89a48695f438",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe6deb25-3fe5-4f61-a890-5529025d4a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a665fc2f-de26-4e68-b11d-178ef2ee8236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6a8fe75-0aea-4c43-b90d-efb40d8ee1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4a28d2-5e73-4a60-a1b9-6a32aff67be7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95772545-6a36-40b1-a549-ef0cdbfaa202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8e0bdf-b975-4818-baa1-2602acf1e130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3062bcc8-3353-4b06-b596-b109b8a61970",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18c6af8e-513e-4e99-a251-1aaafc6e77b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f271a688-fd86-4d09-91da-363cdf062ee9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d8c77e-1fe5-4c4c-a040-65cfef72d469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae9ce05-efff-4cfa-abdc-fff45920e423"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff813c2-4e3a-4d57-9793-c998d2bbe58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e78504a2-d635-4c01-a354-db7375802e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eee3873-bee0-4ed9-86e8-309f37b36ef3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c956c0bb-f0a0-427a-97e5-92fbe02bbd37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17f8dd24-0955-4de7-a9a6-d479c09e003d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c95e4-615a-4d0c-bac2-b34c67980380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5477a087-ba0a-43b9-8210-3a2780c18e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa3ebee2-51a1-4c09-8b1f-de605045b574",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac14ea94-8157-4ddf-af5e-7cff78b809bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a57197-beb9-4315-b15b-92401ecb0e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66eef46-d39c-4211-9a6c-1a24d3993878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1d5672-0c91-4795-9034-1684ef5551db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94130356-2fd9-456c-97ad-64b20265fe77",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33205665-4a3e-4224-9c77-575bc813ce09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed734c8-f1d9-4655-abeb-40e452ca2ce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d4279d-59dd-4cb4-84b4-6ef8d86f0461",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c3d19d-a8ed-448a-aa2a-33538c95116c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7dc33b-88e5-4776-92e3-6e56ffeb59c4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbb97c8-5107-4626-97fd-110c7cdb1153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8203df1-8687-4b9f-b6dc-61cb7ee72916"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add2c9f4-22a4-469c-b19f-267dddc0d7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c20ca1-c038-431b-abed-2699269e22a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fe063a-9628-4b56-a79c-d9c415e39727",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349e2790-1871-497f-b2fb-643c1a508a67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edb3ebe-831b-41c8-9cd2-b31784c606ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608af9ad-1298-465b-aedb-85e56375be28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6cc4e7-8293-4e39-ae62-2c26020ac59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d6bce1-b02b-4fbe-82c0-ec9c273b3f8c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a527b72-320d-4158-a4fa-606022bc0380",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb23eaa-63fd-4f17-9af3-c1b452e3afa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3051969-2d8b-4601-a9e4-be00ea994bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25a005ce-d6ed-43d4-8655-5dc4bce6c4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81bffcb4-9055-4b64-b8c3-986ab546d33f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc33e882-1cc5-4232-90a0-4028d58c80e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793eac97-7419-4a9d-9981-319b1747632b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fbe22a-5233-441e-b4d3-6fb645a32d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332f7e7b-60f3-4216-8e79-e4560fb4fde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5176593-8234-4c7a-91a1-65ca47d49b83",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ceaaf8b-8713-45c3-8141-34c1dc503dd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca67a6e-fad6-428a-9880-1370e60fc60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f774b52-7593-4bbe-b7fb-7148bde22152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2f0fed-9f56-406c-810f-25b8795d1be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9292baa6-754f-45e5-9ea7-b9e2b10be22a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec99a766-39eb-4bb8-9df8-dfc079fe70f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "100bcfa7-d59d-4566-92fd-f3e88a355e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29361e5c-419b-4107-a10f-b74ca6d3ba7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98474978-6770-44cb-af7a-9864a5cef453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "002a4693-ff47-42b6-afd8-019a8493d1b7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d5edc3-519c-4498-8905-aa76d36bcf38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f66fc4-cf80-456d-a61e-dfc17b03abcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6190a087-ace2-4e0c-94ce-3053ccf18c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d24773-b0ef-4ba9-a56a-e21b693d271c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50593a82-6828-4ba3-ae77-1c4e2e13bedb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6f03c8-df3f-4289-a55f-3e9e1407afac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6241930c-4d61-4419-b55d-8f4f144a1692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a810a1f-137e-4916-b02b-46d7bc6dd275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95a52878-e727-4cb3-8f43-0304e17c467a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ba40a7-4fa9-4302-af55-5c00d8c7bb40",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b0dbef-2fca-4d0c-a9a4-19e731958fbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a65cb9-c812-4a79-9c4c-fd6177bbc0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc66f87-1eb2-4c92-8a00-f27fa53bb53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "886c30da-5748-4733-8a36-98c9bb02b31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507da610-e8cd-42fb-b1ee-1cbac1085794",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a665292b-8bd4-49a2-afe8-32f3e6bde4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f929161-775c-4c12-a6e3-fa843c5d298d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be2aaab-da38-4e49-b108-bb99dc88e291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ed013e-fd02-4da3-9b3b-f2714c300a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabb1087-f0fb-4d61-b1d1-1fe9d899c6b9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738f25df-d11c-487f-887f-5a7b854199b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21baaad5-a670-45f3-b717-2a9fc29e459a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad31f795-9401-44d5-a120-2c4177999fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a389d66-c32e-4251-9731-c2b11f165d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71494c6d-740c-45af-9d15-7e805f156adc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1030c9f-8f02-4f5d-a431-119e675a03e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f39a73-1a3c-4561-8ad7-f58c4ccdaa45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6832910-3612-4adb-9f9c-7b57ff64a1e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4f971f-e01c-44ad-b80e-d86dbb6a66eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa656011-094f-4bdb-8dd6-ecaa306a8c41",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64b4f62-08c1-4048-af95-67004f1f0b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83df755-42c9-4a7c-8409-c2d02b78cca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dcb7c96-3335-4512-9cbe-f50ba1e471ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9cbb48-6b72-4112-a5cf-b0d577d80a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e50f98-11ef-44d1-ac0d-69904964543f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d181de1-1cb0-472b-9009-6f810496efc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b176169b-594e-4007-987d-89a15eacf8cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f9feac-4852-46d9-95ed-bc05430a70a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e949653-f128-42d0-9d1f-8b791627132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61382d6-2f6d-4a99-9cdf-17b3238f89f0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fe00be-fdc1-4443-8fcc-f1f0c1f4efaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "934bd783-8f18-42ee-9800-91850e8f5baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3762bd7-07d0-4b94-b4a5-c56355f33734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "781e1d46-f5e4-4b46-9386-eb4716bb5ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e987665-3ca9-47d7-9189-965d16ac3ab2",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fee4c6f-9c4f-451d-a296-1b18d566af5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed9356a-1838-4f15-bccc-2790e6e61cb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed61e5ec-ef85-4f5e-832e-d248e2ac6d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815c80c9-b1aa-4fda-8a14-5993ab5da5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69eddf57-4fa8-4112-a223-127cef74fe0e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fded0dba-b1c6-42d6-9590-4ee08763e847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5a2372e-67c3-4a14-acad-13d2eda97cec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab40ef3-1ff7-4633-9d18-8b1766c2d173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f495210c-14db-42cb-ab0b-70ee98ffe06b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6941410d-f0ae-48f4-b0a3-50db44307d7d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ac4028-25d5-4499-ba8a-24158a38dfd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5136cca-66c1-4d23-9f44-7d2b420038ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4998b9-d818-4d8c-97a9-aeac310b5ef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4da2fb-cd99-42aa-9bce-a07859bc30ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29d005a-9382-41d5-b959-6aee2e2be533",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558f585b-0170-4cf2-a595-dbd32a3f371a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa13dc80-f00f-4679-be9e-25fada4d4147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d03f6bb-55bf-4977-9d13-d0cde143acec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c7e4fc-0aa2-4c13-9b2f-3451eee9155d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90475f8-91d5-4fda-be89-d2c5824e8835",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40bb6691-d805-4b48-ae6b-1b51d71420da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dec2451-7c91-4d04-86ca-2c942cb885e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b20b31-e2d6-482d-977b-e06e491a7bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959f48b8-582a-40e8-a5d6-8f86b22f224e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0dca8d-3684-424c-9629-82bbc209e984",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f7ea52-82b7-46d0-a259-68f14835ff31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce64c6d-0505-416f-8cf0-d4b24e879092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf25b0c-4ed5-48c5-bed0-b1a2e864ab65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095dc401-3a5d-42e6-9880-0571d95a387b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6cb49b-a541-4809-ae28-36629221cc74",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8fc7bdb-801d-427a-9939-c8cdeaf346c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f55312-417d-4155-8e84-affdcde225e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c2f577d-21e4-40d8-98f6-3e45f22b5664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea5f5d4-e325-4cdb-aa81-72b1742fd7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3722af42-dc80-4acf-a768-8d392bbe8a59",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "897400ff-222e-4045-baa8-3b01ec00c370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da9f2246-9710-4904-b9bf-c7f8a2490507"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39892a96-4177-4161-85e6-ec121166368a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78d502c-e9d2-4b46-a2bd-4ae338a8a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97dd3796-23e7-471e-b32e-33cdb51d335a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42590cd-7677-4fab-b2f5-f08f4a5b66aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21330736-65a5-4649-8a51-0923979ef5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2bf6ab-95e9-4aeb-b750-47a188a68ac4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fadfc833-a9cc-4068-907c-aaba7e094032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfa32a9-4630-4592-9d9e-84b0b7ba2420",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7187ad8a-ab31-4f4c-97a6-1ff58d7c76fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bb4f95-1670-4b17-95fe-657bb22165d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "153226d6-eaa0-4ffa-9a6d-0bd4df30b382",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "222d3901-2679-4769-b8a0-8de7d72a663c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1d779a-4e2a-42fb-9abc-cd327f449da3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87ee613-b5b1-4cef-aaf8-033feabe9fac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdfcff2b-d1f1-49b0-a0fa-f4661cdafc0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8706d2e2-0f1f-48a9-ac3b-e806dbca4837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f404060-16d0-4074-a342-fcedc849c286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71887d2f-12d8-4286-bf96-84521096fce2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c59975f-64b6-47af-8389-f131eca29369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91582e35-76f5-434f-827f-cc5a0db9be0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5131fc3f-d4b7-4c93-ad0b-6d3c9c8f1d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65f18f6-2b8e-4bfa-b05e-102629a482af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29348e40-9017-4dbe-8bd0-845b2b41b12e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1420c698-24f2-47d3-8c5c-96954ec03df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4fc9b32-7a7f-4db8-9833-a2323a810002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5651878-06ea-4f46-90c5-102c8581675b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f8f12f-6c36-4ec9-8b46-e1565d713f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476166f3-6672-48f4-b5b0-f991988b26af",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194467b4-73d9-44a2-bdfb-5743f825f30f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d629fc5-8b3a-4d37-af79-002af8554fde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd8088f-9194-486b-b3e9-63858dd6841f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a57f5ca-eb59-4633-be42-ce510fbf1455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83eb748-4856-420c-a431-0a4bead6a595",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30d134b-9fd9-4982-8132-cc49edf439c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956c0df2-0185-4ea9-8697-29695e6d712f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93256f85-69ea-490a-aecc-7dab678275a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3040b87-e794-46c4-ba6d-b5e0c926831c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bb8267-40b9-43c8-bfde-ff83c3a2dfe7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4d58c3-7ae3-4119-b5d4-ba23bbb2e8fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d30b303-2ee1-4dc9-802e-2f5f5e8e1bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157c85db-0f8d-4386-a0b8-2487734ad83a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c354ad-9917-4d32-b7b8-1eec76d9dd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d21de3-81e4-47ae-8b93-00116a677a81",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2ac766-fdf3-43a7-973f-3556b375075c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f5982ae-9e48-4fb1-85df-db882f2d2833"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab801db-8115-415a-a514-71612fa46b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fe88fdd-3464-44ab-be2f-8f87b17d8401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460f37c1-b4f1-4692-8a4f-2e639f1d2b66",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a674cf3-d36c-4396-9e6f-bbc3a2596cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8433381f-c396-482d-84ab-a13a71daa828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da16d2d-7d3f-4bcc-80fa-eb63a078e8a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c035a0c5-2fc5-42bf-8435-be6911694f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488839a7-a669-414e-a67a-efb3be8ec1e9",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f142c71c-9f60-4d99-9986-62f661e03c75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45236cbf-ae5d-4382-a6d5-6b6c86bc3f4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969ead22-7cc3-4d47-a5a1-03cf4c243ec7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff763d4c-bcbb-44ba-9c56-7c567c53351d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d6b6771-9aba-4f3c-bdba-5e7b29e56313",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d5c721-46ef-40f7-9751-ae6c972c4b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fa1417-ff56-4bb6-b935-d834241a878c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4a2678-7d58-47fc-b212-77a56c8b0d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c64371c2-916e-4b5c-9555-18a7022acb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "349b2460-ddb6-4ec5-b150-990111f607b0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904d865a-8172-49c3-8e62-e26355a920a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d998dfe-0407-4101-b3d2-d890856aa4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9d9ccf-889c-4b07-8b09-4171bbfe1dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54051b91-c4e1-417a-9fc4-6bdebb7592fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6de51bad-756c-4f19-84df-2d9a790d08ce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534fe87b-a1d2-4e01-a2e6-e7e46e135ca1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb83fd44-e181-43fd-a4dc-936ecb50f501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de69c71e-5023-4c1d-98df-5883dd003b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b576a33b-7189-4ea6-9fb2-aff0ec541fa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79f090d-9b9c-4f1e-937f-aacfc81a1458",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a8f87b-c9a8-420b-a5fc-ec803392cab7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a84dea0-42ee-4ff4-b49d-d92966df6a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6b7a12-212f-44e8-a1b4-5068ad0a2837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08bb0931-c9d0-423c-96fd-de27cecd5cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c75de6-241b-4bc4-a911-ac75240bc80d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b648a8-8fcc-492b-be75-3c5d487c61fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0701d499-4e46-454b-96eb-69776475ae8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c793e146-bc54-448c-a1bf-34004e039fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf780850-b52d-4f3f-9261-6bdb11c18f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "425d5372-e09b-4294-860a-90614bd33f71",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27791529-bba9-48c7-b017-0c625a4d9b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "698b81be-3f92-46e2-bc99-82195f90f53b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36dfedd-16b3-42c4-bdb7-0efd4b9c88d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5704267-f8f9-4ae4-8e59-255bc7d6ff1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b728a0-f255-472a-8a4c-572f6b5ac35d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82527ee1-bf8a-4849-a40a-29df6fecf8dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c440c5b-4ccf-46e9-87d8-73356a42d3fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31aa3b41-8672-4986-9871-cad6282c3eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce0b8ae5-a519-4de0-ba69-2e4a95432cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2bcec5-ee08-4db8-a837-75db2739e2a0",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a92bb8-64c7-4faa-a6c8-2afbf11b2bb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8aa0661c-4ad4-49d2-9ba7-a3c22de6749d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64997887-de1e-4f91-bea1-c8bc3557b02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8238b959-9cd9-4e50-ae34-89481fd8f59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c25957-f440-472c-b17e-685c03bb8279",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1f457c-48a4-40d5-991e-fc1de4ee19c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8555697-1859-4c06-b330-444f702d0bfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc2a57e-0cc2-451a-b14a-a9681d029503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3db812c2-84a0-4b66-acd7-3aaf55e66fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daed51dc-faa7-464e-907a-ee2729d2023e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a212c736-ee8a-46a9-9890-a360ec31770f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18294469-fa53-4d2a-a164-2d66a74dd2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "657a6db2-28de-44fd-9358-33096e0a0306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4983ca-082d-4848-9378-0813cc79857d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbc77ae-e842-492f-a708-e073a374abf2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93287f3c-af6f-4222-b9bd-373af29067eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a40b97-481e-4971-bd73-0a530e073c00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "148401ac-3be0-4786-8737-a326acf5f933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b90c9cf8-ff26-45f2-8063-17991c68ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bbf4b4-75a1-435f-99b0-6dfaf5b0962b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d03ec69-d042-4d75-9831-ae6fd302ccd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8146e1b3-6e15-421e-a8b8-86bc03e98e41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cdb7b9-92cc-4f38-be38-9eff03e6bd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb3684e-dedf-4b09-bdfb-663d75064642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfe26ee-b63b-40cb-b19d-2054c2df794c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be64a76-7dc0-4455-bcff-1f1e7f1b08a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcba3b17-e504-49e5-b301-c8835d0ac248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f148d7aa-276e-4542-8558-cfbeb78168f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724483b3-944e-4900-b831-e4462e04146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e74ca34-89b4-408c-83b6-aba50461ef52",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1089ea0a-227d-421f-b3d7-7a1c0c760614",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8485148-e7e8-496b-aa39-2fa8b0723aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb409b3-29da-45b3-8fb3-d56c35a50d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ecfe2f-80fd-4a85-8035-112333b0116b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04bf2db-e779-4291-a02f-42767fd7ebfb",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e151a8-db23-4b9d-8921-ea80f46bf188",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4683c014-0aed-4bb6-a8e8-b4ae4eec22a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "765f9ad9-56a4-4ea3-9ce1-efd822b43fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecbb430-0a3b-40d3-be9a-ae1d6285498c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328a0d65-77e3-47d8-a14b-bb85d4dcb9e5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1bcb7a-3aef-4981-ac90-1b12d869afca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cfa56d3-f2de-4f39-9bad-9db2e1c97a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20ad0fe-4063-4c17-953d-ce6ed8f68349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6abfcc00-cb1a-4b2c-b7b2-41923d0bd98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ca7128-5264-44dc-b57d-e11a5668ca0d",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abfa8319-a235-4909-9cb8-842171316f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0602ebf2-3435-4420-a18f-cc8585a557d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "823d24d8-955f-4a07-9b9c-06bd17ee560a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9aed2d7-4c14-4710-8d7b-3345e4acd243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87a9dfe-f4de-4781-b89b-4ca229c2daeb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7600af4-50a1-451a-8153-ef5626640e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707612a8-d131-42e1-bfa0-fb40dc8741e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a04160f-838b-4bce-b7ae-04e881004ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f53e7ce-f801-47eb-b793-36c0555afe15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81d9285-1652-40ff-8d84-7ff5e3435a29",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852a5d48-ac86-483c-997f-9f383bd4d59e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f41bcdf2-2c0c-4ccf-82bb-0dd832d608af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7797cf38-938b-4a56-b620-65c4f2e31aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817c66ae-216e-49ad-b547-4871ed59e00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169b7c8b-1739-4226-ad9d-31ee37dfb644",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a48fcfd-b208-4d9e-a7a8-fe50be3b2c3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf64ff2-a233-4f29-9bef-fc5984cc2a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ddd941-67cb-435d-a719-c2c428665203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f604752-8855-43f4-b364-1dcb97486000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee87133a-9eb2-45f0-865a-25c708502bdb",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194225df-7137-4dbe-bdc5-28f1fc30b1fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82057462-4266-4122-b36b-de2790cbf7b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d7d2ae-4822-4176-ae55-2ec9f4540934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a26721fd-c1b7-4f29-87cc-0a6fe1903f73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c29efdf8-ef81-41f8-83ff-72a2c294961a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45ecd467-85b6-4569-9a1b-ef4c0928e757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2b25b2a-2324-4775-a307-0b240e9d1dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c3971a-e82c-4735-bdda-4d107e0b02c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbb7024-0ee1-483d-8b59-2f96f76e28a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c505acb-422e-4236-bc18-1f64fde1f018",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7669fe37-23cb-4e4c-abca-3e684cdbf860",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7898d8d2-246c-4b70-8c09-41b1c43c3e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf74199-91a7-491e-9a85-3e039a66d073",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a104a96-fbc1-4fdd-a941-1921a16c945c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c47aa2-4bec-4ff7-90ab-a7f3d55fa6e0",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d78598a6-c8f5-45c2-b886-c88e48876a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c42ce64-e5cf-4578-bd73-d8cd6d496eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c43125d1-60db-48e9-8b15-95ff1f57f1fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1217b5-181e-40e8-92ff-66e506611ecc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7154ac7-cb4e-4a6e-917e-2072e64998c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec322a25-f00a-4ccb-962c-bb57dbe9f4bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "edcb4d37-564e-412c-beff-d30bd00a38f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d670b1c4-ae18-4bbe-bc31-4adeddb77514"
                    }
                  }
                ]
              },
              {
                "id": "d89f5680-0d32-48cb-8758-8a9e0b416267",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e321bc77-ea2d-4b47-96d7-de86e7212739",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af96342-ff89-4aca-acd9-62a4fe260bd0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b88f4a4e-d7d4-42a5-8f29-4639fc8fffee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f92ec79e-baee-4a6e-80f8-4fdc5789e71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a1c5d32-b19f-40ed-a8b8-6638f11799d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a1628b-091e-48cd-8a2c-cbc13551347b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f567b5ee-afdf-4611-b12e-673618b04db9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9715aacb-c846-4c29-af72-3e804d3b3ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c47081-e54c-44b3-a43f-5148ecaf8b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ba0b6ef-8794-4c98-8475-83e47fab738f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf676c03-9ae7-448a-a539-c070bedafa2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84783b96-dd53-4451-afa7-191c17fb7df1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde07001-16d3-4305-a703-05a2f29cec53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "856ae73a-92e6-4f68-bed6-004b7c4739d8"
                    }
                  }
                ]
              },
              {
                "id": "a89051ed-d9a7-4188-a023-3e5dba32549b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "21b24b5f-f0e3-45c3-b96d-7f9e06319105",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6992de3f-c723-4835-aa0a-3d5cc2f7a026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "878b3812-cf82-406b-ac7b-4ca1b4e9d53f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe4ba60-8238-449e-b5e5-e2e1853bfbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782713f7-20fa-41b2-8b06-719ee1bfd995"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4511a5eb-6e2e-45f4-a3bd-436397e25c70",
            "name": "Positive Testing",
            "item": [
              {
                "id": "73c5eb84-6f36-49d3-b6f7-b688fb61db1b",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdc24d7a-522d-4049-bb5c-f7720fdb0efd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5d1ed064-75c5-4f19-810c-eccaff9e38f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9d9899e-39a7-4e2b-83f0-5f693e4f4618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "353a7397-ec9e-4cf2-a390-c0335906279f"
                    }
                  }
                ]
              },
              {
                "id": "b786d26f-eaf9-466b-8e58-22b859468267",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f10ad3a-920e-4bd7-9252-4d93b612097a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "96a8e7e9-541a-4add-9487-1a6d068af271"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c14ae55f-45c9-40bb-b7af-a253ea9adc89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d6e45e9-7964-49d9-a57c-aa8add608fae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed78644f-cec2-487f-a540-f1fe26a3a530",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7f92fe56-f52f-4355-b7ce-6929f317f185"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "038f316e-a726-4ab3-8d7c-863ee68cee56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "300a7549-7ed6-4dbb-817f-add1d876365a"
            }
          }
        ]
      },
      {
        "id": "df6b4c3e-1df2-48d1-9ef0-3c389838c1b4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "7e50ac0e-19f4-4ae9-9c16-6ce696af439b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ddd5621b-1510-424e-a7d8-ceb9ec222826",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "561fb1d1-ea42-4adb-9ad1-9ae195ad12b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093150be-86eb-46dd-b305-c708cbf76838",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "585ff8b7-b232-4e37-b1ce-2e9d44d821c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf505dec-494c-4ceb-8c5b-fec6c3db01af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4031d8ea-7097-4a3e-a5d6-1edd36d9be1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7cfe0e-c4d9-41bc-88ae-5688317bce5e",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca912a59-b5ee-4d3c-bcc2-1dd81e939750",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e6c14e2f-f29b-49ef-a264-3e51fbed42b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40847e5b-0359-470e-8142-25f23a4ce66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c151dddd-cea8-4c25-90e0-d8959c296c8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53f50bb2-e09d-46f7-81db-3884cfb9601e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42dc011e-63a7-4141-bf4c-feb75d1f812c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0b6b378-5453-470c-9273-24cc90ba01bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd77e535-0a36-4477-8e9d-5223eb4e5f25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "141683f1-7069-4c14-beb0-34b2087cb88a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4aa3cf5f-55b9-4ee3-8d51-c8de842f2df4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "251969cc-7585-46bd-abe8-565835122d2b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "62f7dae5-01ca-4ece-b9b6-e2baead0721b"
            }
          }
        ]
      },
      {
        "id": "7d35d833-64c0-4e6f-bb40-58205efffbc7",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3b798bac-85f9-4d28-94a7-2dc13e0cbe90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "697442b9-9af3-401f-91db-acd56a31c663",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0446b281-e35c-4268-9928-b94d57e7caab",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba6cf59-3452-4c5f-bc0a-9febef46637f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3cfbfff4-25df-4122-8520-83a1fb55d134"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a412054f-9a60-4e5e-8214-62d699e6cece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e016da1-0cac-4f40-87ea-f5aa1c4e3010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d775ce-9a78-4e5e-9b58-8f252625455d",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8945f4-69fb-4572-ac95-0017dfe33047",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7b2b9b1c-623d-4398-8789-dfd0d4a53a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf4e396-9bdb-4bb8-976c-0157564e9cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7f69bce-9585-4ac3-910b-5e020f05d60c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34f0092c-5be6-46c4-8ffa-3e3069dc09a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0fd558cb-0b22-43a1-b833-2d2ecb5ee2e4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1698ec03-ce41-42e6-93ae-abc1b7cff9fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f6f375b-9a8c-458b-89ba-30294e3a28c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "48cc9113-8273-4151-9122-996907fbae1d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f7065cd-96b8-44f1-85b4-67fc03381cbf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8616978a-4f45-4b39-a2a3-23df810c4e75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b0f56e7-b88e-4159-a693-ad9177babe41"
            }
          }
        ]
      },
      {
        "id": "1eda73f7-ac76-49ab-aaa4-17534b5cee36",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "d6890c3c-96e1-4534-b8c4-5c2d4f305a16",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5570162c-4e29-4ad5-a468-fc4584925b03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "453aebe3-d96e-4e42-8792-119c5b720a04",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d79461-2ee0-4a77-9dbd-f9068192de52",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "026b3c25-c8f4-46aa-baed-eabc5a148ad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73a5952-413c-41c3-9d9f-9b5a17767a72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baa6d437-ee0c-423f-a8b4-15ead8241a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3201d700-0d4b-4843-b850-d76bfc5da771",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e6de2c-62df-4f29-82cd-ed7c0bddd816",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2383ad-a592-4c23-82e0-4dd768dd71b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e00c795c-39a2-4640-aa77-4488e99c31cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d4d3bdf2-fe60-47ae-a18d-269d705dd320"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60749bfa-753d-41b4-939a-90ee57091a46",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d569b00-7c64-4055-a7b4-a1772d441b2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ef5385e-0418-43ad-9219-5d19ff675ed7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89d8029f-9c4e-49a9-97e4-5f922829fc45"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b49d535-928c-4d4f-9141-e54e8f2df629",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3fbd443b-3d22-4055-b1b0-f9a992ffc9a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9db82e2b-ca6c-4b23-8b61-20dcfba81f52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5a11903d-99f6-432b-b5d5-277ee1637a69"
            }
          }
        ]
      },
      {
        "id": "546b487c-c7d2-48a4-86e6-984ccda14ca6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6e2dce6e-b9af-493e-b559-2864c9d04745",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "769874dd-6658-46e6-8282-1f18bce6a508",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d041e9aa-a088-4f3c-a2da-a354fec51f10",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ef8e6eb-a061-4130-b83d-a838df3550da",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67f05d4a-6a27-438f-9685-f01f58d0892e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 639.1384615384618,
      "responseMin": 21,
      "responseMax": 6028,
      "responseSd": 730.4053379812334,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679791251136,
      "completed": 1679791427693
    },
    "executions": [
      {
        "id": "3e0d0449-7eee-4ed4-b321-4cd4910a5b3d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c8ab4d85-7750-4311-a64d-3547c1d8250c",
          "httpRequestId": "d965914e-ff31-4d78-ae7c-dcae246316e2"
        },
        "item": {
          "id": "3e0d0449-7eee-4ed4-b321-4cd4910a5b3d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "efcdf2f9-51d8-4525-baee-db6425051464",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "c7a00588-f086-4b04-b796-fd7424e86fab",
        "cursor": {
          "ref": "e978711b-a7f5-456f-9cd6-1f2850138659",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ea0c617d-3ed9-4bf2-bf5a-f6c85c470024"
        },
        "item": {
          "id": "c7a00588-f086-4b04-b796-fd7424e86fab",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "fec57a8e-5e5b-428f-a520-f2ae299ef35a",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "978f89ee-d6ec-401f-b3e3-2067a9cae4da",
        "cursor": {
          "ref": "5138f7e4-e203-4afb-b0b1-df0a9f849e27",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1e35d1af-3285-4307-b883-4772b9110ca7"
        },
        "item": {
          "id": "978f89ee-d6ec-401f-b3e3-2067a9cae4da",
          "name": "did_json"
        },
        "response": {
          "id": "6cc48b06-c0ad-448e-bf5e-124d202d84dd",
          "status": "OK",
          "code": 200,
          "responseTime": 1222,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44ee250-67d8-4a7c-bd9f-e119fc37d858",
        "cursor": {
          "ref": "56121f27-1ae0-4546-9624-b160366016a8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d362dd6-2db8-478e-a7dc-0daeb8982a68"
        },
        "item": {
          "id": "d44ee250-67d8-4a7c-bd9f-e119fc37d858",
          "name": "did:invalid"
        },
        "response": {
          "id": "d6f6456e-fa9c-411f-aec1-4a801d593d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44ee250-67d8-4a7c-bd9f-e119fc37d858",
        "cursor": {
          "ref": "56121f27-1ae0-4546-9624-b160366016a8",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "4d362dd6-2db8-478e-a7dc-0daeb8982a68"
        },
        "item": {
          "id": "d44ee250-67d8-4a7c-bd9f-e119fc37d858",
          "name": "did:invalid"
        },
        "response": {
          "id": "d6f6456e-fa9c-411f-aec1-4a801d593d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34ccabc-c4ad-4176-94f5-1bb6790cd2e5",
        "cursor": {
          "ref": "5de40ed1-bdf5-41f1-a747-2808b984d34d",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c54b0a4d-05aa-42a3-a327-d5699326e5c8"
        },
        "item": {
          "id": "b34ccabc-c4ad-4176-94f5-1bb6790cd2e5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c82face8-a95e-4d6d-ae62-4ee2c73a7956",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1585,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b8621f-f267-483e-b825-d023543c23aa",
        "cursor": {
          "ref": "f7d28238-2d07-489f-a050-18c952c6048d",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f9708942-c2be-4821-9bc3-a58e1869de23"
        },
        "item": {
          "id": "96b8621f-f267-483e-b825-d023543c23aa",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eaf6a2af-44e4-43d9-bacf-7b913ebc3f35",
          "status": "Not Found",
          "code": 404,
          "responseTime": 583,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da054ed-f433-44ff-a6a3-6bb10a1ce42b",
        "cursor": {
          "ref": "55a0ffa9-d3d5-46b9-aa77-1cf3ca9ff8ef",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "db7aba0c-24bd-4a88-ac75-0c718f1c8ea5"
        },
        "item": {
          "id": "3da054ed-f433-44ff-a6a3-6bb10a1ce42b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bc4f1635-3b17-4909-bdbc-9618621ea87a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 74,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5a3c3b-6250-4e89-b030-be9057a4a6ae",
        "cursor": {
          "ref": "2e219e1a-aaac-4c5a-820f-53d8ca1ffa45",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b452596-4cfb-479b-82a2-6e168d7cf2fb"
        },
        "item": {
          "id": "3a5a3c3b-6250-4e89-b030-be9057a4a6ae",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "77bdeb9d-06a4-467a-b293-d3d252f951c0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5a3c3b-6250-4e89-b030-be9057a4a6ae",
        "cursor": {
          "ref": "2e219e1a-aaac-4c5a-820f-53d8ca1ffa45",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7b452596-4cfb-479b-82a2-6e168d7cf2fb"
        },
        "item": {
          "id": "3a5a3c3b-6250-4e89-b030-be9057a4a6ae",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "77bdeb9d-06a4-467a-b293-d3d252f951c0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 570,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb5ef2a2-6742-41a9-a6ac-5b526beb9172",
        "cursor": {
          "ref": "6270460d-b6da-4a97-9118-23bb92f82dcc",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "573cd5be-d2fa-4d93-91b2-9160680f883f"
        },
        "item": {
          "id": "bb5ef2a2-6742-41a9-a6ac-5b526beb9172",
          "name": "identifiers"
        },
        "response": {
          "id": "c3a851f5-c88d-4f56-a7c5-7b5a6ff8f37a",
          "status": "OK",
          "code": 200,
          "responseTime": 980,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9ee52d-b00b-4eca-bd47-2e3cbde4c758",
        "cursor": {
          "ref": "d45840a4-8398-4993-84f2-e3c3ac5870d7",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4ac2b121-4af2-4ac4-b5a4-1c18572b0fce"
        },
        "item": {
          "id": "5b9ee52d-b00b-4eca-bd47-2e3cbde4c758",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b47cbb4b-c73d-427c-9540-1b52c8715064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9ee52d-b00b-4eca-bd47-2e3cbde4c758",
        "cursor": {
          "ref": "d45840a4-8398-4993-84f2-e3c3ac5870d7",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4ac2b121-4af2-4ac4-b5a4-1c18572b0fce"
        },
        "item": {
          "id": "5b9ee52d-b00b-4eca-bd47-2e3cbde4c758",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b47cbb4b-c73d-427c-9540-1b52c8715064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7be7ab-d05d-4e6b-a175-b6bf65f4f94a",
        "cursor": {
          "ref": "e82f8f3d-de3f-4cf7-acc8-29b4567ef249",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a5e37bcc-f604-439a-89f2-264e6f6c13f6"
        },
        "item": {
          "id": "7d7be7ab-d05d-4e6b-a175-b6bf65f4f94a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "d0a91303-98e2-44f9-b02c-afcaa09c6434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f8ff110-efa7-465a-8a07-74e20bbaa417",
        "cursor": {
          "ref": "b6f7e59d-2dc9-4cad-b858-23acb675560b",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6102f56d-c715-46e2-be82-302577afb218"
        },
        "item": {
          "id": "2f8ff110-efa7-465a-8a07-74e20bbaa417",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "97aaaca1-166f-43eb-a5c3-2664f5c05d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 672,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933d5442-9740-4e62-85b2-fe5452a8fb60",
        "cursor": {
          "ref": "d877acc5-8e2e-4092-9336-0e9d10ed5833",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ed4d8387-55a2-41b0-8080-d998bb736d8b"
        },
        "item": {
          "id": "933d5442-9740-4e62-85b2-fe5452a8fb60",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "00bd574e-c6a5-4138-bb1b-4c240e3bf40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 845,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55e5269-d253-4bcd-8ee0-3afd13d048e8",
        "cursor": {
          "ref": "fc19762f-2f76-4a98-8d2d-c4222576ea65",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "43714284-c4de-42e0-b593-12778bb6bf85"
        },
        "item": {
          "id": "e55e5269-d253-4bcd-8ee0-3afd13d048e8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4ca539d4-5da5-4c38-9098-8ad97ffe9275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 766,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdae098-1a42-4678-a471-b642ffec8293",
        "cursor": {
          "ref": "2a09d80f-6af8-4162-b0a7-aa39c4542b10",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "29520cc4-441d-4f21-828f-9b105acb643e"
        },
        "item": {
          "id": "0fdae098-1a42-4678-a471-b642ffec8293",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2080d159-b309-4ede-a843-d7ebb762ace6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f211f9-6afa-4a11-b148-51eda871ee54",
        "cursor": {
          "ref": "67fb0fd0-7dd5-41d1-a74b-76b92c13a069",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d9e375bc-abb1-4bb9-b79b-acda68fb1099"
        },
        "item": {
          "id": "92f211f9-6afa-4a11-b148-51eda871ee54",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6522b27c-3926-423a-8813-69fa2542214e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c625320a-9199-4acd-9c2b-b76b71751850",
        "cursor": {
          "ref": "af41531d-93f2-41dc-922e-541fe532a320",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7921280d-9225-41c5-8467-390bb9f2402a"
        },
        "item": {
          "id": "c625320a-9199-4acd-9c2b-b76b71751850",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5e8ec3a6-6d0b-4c6e-93b2-0568b3f1b76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 733,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d96e290-f1a5-4ea3-a804-76a8874ed826",
        "cursor": {
          "ref": "921dd693-3ac4-4f3f-9581-78f6f079d702",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c26e35ee-a05d-41b9-a9bf-d5c8aac3c20f"
        },
        "item": {
          "id": "3d96e290-f1a5-4ea3-a804-76a8874ed826",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f84c189d-f760-4b74-b5f9-20ee8650a0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae4f7e7-2f36-4164-a2f5-cb1940263998",
        "cursor": {
          "ref": "7aaa6a8e-1018-4de9-87fe-e901fb977f06",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "323e8e4a-2969-494a-b125-55f964c7336b"
        },
        "item": {
          "id": "1ae4f7e7-2f36-4164-a2f5-cb1940263998",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d94987d2-a427-4617-8ef0-29a4a8da7943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd755db7-cfdb-40ba-bbb4-94bc71fead6c",
        "cursor": {
          "ref": "feb5a1e6-50ba-4619-a0b4-72a35da37371",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ece35567-f46a-4cc5-8994-43b4a0544d07"
        },
        "item": {
          "id": "cd755db7-cfdb-40ba-bbb4-94bc71fead6c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "86650885-d72e-4d19-aebe-fd00430beb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 908,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838fff1c-a3b7-4bc2-bfbb-a6742ff687e9",
        "cursor": {
          "ref": "c393c8c5-8221-4798-b8a6-6e2ecea646c1",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "609ae77f-93bd-4565-aaf1-1e9f32e4f6cd"
        },
        "item": {
          "id": "838fff1c-a3b7-4bc2-bfbb-a6742ff687e9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "18243209-08e6-45d9-93a0-efcf16f638f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc756912-9494-4b2e-b0f0-8b552acf050c",
        "cursor": {
          "ref": "0380f055-f33b-438d-8c8f-6aecea4b2e10",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "e10c952a-110b-4204-96a6-0ffecf154777"
        },
        "item": {
          "id": "cc756912-9494-4b2e-b0f0-8b552acf050c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ff70685f-1d8f-4a34-8e4c-c7a08d5c76f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 632,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf30cf5-84f9-4c11-88c6-b087d5ee8e27",
        "cursor": {
          "ref": "a721653c-a04f-4d92-9333-903563470308",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "bdedee87-0955-4b22-b57e-26f90433d1f8"
        },
        "item": {
          "id": "eaf30cf5-84f9-4c11-88c6-b087d5ee8e27",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d72b2bee-1b80-41a0-927f-7153d4d9ba8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbac58b-b68e-4d0f-84a4-a3a8dd2c14cb",
        "cursor": {
          "ref": "ef686e78-908e-4f15-a099-f9cbc425d27a",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0a1e65ee-9497-4f8a-94df-7ab2a6edd052"
        },
        "item": {
          "id": "2fbac58b-b68e-4d0f-84a4-a3a8dd2c14cb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b5e7e01a-5ed9-47c7-9eea-68ba0a394a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1726b5-f0b0-474d-9f39-b7776e737fe2",
        "cursor": {
          "ref": "487ff678-fec4-451a-b9d0-fba2afa2b7e4",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e1b42dd5-2633-4e13-8f71-7ee5120ff65c"
        },
        "item": {
          "id": "af1726b5-f0b0-474d-9f39-b7776e737fe2",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5e4b3534-910c-447e-81b2-85852ce7b60b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa9e9ac-5c5d-4dbd-9825-341380cf45b1",
        "cursor": {
          "ref": "643554fe-a109-4807-b8c6-b6214dc6598b",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "43a4f396-dadb-4a7c-b80c-706f3af54f73"
        },
        "item": {
          "id": "daa9e9ac-5c5d-4dbd-9825-341380cf45b1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "be241e80-fc67-46c8-a82c-e079b91d0231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f04efd-1710-43e5-9f10-f96a596aabc5",
        "cursor": {
          "ref": "d2dab9b7-5585-434b-b9b8-01c268eade94",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "edb2dac7-f437-42de-bfd2-ce4da96483a4"
        },
        "item": {
          "id": "d6f04efd-1710-43e5-9f10-f96a596aabc5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7e76f065-05ab-4db3-be9b-da16ea3a48a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e090cd7a-3ff1-4b6f-a629-b1fa45300f8a",
        "cursor": {
          "ref": "cd1b85d8-7f75-4fa2-bdf2-2221ff61ee03",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "af0b61f9-80cd-4de3-962b-dd72fa46d155"
        },
        "item": {
          "id": "e090cd7a-3ff1-4b6f-a629-b1fa45300f8a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "3596555d-ff1e-43a2-ba1e-9e36154ca22f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c81ac2da-eaf5-439c-8e63-94fb983db822",
        "cursor": {
          "ref": "ed4fb963-8621-4bc9-8a83-f79ffad798a6",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2f099544-5edb-42d3-8a07-5a8019d9b9b8"
        },
        "item": {
          "id": "c81ac2da-eaf5-439c-8e63-94fb983db822",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "33c89486-aea2-4609-bbec-e1771466bb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 962,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32ad692-c914-4bdb-8894-9d7826dc9f52",
        "cursor": {
          "ref": "981e8cb0-04ba-4be4-a925-f01c2854a4f9",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "31c17c68-ab84-431e-a865-ca28379a3b6b"
        },
        "item": {
          "id": "b32ad692-c914-4bdb-8894-9d7826dc9f52",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "b963cf16-141c-433d-b0a6-b335f72de7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bf3445-78c4-4166-800b-910a37317c65",
        "cursor": {
          "ref": "0b9d7ac6-99e5-4a6a-8341-4f5750571ed7",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2062f1ac-cb4c-4703-aea6-7779a85b2fb1"
        },
        "item": {
          "id": "87bf3445-78c4-4166-800b-910a37317c65",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6384394d-bf43-4cdc-8bbb-60149e9c2c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 814,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227ca608-14d9-4c16-aa81-4c20d11ef944",
        "cursor": {
          "ref": "01f283d1-8f95-448b-8838-36328ab8ce5b",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "226343ad-e070-4f60-acf1-f700ae9e68bb"
        },
        "item": {
          "id": "227ca608-14d9-4c16-aa81-4c20d11ef944",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3bd223f0-6ba7-4dd2-b508-e30bd44d888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 789,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af44675-f6ff-489b-b020-9e15039cc084",
        "cursor": {
          "ref": "93da3ed5-1257-417f-b06b-85cb4751522e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "030f090d-c5a6-4e99-bd15-df683608b325"
        },
        "item": {
          "id": "4af44675-f6ff-489b-b020-9e15039cc084",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c6f92e4d-2575-45c3-8c29-41272bd5dc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e26b749-46ea-4f77-afe5-e7b4695b2ae0",
        "cursor": {
          "ref": "57e8dd2d-9915-48f2-a889-93578f38407d",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0ba64c24-13c2-48aa-8b4b-6eb6c23de38b"
        },
        "item": {
          "id": "1e26b749-46ea-4f77-afe5-e7b4695b2ae0",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "aefe650a-fc25-410f-b872-85be67bd0eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d925f62b-6994-4e40-906d-aaaacd274db3",
        "cursor": {
          "ref": "1401ce0d-b228-483f-8e89-d86952c5bfc2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "aba4e12f-5c91-4b0c-bbe2-cac21cb45247"
        },
        "item": {
          "id": "d925f62b-6994-4e40-906d-aaaacd274db3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "def9da72-dc66-4d39-8336-f6403c75f8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 656,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e138c0a3-f4c8-4bbd-9d34-77abc4f6d66b",
        "cursor": {
          "ref": "d3a1c82d-824a-4a4a-a6b0-473b1db826df",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "284e81b8-5d9a-409a-81b0-3f0b1e56dcb4"
        },
        "item": {
          "id": "e138c0a3-f4c8-4bbd-9d34-77abc4f6d66b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "277fa00f-6162-4987-8bd4-b5ebbbb6693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eebcdd-4603-41dd-b406-d59b408187fa",
        "cursor": {
          "ref": "6c15a629-2616-4fad-952d-258046d11adc",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b2929170-c541-47ef-8ced-6ee057f1e6f2"
        },
        "item": {
          "id": "b4eebcdd-4603-41dd-b406-d59b408187fa",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "5ab8620f-7cc5-43dc-98ea-e3bf1c4ce748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f086a1-bc81-45b2-a00d-2b6093790a9f",
        "cursor": {
          "ref": "afe26b96-9dd2-4186-914b-396d28ea171f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fc890707-cee2-4bb1-ba2c-cd5460cd74fa"
        },
        "item": {
          "id": "c4f086a1-bc81-45b2-a00d-2b6093790a9f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dcf3ee7d-97c7-4ad0-ab9a-c904f2c237aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 617,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef2b3ab-dafa-427c-80bd-55f92ea14b4a",
        "cursor": {
          "ref": "37d583d7-061e-4eeb-a8b3-87467337d63b",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4ae60e32-ef1f-44ef-9dc4-dd1153cb6eef"
        },
        "item": {
          "id": "2ef2b3ab-dafa-427c-80bd-55f92ea14b4a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3d19c737-e131-484b-80ca-d887106c7ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789ad70e-4189-4b4c-9a72-58e7162032ce",
        "cursor": {
          "ref": "8fa3933d-b272-4622-bd92-3d26b2b93052",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d8787314-c46d-45e5-8c34-0b24c07cd5eb"
        },
        "item": {
          "id": "789ad70e-4189-4b4c-9a72-58e7162032ce",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "face969e-c7b8-4832-9ebc-376967b3aac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7004933-8e52-4a96-b80b-05f34809749e",
        "cursor": {
          "ref": "7c2f8be5-bf2b-4227-837f-3103dae1dc09",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f90447a1-727e-44ce-9256-41134161f381"
        },
        "item": {
          "id": "c7004933-8e52-4a96-b80b-05f34809749e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8ffebbf9-d4e5-4683-b913-32266bdac33a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7455620d-f797-4f39-ad61-57ef9c103a82",
        "cursor": {
          "ref": "47ce20e6-989f-493e-a1c7-5225916d911f",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "bdb5e654-0321-4655-98d8-d44d4a439797"
        },
        "item": {
          "id": "7455620d-f797-4f39-ad61-57ef9c103a82",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f7bf0d23-ff87-4692-8f35-2dddfe1ab4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f0a9bb-de8b-4011-bde5-d02742736bdf",
        "cursor": {
          "ref": "19c497be-1317-44fa-8f77-d6e5978108d1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fd476309-dacd-4e9b-9dda-7d0a6ceb45cc"
        },
        "item": {
          "id": "a5f0a9bb-de8b-4011-bde5-d02742736bdf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "aa48d7dc-7a49-4e47-93df-6201d2d8de00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de1f4b2-d891-4580-9e9d-4c463603a6bb",
        "cursor": {
          "ref": "b3f65632-249a-4aa0-8fac-86dfb400c549",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "1460b2eb-d95e-42d7-b9ed-25c132122e76"
        },
        "item": {
          "id": "7de1f4b2-d891-4580-9e9d-4c463603a6bb",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "02f1da39-0cf5-4673-b804-72def8f2a80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452a45ab-7ff4-4e22-a73b-65f489ede877",
        "cursor": {
          "ref": "65b1acef-0044-4a15-b93c-d72cf2ac765e",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0837e335-afb8-419d-883e-443869f0cc26"
        },
        "item": {
          "id": "452a45ab-7ff4-4e22-a73b-65f489ede877",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cbbacd43-284b-4f32-a90b-19c8a604a411",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 692,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db5416e-372d-4e1a-b9ff-07bb13eba8a7",
        "cursor": {
          "ref": "89739db7-9c11-4e72-ba0e-cff12128b398",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "19130916-85d9-4f5e-ae58-7c8f2719d9f1"
        },
        "item": {
          "id": "4db5416e-372d-4e1a-b9ff-07bb13eba8a7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "f167dc3d-1e22-41b5-a4ed-e6bd6d2dcc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a592f43e-e170-4dff-bff0-be7ee506c01e",
        "cursor": {
          "ref": "8b2286c0-ee2c-4163-afdb-e47a7e72be2e",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0c0da286-51ce-4071-883c-dbb8d0b6ac17"
        },
        "item": {
          "id": "a592f43e-e170-4dff-bff0-be7ee506c01e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5b8c1a3a-32e6-4ad7-88c2-ed45155ae17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3148e1b0-680b-482f-86d0-24976f5ebf44",
        "cursor": {
          "ref": "868fe0ce-1fb6-4367-88d0-432f0e763098",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3e6c3378-8be1-4f3c-8d2f-600bdf25a9dc"
        },
        "item": {
          "id": "3148e1b0-680b-482f-86d0-24976f5ebf44",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "bc364ec3-8f85-4f6d-a26a-dbb04ede406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6452b79c-9c7f-4c0f-a700-1b14e390ac17",
        "cursor": {
          "ref": "859211bf-25a1-4fc6-8ca5-7be868e3f571",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "29cfa4cf-577c-4d3d-9109-0f53ded3e860"
        },
        "item": {
          "id": "6452b79c-9c7f-4c0f-a700-1b14e390ac17",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3321eb94-8146-4a02-b46a-8d6fa49162d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fce1df-b35e-4b01-b6ab-700c63ee24e9",
        "cursor": {
          "ref": "89bf8712-5fbc-49fb-9110-1b27ca706419",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2d6b2358-d85b-4cf9-9074-83d17ed85180"
        },
        "item": {
          "id": "92fce1df-b35e-4b01-b6ab-700c63ee24e9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4375e6bb-ca08-47fd-9236-76a464c58d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bac4f6-243f-4179-a704-a60fee7d7e1c",
        "cursor": {
          "ref": "e669f761-0a3e-420f-a0bc-d849fcb95323",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "a96a0cca-bb58-485b-8de4-e59bd8047fd6"
        },
        "item": {
          "id": "25bac4f6-243f-4179-a704-a60fee7d7e1c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "280ed261-b2b0-44cb-8266-929ede870dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade6b0b7-2d0f-4ab3-87c1-1f6251abd071",
        "cursor": {
          "ref": "b38aef91-4f09-42a5-9c35-72a29e00b5b9",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bea7ec0b-6835-4261-b1b2-06d84cc2681f"
        },
        "item": {
          "id": "ade6b0b7-2d0f-4ab3-87c1-1f6251abd071",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4facf11b-006c-4697-9747-2cdb594ebdbd",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 653,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7efa1519-fc4c-4d0f-851e-bca9370b638d",
        "cursor": {
          "ref": "b58df6a7-3131-4412-a507-792ec5340cdb",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "3efd587d-550e-4838-9b97-9952f82c5635"
        },
        "item": {
          "id": "7efa1519-fc4c-4d0f-851e-bca9370b638d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f4492a02-539e-477e-bf86-c63c4b013671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79df5f9c-2005-4d85-9429-7ef8dfe58fab",
        "cursor": {
          "ref": "c57e6dde-501b-4a34-8a26-297eab018a9f",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "8f9256c3-bac2-4fe1-81f5-d19082e88037"
        },
        "item": {
          "id": "79df5f9c-2005-4d85-9429-7ef8dfe58fab",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0191f1a2-c3fd-43a0-b630-19605efbbcde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4c5caa-6e07-4f1d-91df-6362dc70a526",
        "cursor": {
          "ref": "bd26d668-f8dd-4949-9125-c083cc803199",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "416a8fc3-feab-44f9-9a92-62e5d30d5132"
        },
        "item": {
          "id": "be4c5caa-6e07-4f1d-91df-6362dc70a526",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3febd476-7bd3-426f-9fa9-26c50d78cad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0633e14b-89d4-4b1b-a91e-d79c71143190",
        "cursor": {
          "ref": "59ab6c36-7cee-4e72-b164-8d6f9b5e2224",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "28345264-b745-4bd0-a3da-e3bd3161b6ea"
        },
        "item": {
          "id": "0633e14b-89d4-4b1b-a91e-d79c71143190",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b10ea70d-eb5b-4752-af1a-dd19c8003437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070c0a1a-9fac-413a-ba15-ba07e91b9e27",
        "cursor": {
          "ref": "c5d5a5db-74bc-46e5-9cf2-600afbe9abcc",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "04d79d2c-1d0d-456d-aa5e-5f54287b86bb"
        },
        "item": {
          "id": "070c0a1a-9fac-413a-ba15-ba07e91b9e27",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ddf812ee-4e51-4d21-bcfa-ec9ef9bb233f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07132cc0-33a8-4aa6-b3e9-ddb5c950c4af",
        "cursor": {
          "ref": "dc78e4f2-61e4-4045-9dd7-e92cc2df4e96",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5943d76e-e5fb-4c1c-afe2-0b39f058817e"
        },
        "item": {
          "id": "07132cc0-33a8-4aa6-b3e9-ddb5c950c4af",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ee4e20ef-5a08-407f-af95-1f55544d303f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "972afe7d-7c6a-4a3e-b307-f035c06c7f73",
        "cursor": {
          "ref": "5c5d1996-ca71-4734-b26c-28874da0c04e",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "c6295094-ee8e-43b2-a98c-bb2f3f55128c"
        },
        "item": {
          "id": "972afe7d-7c6a-4a3e-b307-f035c06c7f73",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d7bee76b-c910-4a9f-9feb-508fe2d2a386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c168e2e-9983-4438-beb0-6c583b8f428c",
        "cursor": {
          "ref": "1c4398ee-3209-4936-9f61-f527d754b6d8",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "3115695b-576c-4de5-af2b-475d0a6059a0"
        },
        "item": {
          "id": "1c168e2e-9983-4438-beb0-6c583b8f428c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "897df9af-17f4-4357-a847-9707801552ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557418fe-b7a1-40a9-8941-12d047fc7fab",
        "cursor": {
          "ref": "fd31af28-2f19-4447-9976-8d69229a14f3",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b294a0e6-3520-40e1-a8d8-ac82dd26d019"
        },
        "item": {
          "id": "557418fe-b7a1-40a9-8941-12d047fc7fab",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9112d907-a219-4fe4-8b81-5f35af65c64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513b3091-c527-44e2-bce6-ef600c975bc1",
        "cursor": {
          "ref": "f67c193d-10da-459b-8733-f34863966945",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6682b316-20f7-46dd-91d9-959d945ec63c"
        },
        "item": {
          "id": "513b3091-c527-44e2-bce6-ef600c975bc1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c2cef55f-b6be-497f-bbd0-b4ec558d7ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54654d63-f7e8-4c70-85a1-a82d4e88a00c",
        "cursor": {
          "ref": "3519e43f-8e84-4d98-8787-21bdf470825d",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8a963762-bbb7-4e47-af11-6760140066e8"
        },
        "item": {
          "id": "54654d63-f7e8-4c70-85a1-a82d4e88a00c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3c3286b2-caa8-4013-b2ef-ceafe59a183e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9029389-73f2-4e09-befd-d8d4ce02bf14",
        "cursor": {
          "ref": "4ed2e39f-0005-431d-8a98-b33e54c7bc0c",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fbfb4444-cb48-4d45-8aaf-9d37ef0e93db"
        },
        "item": {
          "id": "e9029389-73f2-4e09-befd-d8d4ce02bf14",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bf0993f5-f368-4ca3-b5ae-8a8e9a3554a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecce424b-9f79-440a-a44e-d5fcd97040c5",
        "cursor": {
          "ref": "6a88d588-5cbb-436a-9035-025af41b0b05",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9c1988dd-c393-4e6d-83db-ca45a714a7c6"
        },
        "item": {
          "id": "ecce424b-9f79-440a-a44e-d5fcd97040c5",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e978bc24-6278-4b57-90f9-23c82d8cb4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5343802-65b1-4354-82a7-d5513bf4aecd",
        "cursor": {
          "ref": "591c9374-1e54-42b4-a03a-9aedf644d43d",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b70a4b70-52fb-4928-97a1-ad9b1031d5f7"
        },
        "item": {
          "id": "b5343802-65b1-4354-82a7-d5513bf4aecd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ec8603cd-6f5c-4d60-8d6e-f01a2c55b2b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26567e57-b7df-4688-8dd3-b0b17c436916",
        "cursor": {
          "ref": "e8d3b9ad-e00a-4ff1-b68f-d3071ed77c8f",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bd7f440b-67aa-4529-97bb-742854a908f9"
        },
        "item": {
          "id": "26567e57-b7df-4688-8dd3-b0b17c436916",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "23c303c3-faba-4d2f-9a78-b05f38b8c15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16af201-133c-4132-b844-55dfe1d7bc32",
        "cursor": {
          "ref": "9368a1cd-4807-4602-a009-a850cda46cf5",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "598028cf-38b3-4ad7-9b9a-e14795096fd9"
        },
        "item": {
          "id": "d16af201-133c-4132-b844-55dfe1d7bc32",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "34ca1a27-abb1-43ae-bafe-9f466962b8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a1577a-d2f9-4c2f-b467-99e8b5512b0a",
        "cursor": {
          "ref": "0b0a3c70-1789-40ce-b779-dad833cdd80f",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3e13e54d-3d4f-4adb-a999-dcaf28774dc4"
        },
        "item": {
          "id": "14a1577a-d2f9-4c2f-b467-99e8b5512b0a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "75943fa3-df6b-4e04-8d1c-e6d898aec4b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 840,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f1aaca-059a-45b2-a8d2-d363c5dcb6c0",
        "cursor": {
          "ref": "a88cd089-f7f8-44ae-9879-a926e7e10625",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5a4112ba-78a2-45b6-99a8-591ef282fb29"
        },
        "item": {
          "id": "b2f1aaca-059a-45b2-a8d2-d363c5dcb6c0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a6d52b32-f05d-4e61-a7a8-1771addbc927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d647c1-4c22-4fe8-b69f-76a4c076fe90",
        "cursor": {
          "ref": "a893e38b-565f-4183-a248-12009427d387",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "eee92309-5338-44bd-907a-499635b2e528"
        },
        "item": {
          "id": "e7d647c1-4c22-4fe8-b69f-76a4c076fe90",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "986bdfc6-3f6a-4c35-b1e1-3d2149a4d532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9c2806-2143-4a45-927e-ef0b1751b3fc",
        "cursor": {
          "ref": "4a2786ff-5cc1-4a58-98f4-de3b53b6b394",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "132904e5-27a8-4fb6-bed5-f611a841d6ae"
        },
        "item": {
          "id": "0f9c2806-2143-4a45-927e-ef0b1751b3fc",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "53f5c474-da0b-455e-89b1-b84d773291a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71594462-f323-4ed0-81d2-714bd10d471a",
        "cursor": {
          "ref": "dc321fb7-99e9-4066-a4ca-0ed42a4dd968",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0db417d7-c4ec-4017-9384-567d561d3625"
        },
        "item": {
          "id": "71594462-f323-4ed0-81d2-714bd10d471a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "904a95b1-7f3a-43b8-802d-b579627552da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff208b92-7f36-46ee-b2f6-493a0eab8188",
        "cursor": {
          "ref": "c62b2a77-a055-4cfa-8659-334ed7353d7d",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "876d99c1-edc3-40b3-acda-3d8b13ad0a72"
        },
        "item": {
          "id": "ff208b92-7f36-46ee-b2f6-493a0eab8188",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "0f390b92-dd63-4f0d-9f43-a97590402812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2379b28d-bcb3-4791-b4f4-2c92dca002b5",
        "cursor": {
          "ref": "8ec3c7d3-cbf8-4413-b8ab-06ff431e8ff7",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "7768f600-472c-4d42-a1ed-98fb6eab11f9"
        },
        "item": {
          "id": "2379b28d-bcb3-4791-b4f4-2c92dca002b5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fe378bb3-e312-4ac1-93ab-2f3b3b8a2136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74901e09-5bd4-4b96-8632-8c6c0a8f21d8",
        "cursor": {
          "ref": "a8f6040c-9f05-4b88-91a4-c1c7a9a7e088",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c5380397-5b2c-464b-b8a1-d17db84bce5d"
        },
        "item": {
          "id": "74901e09-5bd4-4b96-8632-8c6c0a8f21d8",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6becccec-863b-4e33-ac37-f823aafd01a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64a8864-3d21-42a1-9c67-1d61ec95b4fb",
        "cursor": {
          "ref": "ae19dc0c-0c99-4c86-bd20-a6608656a434",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9a3bc531-1fc5-465e-b691-ff3996341ac3"
        },
        "item": {
          "id": "f64a8864-3d21-42a1-9c67-1d61ec95b4fb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "05ec4841-1255-40d5-a79b-13d4419687f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8b4d2-905f-4b8c-8a25-059c49a65f7b",
        "cursor": {
          "ref": "a30b2260-32ae-43a1-a978-92b6f4f22422",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "45453a7d-ac7e-4b45-93c1-b8aa64e95dda"
        },
        "item": {
          "id": "66c8b4d2-905f-4b8c-8a25-059c49a65f7b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a0ff7527-3a82-43e8-b3b0-d9a8c0ebaf88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0b2d24a-81e8-4aec-a20d-ba49b2632b23",
        "cursor": {
          "ref": "9f74f87b-432d-4043-968a-d786c017b2ad",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ca7315b3-c82f-4d13-a53e-3a2f9d5a59d6"
        },
        "item": {
          "id": "d0b2d24a-81e8-4aec-a20d-ba49b2632b23",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3236e90e-f7a6-41a2-8840-d981c5d93868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0bc3bb7-fb02-47b8-8cef-70af98c339a5",
        "cursor": {
          "ref": "1d1206a2-d826-4ed6-aaf4-d615858bee57",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c85216bf-6cc1-4c1f-870d-6575a0d1f273"
        },
        "item": {
          "id": "d0bc3bb7-fb02-47b8-8cef-70af98c339a5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e39f7951-1211-424f-9ef6-0d5d0f436821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a0ec11-daec-4970-aa40-75e2bca0bab2",
        "cursor": {
          "ref": "3b264c13-b557-48cb-9366-4342ebf9c95c",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a36e8649-2800-4eb9-8a3c-01acf757533b"
        },
        "item": {
          "id": "92a0ec11-daec-4970-aa40-75e2bca0bab2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0870079d-b20d-4569-977a-74daf1cef1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c44b10cf-6351-45d2-915d-b568f72586d1",
        "cursor": {
          "ref": "72bdcf73-0d69-4467-a7e8-03c468805dd6",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a68ca046-9bac-444b-9275-66d46c1af3bc"
        },
        "item": {
          "id": "c44b10cf-6351-45d2-915d-b568f72586d1",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "5010f7b4-3235-4bc1-96f9-b267d420b494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c301d4d6-b631-4306-bd51-724ed7c43a69",
        "cursor": {
          "ref": "7d806ba0-349e-4732-931b-5abc4c4d7a14",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b1a28cf3-5e28-4cd3-a10c-39fea415468b"
        },
        "item": {
          "id": "c301d4d6-b631-4306-bd51-724ed7c43a69",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "542c5df5-3012-4ba7-8cde-c5774b840ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61cb8d9-9dab-43e7-b7f6-a797ef487a2e",
        "cursor": {
          "ref": "7003d21a-e067-4f20-b750-e661231fef12",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e3777522-dc7f-4799-b722-53c044f77d65"
        },
        "item": {
          "id": "b61cb8d9-9dab-43e7-b7f6-a797ef487a2e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b4fc8a05-6f68-411e-8833-8b6ba57e4c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40bd655c-fa0e-4cae-82e2-8afe85f882af",
        "cursor": {
          "ref": "718787e8-ba8d-4698-98dd-5e546ef76d57",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "97c1f0fa-8423-40e1-83b1-4e5d857fbb84"
        },
        "item": {
          "id": "40bd655c-fa0e-4cae-82e2-8afe85f882af",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bb6b45aa-54f8-403e-bc24-79a672084a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb78b6-11a1-4343-b363-286c177c4474",
        "cursor": {
          "ref": "de8ef0fd-7d3d-4f0c-a618-a6095d39121c",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e70df668-1576-430a-b64d-6babf93ca329"
        },
        "item": {
          "id": "1bbb78b6-11a1-4343-b363-286c177c4474",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "15ce6903-65c2-4a6f-9173-de2dbc90755a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34c1f9a-100b-4231-9c09-f07bf0d6eb69",
        "cursor": {
          "ref": "72e0c6a2-6c27-4132-9bb4-c62dfb36477b",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "26f4df06-0435-43eb-90b0-5cd5c09cb734"
        },
        "item": {
          "id": "a34c1f9a-100b-4231-9c09-f07bf0d6eb69",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d5686787-f612-4713-b94e-f656688a9725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab92e93b-c811-42ba-b03c-74fae2a69bc0",
        "cursor": {
          "ref": "c77b3000-b606-431f-8fe5-bf06f306d613",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8378f46c-cb4f-45f9-9a75-82f89d892b98"
        },
        "item": {
          "id": "ab92e93b-c811-42ba-b03c-74fae2a69bc0",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2b0bda47-1651-4825-b526-11d2582532ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 926,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee51409-5c2f-4a3b-8256-533ed5a6a337",
        "cursor": {
          "ref": "fa9ae233-c196-4971-9f23-9a1194812334",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3c9f0f61-4068-4751-80ee-d74c8ef88f50"
        },
        "item": {
          "id": "8ee51409-5c2f-4a3b-8256-533ed5a6a337",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5295fdd1-7563-4e34-b043-f6f487742037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1039,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cf08ed-1797-4878-964e-97bcbc037108",
        "cursor": {
          "ref": "351fb021-f831-4470-b44f-b383e3f0796c",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a67aa0d0-cffa-48d0-b72a-7040b2350828"
        },
        "item": {
          "id": "86cf08ed-1797-4878-964e-97bcbc037108",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f375e41f-6729-40a3-97ed-31436bc618a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 835,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad6653e-ce6f-4d7a-9b4d-8aaa16d8c042",
        "cursor": {
          "ref": "345d8c3c-66b3-415c-bd8c-fed664774af6",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "77dabfa0-4b7b-4c1f-af49-0a0f217a97da"
        },
        "item": {
          "id": "9ad6653e-ce6f-4d7a-9b4d-8aaa16d8c042",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "453166af-da68-4e88-9ca5-1641a55ab725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 762,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed67920-bfa7-4981-af0d-ec9b07eb2059",
        "cursor": {
          "ref": "d053990f-09d4-4f98-a8b4-3ab4d41c3c28",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3dd4bdb3-cbad-480f-98f4-88a5933f46b0"
        },
        "item": {
          "id": "8ed67920-bfa7-4981-af0d-ec9b07eb2059",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "123e8668-48b8-45cc-bcf9-23a82f2a1cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2aba1b3-a7b3-42ee-864d-378182dae6a6",
        "cursor": {
          "ref": "5652f265-d906-4726-beeb-7b5de3318881",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f8d90ffb-a4b6-43bf-8e89-a33f26138645"
        },
        "item": {
          "id": "d2aba1b3-a7b3-42ee-864d-378182dae6a6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ee81260e-b7b7-475d-9fc2-6d3b3941a8a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c9cf04-ecf6-463b-af36-52bbeeb1e6c7",
        "cursor": {
          "ref": "1c83e270-9e70-4e07-8c38-86fc682281d5",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ce2a9b66-2000-4d9b-a980-b95062d7604c"
        },
        "item": {
          "id": "f1c9cf04-ecf6-463b-af36-52bbeeb1e6c7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "00bc023b-1233-45d7-a0ce-cf1474d4fae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc04b2f-3ec9-41ea-a5aa-6b7ebb191161",
        "cursor": {
          "ref": "76a4c7ba-a474-49df-bd9f-07814d2d0fc5",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "fce3a1ba-783d-47f8-bcf8-c68a40b27dc2"
        },
        "item": {
          "id": "fcc04b2f-3ec9-41ea-a5aa-6b7ebb191161",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "65ec9bc0-4e69-4aec-a839-cb89803ab622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c70ccd-9316-439b-9b81-e4f84519ed5c",
        "cursor": {
          "ref": "17dffc7d-3644-4916-bc6e-ce910cacccc6",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "c2c9ee8a-8a2b-4178-a951-eaca32c9d253"
        },
        "item": {
          "id": "11c70ccd-9316-439b-9b81-e4f84519ed5c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f755cf93-250d-496d-b5fc-cfaa1b944203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c739e911-993f-47e6-acb9-3ddc10ede75f",
        "cursor": {
          "ref": "ddc57506-dc66-4a7e-b0f0-57f685fc3ae5",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "47c48e06-a09f-424d-b471-fe0438e6a1ac"
        },
        "item": {
          "id": "c739e911-993f-47e6-acb9-3ddc10ede75f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8758f4e4-b079-4a72-bfa8-b935f2be664d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4577d5c4-5465-4d6a-b6db-41628b8f7345",
        "cursor": {
          "ref": "ae6247b8-fc17-4884-8bc7-d949ac66f7b6",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9797378d-1e1e-41bd-9159-b3ed6f4b17ad"
        },
        "item": {
          "id": "4577d5c4-5465-4d6a-b6db-41628b8f7345",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9389f3dc-4bc4-43f2-9b9a-b1a015710faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "358d67cb-8ef0-47b0-9241-d0c29975ea86",
        "cursor": {
          "ref": "707b4d3b-834b-4c5a-ae58-39db59cb7195",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "503f79aa-6b84-4b89-88e6-69daf257ff71"
        },
        "item": {
          "id": "358d67cb-8ef0-47b0-9241-d0c29975ea86",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "be01dc6c-6ae9-487f-a801-50e854cb6d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "278fe7ec-90e8-4593-8448-1af3c37d79f0",
        "cursor": {
          "ref": "f45af2df-e8b1-4bc6-ab1d-ab715bbf961e",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c7f4ee0c-6b16-47be-9e20-b502e1d45612"
        },
        "item": {
          "id": "278fe7ec-90e8-4593-8448-1af3c37d79f0",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5f491309-b429-42fc-a483-56a84db938fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ad00fe-6a07-4b9c-b0c3-242670a3def9",
        "cursor": {
          "ref": "296a86cc-f17e-4262-b3a8-9befb2db35e4",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2705158a-988a-4294-bf5a-906017501655"
        },
        "item": {
          "id": "85ad00fe-6a07-4b9c-b0c3-242670a3def9",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f5012b02-4149-4a38-b10a-59c66d805c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0355fb-9416-4a8d-bef8-b32a8293d4b6",
        "cursor": {
          "ref": "06acc42c-9377-49dc-9e7f-43a96cd69253",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "4c1687cd-8574-4d1f-889d-6412bcadf141"
        },
        "item": {
          "id": "bb0355fb-9416-4a8d-bef8-b32a8293d4b6",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "34965866-e72b-4eb7-ad88-7a24a585125d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7fa7194-7b97-494c-95b5-ae437b275864",
        "cursor": {
          "ref": "dea962d6-0f71-43b2-a028-e889b8bcf487",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "be4fb3df-411f-493c-9c4c-727e1f5a2e84"
        },
        "item": {
          "id": "e7fa7194-7b97-494c-95b5-ae437b275864",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "05735626-3245-418d-b5e5-d9509b8d4b64",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 559,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686b2c37-35cb-4533-97a7-70ee1c885024",
        "cursor": {
          "ref": "0fa57d9c-d0f5-455f-a18a-540752d33c45",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "676d1ac3-af11-402c-9cc6-2c8c370fc722"
        },
        "item": {
          "id": "686b2c37-35cb-4533-97a7-70ee1c885024",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fd95d2f9-cffb-4dfc-bef3-54b9818e15c2",
          "status": "Created",
          "code": 201,
          "responseTime": 5900,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "27933ec5-7687-4798-a47d-4502475f1809",
        "cursor": {
          "ref": "2d74aa30-c245-454f-8b13-5d5a42c40940",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1a4db862-d4b0-4afb-9631-274dd52868d1"
        },
        "item": {
          "id": "27933ec5-7687-4798-a47d-4502475f1809",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7ac739ec-8012-4a5c-9125-d21d93329f78",
          "status": "Created",
          "code": 201,
          "responseTime": 4185,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1020f3-f668-4dd8-bb7d-383d54c687f1",
        "cursor": {
          "ref": "ef2abb3d-1021-4c53-be53-026f81dc8262",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ee207074-e57f-4b19-9150-e6deeff0c467"
        },
        "item": {
          "id": "ed1020f3-f668-4dd8-bb7d-383d54c687f1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5e3d7c85-d719-4d8b-80a7-173ca4b430d9",
          "status": "Created",
          "code": 201,
          "responseTime": 6028,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5540139-bd2c-4d91-9412-dbced45cb246",
        "cursor": {
          "ref": "87e1c40d-f233-4cbf-b99f-8147a7d6ec3b",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7a5b14da-c5aa-4f7d-bf75-88ca8700c882"
        },
        "item": {
          "id": "a5540139-bd2c-4d91-9412-dbced45cb246",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "eb3cb827-997d-4e05-8d0e-8e35e9ccfef9",
          "status": "Created",
          "code": 201,
          "responseTime": 4921,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc88e30-806f-4a54-a775-42817b75ace1",
        "cursor": {
          "ref": "26699671-8001-4615-a81c-42e51853eb6a",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ada41be8-e75c-4ddf-a861-ab5269d558d0"
        },
        "item": {
          "id": "ffc88e30-806f-4a54-a775-42817b75ace1",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4fcf28a4-491c-43aa-90ae-353fabe3de36",
          "status": "Created",
          "code": 201,
          "responseTime": 4283,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b71eb9-1b85-4c15-89f2-0025d76f4277",
        "cursor": {
          "ref": "342d4674-8870-4377-b9fd-97c63bdf7ce5",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4971770d-83b4-416e-a98d-cac8de4fe1a2"
        },
        "item": {
          "id": "c3b71eb9-1b85-4c15-89f2-0025d76f4277",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b81cabca-b044-4b5f-a771-0297978eb287",
          "status": "Created",
          "code": 201,
          "responseTime": 5130,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63477359-66b8-49c8-b485-da378197f0c7",
        "cursor": {
          "ref": "c8e6d363-c837-433e-98f7-f73692e4f346",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26f96a6a-e40f-4e47-abeb-eae0cd4be373"
        },
        "item": {
          "id": "63477359-66b8-49c8-b485-da378197f0c7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "918c9532-310b-4160-9f69-d1b97a843af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63477359-66b8-49c8-b485-da378197f0c7",
        "cursor": {
          "ref": "c8e6d363-c837-433e-98f7-f73692e4f346",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "26f96a6a-e40f-4e47-abeb-eae0cd4be373"
        },
        "item": {
          "id": "63477359-66b8-49c8-b485-da378197f0c7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "918c9532-310b-4160-9f69-d1b97a843af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980f5b34-3282-4b82-bf3e-778cfb9d3337",
        "cursor": {
          "ref": "33a145cd-6060-44fb-969a-06e24851bfbe",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "86334fcd-89fb-45c9-a116-71cbae89e658"
        },
        "item": {
          "id": "980f5b34-3282-4b82-bf3e-778cfb9d3337",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e4b86750-04f9-4c6b-a818-7f3aa7e6bb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ef3fde-60b0-4f51-b051-1d5c8c19d8be",
        "cursor": {
          "ref": "2663496b-692a-4b2d-bd29-b76a46783c63",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f7c78290-a51e-47ab-944e-ff44fa1a6b8e"
        },
        "item": {
          "id": "87ef3fde-60b0-4f51-b051-1d5c8c19d8be",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "05029219-85ec-4f77-92bb-b8a22ddc4c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa00c14-bd5f-4bd8-9180-f7649aec6803",
        "cursor": {
          "ref": "d0aa15bf-33e5-478d-8c6a-f2024e3d31c5",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "aeaf0da9-bb54-4417-ad45-2f6419716e90"
        },
        "item": {
          "id": "dfa00c14-bd5f-4bd8-9180-f7649aec6803",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a6b1e435-a0df-4559-b029-435b67f3ccc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a116b8-3d98-4d5c-89bf-48fd81a8b040",
        "cursor": {
          "ref": "aceef7ce-6ce7-43e5-b91f-663217d716f5",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6ccb7089-1331-4512-8009-306beaf9ccd0"
        },
        "item": {
          "id": "49a116b8-3d98-4d5c-89bf-48fd81a8b040",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e4ec8b9c-5ed9-4d64-a2cd-a1372e488da2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c41593a-f3f0-40e2-a7c1-0fedc27e44be",
        "cursor": {
          "ref": "f631b8af-fc10-4ff2-8c90-dbcd093e3644",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "64200fa2-6e44-43bf-bacd-4cc0cab8bb53"
        },
        "item": {
          "id": "2c41593a-f3f0-40e2-a7c1-0fedc27e44be",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9fb18f56-cf64-4757-a147-122a4f4441fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3447951d-66e0-490f-9bd9-91a0711106ea",
        "cursor": {
          "ref": "686a0791-17ce-4a40-b6d3-3177727d6f03",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6b3b27df-042f-42bb-a9f4-4799e12e4a18"
        },
        "item": {
          "id": "3447951d-66e0-490f-9bd9-91a0711106ea",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7cfd069e-ab14-4b28-b674-e9a2ac6321f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65464756-fa73-4cf5-85a5-8f8c3e4968d5",
        "cursor": {
          "ref": "f5be64ac-11a4-451d-9f1a-8c92f4d41f1c",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f0071626-324c-419b-950c-539dd1ffa77c"
        },
        "item": {
          "id": "65464756-fa73-4cf5-85a5-8f8c3e4968d5",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "3536d893-3b09-4553-9c7b-f9b959556742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5e83e37-5340-4e25-b4dc-2c36ec5f170d",
        "cursor": {
          "ref": "55bba348-d231-4281-afc7-3bb6481c50db",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b275b3f9-57d6-4666-9c7f-6db7a7b83bc9"
        },
        "item": {
          "id": "c5e83e37-5340-4e25-b4dc-2c36ec5f170d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "89dca55a-a124-4218-b457-8ee6270d0131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dc8d99-71f7-4359-a8bb-e24ee0dfc1b6",
        "cursor": {
          "ref": "8c7c2864-e25b-4823-a258-96bc7d169c10",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "01eda155-e7c8-4547-9402-36b02e5c0af7"
        },
        "item": {
          "id": "96dc8d99-71f7-4359-a8bb-e24ee0dfc1b6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b4456d1e-59d2-49b3-a367-fe51e784cb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bee5fa-5a10-4568-9085-d2911b7a271c",
        "cursor": {
          "ref": "e1286fe9-c5fb-4489-a068-d9040c4a4e89",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7a72d6ae-a19a-45d9-b032-0094ef8acb66"
        },
        "item": {
          "id": "f2bee5fa-5a10-4568-9085-d2911b7a271c",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3d04128c-12c7-4c27-8201-65f4569d0fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3e1354-5d9f-4806-a6a1-dd781f14a940",
        "cursor": {
          "ref": "dd6d250a-5256-433a-ac9e-b5fa13f08aef",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dc3cba7b-b704-4858-a254-2dbc650cd29f"
        },
        "item": {
          "id": "3b3e1354-5d9f-4806-a6a1-dd781f14a940",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "497c8838-65a7-47ce-b5a5-22d58a445492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2939d28c-a240-49b9-b797-eb7fa8238f02",
        "cursor": {
          "ref": "0ec06ea2-e761-4e72-9f1f-311149ddd1d1",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bd7b3bee-3b15-4522-b503-197eb94c7b21"
        },
        "item": {
          "id": "2939d28c-a240-49b9-b797-eb7fa8238f02",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2b473bee-7d94-44ec-9519-bc9b33b36a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2098524d-fadb-4f9f-a2d4-cd81ddbe25a3",
        "cursor": {
          "ref": "05b628b1-d8a1-46c4-83ea-e2e0a4c81c1b",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "23620963-5e6a-4f9a-977a-e7bbec2b7234"
        },
        "item": {
          "id": "2098524d-fadb-4f9f-a2d4-cd81ddbe25a3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e14cd555-90d4-4b86-8c99-9b462c455990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfef8201-15a5-40a7-ad6e-72a003c8bf4e",
        "cursor": {
          "ref": "6a4d1a7d-2b2e-4925-9d1e-11234855770f",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f6c65456-ebfc-4741-892e-755f1e58032d"
        },
        "item": {
          "id": "cfef8201-15a5-40a7-ad6e-72a003c8bf4e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "63ba47a5-da86-4e69-b4ca-d33cb9f1cf7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3640c7-fc95-4c3f-845e-d572c589a778",
        "cursor": {
          "ref": "e5160d41-cde0-4389-a7ab-6d45a9df2591",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a7425ad1-5458-44b5-af06-97f142b2eea1"
        },
        "item": {
          "id": "6c3640c7-fc95-4c3f-845e-d572c589a778",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6c603d6b-afe4-4be1-bf85-014d82047988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc00547d-0b49-43aa-bc64-6d9013a4dbef",
        "cursor": {
          "ref": "68aec0c6-a6b7-45c0-8954-01d94ab7436d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4e246673-1bb3-466f-be86-4882c42f3d75"
        },
        "item": {
          "id": "cc00547d-0b49-43aa-bc64-6d9013a4dbef",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c5525ba1-b960-4889-a823-3204efde87c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a06614a-49b0-4e12-8db9-b59824a45cc2",
        "cursor": {
          "ref": "5faace78-51e7-444b-b33c-87041afa3ced",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0957f9b1-e147-4ab7-9c4e-a114dfe9e803"
        },
        "item": {
          "id": "9a06614a-49b0-4e12-8db9-b59824a45cc2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "91e10203-0944-4674-8c55-eeb0e5b421ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb713e8-492c-453c-a513-1a2d88566a35",
        "cursor": {
          "ref": "b44606b0-849b-4e5a-9c41-4db4e502f5b1",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "65e41ec1-9e4a-4513-8acd-7bfed5acabe2"
        },
        "item": {
          "id": "3cb713e8-492c-453c-a513-1a2d88566a35",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9045ed77-0a9a-4287-a31e-4bf06678cc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea5d5e9-babe-41ba-8640-f8bd0766da8a",
        "cursor": {
          "ref": "36548bd7-b9ad-4821-99cf-f31f637e4476",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "09559236-7eb2-41b5-bfad-94ec8623e169"
        },
        "item": {
          "id": "6ea5d5e9-babe-41ba-8640-f8bd0766da8a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4a306bf7-4495-4d94-b68a-95861d0a390c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "763a9ce2-f701-4719-bf91-f54220860239",
        "cursor": {
          "ref": "0551b7d0-141e-4a68-9a83-00acdac7cd8d",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "79e329d5-7327-4f73-8ae7-9aed4a7a4a15"
        },
        "item": {
          "id": "763a9ce2-f701-4719-bf91-f54220860239",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11f96e26-191e-4615-903e-1a46551108d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fc5937-1c4f-4705-accc-0c8e20758e37",
        "cursor": {
          "ref": "259b1bf4-62a8-4fe0-985a-651a4dd717be",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5888e1ea-bca5-44da-b0a9-1c4dfa215e26"
        },
        "item": {
          "id": "a8fc5937-1c4f-4705-accc-0c8e20758e37",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ec59586f-0e9f-4d6c-b16b-cee8019d0b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371ff687-4d88-4c50-a19a-cb48d995d52c",
        "cursor": {
          "ref": "658a536a-8ee4-479f-b826-57725003c593",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "77245136-fd19-4c64-b7d2-d7797b5743a2"
        },
        "item": {
          "id": "371ff687-4d88-4c50-a19a-cb48d995d52c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9eedd3a3-51e9-405e-a90f-a20964360eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a55b3e4-582b-48eb-97aa-e09b743954eb",
        "cursor": {
          "ref": "31889826-6d5f-4db7-be87-e69ff39b34c6",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "084e88c2-9dc7-420c-82bc-a8872ac70bd7"
        },
        "item": {
          "id": "4a55b3e4-582b-48eb-97aa-e09b743954eb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1ca4136a-4005-45f6-9671-8d13df155d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea18100-4b83-4ff8-adcb-9b4b0f5abe18",
        "cursor": {
          "ref": "509b2214-2b70-46a6-b2b8-4590fc50e4ed",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b1d0d197-fc06-406b-b29b-cf9a9c7f9be4"
        },
        "item": {
          "id": "9ea18100-4b83-4ff8-adcb-9b4b0f5abe18",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9310e11b-c36e-4568-81d3-a785ed462561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56851e62-ce2b-4bb8-9fc1-fd522f2e3103",
        "cursor": {
          "ref": "3f71808c-4067-40b0-af0c-2e365cdb8314",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "fabd99ae-310e-4b07-a755-1b43b37f19fd"
        },
        "item": {
          "id": "56851e62-ce2b-4bb8-9fc1-fd522f2e3103",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d591a9cf-b5bb-4168-a0ad-cf45b2d90adc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015a414c-411c-47d6-98c4-262912b8ef77",
        "cursor": {
          "ref": "3193743c-056c-4bea-a579-dad1be1439a2",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "234090a0-2609-4c5d-b88a-f092bc495754"
        },
        "item": {
          "id": "015a414c-411c-47d6-98c4-262912b8ef77",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "396190b4-ca67-4e4e-8318-3f4164b86f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332d5c94-ae90-4b91-a996-d958f853fb7d",
        "cursor": {
          "ref": "cb0bd2ef-7601-4792-8815-d0a78109f815",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f0920551-3857-45d7-aad6-d5bc1100b9c8"
        },
        "item": {
          "id": "332d5c94-ae90-4b91-a996-d958f853fb7d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "52f85510-0690-4b7e-8769-9192fe8b7cc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 930,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7b3897-798f-4e6b-8981-072cef10395b",
        "cursor": {
          "ref": "f003f381-cadb-4c15-bfc2-7ab370b0ec36",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7e869463-5fe9-45f4-b6bf-4d3500b02554"
        },
        "item": {
          "id": "7d7b3897-798f-4e6b-8981-072cef10395b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "572b2838-c82b-45de-a7e3-92f6bbfa4177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 849,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69010372-26ae-448a-a1e4-85e2919b3c39",
        "cursor": {
          "ref": "3c6d3653-be31-472a-8474-141042865bc5",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9eeecbff-0d19-4abb-8b9b-0b421eadb742"
        },
        "item": {
          "id": "69010372-26ae-448a-a1e4-85e2919b3c39",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "72a5b69e-7235-4caf-b84f-ef32fa61d88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1037,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69382579-b450-4194-817d-a36829af63bc",
        "cursor": {
          "ref": "b29b48c4-a0df-4a3e-98f4-5a2868fd46cc",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5619f2e9-20ad-4c7f-a10e-d94ffdaf6cd1"
        },
        "item": {
          "id": "69382579-b450-4194-817d-a36829af63bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5b0260b5-6ccc-4cbd-97a6-ccad268a5203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 886,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6877ecf3-d4d4-47dd-b1db-25d3ae112d4d",
        "cursor": {
          "ref": "769a1bdc-d692-40fc-9be1-b6dd7cfa36c2",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "23311eff-d3ef-4049-9972-1ec327c3e528"
        },
        "item": {
          "id": "6877ecf3-d4d4-47dd-b1db-25d3ae112d4d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f5768871-dce5-468d-864b-8cb100b68eab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bbbdba-4915-41bc-bbc0-3e97068b4198",
        "cursor": {
          "ref": "6ee93a99-b075-4ac1-ac7c-1839c632ae62",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2c3842c7-01df-4b0d-ada1-2f2c3ddaa638"
        },
        "item": {
          "id": "43bbbdba-4915-41bc-bbc0-3e97068b4198",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3a9284cf-ca07-4de1-b7c3-398b53de4faa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d154dfe2-31e2-4961-8242-b8678a0b0516",
        "cursor": {
          "ref": "44882158-ed9f-441a-aef5-4d0c53fdcc4c",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9a486f18-7e10-4d80-8f4d-c348f1a56581"
        },
        "item": {
          "id": "d154dfe2-31e2-4961-8242-b8678a0b0516",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e0822508-aa89-451d-b9bc-1d9dee5ddde3",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 538,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166df358-f0b9-4e02-8255-c8cac8843eda",
        "cursor": {
          "ref": "1242351b-2a6f-4f2e-b52f-62912201c7b5",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c1530111-d381-416d-9e5e-8abca776f9bd"
        },
        "item": {
          "id": "166df358-f0b9-4e02-8255-c8cac8843eda",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3fc534fd-57b6-49c3-8e11-45ea7adab2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166df358-f0b9-4e02-8255-c8cac8843eda",
        "cursor": {
          "ref": "1242351b-2a6f-4f2e-b52f-62912201c7b5",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "c1530111-d381-416d-9e5e-8abca776f9bd"
        },
        "item": {
          "id": "166df358-f0b9-4e02-8255-c8cac8843eda",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3fc534fd-57b6-49c3-8e11-45ea7adab2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e6c711-27b5-444e-8ef8-a898364d2646",
        "cursor": {
          "ref": "b5f2d93e-ea98-4b2e-bb81-462136ede337",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7dda8a50-d8d4-426e-84f4-cfacb486aac0"
        },
        "item": {
          "id": "51e6c711-27b5-444e-8ef8-a898364d2646",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "46d41673-48d2-4e17-9d28-9a588406b82a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9632ce-e75c-4a96-96d6-7d5f7bf201bf",
        "cursor": {
          "ref": "8fe7d64d-f990-4e80-8802-9eb0385fe09f",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d31147b6-0858-4f15-938e-e0e9842e5409"
        },
        "item": {
          "id": "ea9632ce-e75c-4a96-96d6-7d5f7bf201bf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "bbb9a5f3-73ee-480c-bd58-97580130bf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e97d06f-c9e3-43ca-b4d4-d9100b12741b",
        "cursor": {
          "ref": "624b50a2-f1ae-4c29-bb2d-82c55dce25ea",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4107d34c-9ab9-42fe-926c-5fc7df7ecfe1"
        },
        "item": {
          "id": "8e97d06f-c9e3-43ca-b4d4-d9100b12741b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7814efab-5439-4f8b-9764-e5ecebf16a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e19354c5-5100-4d26-971e-735fe885b5fb",
        "cursor": {
          "ref": "15b0cfa6-c9db-457a-8de0-de47f1b18508",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "cdd821c7-b92a-423c-bbae-1bfa3133b869"
        },
        "item": {
          "id": "e19354c5-5100-4d26-971e-735fe885b5fb",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "639b0696-ba9b-48e9-ae28-fbcf4fb8ea70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 421,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72198f4-2052-47ad-ba4f-0e2fa3b0fdbd",
        "cursor": {
          "ref": "ddb353b7-ce1d-4e12-aa6d-8c0407cab485",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ddbf2a65-c0a5-4732-aa9c-02aa52c52e9f"
        },
        "item": {
          "id": "a72198f4-2052-47ad-ba4f-0e2fa3b0fdbd",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c758501e-c258-4d0a-b473-34c7760ad914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b739c47-11bc-4604-b7f1-e2957581b0ac",
        "cursor": {
          "ref": "7ba04a14-c27a-4165-9074-4654b44c6857",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "39e217f9-bae0-432d-921c-c85846b8a903"
        },
        "item": {
          "id": "1b739c47-11bc-4604-b7f1-e2957581b0ac",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4ade309a-0729-488c-9b52-f4d5bf3e7381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c67fa7-2323-4878-a446-1cf29afdb3df",
        "cursor": {
          "ref": "c6d70641-ee39-45a4-97ab-cf476b3fdc18",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "b177d79f-8650-4608-906e-ec7dbde301b7"
        },
        "item": {
          "id": "c1c67fa7-2323-4878-a446-1cf29afdb3df",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ab1e1a84-f4bc-4781-acda-c77e2ea89fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e3bf5ff-6c29-476b-a7e8-e64f6a0cdbcc",
        "cursor": {
          "ref": "67836e41-43d8-4365-8d66-60682bbc6cf8",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ba97f978-d827-4869-9f91-1a923d3afe30"
        },
        "item": {
          "id": "4e3bf5ff-6c29-476b-a7e8-e64f6a0cdbcc",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "74aea74a-f92a-4e9f-a4aa-aa45f263fa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207fdaa4-4a47-4625-8c8e-20b3c8c8f31b",
        "cursor": {
          "ref": "9da43433-7bfe-4c19-9221-5d912b9dc4fb",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8036b480-9282-4982-986b-63db5a574bd0"
        },
        "item": {
          "id": "207fdaa4-4a47-4625-8c8e-20b3c8c8f31b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1f2e3bac-f926-43c7-90b3-01614babb2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b84ae57-67f4-43c6-912b-37e90cf8c58f",
        "cursor": {
          "ref": "0ac0e961-76fe-4db8-ae23-79e8f9bb0abf",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "70848f04-05ba-4c28-bfc9-25e596108f17"
        },
        "item": {
          "id": "2b84ae57-67f4-43c6-912b-37e90cf8c58f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2cae62cd-de25-4aec-942e-f705add858ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9287fd64-5008-4ae6-a42f-da5465f2fb49",
        "cursor": {
          "ref": "4902a5f3-dde7-4ed9-bf34-1bfcb773533a",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9445f293-de5c-4956-bc23-aaab75e29c4a"
        },
        "item": {
          "id": "9287fd64-5008-4ae6-a42f-da5465f2fb49",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c0f9213e-b40c-4f06-ada4-931366fba6ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3f451d-7184-4071-a71c-6a956e61400d",
        "cursor": {
          "ref": "1ae77df0-16ae-4d23-8d23-7b2a43772654",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "387aa08e-a7e3-4793-b3cf-3d57e9f833f1"
        },
        "item": {
          "id": "cf3f451d-7184-4071-a71c-6a956e61400d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c56dbb93-a33a-4b10-90cd-e35b91dea220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3015d52-d465-4574-9530-12042ba1d762",
        "cursor": {
          "ref": "a86c80c6-11de-4624-a674-db87ef65e944",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ca217c12-0371-41cd-a51d-dec23d5f242b"
        },
        "item": {
          "id": "a3015d52-d465-4574-9530-12042ba1d762",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "691c521e-b6b1-4c3b-a1fc-3f45452e3f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a29e290-c21e-465e-9c17-55597374c392",
        "cursor": {
          "ref": "634f2638-b50c-4bf6-834d-37c94362cc41",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2a64c51e-0731-4370-8411-5c686ec161ab"
        },
        "item": {
          "id": "6a29e290-c21e-465e-9c17-55597374c392",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "49c0819c-1d86-4c80-9871-8d7ce3a100f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab25d559-1970-42cf-8ce6-cdb45fced750",
        "cursor": {
          "ref": "3c4bbb81-30be-40d0-a028-abf51f266e0d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "56e6b92f-e92b-4ab2-86ef-1c5dd5399ca3"
        },
        "item": {
          "id": "ab25d559-1970-42cf-8ce6-cdb45fced750",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "341809b7-c1aa-48d8-8c65-4f5aee410409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc60e89e-7506-42d3-8132-5ae4e3f2b0bb",
        "cursor": {
          "ref": "87f525cb-76a1-418a-b4ed-9cbb1a1a3570",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f629e88f-e094-4d2b-b312-953d6031f534"
        },
        "item": {
          "id": "bc60e89e-7506-42d3-8132-5ae4e3f2b0bb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "bb6ec752-c6ff-4842-9d81-509a6bae1691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982bd790-02b8-4a56-9de9-2b4efecdaaa9",
        "cursor": {
          "ref": "09ab15c6-1eab-4a32-86a0-2510823f1d61",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "476d96e8-0e08-4bf4-8533-767db6ed1fa5"
        },
        "item": {
          "id": "982bd790-02b8-4a56-9de9-2b4efecdaaa9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "44761b64-c7e6-4410-9a46-c811bb961154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 445,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328a3aa9-c7b2-4dce-938c-b31e10f3a4ab",
        "cursor": {
          "ref": "de300759-c5e3-434b-b5cb-8034ed40f438",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "411e636d-af19-41b6-bd43-bcb8c07f368c"
        },
        "item": {
          "id": "328a3aa9-c7b2-4dce-938c-b31e10f3a4ab",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "daf707a9-8e48-48c8-8c08-4593bf519ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc4e43c-3a96-4176-9cad-caa8b18f4d9b",
        "cursor": {
          "ref": "a116b965-42f6-4b53-8ccd-dd9f81a65ac4",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fe1546be-b188-4cb0-8bf4-95fed1a3cd55"
        },
        "item": {
          "id": "fcc4e43c-3a96-4176-9cad-caa8b18f4d9b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "57a8a01f-09a4-4bc7-bf56-ca3eb1b9a3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 658,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adc89dd-356e-4bca-8b30-7134f2f09642",
        "cursor": {
          "ref": "008422e2-2abe-4883-9fc6-3ac2434322a2",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a919962e-67f5-46c9-81ef-f1b73445cd6b"
        },
        "item": {
          "id": "3adc89dd-356e-4bca-8b30-7134f2f09642",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "25cde263-17ce-44b0-9a71-699a9232431c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1462,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929a083c-49c5-42f2-8cda-0ef462fd1562",
        "cursor": {
          "ref": "500c1f36-fd01-4dca-b14f-55f3ee4d36cc",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "88a56f9d-d849-4cf8-b90d-8a6fc8e7f2d1"
        },
        "item": {
          "id": "929a083c-49c5-42f2-8cda-0ef462fd1562",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0a3e726a-827a-4b59-8b2b-20b399fc1fa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 957,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62086bae-4321-423f-8315-718d6f3b4687",
        "cursor": {
          "ref": "f5664c75-65f4-4052-9e38-1ed62623a602",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "36312e13-16a9-439e-a831-c9d84c347a17"
        },
        "item": {
          "id": "62086bae-4321-423f-8315-718d6f3b4687",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "77a5c44b-6e08-452e-ad45-bfa44d84120a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1163,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bdea30-c069-4f1d-be8a-a6990a60eb1d",
        "cursor": {
          "ref": "3f926546-8c69-4250-bb9b-e38688eb9981",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ab928cff-b219-4a86-a5de-aad1b21c38de"
        },
        "item": {
          "id": "53bdea30-c069-4f1d-be8a-a6990a60eb1d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c06420ab-ae15-4f99-81b8-6285ecd510b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1352cfd1-0388-49b1-ac7a-1a643015bb36",
        "cursor": {
          "ref": "cc3325d2-6a06-4200-a201-344ae24454e2",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3def9f54-c179-46c1-94b5-698cd3697861"
        },
        "item": {
          "id": "1352cfd1-0388-49b1-ac7a-1a643015bb36",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "124d2c43-ef25-4a51-bf8a-6db2166bb816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17de7695-05c1-4dc9-b384-828ed060838a",
        "cursor": {
          "ref": "96a0d9a7-06eb-44cf-8268-6e7b2438bd7f",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "071b8d3d-f280-4aeb-ace1-3c4d160ca1ab"
        },
        "item": {
          "id": "17de7695-05c1-4dc9-b384-828ed060838a",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1f600cdb-6a33-4070-b816-afae6dcae6c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee70fbc-5280-49a4-abc0-387c2f985751",
        "cursor": {
          "ref": "def16b3e-b1f1-4b15-964a-3203b771446f",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "08b5d23c-6fc8-437c-9a34-49e21d9a0451"
        },
        "item": {
          "id": "2ee70fbc-5280-49a4-abc0-387c2f985751",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "40759312-d788-44dd-934b-fcf3a7d2fc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 502,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07c7daf-aa15-4e1d-aa5d-fd1312ad05d6",
        "cursor": {
          "ref": "d4312052-71d0-4e49-bd6b-3beee3faf5b7",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "42a71ad5-7ab7-4017-869e-5af7d9a7425b"
        },
        "item": {
          "id": "c07c7daf-aa15-4e1d-aa5d-fd1312ad05d6",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "48004c2a-553a-49b3-a797-fba90ef2a232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbbe0a5-304a-4eec-96da-2e35300b7b50",
        "cursor": {
          "ref": "82bd1ac4-39c0-482b-85fa-8cbdefeedafc",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d2f08751-eb69-4046-b180-7dae18bbc60f"
        },
        "item": {
          "id": "acbbe0a5-304a-4eec-96da-2e35300b7b50",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8a6b8f08-3ff8-4f5d-8eb1-fde1c03ca0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d27d8c-5a60-4ff5-a7da-c2da58ad74c6",
        "cursor": {
          "ref": "a027f946-03b3-43b9-9aa6-97db49e9c48c",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "974d0e3c-f52c-41b2-a9fc-dd00bc0e5da7"
        },
        "item": {
          "id": "64d27d8c-5a60-4ff5-a7da-c2da58ad74c6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "30fd6550-b7d0-4724-9fa4-2dfb2e41670e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e824ac07-c13d-4cda-8d53-c3c31f608377",
        "cursor": {
          "ref": "e6bab1ef-51a9-4d5a-ba6a-5a83128ba94f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "bf769469-36b7-4675-a584-f05daa652146"
        },
        "item": {
          "id": "e824ac07-c13d-4cda-8d53-c3c31f608377",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1ab02e28-efb6-4a4b-a03b-852bcaf778d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 426,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e536bf2-3fe1-44c9-bd93-68d604ffbe7b",
        "cursor": {
          "ref": "eb45a622-70ec-4cce-a1e0-cc46400d0f4c",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "a3c19e82-50df-4ea1-b0d7-f773643fd670"
        },
        "item": {
          "id": "6e536bf2-3fe1-44c9-bd93-68d604ffbe7b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "98caf65b-10ae-4756-831b-e05e747ab451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b076255c-5472-4c5b-ab9a-1fc0d9c5aa5d",
        "cursor": {
          "ref": "80612e76-a969-44e6-b3c4-45ff29234195",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9ac66a70-7003-477c-950d-90ed390fc188"
        },
        "item": {
          "id": "b076255c-5472-4c5b-ab9a-1fc0d9c5aa5d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "54d200ac-cbee-4d9d-a674-331348b96c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ad9bc9-35ef-40b4-b698-514d1e6e8f3d",
        "cursor": {
          "ref": "60a1417d-c888-4d6f-941f-833db861312b",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "7d97e3cd-8f6f-4999-b423-dc4e94cd7fd4"
        },
        "item": {
          "id": "35ad9bc9-35ef-40b4-b698-514d1e6e8f3d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "af564125-107f-40a0-8b17-ec2d19cfffc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4a28d2-5e73-4a60-a1b9-6a32aff67be7",
        "cursor": {
          "ref": "fc679c6e-ce99-47d6-890b-5f92b83f8b7a",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "79a977d5-d99a-4663-bba3-a601770475cc"
        },
        "item": {
          "id": "5e4a28d2-5e73-4a60-a1b9-6a32aff67be7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ac7a555e-b2f4-4595-9f63-760e1326b433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f271a688-fd86-4d09-91da-363cdf062ee9",
        "cursor": {
          "ref": "f004ab78-8753-4050-bc18-22b6b715f93a",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5cd13c27-d7e5-4c6c-9677-2b6c39f62bdb"
        },
        "item": {
          "id": "f271a688-fd86-4d09-91da-363cdf062ee9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "13b8cda3-90bc-469c-bf73-f7ba517f57c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eee3873-bee0-4ed9-86e8-309f37b36ef3",
        "cursor": {
          "ref": "c4a0c205-e063-4cca-a0de-122be9fc17e5",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "829c815b-e4da-440d-9579-e2e0937ab3c9"
        },
        "item": {
          "id": "2eee3873-bee0-4ed9-86e8-309f37b36ef3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "795f9aec-2688-4c25-9498-66c7e74a17f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa3ebee2-51a1-4c09-8b1f-de605045b574",
        "cursor": {
          "ref": "b9af1d19-eefd-4ac9-95f9-1d17fcc68a95",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "54ba6ef0-2e8f-4082-8b3b-4c5c79256a68"
        },
        "item": {
          "id": "fa3ebee2-51a1-4c09-8b1f-de605045b574",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "71769f1c-21bf-4f8e-8aad-337b103d5635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94130356-2fd9-456c-97ad-64b20265fe77",
        "cursor": {
          "ref": "1e537fd7-11cb-4c83-9ad4-5cc38a767e4b",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c0d17dfa-0d81-4d93-b9ec-a262d3abcad7"
        },
        "item": {
          "id": "94130356-2fd9-456c-97ad-64b20265fe77",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "25241682-9485-40f3-8604-5c730a072a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7dc33b-88e5-4776-92e3-6e56ffeb59c4",
        "cursor": {
          "ref": "55500d04-e954-490f-8c91-c1af239094a6",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8d091e76-4682-4541-be35-9e1aeefa55b0"
        },
        "item": {
          "id": "8e7dc33b-88e5-4776-92e3-6e56ffeb59c4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "abdeb2f9-5518-4312-b756-01f94d89a62a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fe063a-9628-4b56-a79c-d9c415e39727",
        "cursor": {
          "ref": "67ec62d5-3d83-45b3-90b8-d5fbfa9bcc9b",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b03f5617-1a12-4912-b5f3-925c5261ee29"
        },
        "item": {
          "id": "03fe063a-9628-4b56-a79c-d9c415e39727",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e5803df6-b5de-4702-99af-f9a88205d2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d6bce1-b02b-4fbe-82c0-ec9c273b3f8c",
        "cursor": {
          "ref": "a8f2f8de-a325-4269-bdf0-a9e9da431be2",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5c9e9fb4-5626-43dd-b1f8-a08936a63442"
        },
        "item": {
          "id": "83d6bce1-b02b-4fbe-82c0-ec9c273b3f8c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "25088007-6ef8-4942-9cbe-100359638833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81bffcb4-9055-4b64-b8c3-986ab546d33f",
        "cursor": {
          "ref": "6b651353-90b5-41a1-8081-7b8373ae9771",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cc1785cc-c27c-4181-bb7f-0cd9d5512276"
        },
        "item": {
          "id": "81bffcb4-9055-4b64-b8c3-986ab546d33f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "45a5c4f8-b9d5-4065-8d69-202260b2c2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5176593-8234-4c7a-91a1-65ca47d49b83",
        "cursor": {
          "ref": "1616af3f-af44-4457-a64a-16c3122aa21f",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7fbbb47d-5dfc-4542-a96c-7a0891e7a52d"
        },
        "item": {
          "id": "d5176593-8234-4c7a-91a1-65ca47d49b83",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "66ddb56c-ed2a-4d85-8c76-2f1197d4693b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9292baa6-754f-45e5-9ea7-b9e2b10be22a",
        "cursor": {
          "ref": "ac583ee6-c77d-4764-ab85-661ad11299d7",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4e29f88c-4079-4920-9101-ad35603bbf16"
        },
        "item": {
          "id": "9292baa6-754f-45e5-9ea7-b9e2b10be22a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "1531897b-7a5f-4bd5-920f-b2c03a166583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "002a4693-ff47-42b6-afd8-019a8493d1b7",
        "cursor": {
          "ref": "c3fa07f4-2ed7-4863-ac43-6127f1005c3a",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f997c928-e4c1-4f71-af6a-0327e22867da"
        },
        "item": {
          "id": "002a4693-ff47-42b6-afd8-019a8493d1b7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "91ec318c-806d-4a98-bfa0-5232fa934d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50593a82-6828-4ba3-ae77-1c4e2e13bedb",
        "cursor": {
          "ref": "c09c926e-4056-498b-9dd2-62a2a8a818f6",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "473d1e19-13ab-43cf-81a9-ddb616287a32"
        },
        "item": {
          "id": "50593a82-6828-4ba3-ae77-1c4e2e13bedb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f3a551c7-786d-437f-bc7a-630eb14f6181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ba40a7-4fa9-4302-af55-5c00d8c7bb40",
        "cursor": {
          "ref": "3e565da0-d2f4-4524-8876-1c7ca12751f6",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b40af0be-737b-4f50-81ce-fa58cb6fa0ca"
        },
        "item": {
          "id": "80ba40a7-4fa9-4302-af55-5c00d8c7bb40",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "491ec166-223e-46fd-b4c7-520bc5f69c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507da610-e8cd-42fb-b1ee-1cbac1085794",
        "cursor": {
          "ref": "fdd5663c-527c-4854-9c05-ea4350b33f43",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1dc8ffac-0291-4930-91cc-2183dc9afd92"
        },
        "item": {
          "id": "507da610-e8cd-42fb-b1ee-1cbac1085794",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e8105743-b7d4-4794-a2ad-cf11aa3419cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabb1087-f0fb-4d61-b1d1-1fe9d899c6b9",
        "cursor": {
          "ref": "9e6384de-a5da-4ae3-b4bb-df64b2899e93",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0fcfc9f1-7ffe-425c-b89f-eff0ad8d47c5"
        },
        "item": {
          "id": "dabb1087-f0fb-4d61-b1d1-1fe9d899c6b9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e842104b-4acc-46b8-8164-60423e501f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71494c6d-740c-45af-9d15-7e805f156adc",
        "cursor": {
          "ref": "59d26965-6d94-4f81-9d7b-319360b80ce8",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "1e83b145-eab7-4aca-adc8-d37e2d342f7c"
        },
        "item": {
          "id": "71494c6d-740c-45af-9d15-7e805f156adc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "359852e3-11e0-41d6-a86d-86b358396631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa656011-094f-4bdb-8dd6-ecaa306a8c41",
        "cursor": {
          "ref": "c5782d6a-c4a6-44a8-95fe-41c647e93f60",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2d4ba6f2-25e2-4ca3-b2f5-a22655cf2fca"
        },
        "item": {
          "id": "fa656011-094f-4bdb-8dd6-ecaa306a8c41",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e59c4587-b7ea-4046-ae23-e655ef02e201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e50f98-11ef-44d1-ac0d-69904964543f",
        "cursor": {
          "ref": "711ba84e-a367-4770-ad81-6a4c0d5ba295",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8bc8ba8c-05f4-4807-bda1-bba7586b036d"
        },
        "item": {
          "id": "e5e50f98-11ef-44d1-ac0d-69904964543f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "906e65ad-c6fa-4336-abe3-1485ed717c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61382d6-2f6d-4a99-9cdf-17b3238f89f0",
        "cursor": {
          "ref": "bdee3bc2-c831-43ec-8eb3-65cc4a5b7e50",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2e8b46c4-863d-483d-a3ff-2a99fab865e7"
        },
        "item": {
          "id": "a61382d6-2f6d-4a99-9cdf-17b3238f89f0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "eef6ac4a-4f5f-40d9-b056-7403f22b4b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e987665-3ca9-47d7-9189-965d16ac3ab2",
        "cursor": {
          "ref": "d526ff8c-bd06-450a-8342-e8d6defb79fc",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "06e53fc5-f862-4461-9cc3-23e544ba229d"
        },
        "item": {
          "id": "2e987665-3ca9-47d7-9189-965d16ac3ab2",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c67c5c5a-8305-47c7-8778-5711d25b15cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69eddf57-4fa8-4112-a223-127cef74fe0e",
        "cursor": {
          "ref": "25b42a02-775c-4f1a-b6f9-ded1dfd2d6fd",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "44a515dc-7254-4d7a-86fa-fd318f46183a"
        },
        "item": {
          "id": "69eddf57-4fa8-4112-a223-127cef74fe0e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3672e12d-2ddd-4ae5-a012-d8e25672c333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 395,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6941410d-f0ae-48f4-b0a3-50db44307d7d",
        "cursor": {
          "ref": "e600fafc-391e-4744-a1ec-f0ad38bbb023",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f8bdd98c-4a1c-4e5b-950e-0846a504fd49"
        },
        "item": {
          "id": "6941410d-f0ae-48f4-b0a3-50db44307d7d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5a7cee6c-dd86-45b4-94fb-be1cda0f4403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29d005a-9382-41d5-b959-6aee2e2be533",
        "cursor": {
          "ref": "2fe89df5-78fe-4660-95f0-1b39218f004d",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8c629880-3e03-47b2-bce7-f97a3e1b3f05"
        },
        "item": {
          "id": "f29d005a-9382-41d5-b959-6aee2e2be533",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ed4edc75-e9fb-42c2-83df-1b99889abee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90475f8-91d5-4fda-be89-d2c5824e8835",
        "cursor": {
          "ref": "3e047f3b-fc90-4309-8981-c500e64ec40a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "99ac9e79-ef05-45f0-92e1-1e9831316693"
        },
        "item": {
          "id": "b90475f8-91d5-4fda-be89-d2c5824e8835",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "6d543f89-e818-4afc-96ab-e35ae5dffe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0dca8d-3684-424c-9629-82bbc209e984",
        "cursor": {
          "ref": "116bf0e2-270c-4bdf-b61c-986d72cbaca6",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d2667d6f-4431-41e8-a233-7f3f233ec027"
        },
        "item": {
          "id": "ba0dca8d-3684-424c-9629-82bbc209e984",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6f744c69-1c2a-4234-a5a4-86049ac0cf3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6cb49b-a541-4809-ae28-36629221cc74",
        "cursor": {
          "ref": "6d2d1b34-f56b-4922-b511-c2fdbc5f5466",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "6ee54638-dc6d-427d-b834-b2a9d05edd24"
        },
        "item": {
          "id": "3b6cb49b-a541-4809-ae28-36629221cc74",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "0a94c957-e94c-4c73-9288-cf68cb54053a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3722af42-dc80-4acf-a768-8d392bbe8a59",
        "cursor": {
          "ref": "b03bdb2e-448f-45e8-b6cd-fe35ea831a5f",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c8e3220c-ab79-4e4c-b47e-9c52f08693f5"
        },
        "item": {
          "id": "3722af42-dc80-4acf-a768-8d392bbe8a59",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f33b4352-0852-45ca-a9f4-892666be6ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97dd3796-23e7-471e-b32e-33cdb51d335a",
        "cursor": {
          "ref": "64f8bb82-ee6e-43c4-aa4f-59a2d10e4d62",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0a0a243c-850e-4487-b988-d9313504ad67"
        },
        "item": {
          "id": "97dd3796-23e7-471e-b32e-33cdb51d335a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8f95ba63-d351-4b1c-8b46-48fd87318189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfa32a9-4630-4592-9d9e-84b0b7ba2420",
        "cursor": {
          "ref": "418c3074-3321-4025-ad66-f0157b2b67f7",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7797cb3d-2019-43ed-987e-c585924b89a8"
        },
        "item": {
          "id": "0dfa32a9-4630-4592-9d9e-84b0b7ba2420",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "978d4f3f-6121-46b0-aa3d-7d83ef889ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1d779a-4e2a-42fb-9abc-cd327f449da3",
        "cursor": {
          "ref": "e0ffe70e-9a52-462b-ba4d-ec03b2d09fa5",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8060c530-1f0c-441d-b677-d0fd3095e582"
        },
        "item": {
          "id": "8a1d779a-4e2a-42fb-9abc-cd327f449da3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f688d545-6557-4ee8-9147-1e19b9a588a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71887d2f-12d8-4286-bf96-84521096fce2",
        "cursor": {
          "ref": "e49dd0a3-afdd-4a07-bd2b-d6806bfe5576",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "dc75e798-9861-47eb-8a1b-7d927850c4e3"
        },
        "item": {
          "id": "71887d2f-12d8-4286-bf96-84521096fce2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "d6dfdecd-5b86-4afe-be69-acfbc1a5effd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29348e40-9017-4dbe-8bd0-845b2b41b12e",
        "cursor": {
          "ref": "45d12452-0c0c-43bc-8a2c-b9e8d7859870",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "355368c3-1afa-4388-bea9-d351cd9d6f80"
        },
        "item": {
          "id": "29348e40-9017-4dbe-8bd0-845b2b41b12e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "14ab5a1e-4251-4065-a125-e2dce43ee20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476166f3-6672-48f4-b5b0-f991988b26af",
        "cursor": {
          "ref": "65b5301e-4ae3-4cff-9401-b212736d9cf1",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9151c325-bfab-460b-88b2-d7e980a7bee2"
        },
        "item": {
          "id": "476166f3-6672-48f4-b5b0-f991988b26af",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fcb2910b-f0da-4cdb-99ab-a993374ac2a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83eb748-4856-420c-a431-0a4bead6a595",
        "cursor": {
          "ref": "4873baea-190c-40f4-896d-8e5fb2f7ddda",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e7d543b6-361a-48fe-9fac-53ec69db5f8a"
        },
        "item": {
          "id": "f83eb748-4856-420c-a431-0a4bead6a595",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "5a5d2852-d124-4329-a159-efc6aaaaf7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bb8267-40b9-43c8-bfde-ff83c3a2dfe7",
        "cursor": {
          "ref": "df31a676-1eff-4c1b-898d-48080d6369a7",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "61530486-8747-472a-8a22-d6f09073d52d"
        },
        "item": {
          "id": "14bb8267-40b9-43c8-bfde-ff83c3a2dfe7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "25b9d20a-9d39-4319-b61c-711c5fe8de25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d21de3-81e4-47ae-8b93-00116a677a81",
        "cursor": {
          "ref": "827088e3-307c-4cb5-8a1d-03fe8362f22c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c12d4009-9ad2-4d92-b49d-bd731feb19f4"
        },
        "item": {
          "id": "59d21de3-81e4-47ae-8b93-00116a677a81",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5a20a9d9-134f-47ff-b14e-b701981b60be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460f37c1-b4f1-4692-8a4f-2e639f1d2b66",
        "cursor": {
          "ref": "abf3c382-4409-44a1-93e3-c009c174a531",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "3308249e-ca28-4135-9c1a-cd506a5f2d2a"
        },
        "item": {
          "id": "460f37c1-b4f1-4692-8a4f-2e639f1d2b66",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "dc7311c4-614b-48ec-a1d7-6eb5096bc58f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488839a7-a669-414e-a67a-efb3be8ec1e9",
        "cursor": {
          "ref": "51817e3a-5f92-4e84-a848-379850805bc3",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "a7588ae2-09d4-4edd-98cf-75252cfb6116"
        },
        "item": {
          "id": "488839a7-a669-414e-a67a-efb3be8ec1e9",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dc99ba5b-c62d-4933-aadc-9308b18d9142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d6b6771-9aba-4f3c-bdba-5e7b29e56313",
        "cursor": {
          "ref": "7ffa2a1a-4152-40d5-a5a2-d45b2a8eb8f9",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "09bab9be-4c25-47c9-b1fb-6c70190fe314"
        },
        "item": {
          "id": "7d6b6771-9aba-4f3c-bdba-5e7b29e56313",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "685df702-a601-40bb-9432-cd1d61a4fb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "349b2460-ddb6-4ec5-b150-990111f607b0",
        "cursor": {
          "ref": "b6f41b92-1d1d-4a74-8528-573b70163253",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "77fafd96-f38f-4877-a106-7737f48a145f"
        },
        "item": {
          "id": "349b2460-ddb6-4ec5-b150-990111f607b0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7346e2fa-3601-4e0f-bed2-0a2ed6ba1483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de51bad-756c-4f19-84df-2d9a790d08ce",
        "cursor": {
          "ref": "b9e4714f-f838-4041-9d4f-3af6b89ca06e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a8e3396c-6525-4414-9f36-d500ddbdf231"
        },
        "item": {
          "id": "6de51bad-756c-4f19-84df-2d9a790d08ce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "25622160-0d35-4c39-9892-29f0dc3d68d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79f090d-9b9c-4f1e-937f-aacfc81a1458",
        "cursor": {
          "ref": "a14d0689-b4af-4355-a063-0d31b167ab0f",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9eae5313-2618-4297-bfd8-af00e9f1643e"
        },
        "item": {
          "id": "b79f090d-9b9c-4f1e-937f-aacfc81a1458",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d91b3c5f-eeea-44a4-a781-e92854aeac2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c75de6-241b-4bc4-a911-ac75240bc80d",
        "cursor": {
          "ref": "2d0de130-973b-4f9e-8c3d-2d4c672864d1",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a2041990-b1b1-40b0-8d72-18085a9ceced"
        },
        "item": {
          "id": "72c75de6-241b-4bc4-a911-ac75240bc80d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3e134902-8b2c-4f6b-9393-cf034173be9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "425d5372-e09b-4294-860a-90614bd33f71",
        "cursor": {
          "ref": "16d79bc9-919f-4ca4-8c37-b87f2dc239d1",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "59323e7d-671c-47d1-a0fb-5e51c3b17882"
        },
        "item": {
          "id": "425d5372-e09b-4294-860a-90614bd33f71",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "76adb410-306f-45a2-b1f5-ba2c7bcf6424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b728a0-f255-472a-8a4c-572f6b5ac35d",
        "cursor": {
          "ref": "d68f9988-aae3-48e0-b897-18c75a2f1170",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0a309c9d-3285-416b-b382-8ed835e1b476"
        },
        "item": {
          "id": "64b728a0-f255-472a-8a4c-572f6b5ac35d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f45a9880-66c1-4446-b4a4-705826e765a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2bcec5-ee08-4db8-a837-75db2739e2a0",
        "cursor": {
          "ref": "4339ac71-5e64-4ad9-a218-763394b1e462",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "a328b5ee-231a-4a1c-8dfb-4700f10282a7"
        },
        "item": {
          "id": "cf2bcec5-ee08-4db8-a837-75db2739e2a0",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e4d8c9c3-2301-4c24-9111-44f0f6a84ea4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c25957-f440-472c-b17e-685c03bb8279",
        "cursor": {
          "ref": "bf1c07b0-c726-4a65-82dc-3b7790c94a30",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "79c12047-bdb6-4dd6-b59a-e2eacdcbc1ef"
        },
        "item": {
          "id": "d6c25957-f440-472c-b17e-685c03bb8279",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9f9c8ed1-27a0-4af5-a75e-0a7112c7e4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daed51dc-faa7-464e-907a-ee2729d2023e",
        "cursor": {
          "ref": "96d01b64-c21a-4c8b-b30d-c8f6c7f2b952",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bd1e1b3b-18fd-4af8-8bfd-a4cc5f807d44"
        },
        "item": {
          "id": "daed51dc-faa7-464e-907a-ee2729d2023e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b220cbb9-4b3c-4a27-ac9b-00672afe2822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbc77ae-e842-492f-a708-e073a374abf2",
        "cursor": {
          "ref": "8a468c58-71d8-49cc-9bd4-7240b5b99bc7",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2202cc9f-8bbe-4267-824f-72ef86780e7e"
        },
        "item": {
          "id": "abbc77ae-e842-492f-a708-e073a374abf2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "49f02577-e818-4cbb-9c4f-49f171b8f4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bbf4b4-75a1-435f-99b0-6dfaf5b0962b",
        "cursor": {
          "ref": "e8885c39-5f41-4076-a496-d257b860b06b",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "02d9f613-0cd7-4311-a346-a6f14f6e25db"
        },
        "item": {
          "id": "c6bbf4b4-75a1-435f-99b0-6dfaf5b0962b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e8a830d2-b9fe-48f1-ba24-73a54be92370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfe26ee-b63b-40cb-b19d-2054c2df794c",
        "cursor": {
          "ref": "075a0ec2-956d-423c-ba8d-c168175b1220",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "a8fa7e59-0a8f-4fc2-8de4-6402ebbce895"
        },
        "item": {
          "id": "adfe26ee-b63b-40cb-b19d-2054c2df794c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b9242fa6-8ae4-4a4f-8aaa-e3a6a6927e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e74ca34-89b4-408c-83b6-aba50461ef52",
        "cursor": {
          "ref": "a4fe1a7f-46ab-4459-8c5e-1f4eb0b41e70",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e8a778c5-831c-4563-a3f8-91100823f877"
        },
        "item": {
          "id": "1e74ca34-89b4-408c-83b6-aba50461ef52",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "93b820ac-3625-490e-8507-d0bf2063b7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04bf2db-e779-4291-a02f-42767fd7ebfb",
        "cursor": {
          "ref": "88f5290a-bea3-451e-8983-7113e4fbd977",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "21a6a258-9737-4b5e-8ee9-b952994c8c58"
        },
        "item": {
          "id": "f04bf2db-e779-4291-a02f-42767fd7ebfb",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d99b42af-9874-4f00-9020-29cd994c83d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328a0d65-77e3-47d8-a14b-bb85d4dcb9e5",
        "cursor": {
          "ref": "93a4cdfe-8a4a-4671-aada-a1494faaeb13",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b36d142a-e8bd-49aa-aaca-046f5d427dc9"
        },
        "item": {
          "id": "328a0d65-77e3-47d8-a14b-bb85d4dcb9e5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "42565e72-749a-4879-a267-2183ef97e577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ca7128-5264-44dc-b57d-e11a5668ca0d",
        "cursor": {
          "ref": "10133d52-778d-4ba9-a4df-dc525d25d2e2",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6511503c-e646-49ad-bc35-75a7226de31e"
        },
        "item": {
          "id": "51ca7128-5264-44dc-b57d-e11a5668ca0d",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ffaad060-5723-4b2b-a669-bf8c0037c884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87a9dfe-f4de-4781-b89b-4ca229c2daeb",
        "cursor": {
          "ref": "f119f3c6-249a-4aa6-9cda-23212f418261",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f3a5d2d1-d809-4b3a-bc21-955579881af0"
        },
        "item": {
          "id": "b87a9dfe-f4de-4781-b89b-4ca229c2daeb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "725159f2-9b8f-4231-8a1b-20c6264223f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81d9285-1652-40ff-8d84-7ff5e3435a29",
        "cursor": {
          "ref": "dc5a57a4-ee05-4f34-94c1-01ffa310e3f4",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fd6257ae-fedf-4fc7-a29e-d47d98042dac"
        },
        "item": {
          "id": "e81d9285-1652-40ff-8d84-7ff5e3435a29",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "409d69e7-9b88-4a0b-9b7a-56e45cbe960d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169b7c8b-1739-4226-ad9d-31ee37dfb644",
        "cursor": {
          "ref": "daacfca2-915c-497a-a8f0-015d88dfc587",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "443a005c-fae4-47a4-ab87-3f3d07626a69"
        },
        "item": {
          "id": "169b7c8b-1739-4226-ad9d-31ee37dfb644",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8b52fc22-86dd-43d9-981d-e62c4f5a5758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee87133a-9eb2-45f0-865a-25c708502bdb",
        "cursor": {
          "ref": "2b4d2330-52ab-4ea8-abda-5e508a4d0747",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1adbba7b-14ca-4c9b-b30d-30f3dea93a76"
        },
        "item": {
          "id": "ee87133a-9eb2-45f0-865a-25c708502bdb",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e18337b7-8920-4fc9-8625-4397eb872741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c29efdf8-ef81-41f8-83ff-72a2c294961a",
        "cursor": {
          "ref": "0eb4dd46-0378-44d9-acad-aad7d99fb5de",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "2d59be9b-b83b-40c7-8a6b-ac9c5ee84627"
        },
        "item": {
          "id": "c29efdf8-ef81-41f8-83ff-72a2c294961a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a8b0e918-ba1b-4bcf-b8d8-2757a87347ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c505acb-422e-4236-bc18-1f64fde1f018",
        "cursor": {
          "ref": "ffe225f7-50aa-40d8-92a8-e97fec7bb120",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1cf08d27-abb7-42fd-8c0a-a92ba564b943"
        },
        "item": {
          "id": "8c505acb-422e-4236-bc18-1f64fde1f018",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4eb5f540-9ca0-4c93-80b8-af1d9795c835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c47aa2-4bec-4ff7-90ab-a7f3d55fa6e0",
        "cursor": {
          "ref": "5de16873-4576-4a99-8aac-8187bdf03388",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "546c6194-5a83-4ab7-868f-5c311e987618"
        },
        "item": {
          "id": "d6c47aa2-4bec-4ff7-90ab-a7f3d55fa6e0",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "43040a31-e7b5-4b6b-81ba-df37ba60ae4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e321bc77-ea2d-4b47-96d7-de86e7212739",
        "cursor": {
          "ref": "51e0cd00-2429-4ea6-a8ba-6350bf7838bd",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "322bcae3-3ef2-4a6d-b8c6-b9ea152bbffd"
        },
        "item": {
          "id": "e321bc77-ea2d-4b47-96d7-de86e7212739",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4d312ce7-eba6-4b2f-ba88-9194b7a14f04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a1628b-091e-48cd-8a2c-cbc13551347b",
        "cursor": {
          "ref": "eb846ba6-ace5-4609-ab10-646e6ea77b7d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "328cf2ec-896b-4404-bb5c-9f444365fc17"
        },
        "item": {
          "id": "e6a1628b-091e-48cd-8a2c-cbc13551347b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "81bc7fdd-3f2f-4524-b1d9-a061aed033be",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 345,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b24b5f-f0e3-45c3-b96d-7f9e06319105",
        "cursor": {
          "ref": "1d7ea310-d95b-4977-97f9-bdfbb8315502",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7e4a8f7b-a3b6-4d0e-a487-4d012be3e941"
        },
        "item": {
          "id": "21b24b5f-f0e3-45c3-b96d-7f9e06319105",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e5375b7b-4c35-4557-9534-595ea8def7c0",
          "status": "OK",
          "code": 200,
          "responseTime": 474,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c5eb84-6f36-49d3-b6f7-b688fb61db1b",
        "cursor": {
          "ref": "647d0026-de73-4eb0-b615-d5f6aa791e64",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "28ee3c53-7719-41cf-a247-54bd5a0d2f8c"
        },
        "item": {
          "id": "73c5eb84-6f36-49d3-b6f7-b688fb61db1b",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4a51aace-1294-401b-8117-0e035e4a0eb3",
          "status": "OK",
          "code": 200,
          "responseTime": 1973,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b786d26f-eaf9-466b-8e58-22b859468267",
        "cursor": {
          "ref": "8e124f33-dae5-49a8-a443-0000e2dd4d07",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "37e05ecd-b759-4ae4-9d0e-eb622fe979c4"
        },
        "item": {
          "id": "b786d26f-eaf9-466b-8e58-22b859468267",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6d605682-a0ac-468c-81fb-5edd38f5a24b",
          "status": "OK",
          "code": 200,
          "responseTime": 1715,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "561fb1d1-ea42-4adb-9ad1-9ae195ad12b4",
        "cursor": {
          "ref": "2d50f3be-bda3-42da-bb13-56c2893417e4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3244d9da-e56f-4ed3-a552-75ef897f6bec"
        },
        "item": {
          "id": "561fb1d1-ea42-4adb-9ad1-9ae195ad12b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a2697cb-7592-4b43-a5af-6b226c303d67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561fb1d1-ea42-4adb-9ad1-9ae195ad12b4",
        "cursor": {
          "ref": "2d50f3be-bda3-42da-bb13-56c2893417e4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3244d9da-e56f-4ed3-a552-75ef897f6bec"
        },
        "item": {
          "id": "561fb1d1-ea42-4adb-9ad1-9ae195ad12b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a2697cb-7592-4b43-a5af-6b226c303d67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "561fb1d1-ea42-4adb-9ad1-9ae195ad12b4",
        "cursor": {
          "ref": "2d50f3be-bda3-42da-bb13-56c2893417e4",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3244d9da-e56f-4ed3-a552-75ef897f6bec"
        },
        "item": {
          "id": "561fb1d1-ea42-4adb-9ad1-9ae195ad12b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9a2697cb-7592-4b43-a5af-6b226c303d67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7cfe0e-c4d9-41bc-88ae-5688317bce5e",
        "cursor": {
          "ref": "ca2e6dbc-dc02-4186-bc52-646c21ff590d",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9ccaa581-276f-4ff3-9a6a-550d3798ba4a"
        },
        "item": {
          "id": "1a7cfe0e-c4d9-41bc-88ae-5688317bce5e",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "fa942676-5eb8-4dcc-98ca-ca1e6c615bb9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 355,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0446b281-e35c-4268-9928-b94d57e7caab",
        "cursor": {
          "ref": "316b6447-db75-42d9-85b9-d54ac8aba412",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c05f0505-534e-4040-abda-ec2be678e667"
        },
        "item": {
          "id": "0446b281-e35c-4268-9928-b94d57e7caab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e5f010f3-5702-458d-9f43-68568d3742d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0446b281-e35c-4268-9928-b94d57e7caab",
        "cursor": {
          "ref": "316b6447-db75-42d9-85b9-d54ac8aba412",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c05f0505-534e-4040-abda-ec2be678e667"
        },
        "item": {
          "id": "0446b281-e35c-4268-9928-b94d57e7caab",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e5f010f3-5702-458d-9f43-68568d3742d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d775ce-9a78-4e5e-9b58-8f252625455d",
        "cursor": {
          "ref": "8cab6dcd-2db8-4762-8ef3-b353b714c408",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "62164e62-d8ad-476e-a76a-c8a9615692f5"
        },
        "item": {
          "id": "d1d775ce-9a78-4e5e-9b58-8f252625455d",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "e163a0a0-166f-4e47-9e96-ec7b8e7f64d4",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 569,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453aebe3-d96e-4e42-8792-119c5b720a04",
        "cursor": {
          "ref": "3826eef4-a10d-4620-882f-d3ccfebb5354",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d51ce6b8-8726-49b4-87a7-1d8b101a79df"
        },
        "item": {
          "id": "453aebe3-d96e-4e42-8792-119c5b720a04",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dac18b46-c130-4533-b822-ebad1ce5bb7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453aebe3-d96e-4e42-8792-119c5b720a04",
        "cursor": {
          "ref": "3826eef4-a10d-4620-882f-d3ccfebb5354",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "d51ce6b8-8726-49b4-87a7-1d8b101a79df"
        },
        "item": {
          "id": "453aebe3-d96e-4e42-8792-119c5b720a04",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "dac18b46-c130-4533-b822-ebad1ce5bb7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3201d700-0d4b-4843-b850-d76bfc5da771",
        "cursor": {
          "ref": "3f86686a-ef9a-4e7f-8caa-e99e02dd3eaa",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7e69aec7-8106-4f2d-a5b4-2cff2f18a29a"
        },
        "item": {
          "id": "3201d700-0d4b-4843-b850-d76bfc5da771",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "116dbab0-feb6-4141-87e7-18b63c145889",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 575,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}